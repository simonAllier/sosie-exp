[{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:933","sourceCode":"java.lang.String = \"0\"","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:489","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:441","sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean));\n}","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,31,32,32,33,33,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,47,47,48,49,50,51,52,53,54,55,56,57,58,58,59,59,60,61,62,63,63,64,64,65,65,66,67,68,69,69,70,70,71,72,73,74,75,76,77,77,78,79,79,80,80,81,81,82,82,83,83,84,85,86,86,87,87,88,89,90,90,91,92,92,93,94,94,95,95,96,96,97,97,98,99,100,101,101,102,102,103,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:123","sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:122","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (T != null) {\n            return T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.apache.commons.lang3.math.Fraction:849","failures":[135],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:1196","failures":[136],"status":-1,"binaryOperator":"(int * 32)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:97","sourceCode":"this.float = float","type":"CtAssignmentImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.SystemUtils:1405","failures":[138],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:458","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:433","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"failures":[139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:97","sourceCode":"this.float = float","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:189","sourceCode":"this.float -= java.lang.Number.floatValue()","type":"CtOperatorAssignmentImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4519","sourceCode":"int *= int < 0 ? 16 : int > 64 ? 64 : int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:288","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[141,142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"max":"numer0","increase":"numer1"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:760","sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:903","sourceCode":"if (0 == int) {\n    return long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:685","sourceCode":"if ((((int[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nHex":"nInts","dstInit":"dstInit"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4688","sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:67","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:737","failures":[144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"binaryOperator":"java.util.Calendar == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:961","sourceCode":"throw new java.lang.NullPointerException(\"className must not be null.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:775","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + int) + \"]\"))","type":"CtThrowImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1400","failures":[157],"status":-1,"binaryOperator":"((char[][int]) >= '0')","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:212","sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrLookup:53","sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = ((java.util.Map<java.lang.String, java.lang.String>)(java.util.Map<?, ?>))","type":"CtLocalVariableImpl"},"failures":[158,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1453","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"value","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.MutableTriple:113","sourceCode":"this.M = M","type":"CtAssignmentImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:222","sourceCode":"if (java.lang.String == null) {\n    return float;\n} ","type":"CtIfImpl"},"failures":[161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:855","sourceCode":"java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:824","sourceCode":"java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int))","type":"CtInvocationImpl"},"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,158,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"priorVariables":"priorVariables"}},{"position":"org.apache.commons.lang3.time.FastDateParser:209","failures":[],"status":0,"binaryOperator":"(13 * ((java.util.TimeZone.hashCode()) + (13 * (java.util.Locale.hashCode()))))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:97","sourceCode":"this.long = long","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:287","sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","type":"CtAssignmentImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"stopTime"}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:145","sourceCode":"java.lang.StringBuilder.append(\"=\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1403","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"sb"}},{"failureDictionary":{"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":64,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":12,"org.apache.commons.lang3.mutable.MutableFloatTest.testSubtractValueObject":140,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":90,"org.apache.commons.lang3.math.FractionTest.testFactory_double":141,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":95,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":63,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":101,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":66,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":122,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":20,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":187,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":163,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":23,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":161,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":50,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":179,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":176,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":120,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":171,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":172,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":71,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":68,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":78,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":142,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":87,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":103,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":55,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":152,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":27,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":89,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":80,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":114,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":60,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":82,"org.apache.commons.lang3.SystemUtilsTest.testJavaVersionMatches":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":56,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":21,"org.apache.commons.lang3.math.FractionTest.testToProperString":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":175,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":47,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":19,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":181,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":178,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":29,"org.apache.commons.lang3.time.DateUtilsTest.testRound":155,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":58,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":144,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":62,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":96,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":149,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":97,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":28,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":72,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":177,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":48,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":167,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":31,"org.apache.commons.lang3.text.StrTokenizerTest.test1":126,"org.apache.commons.lang3.text.StrTokenizerTest.test3":128,"org.apache.commons.lang3.text.StrTokenizerTest.test2":127,"org.apache.commons.lang3.mutable.MutableFloatTest.testGetSet":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":59,"org.apache.commons.lang3.text.StrTokenizerTest.test8":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":54,"org.apache.commons.lang3.text.StrTokenizerTest.test5":130,"org.apache.commons.lang3.text.StrTokenizerTest.test4":129,"org.apache.commons.lang3.text.StrTokenizerTest.test7":132,"org.apache.commons.lang3.text.StrTokenizerTest.test6":131,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":30,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":37,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":9,"org.apache.commons.lang3.ArrayUtilsTest.testToString":134,"org.apache.commons.lang3.ConversionTest.testLongToHex":193,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":4,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":162,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":125,"org.apache.commons.lang3.text.StrLookupTest.testSystemProperiesLookup":159,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":124,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":57,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.math.FractionTest.testEquals":135,"org.apache.commons.lang3.ObjectUtilsTest.testMin":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":32,"org.apache.commons.lang3.tuple.MutableTripleTest.testMutate":160,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":184,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":165,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":85,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":106,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":192,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":104}}]
