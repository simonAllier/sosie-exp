[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n        return int;\n    } \n} else {\n    return int;\n}","position":"org.apache.commons.lang3.StringUtils:1548","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3663","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Float.java.lang.Float.isNaN(float)","position":"org.apache.commons.lang3.mutable.MutableFloat:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type, \"componentType is null\"))","position":"org.apache.commons.lang3.reflect.TypeUtils:1559","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int >= 3) && ((java.lang.String.charAt((int + 1))) == '-')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isIn(java.lang.String.charAt(int), java.lang.String.charAt((int + 2))));\n    int += 3;\n} else if ((int >= 2) && ((java.lang.String.charAt(int)) == '^')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isNot(java.lang.String.charAt((int + 1))));\n    int += 2;\n} else {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.is(java.lang.String.charAt(int)));\n    int += 1;\n}","position":"org.apache.commons.lang3.CharSet:186","type":"CtIfImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = T[].int","position":"org.apache.commons.lang3.ArrayUtils:878","type":"CtAssignmentImpl"},"status":-1},{"failures":[1,2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:468","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:655","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field = java.lang.reflect.Field","position":"org.apache.commons.lang3.reflect.FieldUtils:127","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"replacementLength":"comparison","searchLength":"comparison"},"name":"add","transplant":{"sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don\\'t match: \" + int) + \" vs \") + int));\n} ","position":"org.apache.commons.lang3.StringUtils:4705","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (char[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(char[][int], char[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:826","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField","position":"org.apache.commons.lang3.time.FastDatePrinter:212","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:783","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.BooleanUtils:562","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)))","position":"org.apache.commons.lang3.math.Fraction:339","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.time.DurationFormatUtils:489","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (double[] == double[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:185","type":"CtAssignmentImpl"},"status":-2},{"failures":[3,4],"binaryOperator":"int + (java.lang.String[][int].length())","name":"math","position":"org.apache.commons.lang3.StringUtils:4773","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","position":"org.apache.commons.lang3.Conversion:513","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:5128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:948","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","position":"org.apache.commons.lang3.math.Fraction:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6107","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:807","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.TypeVariable<?>.getBounds()","position":"org.apache.commons.lang3.reflect.TypeUtils:1163","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (int > int) {\n    char = char[][int];\n    char[][int] = char[][int];\n    char[][int] = char;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1650","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:281","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 'a'","position":"org.apache.commons.lang3.Conversion:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final double double : double[]) {\n    final java.lang.Double java.lang.Double = java.lang.Double.java.lang.Double.valueOf(double);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Double);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Double, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5894","type":"CtForEachImpl"},"status":-2},{"failures":[5],"variableMapping":{"java.util.Calendar.SATURDAY":"startIndexInclusive","startCutoff":"startIndexInclusive"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    int -= 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1211","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1038","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.util.Iterator<?>.hasNext()) {\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } \n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (java.lang.Object != null) {\n        java.lang.StringBuilder.append(java.lang.Object);\n    } \n}","position":"org.apache.commons.lang3.StringUtils:4100","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, false, true)","position":"org.apache.commons.lang3.RandomStringUtils:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2481","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getArrayEnd()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:216","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1434","type":"CtIfImpl"},"status":-2},{"failures":[6],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int += 60 * int;\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:388","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"final char[] char[] = this.char[]","position":"org.apache.commons.lang3.text.StrBuilder:2682","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:235","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.RandomStringUtils:252","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4354","type":"CtReturnImpl"},"status":-2},{"failures":[7,8,9,10,11,12,13],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return 'd'","position":"org.apache.commons.lang3.Conversion:531","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.char","position":"org.apache.commons.lang3.text.StrSubstitutor:934","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.HashCodeBuilder.REGISTRY":"org.apache.commons.lang3.builder.HashCodeBuilder.REGISTRY"},"name":"replace","transplant":{"sourceCode":"this.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:495","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>())","position":"org.apache.commons.lang3.builder.HashCodeBuilder:469","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"searchLen","nHexs":"searchLast"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1511","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) == char) {\n        if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n            if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n                continue outer;\n            } \n        } else {\n            continue outer;\n        }\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1720","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:739","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case '\\'' :\n        if (boolean) {\n            java.lang.StringBuilder = null;\n            boolean = false;\n        } else {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n            boolean = true;\n        }\n        break;\n    case 'y' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'M' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'd' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'H' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'm' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 's' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'S' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    default :\n        if (java.lang.StringBuilder == null) {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n        } \n        java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:495","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharEncoding:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.text.StrSubstitutor:1195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Short java.lang.Short = java.lang.Short[][int]","position":"org.apache.commons.lang3.ArrayUtils:3191","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1446","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0, double)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2732","type":"CtReturnImpl"},"status":-2},{"failures":[14],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:4055","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4008","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDateParser:346","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparatorAtStart(boolean)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:380","type":"CtInvocationImpl"},"status":-2},{"failures":[15,16,17,18,19],"variableMapping":{"builder":"result"},"name":"replace","transplant":{"sourceCode":"return 1 + (java.lang.StringBuilder.length())","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:58","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString());\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:347","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{"prior":"str","value":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final char char : java.lang.String.toCharArray()) {\n    if (org.apache.commons.lang3.CharSet.contains(char)) {\n        int++;\n    } \n}","position":"org.apache.commons.lang3.CharSetUtils:146","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:645","type":"CtInvocationImpl"},"status":-2},{"failures":[20],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<java.lang.reflect.Type>.add(java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:1145","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"style":"style","locale":"locale","org.apache.commons.lang3.time.FastDateFormat.cache":"org.apache.commons.lang3.time.FastDateFormat.cache"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, null, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:257","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:227","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int = 0 ; (int < (java.lang.CharSequence.length())) && (int < (java.lang.CharSequence.length())) ; ++int) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        break;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6549","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return '7'","position":"org.apache.commons.lang3.Conversion:555","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        final int int = int;\n        while ((++int) < (int)) {\n            if ((char[][int]) != char) {\n                break;\n            } \n        }\n        final int int = int - int;\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n        int -= int;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1701","type":"CtForImpl"},"status":-2},{"failures":[21],"name":"returnValue","position":"org.apache.commons.lang3.StringUtils:6105","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'm' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:495","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:526","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n    return ;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:664","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1399","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:48","type":"CtAssignmentImpl"},"status":-2},{"failures":[22,23,24,25,26,27,28],"name":"returnValue","position":"org.apache.commons.lang3.StringUtils:6145","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = ((int) * (int)) + int","position":"org.apache.commons.lang3.builder.HashCodeBuilder:744","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.String.indexOf('/')","position":"org.apache.commons.lang3.math.Fraction:345","type":"CtAssignmentImpl"},"status":-2},{"failures":[29,30,31,7,8,32,9,33,34,35,36,37,38,11,39,40],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:678","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ClassUtils:426","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean[]","position":"org.apache.commons.lang3.ArrayUtils:836","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"start":"focus","end":"focus"},"name":"replace","transplant":{"sourceCode":"java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","position":"org.apache.commons.lang3.time.DateUtils:1169","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:1167","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:334","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.reflect.TypeVariable<?>.getName())","position":"org.apache.commons.lang3.reflect.TypeUtils:1765","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.reflect.TypeUtils:1694","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:209","type":"CtIfImpl"},"status":0},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"variableMapping":{"trueValue":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","value":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[], java.lang.Object)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:1988","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"len":"out"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2876","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:1093","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (char) {\n    case '\\'' :\n        if (boolean) {\n            if ((++int) == (java.lang.String.length())) {\n                return java.lang.StringBuilder;\n            } \n            char = java.lang.String.charAt(int);\n        } \n        break;\n    case '\\\\' :\n        if ((++int) == (java.lang.String.length())) {\n            break;\n        } \n        java.lang.StringBuilder.append(char);\n        char = java.lang.String.charAt(int);\n        if (char == 'E') {\n            java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n            char = 'Q';\n        } \n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.FastDateParser:338","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","position":"org.apache.commons.lang3.ObjectUtils:444","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"value"},"name":"add","transplant":{"sourceCode":"this.byte = byte","position":"org.apache.commons.lang3.mutable.MutableByte:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(byte)++","position":"org.apache.commons.lang3.mutable.MutableByte:118","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[71,72,73],"binaryOperator":"(long * (org.apache.commons.lang3.time.DateUtils.long))","name":"math","position":"org.apache.commons.lang3.time.DurationFormatUtils:142","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<L>, \"Listener interface cannot be null.\")","position":"org.apache.commons.lang3.event.EventListenerSupport:140","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:571","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY","array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY","length":"length"},"name":"replace","transplant":{"sourceCode":"if ((char[] == null) || ((this.int) == 0)) {\n    return this.org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:593","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character[] == null) {\n    return null;\n} else if ((java.lang.Character[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:2980","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int[] int[] = new int[int + 1]","position":"org.apache.commons.lang3.StringUtils:6781","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.EnumSet<org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION>.contains(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:71","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:781","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:6627","type":"CtLocalVariableImpl"},"status":-2},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,7,122,32,123,9,33,124,34,10,125,126,35,36,127,128,129,37,130,38,131,11,132,39,133,134,40,135,13,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"variableMapping":{"iValue":"endIndex"},"name":"replace","transplant":{"sourceCode":"return int - 1","position":"org.apache.commons.lang3.time.FastDateParser:802","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2789","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Conversion:1085","type":"CtLocalVariableImpl"},"status":-2},{"failures":[150,151],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Double.double","position":"org.apache.commons.lang3.math.NumberUtils:1037","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Double.java.lang.Double.parseDouble(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return double;\n}","position":"org.apache.commons.lang3.math.NumberUtils:277","type":"CtTryImpl"},"status":-1},{"failures":[152,153],"binaryOperator":"char < 16","name":"removeConditional","position":"org.apache.commons.lang3.CharUtils:353","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (int < 0) {\n    int += 1000;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:298","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    char[][int++] = char;\n    boolean = false;\n} else {\n    continue;\n}","position":"org.apache.commons.lang3.text.WordUtils:551","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7018","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.CharSequence.toString(), java.lang.CharSequence.toString()).length()","position":"org.apache.commons.lang3.StringUtils:7131","type":"CtLocalVariableImpl"},"status":-2},{"failures":[154],"variableMapping":{"nBools":"newSize","dst":"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY"},"name":"replace","transplant":{"sourceCode":"if (0 == int) {\n    return boolean[];\n} ","position":"org.apache.commons.lang3.Conversion:1653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\")","position":"org.apache.commons.lang3.Conversion:1688","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2203","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:108","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int[] int[]","position":"org.apache.commons.lang3.StringUtils:6783","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","position":"org.apache.commons.lang3.ClassUtils:831","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"len":"value","pos":"value"},"name":"replace","transplant":{"sourceCode":"int = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (this.int)","position":"org.apache.commons.lang3.text.StrBuilder:2883","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = int","position":"org.apache.commons.lang3.mutable.MutableInt:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:600","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setNullText(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:431","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(org.apache.commons.lang3.math.Fraction.int, int)","position":"org.apache.commons.lang3.math.Fraction:757","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","position":"org.apache.commons.lang3.text.StrTokenizer:739","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:629","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"pattern","remove":"pattern"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.time.FormatCache:218","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Throwable","position":"org.apache.commons.lang3.exception.ExceptionUtils:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.Throwable != null) && (!(java.lang.Throwable instanceof java.lang.RuntimeException))) && (!(java.lang.Throwable instanceof java.lang.Error))) {\n    return java.lang.Throwable;\n} else {\n    throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + java.lang.Throwable));\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:144","type":"CtIfImpl"},"status":-2},{"failures":[155,156,157,158,159,160,161,162],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return char < 128","position":"org.apache.commons.lang3.CharUtils:403","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n    if (int == int) {\n        return false;\n    } \n    if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n        return false;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.StringUtils:1886","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String, 0.0)","position":"org.apache.commons.lang3.math.NumberUtils:251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.Class<?> java.lang.Class<?>;\n    if (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)) {\n        final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String));\n        java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader).getComponentType();\n    } else {\n        java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String), boolean, java.lang.ClassLoader);\n    }\n    return java.lang.Class<?>;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    final int int = java.lang.String.lastIndexOf(org.apache.commons.lang3.ClassUtils.char);\n    if (int != (-1)) {\n        try {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        }\n    } \n    throw java.lang.ClassNotFoundException;\n}","position":"org.apache.commons.lang3.ClassUtils:822","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:344","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.isEquals()","position":"org.apache.commons.lang3.builder.EqualsBuilder:374","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"lhs"},"name":"add","transplant":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    java.lang.Class<?> = java.lang.Class<?>;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:341","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrTokenizer:805","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4948","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.time.FastDatePrinter:698","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:478","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4942","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:166","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.Object.getClass())","position":"org.apache.commons.lang3.ClassUtils:271","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:1975","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.reflect.TypeUtils:1135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n    int = java.util.Calendar.int;\n    int = java.util.Calendar.int;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:2144","type":"CtIfImpl"},"status":-2},{"failures":[163,164,165,166,167,168],"binaryOperator":"((char)((int / 10) + '0'))","name":"math","position":"org.apache.commons.lang3.time.UnpaddedNumberField:756","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    this.char[] = java.lang.String.toCharArray();\n} else {\n    this.char[] = null;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtIfImpl"},"status":-2},{"failures":[169],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:61","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")","position":"org.apache.commons.lang3.math.Fraction:253","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"typeArguments":"types","this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.noNullElements(java.lang.reflect.Type[], \"null type argument at index %s\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1501","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(java.lang.reflect.Type[]))","position":"org.apache.commons.lang3.reflect.TypeUtils:1838","type":"CtInvocationImpl"},"status":0},{"failures":[170],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ClassCastException()","position":"org.apache.commons.lang3.builder.CompareToBuilder:283","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The chars array must not be empty\")","position":"org.apache.commons.lang3.RandomStringUtils:231","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.(java.util.Arrays.binarySearch(char[], char[][int])) >= 0 ? 1 : 0","position":"org.apache.commons.lang3.text.StrMatcher:301","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean[] == null) {\n    return null;\n} else if ((java.lang.Boolean[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3456","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:441","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":145,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":127,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":14,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":49,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":146,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":2,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":53,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":160,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":40,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":84,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":28,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":64,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":128,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":85,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":7,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":68,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":83,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":131,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":149,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":60,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":80,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":6,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":30,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":50,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":163,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":155,"org.apache.commons.lang3.math.FractionTest.testFactory_double":169,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":42,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":135,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":133,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":22,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":32,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":95,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":123,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":74,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":15,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":120,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":124,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":87,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":34,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":59,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":157,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":77,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":78,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":167,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":47,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":143,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":16,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleStringD":151,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":161,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":3,"org.apache.commons.lang3.reflect.TypeUtilsTest.testLang820":20,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":45,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":129,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":164,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":119,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":137,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":142,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":58,"org.apache.commons.lang3.text.StrTokenizerTest.test8":103,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":5,"org.apache.commons.lang3.text.StrTokenizerTest.test5":101,"org.apache.commons.lang3.text.StrTokenizerTest.test4":100,"org.apache.commons.lang3.text.StrTokenizerTest.test7":102,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":114,"org.apache.commons.lang3.text.StrTokenizerTest.test1":97,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":35,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":96,"org.apache.commons.lang3.text.StrTokenizerTest.test3":99,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":57,"org.apache.commons.lang3.text.StrTokenizerTest.test2":98,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":162,"org.apache.commons.lang3.StringUtilsIsTest.testIsWhitespace":21,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":165,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":13,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":118,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":75,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":76,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":26,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":139,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":41,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":65,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":4,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":125,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":148,"org.apache.commons.lang3.ArrayUtilsTest.testContains":70,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":107,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":166,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":54,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":73,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":108,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":168,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":88,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":140,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":43,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":90,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":89,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":152,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":92,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":71,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":91,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":94,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":113,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":29,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":27,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":38,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":147,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":112,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":19,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":8,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":106,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":158,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":11,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":56,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":72,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":39}}]
