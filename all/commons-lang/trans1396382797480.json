[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:5083","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (java.lang.Object[].int)) {\n    int = (java.lang.Object[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1957","type":"CtIfImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"variableMapping":{"value":"inLiteral"},"name":"replace","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.mutable.MutableBoolean:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.time.DurationFormatUtils:504","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"strLen":"length","size":"length"},"name":"add","transplant":{"sourceCode":"final int int = ((this.int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.CharSetUtils:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Character {@link Iterator}.\n * <p>#NotThreadSafe#<\/p>\n */\nprivate static class CharacterIterator implements java.util.Iterator<java.lang.Character> {\n    /** \n     * The current character\n     */\nprivate char current;\n\n    private final org.apache.commons.lang3.CharRange range;\n\n    private boolean hasNext;\n\n    /** \n     * Construct a new iterator for the character range.\n     * \n     * @param r The character range\n     */\nprivate CharacterIterator(final org.apache.commons.lang3.CharRange r) {\n        org.apache.commons.lang3.CharRange = org.apache.commons.lang3.CharRange;\n        boolean = true;\n        if (org.apache.commons.lang3.CharRange.boolean) {\n            if ((org.apache.commons.lang3.CharRange.char) == 0) {\n                if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n                    boolean = false;\n                } else {\n                    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n                }\n            } else {\n                char = 0;\n            }\n        } else {\n            char = org.apache.commons.lang3.CharRange.char;\n        }\n    }\n\n    /** \n     * Prepare the next character in the range.\n     */\nprivate void prepareNext() {\n        if (org.apache.commons.lang3.CharRange.boolean) {\n            if ((char) == (java.lang.Character.char)) {\n                boolean = false;\n            } else if (((char) + 1) == (org.apache.commons.lang3.CharRange.char)) {\n                if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n                    boolean = false;\n                } else {\n                    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n                }\n            } else {\n                char = ((char)((char) + 1));\n            }\n        } else if ((char) < (org.apache.commons.lang3.CharRange.char)) {\n            char = ((char)((char) + 1));\n        } else {\n            boolean = false;\n        }\n    }\n\n    /** \n     * Has the iterator not reached the end character yet?\n     * \n     * @return {@code true} if the iterator has yet to reach the character date\n     */\n@java.lang.Override\n    public boolean hasNext() {\n        return boolean;\n    }\n\n    /** \n     * Return the next character in the iteration\n     * \n     * @return {@code Character} for the next character\n     */\n@java.lang.Override\n    public java.lang.Character next() {\n        if ((boolean) == false) {\n            throw new java.util.NoSuchElementException();\n        } \n        final char char = char;\n        org.apache.commons.lang3.CharRange.CharacterIterator.prepareNext();\n        return java.lang.Character.java.lang.Character.valueOf(char);\n    }\n\n    /** \n     * Always throws UnsupportedOperationException.\n     * \n     * @throws UnsupportedOperationException\n     * @see java.util.Iterator#remove()\n     */\n@java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}","position":"org.apache.commons.lang3.CharRange:269","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:804","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return ((int)(long))","position":"org.apache.commons.lang3.mutable.MutableLong:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) == boolean ? 0 : boolean ? 1 : -1","position":"org.apache.commons.lang3.mutable.MutableBoolean:200","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collections.java.util.Collections.emptyList()","position":"org.apache.commons.lang3.text.StrTokenizer:637","type":"CtReturnImpl"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16],"variableMapping":{"obj":"value"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharSet) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSet:250","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Map<java.lang.Object, java.lang.Object> != null) && (java.util.Map<java.lang.Object, java.lang.Object>.containsKey(java.lang.Object))","position":"org.apache.commons.lang3.builder.ToStringStyle:173","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:344","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:760","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:827","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int | -2147483648","position":"org.apache.commons.lang3.time.FastDatePrinter:1239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.String.indexOf(java.lang.String[][int], int)","position":"org.apache.commons.lang3.StringUtils:4785","type":"CtAssignmentImpl"},"status":-2},{"failures":[17,18,19,20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:108","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:830","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.transpositions(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:7066","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(java.lang.String)","position":"org.apache.commons.lang3.reflect.FieldUtils:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[21,22,23,24],"variableMapping":{"field":"f","this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.isTrue(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()), \"The field %s.%s is not static\", java.lang.reflect.Field.getDeclaringClass().getName(), java.lang.reflect.Field.getName())","position":"org.apache.commons.lang3.reflect.FieldUtils:510","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n    try {\n        org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n    }\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:317","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int])","position":"org.apache.commons.lang3.time.FastDateParser:742","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","position":"org.apache.commons.lang3.ClassUtils:928","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>(java.util.List<java.lang.String>.size())","position":"org.apache.commons.lang3.ClassUtils:401","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:763","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Byte[]","position":"org.apache.commons.lang3.ArrayUtils:776","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.IEEE754rUtils:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[][int]) < float) {\n    float = float[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:918","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int >= 12) {\n    int -= 12;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1070","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a time zone as a number {@code +/-HHMM}\n * or {@code +/-HH:MM}.<\/p>\n */\nprivate static class TimeZoneNumberRule implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true);\n\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_NO_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false);\n\n    final boolean mColon;\n\n    /** \n     * Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.\n     * \n     * @param colon add colon between HH and MM in the output if {@code true}\n     */\nTimeZoneNumberRule(final boolean colon) {\n        boolean = boolean;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 5;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int));\n        if (int < 0) {\n            java.lang.StringBuffer.append('-');\n            int = -int;\n        } else {\n            java.lang.StringBuffer.append('+');\n        }\n        final int int = int / ((60 * 60) * 1000);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        if (boolean) {\n            java.lang.StringBuffer.append(':');\n        } \n        final int int = (int / (60 * 1000)) - (60 * int);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1167","type":"CtClassImpl"},"status":-2},{"failures":[25,26],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"result":"result","obj":"obj"},"name":"add","transplant":{"sourceCode":"java.lang.Object = ((java.lang.Object[])(T)).clone()","position":"org.apache.commons.lang3.ObjectUtils:614","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int))","position":"org.apache.commons.lang3.ObjectUtils:619","type":"CtInvocationImpl"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int == (java.util.Calendar.int)) {\n    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n        java.util.Calendar.add(java.util.Calendar.int, 12);\n    } else {\n        java.util.Calendar.add(java.util.Calendar.int, -12);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n} else {\n    java.util.Calendar.add(int[][0], 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1024","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n            if (int >= 15) {\n                int -= 15;\n            } \n            boolean = int > 7;\n            boolean = true;\n        } \n        break;\n    case java.util.Calendar.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            if (int >= 12) {\n                int -= 12;\n            } \n            boolean = int >= 6;\n            boolean = true;\n        } \n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.DateUtils:1048","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6902","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short < short) {\n    short = short;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception))","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:154","type":"CtAssignmentImpl"},"status":-2},{"failures":[50],"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","name":"math","position":"org.apache.commons.lang3.Conversion:948","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"os.version\")","position":"org.apache.commons.lang3.SystemUtils:720","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object","position":"org.apache.commons.lang3.ObjectUtils:610","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int <<= 8","position":"org.apache.commons.lang3.reflect.TypeUtils:213","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1015","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int","position":"org.apache.commons.lang3.StringUtils:6794","type":"CtAssignmentImpl"},"status":-2},{"failures":[51,52],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The chars array must not be empty\")","position":"org.apache.commons.lang3.RandomStringUtils:231","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int ^ org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Object.getClass().getComponentType(), java.lang.Object))","position":"org.apache.commons.lang3.AnnotationUtils:245","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((long[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:357","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isPrimitive())) {\n    java.lang.Object = ((java.lang.Object[])(T)).clone();\n} else {\n    int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(T);\n    java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int);\n    while ((int--) > 0) {\n        java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n    }\n}","position":"org.apache.commons.lang3.ObjectUtils:613","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","values":"array","this":"this"},"name":"replace","transplant":{"sourceCode":"if ((org.apache.commons.lang3.ArrayUtils.isEmpty(double[])) || (org.apache.commons.lang3.ArrayUtils.isEmpty(double[]))) {\n    return org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5890","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(double[], java.util.BitSet)))","position":"org.apache.commons.lang3.ArrayUtils:5915","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    java.io.ObjectOutputStream.writeObject(L);\n    java.util.ArrayList<L>.add(L);\n} catch (final java.io.IOException java.io.IOException) {\n    java.io.ObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n}","position":"org.apache.commons.lang3.event.EventListenerSupport:226","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.BooleanUtils:1055","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'w' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:244","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(java.lang.StringBuffer, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:499","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:774","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:365","type":"CtIfImpl"},"status":-2},{"failures":[53],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtIfImpl"},"status":-1},{"failures":[54],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2439","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((short[][int]) < short) {\n    short = short[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:841","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"current":"c"},"name":"add","transplant":{"sourceCode":"char = ((char)(char + 1))","position":"org.apache.commons.lang3.CharRange:315","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.time.FastDatePrinter:326","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((short[] == null) && (short[] != null)) && ((short[].int) > 0)) || (((short[] == null) && (short[] != null)) && ((short[].int) > 0))) || (((short[] != null) && (short[] != null)) && ((short[].int) != (short[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1282","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.text.StrBuilder:1435","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:622","type":"CtIfImpl"},"status":-2},{"failures":[55],"binaryOperator":"(long > long)","name":"removeConditional","position":"org.apache.commons.lang3.Validate:968","type":"mutation","status":-1},{"failures":[],"variableMapping":{"delimLen":"i","start":"i"},"name":"add","transplant":{"sourceCode":"return int + int","position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1731","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(char);\n} ","position":"org.apache.commons.lang3.StringUtils:3622","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(int[], int[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Integer[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Integer[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:598","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:164","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:6466","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:503","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.5\")","position":"org.apache.commons.lang3.SystemUtils:905","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:877","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:913","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[])","position":"org.apache.commons.lang3.ArrayUtils:3853","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"count","length":"count","index":"count"},"name":"replace","transplant":{"sourceCode":"if ((int <= 0) || (int >= int)) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, false, true)","position":"org.apache.commons.lang3.RandomStringUtils:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"repeat":"threshold","inputLength":"n"},"name":"add","transplant":{"sourceCode":"final int int = int * int","position":"org.apache.commons.lang3.StringUtils:5136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:6942","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4091","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.time.TwoDigitYearField:936","type":"mutation","return":"return 2","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 10","position":"org.apache.commons.lang3.Conversion:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object, java.lang.Object, false, null, java.lang.String[])","position":"org.apache.commons.lang3.builder.CompareToBuilder:233","type":"CtReturnImpl"},"status":-2},{"failures":[27,40,56,57,58,45,46,47,59,48,49],"variableMapping":{"date":"date","field":"field","this":"this"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())));\n}","position":"org.apache.commons.lang3.time.DateUtils:939","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","position":"org.apache.commons.lang3.time.DateUtils:858","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((char) == 0) && ((char) == (java.lang.Character.char))","position":"org.apache.commons.lang3.CharRange:193","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:763","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"cs":"cs","searchChar":"start","start":"sz"},"name":"replace","transplant":{"sourceCode":"return ((java.lang.String)(java.lang.CharSequence)).indexOf(int, int)","position":"org.apache.commons.lang3.CharSequenceUtils:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) == int) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:77","type":"CtForImpl"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68],"variableMapping":{"wrappedFactory":"wrappedFactory"},"name":"replace","transplant":{"sourceCode":"this.java.util.concurrent.ThreadFactory = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:362","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ThreadFactory = org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.java.util.concurrent.ThreadFactory","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:119","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"array":"array","org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"index","this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    return org.apache.commons.lang3.ArrayUtils.clone(T[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:4643","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(T[], int)","position":"org.apache.commons.lang3.ArrayUtils:4646","type":"CtReturnImpl"},"status":-2},{"failures":[69],"variableMapping":{"toType":"type","this":"this","type":"toType"},"name":"add","transplant":{"sourceCode":"if ((java.lang.reflect.Type == null) || (java.lang.reflect.Type instanceof java.lang.Class<?>)) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:327","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:743","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.getDeclaredField(\"modifiers\")","position":"org.apache.commons.lang3.reflect.FieldUtils:684","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:460","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"code":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.NotImplementedException:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:2414","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.text.WordUtils:540","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (this.long) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:737","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"java.util.Calendar.SECOND"},"name":"replace","transplant":{"sourceCode":"final int int = this.java.util.Calendar.int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:986","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:324","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:864","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1222","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.StrBuilder:2877","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int)","position":"org.apache.commons.lang3.exception.ExceptionUtils:559","type":"CtLocalVariableImpl"},"status":-2},{"failures":[70],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.Conversion:1445","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2306","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:340","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int)","position":"org.apache.commons.lang3.text.translate.CodePointTranslator:37","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.lang3.ArrayUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:202","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);\n} catch (final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException) {\n    throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause());\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:201","type":"CtTryImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return ((java.lang.String)(java.lang.CharSequence)).regionMatches(boolean, int, ((java.lang.String)(java.lang.CharSequence)), int, int);\n} else {\n    int int = int;\n    int int = int;\n    int int = int;\n    while ((int--) > 0) {\n        char char = java.lang.CharSequence.charAt(int++);\n        char char = java.lang.CharSequence.charAt(int++);\n        if (char == char) {\n            continue;\n        } \n        if (!boolean) {\n            return false;\n        } \n        if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n            return false;\n        } \n    }\n    return true;\n}","position":"org.apache.commons.lang3.CharSequenceUtils:189","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6902","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"obj","this":"this","toAppendTo":"toAppendTo"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Date)(java.lang.Object)), java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDatePrinter:382","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Calendar)(java.lang.Object)), java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDatePrinter:384","type":"CtReturnImpl"},"status":-2},{"failures":[71],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1312","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(int)","position":"org.apache.commons.lang3.text.StrBuilder:1028","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)","position":"org.apache.commons.lang3.text.StrBuilder:1812","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2066","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int == (java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.int : int","position":"org.apache.commons.lang3.StringUtils:1988","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double[] double[] = new double[java.lang.Double[].int]","position":"org.apache.commons.lang3.ArrayUtils:3325","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSetUtils:108","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","enumClass":"enumClass","enumName":"enumName"},"name":"add","transplant":{"sourceCode":"try {\n    return java.lang.Enum.java.lang.Enum.valueOf(java.lang.Class<E>, java.lang.String);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return null;\n}","position":"org.apache.commons.lang3.EnumUtils:117","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Enum.java.lang.Enum.valueOf(java.lang.Class<E>, java.lang.String)","position":"org.apache.commons.lang3.EnumUtils:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char == (org.apache.commons.lang3.CharUtils.char)) {\n    if ((java.lang.String.charAt((int - 1))) == (org.apache.commons.lang3.CharUtils.char)) {\n        int--;\n    } \n} else if (char != (org.apache.commons.lang3.CharUtils.char)) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:5012","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((long[])(org.apache.commons.lang3.ArrayUtils.add(long[], int, java.lang.Long.java.lang.Long.valueOf(long), java.lang.Long.java.lang.Class<java.lang.Long>)))","position":"org.apache.commons.lang3.ArrayUtils:4483","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:429","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == int[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:731","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5455","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.String.length()) >= 3 ? org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:482","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:594","type":"CtAssignmentImpl"},"status":-2},{"failures":[72],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n    java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n    switch (int) {\n        case org.apache.commons.lang3.time.DateUtils.int :\n            break;\n        case org.apache.commons.lang3.time.DateUtils.int :\n            int = java.util.Calendar.int;\n            int = java.util.Calendar.int;\n            break;\n        case org.apache.commons.lang3.time.DateUtils.int :\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            int = int - 1;\n            break;\n        case org.apache.commons.lang3.time.DateUtils.int :\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n            int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n            break;\n        default :\n            break;\n    }\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1181","type":"CtCaseImpl"},"status":-1},{"failures":[73,74],"variableMapping":{"radix":"max"},"name":"add","transplant":{"sourceCode":"int = 16","position":"org.apache.commons.lang3.math.NumberUtils:737","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int *= int < 0 ? 16 : int > 64 ? 64 : int","position":"org.apache.commons.lang3.StringUtils:4528","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[75],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:460","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentException(java.lang.InterruptedException)","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:219","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Byte getLeft() {\n        return java.lang.Byte.java.lang.Byte.valueOf(byte);\n    }\n\n    @java.lang.Override\n    public java.lang.Byte getRight() {\n        return java.lang.Byte.java.lang.Byte.valueOf(byte);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:221","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.ParameterizedType, \"superType is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:960","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.FieldUtils:197","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"long long","position":"org.apache.commons.lang3.math.Fraction:182","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = 0","position":"org.apache.commons.lang3.EnumUtils:145","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ false , false , false , false }","position":"org.apache.commons.lang3.Conversion:223","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , false , true , true }","position":"org.apache.commons.lang3.Conversion:247","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char)","position":"org.apache.commons.lang3.StringEscapeUtils:270","type":"CtInvocationImpl"},"status":-2},{"failures":[76,77],"binaryOperator":"int[] == null","name":"negateConditional","position":"org.apache.commons.lang3.builder.HashCodeBuilder:758","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence[][int].charAt(int)) != char) {\n    int = int;\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6631","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:834","type":"CtReturnImpl"},"status":-2},{"failures":[78],"binaryOperator":"int + 1","name":"math","position":"org.apache.commons.lang3.StringUtils:6781","type":"mutation","status":-1},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsTest.testCeil":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":16,"org.apache.commons.lang3.time.DateUtilsTest.testRound":28,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":40,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":78,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":18,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":8,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":74,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":17,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArray":77,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":20,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonFalse":64,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":59,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":24,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG981":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":43,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":25,"org.apache.commons.lang3.ConversionTest.testHexToInt":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":47,"org.apache.commons.lang3.math.FractionTest.testSubtract":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":10,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":44,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":0,"org.apache.commons.lang3.ConversionTest.testIntToHex":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":41,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":53,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":54,"org.apache.commons.lang3.ValidateTest.testInclusiveBetweenLong_withMessage":55,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":76,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":46,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":7,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoExHandler":63,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":35,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":45,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":15,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoPriority":62,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":42,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":49,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":26,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":11,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":30,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":22,"org.apache.commons.lang3.math.FractionTest.testAdd":51,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoNamingPattern":68,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":38,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":14,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":65,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":72,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":5,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":57,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoDaemonFlag":60,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":66,"org.apache.commons.lang3.StringUtilsTest.testReplaceOnce_StringStringString":73,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":21,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":61,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":9,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":2,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":4,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":19,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":36,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":31}}]
