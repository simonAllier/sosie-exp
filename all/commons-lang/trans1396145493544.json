[{"failures":[],"variableMapping":{"newSize":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY"},"name":"add","transplant":{"sourceCode":"if (int <= 0) {\n    return this.org.apache.commons.lang3.ArrayUtils.byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1085","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Byte[] == null) {\n    return null;\n} else if ((java.lang.Byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:959","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)) {\n    final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String));\n    java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader).getComponentType();\n} else {\n    java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String), boolean, java.lang.ClassLoader);\n}","position":"org.apache.commons.lang3.ClassUtils:824","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.Writer.write(char[][0])","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:129","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'C' :\n    return 3;","position":"org.apache.commons.lang3.Conversion:129","type":"CtCaseImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.BooleanUtils:628","type":"CtBreakImpl"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"variableMapping":{"denominator":"trimStart"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","position":"org.apache.commons.lang3.math.Fraction:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int * 2;\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n        continue;\n    } \n    boolean = false;\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:755","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:277","type":"CtAssignmentImpl"},"status":0},{"failures":[17,18],"variableMapping":{"duration":"duration","tmp":"duration","this":"this"},"name":"replace","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:182","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 1 seconds\", \" 1 second\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:213","type":"CtAssignmentImpl"},"status":-1},{"failures":[19],"variableMapping":{"java.lang.Integer.MAX_VALUE":"threshold","this":"this","j":"n","threshold":"threshold","n":"threshold"},"name":"replace","transplant":{"sourceCode":"final int int = int > (int - int) ? int : java.lang.Math.min(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:6942","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Math.(java.lang.Math.min(int, int)) + 1","position":"org.apache.commons.lang3.StringUtils:6926","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"java.lang.Float.NaN":"defaultValue"},"name":"replace","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.NumberUtils:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return float;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:222","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.isInstance(java.lang.Object)) {\n    java.lang.Class<?> = java.lang.Class<?>;\n    if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n        java.lang.Class<?> = java.lang.Class<?>;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:345","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6037","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int == (-1)) || (int < int)) {\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4733","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (char[].int)) && (boolean) ; ++int) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(char[][int], char[][int]);\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:778","type":"CtForImpl"},"status":-2},{"failures":[20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1520","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"upToClass":"cls","clazz":"cls"},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:672","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","position":"org.apache.commons.lang3.reflect.ConstructorUtils:295","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final double double : double[]) {\n    final java.lang.Double java.lang.Double = java.lang.Double.java.lang.Double.valueOf(double);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Double);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Double, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5894","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(byte)","position":"org.apache.commons.lang3.builder.ToStringStyle:746","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.util.Comparator<T>, \"null comparator\")","position":"org.apache.commons.lang3.ObjectUtils:551","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1760","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6034","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) - ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:694","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"valueDelimiterMatcher":"org.apache.commons.lang3.text.StrMatcher.COMMA_MATCHER"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrSubstitutor:1093","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"i","dstPos":"i"},"name":"add","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1155","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[][int])","position":"org.apache.commons.lang3.builder.ToStringStyle:998","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = char[].int","position":"org.apache.commons.lang3.math.NumberUtils:1342","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5378","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","position":"org.apache.commons.lang3.reflect.FieldUtils:213","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:1629","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.mutable.MutableObject:94","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n    return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n} else if ((this.java.lang.Object) instanceof java.lang.Number) {\n    return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n} else {\n    return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:642","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n    throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:139","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case '1' :\n    return new boolean[]{ false , false , false , true };","position":"org.apache.commons.lang3.Conversion:224","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"object"},"name":"add","transplant":{"sourceCode":"return T == null ? \"null\" : T.toString()","position":"org.apache.commons.lang3.mutable.MutableObject:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, java.lang.Class<? super T>)","position":"org.apache.commons.lang3.builder.ToStringBuilder:200","type":"CtReturnImpl"},"status":-2},{"failures":[21],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1586","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream = new java.io.ObjectOutputStream(java.io.OutputStream)","position":"org.apache.commons.lang3.SerializationUtils:153","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\")","position":"org.apache.commons.lang3.Conversion:1156","type":"CtThrowImpl"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"binaryOperator":"(int[].int) - 1","name":"math","position":"org.apache.commons.lang3.ArrayUtils:6036","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.reflect.TypeUtils:497","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int","position":"org.apache.commons.lang3.StringUtils:662","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:112","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.RandomStringUtils:266","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[42,43],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:1481","type":"mutation","status":-1},{"failures":[44],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.CharRange:310","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:683","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.util.Collection<?>)","position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:84","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.time.FastDateFormat:563","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n    return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n} else if ((this.java.lang.Object) instanceof java.lang.Number) {\n    return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n} else {\n    return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:642","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:832","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[int[].int]","position":"org.apache.commons.lang3.ArrayUtils:3143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:468","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, 0, java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:836","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Type = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1493","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"F = org.apache.commons.lang3.time.FormatCache<F>.createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:82","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:910","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1090","type":"CtInvocationImpl"},"status":-2},{"failures":[45],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)) {\n    throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n} ","position":"org.apache.commons.lang3.math.NumberUtils:454","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence[][int];\n    if (java.lang.CharSequence == null) {\n        continue;\n    } \n    int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence.length());\n    if (int > int) {\n        int = int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:2024","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1398","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'Z' :\n    if (int == 1) {\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n    } else {\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n    }\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:266","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.org.apache.commons.lang3.text.StrLookup<?>","position":"org.apache.commons.lang3.text.StrSubstitutor:1160","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'a' :","position":"org.apache.commons.lang3.Conversion:242","type":"CtCaseImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:1012","type":"CtIfImpl"},"status":0},{"failures":[46,47,48],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1050","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:324","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:535","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"char[][(int)++] = char","position":"org.apache.commons.lang3.text.StrBuilder:798","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][(int + 1)] = char","position":"org.apache.commons.lang3.StringUtils:5146","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(int[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1753","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getVariablePrefixMatcher()","position":"org.apache.commons.lang3.text.StrSubstitutor:751","type":"CtLocalVariableImpl"},"status":-2},{"failures":[49],"binaryOperator":"org.apache.commons.lang3.CharRange == null","name":"removeConditional","position":"org.apache.commons.lang3.CharRange:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.StringBuilder","position":"org.apache.commons.lang3.reflect.TypeUtils:1845","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder == null ? null : java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:486","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(false)","position":"org.apache.commons.lang3.text.StrTokenizer:98","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((double >= 0), \"Both range values must be non-negative.\")","position":"org.apache.commons.lang3.RandomUtils:140","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class<?>, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1100","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2138","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 6","position":"org.apache.commons.lang3.Conversion:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 5","position":"org.apache.commons.lang3.time.FastDatePrinter:1187","type":"CtReturnImpl"},"status":-2},{"failures":[50],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6506","type":"CtIfImpl"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,62,63,63,64,64,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,132,132,133,133,134,134,135,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,7,8,9,10,11,12,13,14],"variableMapping":{"args":"fieldSeparator","name":"fieldSeparator","i":"len","desc":"fieldSeparator"},"name":"replace","transplant":{"sourceCode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    java.lang.String = java.lang.String.substring((int + 1)).trim();\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:312","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int > 0) && (int > 0)) && (int >= int)) {\n    boolean boolean = true;\n    for (int int = 0 ; int < int ; int++) {\n        if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n            boolean = false;\n            break;\n        } \n    }\n    if (boolean) {\n        java.lang.StringBuffer.setLength((int - int));\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:411","type":"CtIfImpl"},"status":-1},{"failures":[195],"variableMapping":{"radix":"count"},"name":"replace","transplant":{"sourceCode":"int = 16","position":"org.apache.commons.lang3.math.NumberUtils:737","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:5818","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:217","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) + ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:676","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:832","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int <= int ; int++) {\n    final char char = java.lang.CharSequence.charAt((int - 1));\n    int[][0] = int;\n    final int int = java.lang.Math.java.lang.Math.max(1, (int - int));\n    final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int));\n    if (int > int) {\n        return -1;\n    } \n    if (int > 1) {\n        int[][(int - 1)] = java.lang.Integer.int;\n    } \n    for (int int = int ; int <= int ; int++) {\n        if ((java.lang.CharSequence.charAt((int - 1))) == char) {\n            int[][int] = int[][(int - 1)];\n        } else {\n            int[][int] = 1 + java.lang.Math.(java.lang.Math.min(java.lang.Math.java.lang.Math.min(int[][(int - 1)], int[][int]), int[][(int - 1)]));\n        }\n    }\n    int[] = int[];\n    int[] = int[];\n    int[] = int[];\n}","position":"org.apache.commons.lang3.StringUtils:6936","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a padded number.<\/p>\n */\nprivate static class PaddedNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    private final int mSize;\n\n    /** \n     * Constructs an instance of {@code PaddedNumberField}.\n     * \n     * @param field the field\n     * @param size size of the output field\n     */\nPaddedNumberField(final int field ,final int size) {\n        if (int < 3) {\n            throw new java.lang.IllegalArgumentException();\n        } \n        int = int;\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 4;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 100) {\n            for (int int = int ; (--int) >= 2 ; ) {\n                java.lang.StringBuffer.append('0');\n            }\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            int int;\n            if (int < 1000) {\n                int = 3;\n            } else {\n                org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int);\n                int = java.lang.Integer.java.lang.Integer.toString(int).length();\n            }\n            for (int int = int ; (--int) >= int ; ) {\n                java.lang.StringBuffer.append('0');\n            }\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:811","type":"CtClassImpl"},"status":-2},{"failures":[196],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 9","position":"org.apache.commons.lang3.Conversion:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String, 0)","position":"org.apache.commons.lang3.math.NumberUtils:100","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ true , false , true , false }","position":"org.apache.commons.lang3.Conversion:173","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(boolean[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5944","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator())","position":"org.apache.commons.lang3.math.Fraction:865","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(short[])","position":"org.apache.commons.lang3.math.NumberUtils:984","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:389","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:535","type":"CtLocalVariableImpl"},"status":-2},{"failures":[197,198],"variableMapping":{"dstPos":"count","nBytes":"count"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:872","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtIfImpl"},"status":-1},{"failures":[199,200],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:662","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n    return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n} else {\n    return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n}","position":"org.apache.commons.lang3.event.EventUtils:112","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.StopWatch:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (boolean[].int)))","position":"org.apache.commons.lang3.Conversion:405","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((byte[].int) != (byte[].int)) {\n    int = (byte[].int) < (byte[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:862","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:302","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, int, false)","position":"org.apache.commons.lang3.StringUtils:2724","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.math.Fraction:617","type":"CtAssignmentImpl"},"status":-2},{"failures":[201],"variableMapping":{"obj":"o1"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.time.FastDateParser)) {\n    return false;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:222","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:291","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1359","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:5192","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.reset()","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:379","type":"CtInvocationImpl"},"status":-2},{"failures":[202],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Byte.java.lang.Byte.valueOf(((byte)(1)))","position":"org.apache.commons.lang3.math.NumberUtils:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.math.Fraction == null) {\n    throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n} ","position":"org.apache.commons.lang3.math.Fraction:823","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    boolean boolean = false;\n    for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        if ((java.lang.reflect.Type != java.lang.reflect.Type) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, null))) {\n            boolean = true;\n            break;\n        } \n    }\n    if (!boolean) {\n        java.util.Set<java.lang.reflect.Type>.add(java.lang.reflect.Type);\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1134","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:1971","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Character.java.lang.Character.isUpperCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n} else if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n} else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n} ","position":"org.apache.commons.lang3.StringUtils:5778","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} else {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n}","position":"org.apache.commons.lang3.text.WordUtils:468","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"obj":"object"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:166","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle)","position":"org.apache.commons.lang3.builder.ToStringBuilder:165","type":"CtReturnImpl"},"status":-2},{"failures":[203,204],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3185","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.short[]","position":"org.apache.commons.lang3.ArrayUtils:574","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == (boolean[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2877","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 60 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:385","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[])","position":"org.apache.commons.lang3.builder.DiffBuilder:609","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:525","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char))","position":"org.apache.commons.lang3.CharRange:188","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) == 0) && ((char) == (java.lang.Character.char));\n} ","position":"org.apache.commons.lang3.CharRange:192","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Unable to add listener.\" , java.lang.reflect.InvocationTargetException.getCause())","position":"org.apache.commons.lang3.event.EventUtils:60","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    if (java.lang.Float.java.lang.Float.isNaN(float[][int])) {\n        return java.lang.Float.float;\n    } \n    if ((float[][int]) > float) {\n        float = float[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1062","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case '2' :\n    return 4;","position":"org.apache.commons.lang3.Conversion:106","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != java.lang.Class<? super T>)) {\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(T, java.lang.Class<?>, org.apache.commons.lang3.builder.HashCodeBuilder, boolean, java.lang.String[]);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:341","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:312","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:525","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (java.io.ObjectInputStream != null) {\n        java.io.ObjectInputStream.close();\n    } \n} catch (final java.io.IOException java.io.IOException) {\n}","position":"org.apache.commons.lang3.SerializationUtils:234","type":"CtTryImpl"},"status":-2},{"failures":[205],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:240","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf(this.boolean)","position":"org.apache.commons.lang3.mutable.MutableBoolean:79","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","close":"className","open":"className"},"name":"add","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:297","type":"CtIfImpl"},"status":-2},{"failures":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"binaryOperator":"((int - int) - int)","name":"math","position":"org.apache.commons.lang3.text.StrSubstitutor:801","type":"mutation","status":-1},{"failures":[],"variableMapping":{"newLineStr":"fieldName","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1407","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.checkTokenized()","position":"org.apache.commons.lang3.text.StrTokenizer:540","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","nShorts":"comparison"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (short[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(short[][int], short[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:786","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1123","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:461","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.FastDateFormat:273","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:824","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.util.Calendar.getLeastMaximum(java.util.Calendar.int)) + 1","position":"org.apache.commons.lang3.time.FastDatePrinter:1027","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"chars":"buffer"},"name":"replace","transplant":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:1060","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.text.WordUtils:300","type":"CtReturnImpl"},"status":-2},{"failures":[234,235,236,237],"binaryOperator":"(java.lang.CharSequence == null) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))","name":"removeConditional","position":"org.apache.commons.lang3.StringUtils:6168","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.FastDatePrinter:1195","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:294","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"delimLen":"startIndex","start":"length"},"name":"replace","transplant":{"sourceCode":"return int + int","position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (long[].int)) {\n    int = (long[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"T = java.util.concurrent.atomic.AtomicReference<T>.get()","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Short getLeft() {\n        return java.lang.Short.java.lang.Short.valueOf(short);\n    }\n\n    @java.lang.Override\n    public java.lang.Short getRight() {\n        return java.lang.Short.java.lang.Short.valueOf(short);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:725","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1624","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":60,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArrayRemoveNone":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":223,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":128,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":125,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":150,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":50,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":56,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":216,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":36,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":184,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":206,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":166,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":161,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArrayRemoveNone":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":168,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":190,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":97,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArrayRemoveNone":27,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":162,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":151,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":237,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":139,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArrayRemoveNone":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":207,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":114,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":141,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":197,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":208,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":118,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":108,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":85,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":159,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":19,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":121,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":158,"org.apache.commons.lang3.math.FractionTest.testDivide":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":135,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":100,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":180,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":171,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence":43,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":21,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":69,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":145,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":218,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":124,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":235,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":194,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":82,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":169,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":153,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":18,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":107,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArray":22,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":87,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":163,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":101,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":236,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":185,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":80,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":45,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":167,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":188,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":165,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":140,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":88,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":17,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":73,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":164,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":228,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":112,"org.apache.commons.lang3.CharRangeTest.testIterator":44,"org.apache.commons.lang3.ArrayUtilsTest.testReverseDouble":20,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":178,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":193,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":78,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":29,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":220,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArrayRemoveNone":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":225,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_StringString":42,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":144,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":79,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":53,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":227,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortEmptyArray":203,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":64,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":182,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":174,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayRemoveNone":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":209,"org.apache.commons.lang3.ArrayUtilsTest.testToString":51,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":58,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":172,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyShortNull":204,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":213,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":210,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":189,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":119,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":116,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArrayRemoveNone":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":127,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":157,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":186,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":221,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":34,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":68,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":148,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":115,"org.apache.commons.lang3.text.StrTokenizerTest.test8":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":104,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":173,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":38,"org.apache.commons.lang3.text.StrTokenizerTest.test5":11,"org.apache.commons.lang3.text.StrTokenizerTest.test4":10,"org.apache.commons.lang3.text.StrTokenizerTest.test7":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":105,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":195,"org.apache.commons.lang3.text.StrTokenizerTest.test6":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":106,"org.apache.commons.lang3.text.StrTokenizerTest.test1":7,"org.apache.commons.lang3.text.StrTokenizerTest.test3":9,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":234,"org.apache.commons.lang3.text.StrTokenizerTest.test2":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":81,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":143,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":61,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":49,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":160,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":67,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":215,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":183,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":146,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArrayRemoveNone":28,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":170,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":2,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":123,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":66,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":200,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":230,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":86,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":177,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":205,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":52,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":198,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":222,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":187}}]
