[{"position":"org.apache.commons.lang3.text.StrTokenizer:644","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:724","sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharEncoding:98","sourceCode":"try {\n    return java.nio.charset.Charset.java.nio.charset.Charset.isSupported(java.lang.String);\n} catch (final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException) {\n    return false;\n}","type":"CtTryImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"name","falseString":"name","trueString":"name"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:310","sourceCode":"int += 24","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:459","sourceCode":"int = 0","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"hours":"tokenPos"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:486","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, java.lang.Object[], null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:605","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1257","sourceCode":"if (byte > byte) {\n    byte = byte;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1133","sourceCode":"if (short < short) {\n    short = short;\n} ","type":"CtIfImpl"},"failures":[50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:76","sourceCode":"T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:460","sourceCode":"T = T","type":"CtAssignmentImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"result"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Pair<L, R>.getRight())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","sourceCode":"byte += byte","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1018","sourceCode":"byte = ((byte)((byte & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out","operand":"out"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:622","sourceCode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:646","sourceCode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    final java.lang.String java.lang.String = java.util.StringTokenizer.nextToken();\n    final int int = java.lang.String.indexOf(\"at\");\n    if ((int != (-1)) && (java.lang.String.substring(0, int).trim().isEmpty())) {\n        boolean = true;\n        java.util.List<java.lang.String>.add(java.lang.String);\n    } else if (boolean) {\n        break;\n    } \n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"frames":"frames","list":"list"}},{"position":"org.apache.commons.lang3.text.WordUtils:459","failures":[],"status":0,"binaryOperator":"(int / 2)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:1264","failures":[53],"status":-1,"binaryOperator":"(int * 16) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:431","sourceCode":"return 'd'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:177","sourceCode":"int += org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.reflect.Method.getName(), java.lang.Object)","type":"CtOperatorAssignmentImpl"},"failures":[54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:148","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:269","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:333","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:530","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'd';\n} else {\n    return 'c';\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:470","failures":[56],"status":-1,"binaryOperator":"(int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:199","sourceCode":"if ((java.util.List<java.util.Locale>.contains(java.util.Locale)) == false) {\n    java.util.List<java.util.Locale>.add(java.util.Locale);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:196","sourceCode":"if ((java.util.Locale.getCountry().length()) > 0) {\n    java.util.List<java.util.Locale>.add(new java.util.Locale(java.util.Locale.getLanguage() , \"\"));\n} ","type":"CtIfImpl"},"failures":[57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:563","sourceCode":"return '4'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:453","sourceCode":"return 'a'","type":"CtReturnImpl"},"failures":[59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:79","failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"binaryOperator":"java.lang.CharSequence == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:466","sourceCode":"if (int > 0) {\n    char char = 0;\n    for (int int = int ; int < (java.lang.String.length()) ; int++) {\n        char = java.lang.String.charAt(int);\n        if (char == '0') {\n            int++;\n        } else {\n            break;\n        }\n    }\n    final int int = (java.lang.String.length()) - int;\n    if ((int > 16) || ((int == 16) && (char > '7'))) {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n    } \n    if ((int > 8) || ((int == 8) && (char > '7'))) {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } \n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numeric":"str","this":"this"}},{"position":"org.apache.commons.lang3.math.Fraction:333","failures":[106],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:846","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:704","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:935","sourceCode":"char = char","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:72","sourceCode":"char = char","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"escapeChar":"end","escapeCharacter":"temp"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5000","sourceCode":"int int = (java.lang.String.length()) - 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:98","sourceCode":"final int int = java.lang.String.length()","type":"CtLocalVariableImpl"},"failures":[108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:116","sourceCode":"if (!(java.util.regex.Matcher.lookingAt())) {\n    throw new java.lang.IllegalArgumentException(((\"Illegal pattern character \\'\" + (java.lang.String.charAt(java.util.regex.Matcher.regionStart()))) + \"\\'\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"prefix":"pattern"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:834","sourceCode":"return 4","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:817","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":69,"org.apache.commons.lang3.ConversionTest.testHexToByte":52,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":100,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int_noMatch":55,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":84,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":78,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":3,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":77,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":4,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":102,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":70,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":107,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":98,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":72,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":79,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":91,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":66,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":8,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":63,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":68,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":6,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":106,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":31,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":34,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":109,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":40,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":62,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":44,"org.apache.commons.lang3.ObjectUtilsTest.testMax":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":16,"org.apache.commons.lang3.math.FractionTest.testReduce":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":18,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":17,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":14,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":71,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":93,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":99,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":92,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":60,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":87,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":48,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":86,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":50,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":58,"org.apache.commons.lang3.text.StrTokenizerTest.test1":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":47,"org.apache.commons.lang3.text.StrTokenizerTest.test3":25,"org.apache.commons.lang3.text.StrTokenizerTest.test2":24,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":108,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":65,"org.apache.commons.lang3.text.StrTokenizerTest.test8":30,"org.apache.commons.lang3.text.StrTokenizerTest.test5":27,"org.apache.commons.lang3.text.StrTokenizerTest.test4":26,"org.apache.commons.lang3.text.StrTokenizerTest.test7":29,"org.apache.commons.lang3.text.StrTokenizerTest.test6":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":38,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":35,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":104,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":53,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":57,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":21,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":83,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":85,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":22,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":5,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":94,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":97,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":59,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":76,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":33,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":101,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":95,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":61,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":96,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":39,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":32,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":103,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":7,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":9,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":49}}]
