[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 16) + int","position":"org.apache.commons.lang3.Conversion:1230","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (31 * int) + (char[][int])","position":"org.apache.commons.lang3.text.StrBuilder:2717","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:640","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , true , true , false }","position":"org.apache.commons.lang3.Conversion:256","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Class<?> != null) && (java.lang.Class<?>.isPrimitive())) {\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.ClassUtils:711","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(int)","position":"org.apache.commons.lang3.builder.ToStringStyle:690","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","position":"org.apache.commons.lang3.BooleanUtils:1080","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:566","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > 16) || ((int == 16) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:477","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:543","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return java.lang.Character.java.lang.Character.isWhitespace(char);\n} ","position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5637","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:589","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int)","position":"org.apache.commons.lang3.math.Fraction:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>\n * A <em>builder<\/em> class for creating instances of {@code\n * BasicThreadFactory}.\n * <\/p>\n * <p>\n * Using this builder class instances of {@code BasicThreadFactory} can be\n * created and initialized. The class provides methods that correspond to\n * the configuration options supported by {@code BasicThreadFactory}. Method\n * chaining is supported. Refer to the documentation of {@code\n * BasicThreadFactory} for a usage example.\n * <\/p>\n * \n * @version $Id$\n */\npublic static class Builder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.concurrent.BasicThreadFactory> {\n    /** \n     * The wrapped factory.\n     */\nprivate java.util.concurrent.ThreadFactory wrappedFactory;\n\n    /** \n     * The uncaught exception handler.\n     */\nprivate java.lang.Thread.UncaughtExceptionHandler exceptionHandler;\n\n    /** \n     * The naming pattern.\n     */\nprivate java.lang.String namingPattern;\n\n    /** \n     * The priority.\n     */\nprivate java.lang.Integer priority;\n\n    /** \n     * The daemon flag.\n     */\nprivate java.lang.Boolean daemonFlag;\n\n    /** \n     * Sets the {@code ThreadFactory} to be wrapped by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param factory the wrapped {@code ThreadFactory} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the passed in {@code ThreadFactory}\n     * is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder wrappedFactory(final java.util.concurrent.ThreadFactory factory) {\n        if (java.util.concurrent.ThreadFactory == null) {\n            throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\");\n        } \n        java.util.concurrent.ThreadFactory = java.util.concurrent.ThreadFactory;\n        return this;\n    }\n\n    /** \n     * Sets the naming pattern to be used by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param pattern the naming pattern (must not be <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the naming pattern is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n        if (java.lang.String == null) {\n            throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n        } \n        java.lang.String = java.lang.String;\n        return this;\n    }\n\n    /** \n     * Sets the daemon flag for the new {@code BasicThreadFactory}. If this\n     * flag is set to <b>true<\/b> the new thread factory will create daemon\n     * threads.\n     * \n     * @param f the value of the daemon flag\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n        java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(boolean);\n        return this;\n    }\n\n    /** \n     * Sets the priority for the threads created by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param prio the priority\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder priority(final int prio) {\n        java.lang.Integer = java.lang.Integer.java.lang.Integer.valueOf(int);\n        return this;\n    }\n\n    /** \n     * Sets the uncaught exception handler for the threads created by the\n     * new {@code BasicThreadFactory}.\n     * \n     * @param handler the {@code UncaughtExceptionHandler} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the exception handler is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder uncaughtExceptionHandler(final java.lang.Thread.UncaughtExceptionHandler handler) {\n        if (java.lang.Thread.UncaughtExceptionHandler == null) {\n            throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\");\n        } \n        java.lang.Thread.UncaughtExceptionHandler = java.lang.Thread.UncaughtExceptionHandler;\n        return this;\n    }\n\n    /** \n     * Resets this builder. All configuration options are set to default\n     * values. Note: If the {@link #build()} method was called, it is not\n     * necessary to call {@code reset()} explicitly because this is done\n     * automatically.\n     */\npublic void reset() {\n        java.util.concurrent.ThreadFactory = null;\n        java.lang.Thread.UncaughtExceptionHandler = null;\n        java.lang.String = null;\n        java.lang.Integer = null;\n        java.lang.Boolean = null;\n    }\n\n    /** \n     * Creates a new {@code BasicThreadFactory} with all configuration\n     * options that have been specified by calling methods on this builder.\n     * After creating the factory {@link #reset()} is called.\n     * \n     * @return the new {@code BasicThreadFactory}\n     */\n@java.lang.Override\n    public org.apache.commons.lang3.concurrent.BasicThreadFactory build() {\n        final org.apache.commons.lang3.concurrent.BasicThreadFactory org.apache.commons.lang3.concurrent.BasicThreadFactory = new org.apache.commons.lang3.concurrent.BasicThreadFactory(this);\n        org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.reset();\n        return org.apache.commons.lang3.concurrent.BasicThreadFactory;\n    }\n}","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:254","type":"CtClassImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:946","failures":[3],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":-1},{"failures":[4],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final boolean[] boolean[] = new boolean[4]","position":"org.apache.commons.lang3.Conversion:517","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean[] boolean[] = new boolean[int]","position":"org.apache.commons.lang3.ArrayUtils:1209","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>(2)","position":"org.apache.commons.lang3.ArrayUtils:5978","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[])","position":"org.apache.commons.lang3.ArrayUtils:3967","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3968","type":"CtIfImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"char char = ' '","position":"org.apache.commons.lang3.CharSetUtils:72","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.StringUtils:1883","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"u":"tmp"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:592","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    int = int[][int];\n    int[][int] = int[][int];\n    int[][int] = int;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1755","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:2023","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1587","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:523","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"length","endIndex":"length"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1055","type":"CtForImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.builder.ToStringStyle:902","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{"strLen":"strLen","size":"strLen"},"name":"add","transplant":{"sourceCode":"final int int = (int) + int","position":"org.apache.commons.lang3.text.StrBuilder:1500","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"file.separator\")","position":"org.apache.commons.lang3.SystemUtils:134","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:1955","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.java.util.EnumSet<org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION> = java.util.EnumSet.java.util.EnumSet.copyOf(java.util.Arrays.java.util.Arrays.asList(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION[]))","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:58","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.CompareToBuilder:281","type":"CtLocalVariableImpl"},"status":-2},{"failures":[40],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:107","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"found":"length"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5283","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?> java.lang.Class<?>;\n    java.lang.Class<?> java.lang.Class<?>;\n    java.lang.Class<?> = java.lang.Class<?>[][int];\n    java.lang.Class<?> = java.lang.Class<?>[][int];\n    float += org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class<?>, java.lang.Class<?>);\n}","position":"org.apache.commons.lang3.reflect.MemberUtils:115","type":"CtForImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.math.Fraction:783","failures":[41,42],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:544","type":"CtLocalVariableImpl"},"status":-2},{"failures":[43],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.math.Fraction:897","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int)((long) ^ ((long) >>> 32)))","position":"org.apache.commons.lang3.mutable.MutableLong:249","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (double[].int)) {\n    int = (double[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.math.NumberUtils:846","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte > byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.reflect.MemberUtils.ACCESS_TEST":"strLen","modifiers":"strLen"},"name":"add","transplant":{"sourceCode":"return (int & int) == 0","position":"org.apache.commons.lang3.reflect.MemberUtils:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || ((int = java.lang.CharSequence.length()) == 0)) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:308","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (java.lang.String == null)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2290","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:629","type":"CtWhileImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.CharSetUtils:114","failures":[44,45],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.PrintStream.flush()","position":"org.apache.commons.lang3.exception.ExceptionUtils:466","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"duration":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.trim()","position":"org.apache.commons.lang3.time.DurationFormatUtils:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5379","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"prior":"fieldName","value":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, int[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:769","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.CompareToBuilder, boolean, java.lang.String[])","position":"org.apache.commons.lang3.builder.CompareToBuilder:286","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:176","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrLookup:163","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.math.Fraction:885","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:1955","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.StringBuilder((java.lang.Class<? extends java.lang.annotation.Annotation> == null ? \"\" : java.lang.Class<? extends java.lang.annotation.Annotation>.getName())).insert(0, '@').toString()","position":"org.apache.commons.lang3.AnnotationUtils:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:695","type":"CtLocalVariableImpl"},"status":-2},{"failures":[46],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return boolean ? 1 : 0","position":"org.apache.commons.lang3.BooleanUtils:393","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.booleanValue() ? int : int","position":"org.apache.commons.lang3.BooleanUtils:469","type":"CtReturnImpl"},"status":-1},{"failures":[47],"variableMapping":{"value":"value","operand":"operand"},"name":"add","transplant":{"sourceCode":"this.double -= double","position":"org.apache.commons.lang3.mutable.MutableDouble:178","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double += double","position":"org.apache.commons.lang3.mutable.MutableDouble:157","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.CharSequenceUtils:120","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.SerializationUtils:79","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(T, org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:203","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"months":"strLen","years":"strLen"},"name":"replace","transplant":{"sourceCode":"int += 12 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:329","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:518","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[48,49,50],"variableMapping":{"value":"iTotal"},"name":"add","transplant":{"sourceCode":"(this.int)--","position":"org.apache.commons.lang3.mutable.MutableInt:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + char","position":"org.apache.commons.lang3.builder.HashCodeBuilder:643","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(long)--","position":"org.apache.commons.lang3.mutable.MutableLong:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:858","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getComponentType()","position":"org.apache.commons.lang3.AnnotationUtils:228","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:346","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:340","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<? extends java.lang.annotation.Annotation>","position":"org.apache.commons.lang3.AnnotationUtils:79","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:204","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[] == null) || (int == 0)) {\n    return java.util.Collections.java.util.Collections.emptyList();\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:636","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale))","position":"org.apache.commons.lang3.time.FastDatePrinter:1264","type":"CtReturnImpl"},"status":-2},{"failures":[51,52],"variableMapping":{"endCutoff":"start","startCutoff":"end"},"name":"add","transplant":{"sourceCode":"int = int - 1","position":"org.apache.commons.lang3.time.DateUtils:1195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 16)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:119","type":"CtAssignmentImpl"},"status":-1},{"failures":[53,54,55,56,57,58,59],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, null)","position":"org.apache.commons.lang3.reflect.TypeUtils:312","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:327","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"length","denominator":"length","numerator":"length"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    if ((int == (this.int)) || (int == (this.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1116","type":"CtForImpl"},"status":-2},{"failures":[60],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch already started. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:302","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char[][int] = java.lang.Character == null ? char : java.lang.Character.charValue()","position":"org.apache.commons.lang3.ArrayUtils:2988","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '0'","position":"org.apache.commons.lang3.Conversion:577","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue hierarchyTraversal","position":"org.apache.commons.lang3.reflect.MethodUtils:539","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(byte[][int], byte[][int])","position":"org.apache.commons.lang3.builder.CompareToBuilder:867","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 32) + int","position":"org.apache.commons.lang3.Conversion:695","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:697","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:907","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < (char[].int) ; int++) {\n    final int int = java.lang.Character.java.lang.Character.getType(char[][int]);\n    if (int == int) {\n        continue;\n    } \n    if ((boolean && (int == (java.lang.Character.byte))) && (int == (java.lang.Character.byte))) {\n        final int int = int - 1;\n        if (int != int) {\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n            int = int;\n        } \n    } else {\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n        int = int;\n    }\n    int = int;\n}","position":"org.apache.commons.lang3.StringUtils:3232","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:561","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:776","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = null","position":"org.apache.commons.lang3.AnnotationUtils:73","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.ArrayUtils:4007","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Character == null) {\n    throw new java.lang.IllegalArgumentException(\"The character must not be null\");\n} ","position":"org.apache.commons.lang3.CharUtils:263","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(java.lang.String.charAt(int))) {\n    if (boolean || boolean) {\n        boolean = true;\n        if ((int++) == int) {\n            int = int;\n            boolean = false;\n        } \n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n        boolean = false;\n    } \n    int = ++int;\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3091","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2249","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1305","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(java.lang.Object.java.lang.Object).build()","position":"org.apache.commons.lang3.reflect.TypeUtils:288","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"fieldName":"fieldName","$anonymous0":"fieldName","lhs":"lhs","this":"this","rhs":"lhs","diffs":"diffs"},"name":"add","transplant":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(byte[], byte[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Byte[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Byte[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte[]>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Byte[] getLeft() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n    }\n\n    @java.lang.Override\n    public java.lang.Byte[] getRight() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:263","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"size":"strLen"},"name":"replace","transplant":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.text.StrBuilder:360","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[(int / 2) + 1]","position":"org.apache.commons.lang3.text.WordUtils:543","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:554","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1362","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList()","position":"org.apache.commons.lang3.LocaleUtils:299","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2879","type":"CtIfImpl"},"status":0},{"failures":[61,62],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.concurrent.Callable<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Callable must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:122","type":"CtIfImpl"},"status":-1},{"failures":[63,64],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.reflect.TypeUtils:70","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"obj2":"lhs","obj1":"rhs"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = new java.lang.String[]{ \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isArray())) {\n    boolean = java.lang.Object.equals(java.lang.Object);\n} else if ((java.lang.Object.getClass()) != (java.lang.Object.getClass())) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n} else if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:463","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDateParser:472","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(long[], int)","position":"org.apache.commons.lang3.ArrayUtils:5101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.GenericDeclaration java.lang.reflect.GenericDeclaration = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.TypeVariable<?>)).getGenericDeclaration()","position":"org.apache.commons.lang3.reflect.TypeUtils:1688","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:563","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.boolean","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:597","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:509","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object));\n}","position":"org.apache.commons.lang3.time.DateUtils:857","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not round \" + java.lang.Object));\n}","position":"org.apache.commons.lang3.time.DateUtils:778","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:948","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(boolean[]);\n} else if (boolean[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(boolean[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3763","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(org.apache.commons.lang3.concurrent.ConstantInitializer.java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(this)), java.lang.String.java.lang.String.valueOf(org.apache.commons.lang3.concurrent.ConstantInitializer<T>.getObject()))","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:127","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((((java.lang.reflect.Type instanceof java.lang.Class<?>) || (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) || (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) || (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:705","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Short[]","position":"org.apache.commons.lang3.ArrayUtils:734","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:709","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","position":"org.apache.commons.lang3.text.WordUtils:465","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:482","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) || ((java.lang.reflect.Type instanceof java.lang.Class<?>) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1336","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Thread.UncaughtExceptionHandler == null) {\n    throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:346","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = null","position":"org.apache.commons.lang3.math.NumberUtils:516","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][(int)++] = 'f'","position":"org.apache.commons.lang3.text.StrBuilder:778","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4)","position":"org.apache.commons.lang3.LocaleUtils:195","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:296","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:2003","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1372","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:733","type":"CtIfImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.Character.java.lang.Character.toChars(int)","position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:110","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:5821","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return -1;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:121","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","position":"org.apache.commons.lang3.math.Fraction:223","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Conversion:766","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.text.StrTokenizer:787","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:1601","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[])","position":"org.apache.commons.lang3.time.FastDatePrinter:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(T)","position":"org.apache.commons.lang3.Range:453","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone, true, int, java.util.Locale))","position":"org.apache.commons.lang3.time.FastDatePrinter:1156","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(short[], short)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2297","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Calendar, java.lang.String, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3858","type":"CtIfImpl"},"status":-2},{"failures":[65,66,67,68],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.LocaleUtils:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String[][0])) && (((java.lang.String[][0].length()) == 2) || ((java.lang.String[][0].length()) == 3))) && ((java.lang.String[][1].length()) == 2)) && org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.String[][1]))) {\n    return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1]);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n}","position":"org.apache.commons.lang3.LocaleUtils:137","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrLookup<java.lang.String> org.apache.commons.lang3.text.StrLookup<java.lang.String> = null","position":"org.apache.commons.lang3.text.StrLookup:49","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.ArrayUtils:3194","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:2026","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:4062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char","position":"org.apache.commons.lang3.CharUtils:196","type":"CtReturnImpl"},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"variableMapping":{"this":"buf","index":"endPos"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.validateIndex(int)","position":"org.apache.commons.lang3.text.StrBuilder:1574","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    final int int = java.lang.String.length();\n    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n    boolean = true;\n    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n    int = (int + int) - (int - int);\n    int += int;\n    int += int;\n    int += int;\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:848","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"k":"end"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.math.Fraction:597","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:675","type":"CtUnaryOperatorImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":53,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":86,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":25,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitExecutorNullCallable":62,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":4,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":8,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":83,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":88,"org.apache.commons.lang3.ConversionTest.testHexToInt":3,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":29,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":35,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":55,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWildcardType":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":11,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":95,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":92,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":2,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":71,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":23,"org.apache.commons.lang3.ArrayUtilsTest.testToString":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":32,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":59,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":5,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":0,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValuePrimitive":47,"org.apache.commons.lang3.math.FractionTest.testAdd":41,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":38,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":22,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":84,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":15,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":16,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":12,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":80,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":10,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_Boolean_int_int_int":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":81,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":67,"org.apache.commons.lang3.math.FractionTest.testSubtract":42,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":17,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":78,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitNullCallable":61,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testChar":50,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":56,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":14,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":18,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":68,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":87,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":44,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":93,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":45,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":6,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":52,"org.apache.commons.lang3.mutable.MutableLongTest.testHashCode":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":89,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":85,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":91}}]
