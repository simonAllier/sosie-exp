[{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:386","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:335","sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:595","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","object":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:198","sourceCode":"return java.lang.String.charAt(0)","type":"CtReturnImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:124","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCause(java.lang.Throwable, org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","sourceCode":"byte = byte","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1011","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"max","a":"max"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:660","sourceCode":"if (long > (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n} ","type":"CtIfImpl"},"failures":[64,65,66,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:738","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:303","sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause())","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:538","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:516","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[69,69,70,71,72,72,73,17,18,74,75,76,77,78,78,19,79,80,20,21,22,23,81,24,25,82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:912","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[84,1,2,85,86,87,88,89,90,73,18,78,79,20,26,91,27,30,92,31,34,93,35,38,94,39,42,95,43,46,96,47,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1007","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Mac OS X\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:927","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.7\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1793","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2099","sourceCode":"if (int == 0) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:109","sourceCode":"if ((int >= (int)) && (int <= (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[98,99,100,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"len":"below"}},{"position":"org.apache.commons.lang3.time.FastDateParser:194","failures":[105],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:625","sourceCode":"boolean = boolean == boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:981","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"done","rhs":"done","lhs":"done"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1086","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:260","sourceCode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if ((java.lang.String.equals(java.util.Locale.getCountry())) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[106],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6031","sourceCode":"final int int = (int - int) - 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1016","sourceCode":"final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","type":"CtLocalVariableImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"shift","end":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:336","sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:326","sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:96","sourceCode":"final int int = java.lang.String.length()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:212","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char)","type":"CtAssignmentImpl"},"failures":[108,109,110,111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:963","sourceCode":"for (int int = 1 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1009","sourceCode":"for (int int = 1 ; int < (byte[].int) ; int++) {\n    if ((byte[][int]) > byte) {\n        byte = byte[][int];\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:251","sourceCode":"double = java.lang.Math.java.lang.Math.abs(double)","type":"CtAssignmentImpl"},"failures":[112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1659","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1008","sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1592","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (int >> int)) != 0;\n}","type":"CtForImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nHex":"shift","dstPos":"src"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:177","sourceCode":"java.lang.String = \" \" + java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2099","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"duration":"summaryObjectEndText"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2420","sourceCode":"int = int >= int ? int - 1 : int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:433","sourceCode":"int = (37 * int) + (T.hashCode())","type":"CtAssignmentImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndex":"result","size":"result"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:89","sourceCode":"int += char[].int","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:115","sourceCode":"return 6","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:663","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[64,117,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1655","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[30,118,119,92,120,31,32,33,38,121,122,94,123,39,40,41,46,124,125,96,126,47,48,49,61,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1332","sourceCode":"byte[][(int + int)] = ((byte)(255 & (int >> int)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1231","sourceCode":"short[][(int + int)] = ((short)(65535 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":108,"org.apache.commons.lang3.ConversionTest.testHexToByte":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":69,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":12,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":99,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":76,"org.apache.commons.lang3.math.FractionTest.testFactory_double":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":80,"org.apache.commons.lang3.ConversionTest.testIntToBinary":114,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":105,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":55,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":42,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":96,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":52,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":48,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":8,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":88,"org.apache.commons.lang3.math.FractionTest.testConstants":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":78,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":53,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":9,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":7,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":106,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":118,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":137,"org.apache.commons.lang3.math.FractionTest.testGets":130,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":125,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":59,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":97,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":122,"org.apache.commons.lang3.math.FractionTest.testInvert":136,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":20,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":31,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":62,"org.apache.commons.lang3.CharUtilsTest.testToChar_String_char":63,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":110,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":0,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":132,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":115,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":22,"org.apache.commons.lang3.math.FractionTest.testPow":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":47,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":68,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":30,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":39,"org.apache.commons.lang3.math.FractionTest.testReduce":139,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":15,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":29,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":13,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":44,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":79,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":135,"org.apache.commons.lang3.RangeTest.testHashCode":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":4,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":128,"org.apache.commons.lang3.math.FractionTest.testSubtract":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":18,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":60,"org.apache.commons.lang3.math.FractionTest.testAdd":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":82,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":121,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":101,"org.apache.commons.lang3.math.FractionTest.testNegate":138,"org.apache.commons.lang3.math.FractionTest.testAbs":129,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":126,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":19,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":93,"org.apache.commons.lang3.ArrayUtilsTest.testToString":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":75,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":133,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":109,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":98,"org.apache.commons.lang3.math.FractionTest.testToString":131,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":14,"org.apache.commons.lang3.math.FractionTest.testMultiply":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":85,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":123,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":81,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":27,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":33,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":84,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":140,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":5,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":90,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":25,"org.apache.commons.lang3.math.FractionTest.testDivide":66,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":103,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":57,"org.apache.commons.lang3.math.FractionTest.testToProperString":113,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":111,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":73,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":95,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":83}}]
