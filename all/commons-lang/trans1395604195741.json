[{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:402","sourceCode":"if (byte[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1290","sourceCode":"return byte[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:118","sourceCode":"return java.lang.Double.java.lang.Double.isNaN(double)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:276","sourceCode":"return (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableDouble) && (java.lang.Double.(java.lang.Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(java.lang.Object)).double)) == java.lang.Double.(java.lang.Double.doubleToLongBits(double)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:558","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:1659","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:514","sourceCode":"java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,23,24,25,25,26,27,28,28,4,29,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,51,52,53,54,54,55,56,57,58,5,59,60,61,62,63,64,65,6,66,67,68,69,70,7,71,72,73,74,75,76,77,8,78,79,80,81,82,82,83,84,85,86,87,88,89,89,90,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:218","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Constructor<T>, \"constructor cannot be null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4696","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don\\'t match: \" + int) + \" vs \") + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:822","sourceCode":"if (java.util.List<java.lang.String> == null) {\n    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n} ","type":"CtIfImpl"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"replacementLength":"length","searchLength":"offset"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4749","sourceCode":"int += 3 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1559","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"greater":"srcPos","increase":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1423","sourceCode":"if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n    return (boolean && (!boolean)) && (!boolean);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1408","sourceCode":"if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    return boolean;\n} ","type":"CtIfImpl"},"failures":[124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:528","sourceCode":"if (int >= 0) {\n    return this;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:558","sourceCode":"if ((int % 2) == 0) {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n} else {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n}","type":"CtIfImpl"},"failures":[125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numerator":"power"}},{"position":"org.apache.commons.lang3.math.Fraction:849","failures":[126],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Range:290","sourceCode":"throw new java.lang.NullPointerException(\"Element is null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:65","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:338","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"uncapitalizeNext"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:216","sourceCode":"return java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1884","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"duration":"fieldSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1476","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1426","sourceCode":"return (java.lang.String.startsWith(java.lang.String)) && (java.lang.String.startsWith(java.lang.String))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1407","sourceCode":"return java.lang.String.startsWith(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"osVersion":"version","osNamePrefix":"versionPrefix","osVersionPrefix":"version","osName":"version"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:976","sourceCode":"for (final boolean boolean : boolean[]) {\n    if (boolean) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:380","sourceCode":"int += 24 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:981","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"days":"i","hours":"shift"}},{"position":"org.apache.commons.lang3.text.StrTokenizer:253","failures":[],"status":0,"binaryOperator":"java.lang.String != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:123","sourceCode":"return (int & (this.int)) != 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"_mask":"above","holder":"below"}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:144","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1056","sourceCode":"if (int >= 15) {\n    int -= 15;\n} ","type":"CtIfImpl"},"failures":[130,131,132,133],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1060","sourceCode":"if (char[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:394","sourceCode":"return new java.lang.String(char[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"chars":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:527","sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","type":"CtSwitchImpl"},"failures":[134,135,124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:573","sourceCode":"return (((((\"FastDateFormat[\" + (this.org.apache.commons.lang3.time.FastDatePrinter.getPattern())) + \",\") + (this.org.apache.commons.lang3.time.FastDatePrinter.getLocale())) + \",\") + (this.org.apache.commons.lang3.time.FastDatePrinter.getTimeZone().getID())) + \"]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:420","sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar)","type":"CtReturnImpl"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"printer":"printer"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:264","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:201","sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:204","sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:215","sourceCode":"java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:216","sourceCode":"java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(false)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:260","sourceCode":"for (java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.reflect.Constructor<?>[]) {\n    if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Constructor<?>.getParameterTypes(), true)) {\n        java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>);\n        if (java.lang.reflect.Constructor<?> != null) {\n            org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n            if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n                java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n            } \n        } \n    } \n}","type":"CtForEachImpl"},"failures":[152,153,154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1208","sourceCode":"java.lang.StringBuffer.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1183","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[38,72,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.apache.commons.lang3.math.Fraction:777","failures":[155,156],"status":-1,"binaryOperator":"(java.math.BigInteger.bitLength()) > 31","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":82,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":17,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":151,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":43,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":112,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":79,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":133,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":15,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":118,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":93,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":21,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":83,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":131,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":41,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":142,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":85,"org.apache.commons.lang3.math.FractionTest.testPow":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":107,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":66,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":108,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":145,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":138,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":5,"org.apache.commons.lang3.ConversionTest.testLongToBinary":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":31,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":96,"org.apache.commons.lang3.mutable.MutableDoubleTest.testEquals":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":52,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":50,"org.apache.commons.lang3.math.FractionTest.testSubtract":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":75,"org.apache.commons.lang3.math.FractionTest.testAdd":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":45,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":94,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":26,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":90,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":46,"org.apache.commons.lang3.ConversionTest.testHexToShort":128,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":127,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":12,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":80,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":51,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":27,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":78,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":7,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":42,"org.apache.commons.lang3.math.FractionTest.testEquals":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":47,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":19,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":95,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":100,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":3,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":73,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":91}}]
