[{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:171","sourceCode":"return int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:436","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:160","sourceCode":"java.lang.StringBuilder.append(\"---------------------------------\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:227","sourceCode":"java.lang.StringBuilder.append(char[][int])","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:834","sourceCode":"return 4","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:895","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:90","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:101","sourceCode":"if (char == '_') {\n    if (int < 3) {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    final char char = java.lang.String.charAt(1);\n    final char char = java.lang.String.charAt(2);\n    if ((!java.lang.Character.(java.lang.Character.isUpperCase(char))) || (!java.lang.Character.(java.lang.Character.isUpperCase(char)))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    if (int == 3) {\n        return new java.util.Locale(\"\" , java.lang.String.substring(1, 3));\n    } \n    if (int < 5) {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    if ((java.lang.String.charAt(3)) != '_') {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    return new java.util.Locale(\"\" , java.lang.String.substring(1, 3) , java.lang.String.substring(4));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:574","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:552","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:171","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:157","sourceCode":"this.float += float","type":"CtOperatorAssignmentImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1059","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[][int])","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:489","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:491","sourceCode":"throw new java.lang.ArithmeticException(\"Unable to invert zero.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:276","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:847","sourceCode":"return int","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:805","inlineConstant":"int int = 0","failures":[21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1769","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:143","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arrayEnd":"currentFormatField"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:157","sourceCode":"double += double","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:279","sourceCode":"double = double - (int * double)","type":"CtAssignmentImpl"},"failures":[23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"x1","operand":"x1"}},{"position":"org.apache.commons.lang3.Conversion:1016","failures":[25],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int)))))","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:527","sourceCode":"java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.LocaleUtils:191","failures":[26],"status":-1,"binaryOperator":"java.util.Locale != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:126","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int))","type":"CtInvocationImpl"},"failures":[27,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:364","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1656","sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:234","sourceCode":"if ((int == 0) && (int == 0)) {\n    if (char[] != null) {\n        int = char[].int;\n    } else {\n        if ((!boolean) && (!boolean)) {\n            int = java.lang.Integer.int;\n        } else {\n            int = 'z' + 1;\n            int = ' ';\n        }\n    }\n} else {\n    if (int <= int) {\n        throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n    } \n}","type":"CtIfImpl"},"failures":[37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"start","nBools":"start"}},{"position":"org.apache.commons.lang3.math.Fraction:676","failures":[40],"status":-1,"binaryOperator":"((long)(int)) + ((long)(int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:533","sourceCode":"return 'c'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:467","sourceCode":"return '8'","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:325","failures":[42,43],"status":-1,"binaryOperator":"int == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:558","sourceCode":"switch (java.lang.String.length()) {\n    case 1 :\n        {\n            final char char = java.lang.String.charAt(0);\n            if ((((char == 'y') || (char == 'Y')) || (char == 't')) || (char == 'T')) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            if ((((char == 'n') || (char == 'N')) || (char == 'f')) || (char == 'F')) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 2 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            if (((char == 'o') || (char == 'O')) && ((char == 'n') || (char == 'N'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            if (((char == 'n') || (char == 'N')) && ((char == 'o') || (char == 'O'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 3 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            final char char = java.lang.String.charAt(2);\n            if ((((char == 'y') || (char == 'Y')) && ((char == 'e') || (char == 'E'))) && ((char == 's') || (char == 'S'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            if ((((char == 'o') || (char == 'O')) && ((char == 'f') || (char == 'F'))) && ((char == 'f') || (char == 'F'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 4 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            final char char = java.lang.String.charAt(2);\n            final char char = java.lang.String.charAt(3);\n            if (((((char == 't') || (char == 'T')) && ((char == 'r') || (char == 'R'))) && ((char == 'u') || (char == 'U'))) && ((char == 'e') || (char == 'E'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 5 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            final char char = java.lang.String.charAt(2);\n            final char char = java.lang.String.charAt(3);\n            final char char = java.lang.String.charAt(4);\n            if ((((((char == 'f') || (char == 'F')) && ((char == 'a') || (char == 'A'))) && ((char == 'l') || (char == 'L'))) && ((char == 's') || (char == 'S'))) && ((char == 'e') || (char == 'E'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n}","type":"CtSwitchImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:552","sourceCode":"if (java.lang.String == \"true\") {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:380","sourceCode":"int += 24 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1402","sourceCode":"++int","type":"CtUnaryOperatorImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"days":"append","hours":"append"}},{"failureDictionary":{"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":45,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":28,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int_int_int_noMatch":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":10,"org.apache.commons.lang3.ConversionTest.testHexToByte":25,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":24,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":32,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":39,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":0,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":14,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":26,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":13,"org.apache.commons.lang3.math.FractionTest.testFactory_double":23,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":41,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":12,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":30,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":27,"org.apache.commons.lang3.mutable.MutableFloatTest.testAddValuePrimitive":8,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":44,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":18,"org.apache.commons.lang3.math.FractionTest.testAdd":40,"org.apache.commons.lang3.math.FractionTest.testPow":4,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":20,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":6,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":1,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":15,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":36,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":34,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":22,"org.apache.commons.lang3.math.FractionTest.testCompareTo":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":16,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":33,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":19,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":29,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":31,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":3,"org.apache.commons.lang3.ConversionTest.testLongToHex":46,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG807":37,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int_int_int":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":11}}]
