[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.reflect.TypeUtils:1440","type":"mutation","return":"return false","status":0},{"failures":[],"variableMapping":{"array2":"rhs","array1":"rhs"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.ArrayUtils:1418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    java.lang.Class<?> = java.lang.Class<?>;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:347","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5080","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    return java.lang.Class<?>.isArray() ? java.lang.Class<?>.getComponentType() : null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1345","type":"CtIfImpl"},"status":-2},{"failures":[153],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:267","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int != 0","position":"org.apache.commons.lang3.BooleanUtils:199","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.reflect.ConstructorUtils:250","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.String, E> java.util.Map<java.lang.String, E> = new java.util.LinkedHashMap<java.lang.String, E>()","position":"org.apache.commons.lang3.EnumUtils:59","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"timeZone":"timeZone","style":"style","org.apache.commons.lang3.time.FastDateFormat.cache":"org.apache.commons.lang3.time.FastDateFormat.cache"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.FastDateFormat:211","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.FastDateFormat:273","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:4836","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((((java.lang.String == null) || (java.lang.String.isEmpty())) || (java.lang.String[] == null)) || ((java.lang.String[].int) == 0)) || (java.lang.String[] == null)) || ((java.lang.String[].int) == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4690","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.text.MessageFormat.applyPattern(java.lang.StringBuilder.toString())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:194","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.GenericDeclaration))","position":"org.apache.commons.lang3.reflect.TypeUtils:1690","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:236","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += org.apache.commons.lang3.time.FastDatePrinter.Rule[][int].estimateLength()","position":"org.apache.commons.lang3.time.FastDatePrinter:154","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:464","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2391","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeLiteral:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","position":"org.apache.commons.lang3.time.DateUtils:858","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (byte[] == null) {\n    return null;\n} else if ((byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3274","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:710","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:490","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getRawType()","position":"org.apache.commons.lang3.reflect.TypeUtils:1240","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 7) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");\n} ","position":"org.apache.commons.lang3.StringUtils:6413","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || ((int + int) > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"t":"type"},"name":"replace","transplant":{"sourceCode":"final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1625","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1443","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object instanceof java.lang.Long) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.lang.Long)(java.lang.Object)).longValue(), java.lang.StringBuffer);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (java.lang.Object == null ? \"<null>\" : java.lang.Object.getClass().getName())));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:385","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Calendar)(java.lang.Object)), java.lang.StringBuffer);\n} else if (java.lang.Object instanceof java.lang.Long) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.lang.Long)(java.lang.Object)).longValue(), java.lang.StringBuffer);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (java.lang.Object == null ? \"<null>\" : java.lang.Object.getClass().getName())));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:383","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:654","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long[] long[] = new long[java.lang.Long[].int]","position":"org.apache.commons.lang3.ArrayUtils:3053","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1155","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int >= (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:343","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:725","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) > 8) {\n    throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (boolean[].int)));\n} ","position":"org.apache.commons.lang3.Conversion:404","type":"CtIfImpl"},"status":-2},{"failures":[154],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","position":"org.apache.commons.lang3.math.Fraction:190","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:202","type":"CtThrowImpl"},"status":-1},{"failures":[155],"variableMapping":{"i":"size","chars":"thisBuf"},"name":"replace","transplant":{"sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1416","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (this.int) ; int++) {\n    if ((char[][int]) == char) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtForImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.text.StrMatcher:367","type":"CtLocalVariableImpl"},"status":-2},{"failures":[156,157],"variableMapping":{"length":"start","index":"start"},"name":"replace","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:5192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:74","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:944","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:266","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.ArrayUtils.java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:754","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return null;\n} else if ((char[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3002","type":"CtIfImpl"},"status":-2},{"failures":[158,159,160,161,162,163,164,165],"variableMapping":{"index":"size"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], 0, char[], 0, int)","position":"org.apache.commons.lang3.text.StrBuilder:237","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"int <= 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:3764","type":"mutation","status":0},{"failures":[166,167],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, int).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5430","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","defaultStr":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"replace","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3862","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n    if (java.util.Iterator<?>.hasNext()) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1159","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion","position":"org.apache.commons.lang3.JavaVersion:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[] == null) || ((float[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.float[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:653","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == (-1)) {\n    boolean[][int] = true;\n} else {\n    if ((int == (-1)) || (int < int)) {\n        int = int;\n        int = int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:4788","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(this) {\n    java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> = new java.util.HashMap<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>);\n}","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:187","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"subarray"},"name":"add","transplant":{"sourceCode":"return float[].clone()","position":"org.apache.commons.lang3.ArrayUtils:438","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float[]","position":"org.apache.commons.lang3.ArrayUtils:1171","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"[]\")","position":"org.apache.commons.lang3.ClassUtils:1133","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:161","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.lang3.mutable.MutableInt:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1125","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'W' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:485","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int[][int]","position":"org.apache.commons.lang3.StringUtils:6974","type":"CtReturnImpl"},"status":-2},{"failures":[168,169,170,171,172,173,174,175,176,177],"variableMapping":{"append":"pos"},"name":"replace","transplant":{"sourceCode":"++int","position":"org.apache.commons.lang3.Conversion:1522","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:95","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(byte[]))) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5356","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(byte[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5325","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append('?')","position":"org.apache.commons.lang3.reflect.TypeUtils:1808","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(int)","position":"org.apache.commons.lang3.StringUtils:6464","type":"CtLocalVariableImpl"},"status":0},{"failures":[178],"variableMapping":{"srcPos":"max","nHexs":"max"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1471","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue();\n    if (int == int) {\n        T = null;\n    } else if (int > int) {\n        int = int;\n        T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    } \n}","position":"org.apache.commons.lang3.ObjectUtils:583","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{"found":"clazz","annotationType":"clazz"},"name":"add","transplant":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<? extends java.lang.annotation.Annotation>","position":"org.apache.commons.lang3.AnnotationUtils:79","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String), boolean, java.lang.ClassLoader)","position":"org.apache.commons.lang3.ClassUtils:828","type":"CtAssignmentImpl"},"status":-2},{"failures":[179],"binaryOperator":"(int + int) == int","name":"removeConditional","position":"org.apache.commons.lang3.Conversion:1521","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1340","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.min(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.builder.HashCodeBuilder:927","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.lang3.time.FastDateParser.Strategy[].int) ; ) {\n    final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][int++];\n    org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int));\n}","position":"org.apache.commons.lang3.time.FastDateParser:316","type":"CtForImpl"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,134,135,136,137,138,139,140,141],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.builder.ToStringStyle:1457","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (byte[].int)) {\n    int = byte[].int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1081","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ToStringBuilder.getObject()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:667","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2592","type":"CtReturnImpl"},"status":-2},{"failures":[180,181,182,183,184],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:1043","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field = java.lang.reflect.Field","position":"org.apache.commons.lang3.reflect.FieldUtils:127","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Character java.lang.Character = java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(char[], java.lang.Character.charValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5637","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"char char","position":"org.apache.commons.lang3.ArrayUtils:1649","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = char","position":"org.apache.commons.lang3.CharRange:70","type":"CtLocalVariableImpl"},"status":-2},{"failures":[185,186],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.mutable.MutableInt.int","position":"org.apache.commons.lang3.mutable.MutableInt:261","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","position":"org.apache.commons.lang3.math.NumberUtils:1084","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5122","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.EqualsBuilder:809","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:540","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1901","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int))","position":"org.apache.commons.lang3.text.StrBuilder:1557","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final long long = (4294967295L & (int[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:696","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar, new java.lang.StringBuffer(int)).toString()","position":"org.apache.commons.lang3.time.FastDatePrinter:436","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"milliseconds":"repeat","seconds":"repeat"},"name":"add","transplant":{"sourceCode":"while (int < 0) {\n    int += 1000;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:298","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.lang.StringBuilder.append(java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:5151","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7041","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:651","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(byte[], int)","position":"org.apache.commons.lang3.ArrayUtils:4776","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Iterator<java.text.Format> java.util.Iterator<java.text.Format> = java.util.ArrayList<java.text.Format>.iterator() ; java.util.Iterator<java.text.Format>.hasNext() ; int++) {\n    final java.text.Format java.text.Format = java.util.Iterator<java.text.Format>.next();\n    if (java.text.Format != null) {\n        java.text.Format[][int] = java.text.Format;\n    } \n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:201","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5819","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:5300","type":"CtReturnImpl"},"status":-2},{"failures":[187],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2337","type":"CtAssignmentImpl"},"status":-1},{"failures":[158,161,188,189,190,191,164,192,193],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(\" \\t\\n\\r\\f\".toCharArray())","position":"org.apache.commons.lang3.text.StrMatcher:51","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n        break;\n    } \n    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + int));\n        break;\n    } \n}","position":"org.apache.commons.lang3.text.StrSubstitutor:817","type":"CtForImpl"},"status":-1},{"failures":[194,195,196,197],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:405","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long[].int) != (long[].int)) {\n    int = (long[].int) < (long[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:702","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:214","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = int + int","position":"org.apache.commons.lang3.StringUtils:2844","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Default <code>ToStringStyle<\/code>.<\/p>\n * \n * <p>This is an inner class rather than using\n * <code>StandardToStringStyle<\/code> to ensure its immutability.<\/p>\n */\nprivate static final class DefaultToStringStyle extends org.apache.commons.lang3.builder.ToStringStyle {\n    /** \n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     */\nprivate static final long serialVersionUID = 1L;\n\n    /** \n     * <p>Constructor.<\/p>\n     * \n     * <p>Use the static constant rather than instantiating.<\/p>\n     */\nDefaultToStringStyle() {\n        org.apache.commons.lang3.builder.ToStringStyle.super();\n    }\n\n    /** \n     * <p>Ensure <code>Singleton<\/code> after serialization.<\/p>\n     * \n     * @return the singleton\n     */\nprivate java.lang.Object readResolve() {\n        return org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle;\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:2112","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:1108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String.java.lang.String.valueOf(int))","position":"org.apache.commons.lang3.text.StrBuilder:1622","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.JavaVersion(1.5F , \"1.5\")","position":"org.apache.commons.lang3.JavaVersion:54","type":"CtNewClassImpl"},"status":-2},{"failures":[198,199],"binaryOperator":"int > (-1)","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:2829","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + int) < (java.lang.CharSequence.length())) && ((java.lang.CharSequence.charAt((int + int))) == '+')) {\n    int++;\n} ","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:44","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int)","position":"org.apache.commons.lang3.LocaleUtils:301","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Class used to define a set of characters for matching purposes.\n */\nstatic final class StringMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * The string to match, as a character array.\n     */\nprivate final char[] chars;\n\n    /** \n     * Constructor that creates a matcher from a String.\n     * \n     * @param str  the string to match, must not be null\n     */\nStringMatcher(final java.lang.String str) {\n        org.apache.commons.lang3.text.StrMatcher.super();\n        char[] = java.lang.String.toCharArray();\n    }\n\n    /** \n     * Returns whether or not the given text matches the stored string.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n        final int int = char[].int;\n        if ((int + int) > int) {\n            return 0;\n        } \n        for (int int = 0 ; int < (char[].int) ; int++ , int++) {\n            if ((char[][int]) != (char[][int])) {\n                return 0;\n            } \n        }\n        return int;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:342","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(float).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:1050","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:4835","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((float[] == null) && (float[] != null)) && ((float[].int) > 0)) || (((float[] == null) && (float[] != null)) && ((float[].int) > 0))) || (((float[] != null) && (float[] != null)) && ((float[].int) != (float[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1354","type":"CtIfImpl"},"status":-2},{"failures":[200,201,202,203,204],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getSplitNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","position":"org.apache.commons.lang3.time.StopWatch:364","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","position":"org.apache.commons.lang3.time.StopWatch:322","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getPackageName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String))","position":"org.apache.commons.lang3.ClassUtils:1088","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:376","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n    throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:284","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.exception.DefaultExceptionContext.addContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:69","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:662","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char == (java.lang.Character.char)) {\n    throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n} ","position":"org.apache.commons.lang3.Conversion:604","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"))","position":"org.apache.commons.lang3.time.DateUtils:1206","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"iTotal":"inputLineLength","value":"offset","iConstant":"inputLineLength"},"name":"add","transplant":{"sourceCode":"int = (int * int) + int","position":"org.apache.commons.lang3.builder.HashCodeBuilder:744","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.WordUtils:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream(byte[])","position":"org.apache.commons.lang3.SerializationUtils:83","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1500","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.lang3.ObjectUtils:934","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:977","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:851","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:3085","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.put(\"\", org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet)","position":"org.apache.commons.lang3.CharSet:83","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3862","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1160","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:163","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:48","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:73","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5464","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1323","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:651","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"status":-2},{"failures":[205],"variableMapping":{"value":"size","operand":"size"},"name":"replace","transplant":{"sourceCode":"this.int += int","position":"org.apache.commons.lang3.mutable.MutableInt:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:1365","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService.shutdown()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:330","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.TimeZone.java.util.TimeZone.getTimeZone(\"GMT\")","position":"org.apache.commons.lang3.time.DateFormatUtils:42","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone)","position":"org.apache.commons.lang3.time.FastDateParser:744","type":"CtInvocationImpl"},"status":0},{"failures":[206],"variableMapping":{"i":"i","chars":"chars"},"name":"add","transplant":{"sourceCode":"if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1370","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    boolean = true;\n} else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1387","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.Range<T>.isBefore(org.apache.commons.lang3.Range<T>.T)","position":"org.apache.commons.lang3.Range:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:600","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:375","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case '2' :\n    return new boolean[]{ false , true , false , false };","position":"org.apache.commons.lang3.Conversion:166","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = 1 << int","position":"org.apache.commons.lang3.Conversion:1163","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (int & 1) == 1 ? int : -(int / 2)","position":"org.apache.commons.lang3.math.Fraction:604","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutorService) == null) {\n    java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor();\n} else {\n    java.util.concurrent.ExecutorService = null;\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:781","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; (int < (float[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(float[][int], float[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:946","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = short[][int]","position":"org.apache.commons.lang3.math.NumberUtils:990","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:736","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 14","position":"org.apache.commons.lang3.Conversion:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2069","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.math.NumberUtils:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(double[][int], double[][int])","position":"org.apache.commons.lang3.builder.CompareToBuilder:907","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":88,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":162,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":87,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":111,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":4,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":24,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":65,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":129,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":122,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":131,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":115,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":123,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":112,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":21,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":92,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":77,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":81,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":61,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":196,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":71,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":198,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":116,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":48,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":120,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":83,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":59,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":96,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":19,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":63,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":135,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":188,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":32,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":106,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":56,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":86,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_char":156,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":45,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":132,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":55,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":70,"org.apache.commons.lang3.ObjectUtilsTest.testMode":178,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":50,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":126,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":176,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":140,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":168,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":43,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":130,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":98,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":128,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":22,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":51,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int":153,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":36,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":58,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":199,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":33,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":17,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":181,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":103,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":39,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":41,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":54,"org.apache.commons.lang3.mutable.MutableIntTest.testCompareToNull":186,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":191,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":105,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":108,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":42,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":124,"org.apache.commons.lang3.text.StrBuilderTest.testEnsureCapacity":165,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":102,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":76,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":192,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":173,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":157,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":177,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":62,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":137,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfCharWithStartIndex":187,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":158,"org.apache.commons.lang3.ArrayUtilsTest.testToString":0,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":161,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":159,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":99,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":113,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":79,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":89,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":118,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":141,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":204,"org.apache.commons.lang3.text.StrBuilderTest.testContains_char":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":31,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":78,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":194,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":67,"org.apache.commons.lang3.text.StrTokenizerTest.test8":152,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":172,"org.apache.commons.lang3.text.StrTokenizerTest.test5":149,"org.apache.commons.lang3.text.StrTokenizerTest.test4":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":68,"org.apache.commons.lang3.text.StrTokenizerTest.test7":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":69,"org.apache.commons.lang3.text.StrTokenizerTest.test6":150,"org.apache.commons.lang3.text.StrTokenizerTest.test1":145,"org.apache.commons.lang3.text.StrTokenizerTest.test3":147,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":174,"org.apache.commons.lang3.text.StrTokenizerTest.test2":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":44,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":144,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":25,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":9,"org.apache.commons.lang3.time.StopWatchTest.testLang315":200,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":121,"org.apache.commons.lang3.mutable.MutableIntTest.testCompareTo":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":72,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":138,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":107,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":29,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":183,"org.apache.commons.lang3.ConversionTest.testByteToHex":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":47,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":93,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":49,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":1,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":201,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":164,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":163,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":97}}]
