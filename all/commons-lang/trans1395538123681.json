[{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1102","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1157","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[])","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:460","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SerializationUtils:102","sourceCode":"throw new org.apache.commons.lang3.SerializationException(\"IOException while reading cloned object data\" , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:553","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:522","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1090","sourceCode":"final int int = 1 << int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:131","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n    java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:540","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:524","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[44,44,45,45,46,47,47,48,49,50,51,52,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:353","sourceCode":"boolean = !(java.lang.Character.isDigit(char))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:391","sourceCode":"boolean = java.lang.Character.java.lang.Character.isWhitespace(char)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"error":"whitespace","c":"ch","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:355","sourceCode":"throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:888","sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:654","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:468","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,3,88,7,8,12,13,89,17,22,90,91,92,93,23,94,95,96,97,24,98,28,29,33,34,99,38,43,100,101,102,103,104,105,106,107,108,109,110],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:584","sourceCode":"if ((java.lang.String == null) && (java.lang.String == null)) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:622","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exp":"str","dec":"str","str":"str","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:210","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[111,112,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:242","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:241","sourceCode":"if (java.lang.String[] != null) {\n    for (final java.lang.String java.lang.String : java.lang.String[]) {\n        if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n            return false;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[115,116,117,118,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:564","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1356","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.mutable.MutableByte:249","failures":[120],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:160","sourceCode":"java.lang.StringBuilder.append(\"---------------------------------\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1443","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"sb"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:724","sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:729","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"trueString","falseString":"str","trueString":"str"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:529","sourceCode":"if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:536","sourceCode":"if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[124,125,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:285","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.TextStrategy:597","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.StringBuilder.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.exception.ExceptionUtils:387","failures":[126,127,128,129],"status":-1,"binaryOperator":"(java.lang.Throwable == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:733","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:484","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"failures":[130,54,131,132,133,134,135,136],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:700","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:148","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, null, java.util.Locale)","type":"CtReturnImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,137,138,102,103,104,105,106,107,108,109,110],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:929","failures":[139,140,141,142,125,143,144,145,146,147,148,149,150,151,152,153,47,51,56,57,62],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1433","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n            return true;\n        } \n    }\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:103","sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeLiteral<?>.java.lang.reflect.Type)","type":"CtReturnImpl"},"failures":[154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"value","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4688","sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:943","sourceCode":"throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())))","type":"CtThrowImpl"},"failures":[155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharRange:190","failures":[156],"status":-1,"binaryOperator":"((org.apache.commons.lang3.CharRange.char) < (char))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:742","sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","type":"CtThrowImpl"},"failures":[157,158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:485","sourceCode":"final char char = java.lang.String.charAt(((java.lang.String.length()) - 1))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:618","sourceCode":"final char char = java.lang.String.charAt(4)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2347","sourceCode":"final int int = (int - int) + 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:778","sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)","type":"CtLocalVariableImpl"},"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"strLen":"pos","size":"len"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:446","sourceCode":"if (boolean[][int]) {\n    return 'e';\n} else {\n    return '6';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:537","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'b';\n    } else {\n        return 'a';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '9';\n    } else {\n        return '8';\n    }\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"position":"org.apache.commons.lang3.math.NumberUtils:1400","failures":[209],"status":-1,"binaryOperator":"((char[][int]) >= '0')","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:1297","inlineConstant":"int int = 0","failures":[210,211],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:460","sourceCode":"this.java.lang.String[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:643","sourceCode":"this.java.lang.String[] = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"tokens":"excludeFieldNames"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5419","sourceCode":"return java.lang.String.concat(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1858","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"str":"fieldNameValueSeparator","padStr":"fieldNameValueSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:551","sourceCode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:528","sourceCode":"org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"causeFrames":"trace","wrapperFrames":"trace"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1203","sourceCode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1182","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.int;\n        int = java.util.Calendar.int;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.get(java.util.Calendar.int);\n        int = int - 1;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n        int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n        break;\n}","type":"CtSwitchImpl"},"failures":[212],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:685","sourceCode":"return false","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":111,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":48,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":163,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":99,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":154,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":109,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":59,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":167,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":100,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":144,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":165,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":67,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":190,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":194,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":200,"org.apache.commons.lang3.ConversionTest.testIntToHex":121,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":133,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":98,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":113,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":92,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":15,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":203,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":202,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":201,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":118,"org.apache.commons.lang3.ConversionTest.testLongToByteArray":211,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":66,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":27,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":93,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":160,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":161,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":147,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":146,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":150,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":105,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":125,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":153,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":129,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_noMatch":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":196,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":197,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":61,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":191,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":195,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":75,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":137,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":79,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":110,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":51,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":2,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":47,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":13,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":32,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":131,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":49,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":36,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":42,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":57,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":116,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":60,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":6,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":127,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":114,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":138,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":199,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":168,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":141,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":18,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":151,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":88,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":4,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":205,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":45,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":68,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":169,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":78,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":1,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":108,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":134,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":73,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":19,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":50,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":155,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":143,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":14,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":65,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":22,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":55,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":7,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":136,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":179,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":85,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":178,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":210,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":175,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":174,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":177,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":148,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":173,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":139,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":76,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":43,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":69,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":11,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":97,"org.apache.commons.lang3.text.StrTokenizerTest.test1":182,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":206,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":90,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":207,"org.apache.commons.lang3.text.StrTokenizerTest.test3":184,"org.apache.commons.lang3.text.StrTokenizerTest.test2":183,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":12,"org.apache.commons.lang3.math.FractionTest.testSubtract":158,"org.apache.commons.lang3.text.StrTokenizerTest.test8":189,"org.apache.commons.lang3.math.FractionTest.testAdd":157,"org.apache.commons.lang3.text.StrTokenizerTest.test5":186,"org.apache.commons.lang3.text.StrTokenizerTest.test4":185,"org.apache.commons.lang3.text.StrTokenizerTest.test7":188,"org.apache.commons.lang3.text.StrTokenizerTest.test6":187,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":5,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":104,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":126,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":26,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":29,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":35,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":82,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":128,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":120,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":171,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":117,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":112,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":172,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":24,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":181,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":164,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":142,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":193,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":63,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":8,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":107,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":152,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":62,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":213}}]
