[{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:650","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:646","sourceCode":"int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:895","failures":[0,1],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:732","sourceCode":"int = 1","type":"CtAssignmentImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1807","sourceCode":"final int int = ((this.int) - int) + int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:757","sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(org.apache.commons.lang3.math.Fraction.int, int)","type":"CtLocalVariableImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"insertLen":"denominator","removeLen":"numerator","size":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1013","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1078","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:500","sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.getPattern()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1577","sourceCode":"boolean boolean","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:301","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:244","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:132","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1190","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:977","sourceCode":"if (((org.apache.commons.lang3.time.DateUtils.int) == int) || (int < 500)) {\n    long = long - int;\n} ","type":"CtIfImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"millisecs","nInts":"org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:117","sourceCode":"return 14","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:829","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"true\", \"false\")","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:311","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:326","sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.java.lang.Double.parseDouble(java.lang.String))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:346","sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","type":"CtIfImpl"},"failures":[48,49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:471","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:461","sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    int += java.lang.String.length();\n    break;\n} ","type":"CtIfImpl"},"failures":[51,52,53,54,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pfxLen":"pfxLen"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:584","sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:494","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:551","sourceCode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:445","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"causeFrames":"list","wrapperFrames":"list"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:124","sourceCode":"java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:137","sourceCode":"if ((java.util.regex.Matcher.regionStart()) != (java.util.regex.Matcher.regionEnd())) {\n    throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())));\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,7,87,88,89,90,91,92,93,94,95,96,97,98,99,8,100,19,20,21,22,23,24,25,26,27,28,29,30,101,31,32,33,34,35,36,37,38,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,9,10,130,11,12,13,14,131,132,133,134,135,136,137,15,138,16,139,140,141,142,143,144,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1713","failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"status":-1,"binaryOperator":"((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long)) / long","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2682","sourceCode":"if ((char[][int]) != (char[][int])) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1416","sourceCode":"if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n    return boolean;\n} ","type":"CtIfImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherBuf":"chars","thisBuf":"chars","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:243","sourceCode":"java.lang.StringBuilder.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1810","sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" super \"), \" & \", java.lang.reflect.Type[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buf":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:221","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:217","sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","type":"CtIfImpl"},"failures":[177,178,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:333","sourceCode":"boolean = !boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:981","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inLiteral":"done"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:513","sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:662","sourceCode":"java.lang.StringBuffer.append(long)","type":"CtInvocationImpl"},"failures":[180,181,182,183,184,185,186,186,187,188,189,190,191,192,193,193,194,195,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:93","sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"sizeEndText"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:910","sourceCode":"return false","type":"CtReturnImpl"},"failures":[255,256,257,258,259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:186","failures":[260,261,262,50],"status":-1,"binaryOperator":"(int * ((long)(int)))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:530","sourceCode":"if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:527","sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","type":"CtSwitchImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exp":"numeric","dec":"dec","numeric":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","sourceCode":"byte += byte","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1261","sourceCode":"byte = byte","type":"CtAssignmentImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"a","operand":"c"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:210","sourceCode":"return true","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.event.EventUtils:51","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1181","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[265,266],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1152","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" 9\"), \"4.0\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:188","sourceCode":"if ((long < (java.lang.Integer.int)) || (long > (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\");\n} ","type":"CtIfImpl"},"failures":[262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:643","sourceCode":"return '6'","type":"CtReturnImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1588","sourceCode":"int += 5","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1191","sourceCode":"int = java.util.Calendar.get(java.util.Calendar.int)","type":"CtAssignmentImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"size":"startCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:474","sourceCode":"if (int == 1) {\n    return this;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:515","sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , int)","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"gcd":"numerator"}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":147,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":172,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":225,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":201,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":268,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":227,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":108,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":232,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":154,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":118,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":126,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":131,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":251,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":181,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":69,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":210,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":212,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":238,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":40,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":203,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":44,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":185,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":244,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":21,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":136,"org.apache.commons.lang3.math.FractionTest.testGets":261,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":84,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":248,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":187,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":106,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":94,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":26,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":55,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":235,"org.apache.commons.lang3.math.FractionTest.testPow":0,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":20,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":107,"org.apache.commons.lang3.math.FractionTest.testCompareTo":1,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":98,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":90,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":242,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":157,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":72,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":166,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":247,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":95,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":208,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":205,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":79,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":215,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":45,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":145,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":49,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":151,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":11,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":12,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":198,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":160,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":224,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":240,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":184,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":192,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":29,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":52,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":182,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":135,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":121,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":32,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_boolean":46,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":132,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":230,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":6,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":226,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":237,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":73,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":217,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":197,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":245,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":159,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":228,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":219,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":188,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":125,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":236,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":158,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":239,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":111,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":193,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":65,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":144,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":141,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":164,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":265,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":124,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":255,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":190,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":58,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":207,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":34,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":221,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":62,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":263,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":258,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":33,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":22,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":189,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":267,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":220,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":99,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":113,"org.apache.commons.lang3.time.DateUtilsTest.testRound":42,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":168,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":195,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":28,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":229,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":253,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":199,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":142,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":75,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":19,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":8,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":102,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":254,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":180,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":89,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":233,"org.apache.commons.lang3.math.FractionTest.testInvert":57,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":85,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":25,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":115,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":149,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":163,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":171,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":262,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":234,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":176,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":134,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":66,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":38,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":123,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":96,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":82,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":214,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":269,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":88,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":87,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":10,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":223,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":204,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":231,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":30,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":133,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":97,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":127,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":70,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":143,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":86,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":152,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":174,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":196,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":71,"org.apache.commons.lang3.math.FractionTest.testSubtract":4,"org.apache.commons.lang3.math.FractionTest.testAdd":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":191,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":91,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":155,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":63,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":130,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":170,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":264,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":105,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":109,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":117,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":218,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":246,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":41,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":48,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":59,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":175,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":259,"org.apache.commons.lang3.math.FractionTest.testMultiply":179,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":250,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":114,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":194,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":15,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":206,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":110,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":266,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":162,"org.apache.commons.lang3.math.FractionTest.testDivide":178,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":101,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":140,"org.apache.commons.lang3.math.FractionTest.testConversions":260,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":67,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":256,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":222,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":252,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":39,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":241,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":270}}]
