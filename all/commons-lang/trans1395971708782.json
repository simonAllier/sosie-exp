[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar, java.util.Calendar, int)) == 0","position":"org.apache.commons.lang3.time.DateUtils:1747","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1690","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:302","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","position":"org.apache.commons.lang3.time.StopWatch:282","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:966","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(java.lang.Object, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:768","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DurationFormatUtils:515","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.Conversion:1468","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:171","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.add(int[][0], 1)","position":"org.apache.commons.lang3.time.DateUtils:1038","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.builder.ToStringStyle:410","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (java.lang.String.length()) - (int / 2)","position":"org.apache.commons.lang3.StringUtils:6462","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:303","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:759","type":"CtInvocationImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:651","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)).getBounds()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:385","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:896","type":"CtReturnImpl"},"status":-2},{"failures":[2],"variableMapping":{"array":"array","tmp":"min","i":"i"},"name":"add","transplant":{"sourceCode":"byte[][int] = byte","position":"org.apache.commons.lang3.ArrayUtils:1618","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte = byte[][int]","position":"org.apache.commons.lang3.math.NumberUtils:865","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"(double)++","position":"org.apache.commons.lang3.mutable.MutableDouble:137","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, int)","position":"org.apache.commons.lang3.builder.ToStringBuilder:756","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:959","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:832","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:975","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (int[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2177","type":"CtIfImpl"},"status":-2},{"failures":[3],"variableMapping":{"size":"found"},"name":"add","transplant":{"sourceCode":"int += 4","position":"org.apache.commons.lang3.text.StrBuilder:1582","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], java.lang.Byte.byteValue(), int)","position":"org.apache.commons.lang3.ArrayUtils:5374","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"increase":"ignoredLen","greater":"ignoredLen"},"name":"add","transplant":{"sourceCode":"int += 3 * int","position":"org.apache.commons.lang3.StringUtils:4758","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrTokenizer:795","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isArray())) {\n    boolean = java.lang.Object.equals(java.lang.Object);\n} else if ((java.lang.Object.getClass()) != (java.lang.Object.getClass())) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n} else if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:463","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 11 :\n    return 'd';","position":"org.apache.commons.lang3.Conversion:652","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int++] = 'f'","position":"org.apache.commons.lang3.text.StrBuilder:1586","type":"CtAssignmentImpl"},"status":-2},{"failures":[53],"variableMapping":{"superEquals":"lastMatch","isEquals":"lastMatch"},"name":"replace","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:437","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:3117","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:3714","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1622","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"i"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt(int++)","position":"org.apache.commons.lang3.text.StrBuilder:2866","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == (char[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2387","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.reflect.Type[].int) == 0 ? new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object } : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])","position":"org.apache.commons.lang3.reflect.TypeUtils:1182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > 0) {\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:794","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int)","position":"org.apache.commons.lang3.ArrayUtils:3885","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((java.lang.CharSequence.length()) - int)","name":"math","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:40","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder) {\n    java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n    if ((java.util.Set<org.apache.commons.lang3.builder.IDKey> != null) && (java.util.Set<org.apache.commons.lang3.builder.IDKey>.isEmpty())) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n    } \n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:491","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Inner class to allow StrBuilder to operate as a tokenizer.\n */\nclass StrBuilderTokenizer extends org.apache.commons.lang3.text.StrTokenizer {\n    /** \n     * Default constructor.\n     */\nStrBuilderTokenizer() {\n        org.apache.commons.lang3.text.StrTokenizer.super();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    protected java.util.List<java.lang.String> tokenize(final char[] chars, final int offset, final int count) {\n        if (char[] == null) {\n            return org.apache.commons.lang3.text.StrTokenizer.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n        } \n        return org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], int, int);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.String getContent() {\n        final java.lang.String java.lang.String = org.apache.commons.lang3.text.StrTokenizer.getContent();\n        if (java.lang.String == null) {\n            return org.apache.commons.lang3.text.StrBuilder.this.toString();\n        } \n        return java.lang.String;\n    }\n}","position":"org.apache.commons.lang3.text.StrBuilder:2808","type":"CtClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:186","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(char[][0]))) + \"\\\\u\") + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(char[][1]))","position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:559","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte","position":"org.apache.commons.lang3.mutable.MutableByte:192","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"n"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.mutable.MutableInt:118","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:6777","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.Character.(java.lang.Character.isLetterOrDigit(java.lang.CharSequence.charAt(int))) == false) && ((java.lang.CharSequence.charAt(int)) != ' ')) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5956","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ClassCastException((\"Could not round \" + java.lang.Object))","position":"org.apache.commons.lang3.time.DateUtils:783","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"size"},"name":"add","transplant":{"sourceCode":"return (int) == 0","position":"org.apache.commons.lang3.text.StrBuilder:278","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (this.int) ; int++) {\n    if ((char[][int]) == char) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharSet.contains(char)) {\n    int++;\n} ","position":"org.apache.commons.lang3.CharSetUtils:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.NoSuchFieldException java.lang.NoSuchFieldException","position":"org.apache.commons.lang3.reflect.FieldUtils:697","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.text.ParsePosition.getIndex()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:482","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:475","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:451","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion","position":"org.apache.commons.lang3.JavaVersion:147","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'm' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:226","type":"CtCaseImpl"},"status":-2},{"failures":[54,55,56,57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) && (java.lang.String == null)) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"obj2":"org.apache.commons.lang3.time.DurationFormatUtils.y","obj1":"org.apache.commons.lang3.time.DurationFormatUtils.H"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case '\\'' :\n        if (boolean) {\n            java.lang.StringBuilder = null;\n            boolean = false;\n        } else {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n            boolean = true;\n        }\n        break;\n    case 'y' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'M' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'd' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'H' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'm' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 's' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'S' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    default :\n        if (java.lang.StringBuilder == null) {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n        } \n        java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:495","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n    org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n}","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:523","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((E[].int) <= (java.lang.Long.int)), org.apache.commons.lang3.EnumUtils.java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(E[].int), java.lang.Class<E>.getSimpleName(), java.lang.Integer.java.lang.Integer.valueOf(java.lang.Long.int))","position":"org.apache.commons.lang3.EnumUtils:291","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:295","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    double = double[][int];\n    double[][int] = double[][int];\n    double[][int] = double;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1685","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new boolean[]{ false , true , true , true }","position":"org.apache.commons.lang3.Conversion:237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","position":"org.apache.commons.lang3.text.StrTokenizer:182","type":"CtReturnImpl"},"status":-2},{"failures":[58,59],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1120","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1123","type":"CtForImpl"},"status":-1},{"failures":[60],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:260","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:393","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"offset":"length"},"name":"add","transplant":{"sourceCode":"if (int >= 12) {\n    int -= 12;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1070","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    java.lang.Character[][int] = java.lang.Character.java.lang.Character.valueOf(char[][int]);\n}","position":"org.apache.commons.lang3.ArrayUtils:3008","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:824","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"long long = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:133","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.add(new org.apache.commons.lang3.tuple.ImmutablePair<java.lang.String, java.lang.Object>(java.lang.String , java.lang.Object))","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1183","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((byte[] == null) || (byte[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:801","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 60","position":"org.apache.commons.lang3.time.DurationFormatUtils:307","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1620","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((long < long) || (long > long)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long));\n} ","position":"org.apache.commons.lang3.Validate:945","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.Comparable<T>.compareTo(T)) < 0) || ((java.lang.Comparable<T>.compareTo(T)) > 0)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, java.lang.Comparable<T>, T, T));\n} ","position":"org.apache.commons.lang3.Validate:899","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3071","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.CharSetUtils:206","type":"CtIfImpl"},"status":-2},{"failures":[61],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableLong:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(java.lang.Object)), ((java.lang.annotation.Annotation[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:289","type":"CtReturnImpl"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n        boolean = false;\n        break;\n    } \n}","position":"org.apache.commons.lang3.builder.ToStringStyle:413","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:225","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"codepoint":"strOffset","below":"strOffset","above":"strOffset"},"name":"replace","transplant":{"sourceCode":"if ((int < int) || (int > int)) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, boolean, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:7320","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:1904","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1760","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2780","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.startsWith(java.lang.String)) && (java.lang.String.startsWith(java.lang.String))","position":"org.apache.commons.lang3.SystemUtils:1450","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new java.lang.String(char[] , ((int) - int) , int)","position":"org.apache.commons.lang3.text.StrBuilder:2205","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(char[], char, 0, char[].int)","position":"org.apache.commons.lang3.StringUtils:3467","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"result"},"name":"replace","transplant":{"sourceCode":"if (byte[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.RandomUtils:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"source":"buf"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:553","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:479","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer)","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:85","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:418","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ true , true , true , true }","position":"org.apache.commons.lang3.Conversion:259","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5643","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((float[].int) != (float[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:867","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:2008","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 14","position":"org.apache.commons.lang3.Conversion:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.StringUtils:6546","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:4804","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1998","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:6177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"Cannot locate declared field %s.%s\", java.lang.Class<?>, java.lang.String)","position":"org.apache.commons.lang3.reflect.FieldUtils:471","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY","array":"array","length":"length"},"name":"add","transplant":{"sourceCode":"if ((this.int) == 0) {\n    return this.org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3480","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    return null;\n} else if ((boolean[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3478","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:499","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1151","type":"CtInvocationImpl"},"status":-2},{"failures":[97,98,99,100,101,102,103],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:5412","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.CharRange:244","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char < 128) {\n    return org.apache.commons.lang3.CharUtils.java.lang.String[][char];\n} ","position":"org.apache.commons.lang3.CharUtils:308","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class that acts as a compound key for time zone names.<\/p>\n */\nprivate static class TimeZoneDisplayKey {\n    private final java.util.TimeZone mTimeZone;\n\n    private final int mStyle;\n\n    private final java.util.Locale mLocale;\n\n    /** \n     * Constructs an instance of {@code TimeZoneDisplayKey} with the specified properties.\n     * \n     * @param timeZone the time zone\n     * @param daylight adjust the style for daylight saving time if {@code true}\n     * @param style the timezone style\n     * @param locale the timezone locale\n     */\nTimeZoneDisplayKey(final java.util.TimeZone timeZone ,final boolean daylight ,final int style ,final java.util.Locale locale) {\n        java.util.TimeZone = java.util.TimeZone;\n        if (boolean) {\n            int = int | -2147483648;\n        } else {\n            int = int;\n        }\n        java.util.Locale = java.util.Locale;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        return ((((int) * 31) + (java.util.Locale.hashCode())) * 31) + (java.util.TimeZone.hashCode());\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (this == java.lang.Object) {\n            return true;\n        } \n        if (java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n            final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(java.lang.Object));\n            return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale));\n        } \n        return false;\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1222","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(int[], java.lang.Integer.intValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5551","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.lang.Class<?> != null) && (!(java.lang.Class<?>.equals(java.lang.Class<?>)))) {\n    if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n        float += 0.25F;\n        break;\n    } \n    float++;\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","position":"org.apache.commons.lang3.reflect.MemberUtils:137","type":"CtWhileImpl"},"status":-2},{"failures":[104,105,88],"binaryOperator":"int > 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final short short : short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(short);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:897","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Thread.java.lang.Thread.currentThread()","position":"org.apache.commons.lang3.event.EventListenerSupport:122","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:200","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = ((org.apache.commons.lang3.text.StrTokenizer)(java.lang.Object.clone()))","position":"org.apache.commons.lang3.text.StrTokenizer:1092","type":"CtLocalVariableImpl"},"status":0},{"failures":[106,107,108,109,110,111,112,113,114],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:554","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService().shutdownNow();\n} ","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:257","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    final char char = char[][int];\n    if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n        boolean = true;\n    } else if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n        boolean = false;\n    } \n}","position":"org.apache.commons.lang3.text.WordUtils:416","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((java.lang.String)(java.lang.CharSequence)).lastIndexOf(int, int)","position":"org.apache.commons.lang3.CharSequenceUtils:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1124","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\")","position":"org.apache.commons.lang3.SerializationUtils:148","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = java.lang.Math.java.lang.Math.max(0, (int - int)) ; (!boolean) && (int < java.lang.Math.(java.lang.Math.min((int + int), java.lang.CharSequence.length()))) ; int++) {\n    if ((java.lang.StringBuilder.charAt(int)) == char) {\n        boolean = true;\n        java.lang.StringBuilder.append(char);\n        java.lang.StringBuilder.setCharAt(int, '*');\n    } \n}","position":"org.apache.commons.lang3.StringUtils:7096","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:915","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:371","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (byte >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1518","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"return java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:796","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:3345","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.EqualsBuilder:336","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.util.concurrent.ConcurrentHashMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>(7)","position":"org.apache.commons.lang3.time.FormatCache:42","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    try {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class.java.lang.Class.forName(java.lang.String));\n    } catch (final java.lang.Exception java.lang.Exception) {\n        java.util.List<java.lang.Class<?>>.add(null);\n    }\n}","position":"org.apache.commons.lang3.ClassUtils:402","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int[] == null) || ((int[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:553","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char)","position":"org.apache.commons.lang3.text.WordUtils:469","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"clss":"clss","this":"this"},"name":"add","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<?>, 1)","position":"org.apache.commons.lang3.ArrayUtils:4564","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, (int + 1))","position":"org.apache.commons.lang3.ArrayUtils:4572","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"list":"list"},"name":"replace","transplant":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2541","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.StringUtils:2977","type":"CtReturnImpl"},"status":-2},{"failures":[115],"variableMapping":{"toProperString":"duration"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"0\"","position":"org.apache.commons.lang3.math.Fraction:933","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:204","type":"CtAssignmentImpl"},"status":-1},{"failures":[116],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 'a'","position":"org.apache.commons.lang3.Conversion:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '4'","position":"org.apache.commons.lang3.Conversion:635","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"int - int","name":"math","position":"org.apache.commons.lang3.StringUtils:3665","type":"mutation","status":0},{"failures":[],"variableMapping":{"length":"java.lang.reflect.Modifier.FINAL","index":"java.lang.reflect.Modifier.FINAL"},"name":"add","transplant":{"sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Field.setInt(java.lang.reflect.Field, ((java.lang.reflect.Field.getModifiers()) & (~(java.lang.reflect.Modifier.int))));\n} finally {\n    if (boolean) {\n        java.lang.reflect.Field.setAccessible(false);\n    } \n}","position":"org.apache.commons.lang3.reflect.FieldUtils:689","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"replace","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character[] == null) || ((java.lang.Character[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:753","type":"CtIfImpl"},"status":-2},{"failures":[117],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match either specified value\")","position":"org.apache.commons.lang3.BooleanUtils:740","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:284","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Double.java.lang.Double.valueOf(org.apache.commons.lang3.mutable.MutableDouble.doubleValue())","position":"org.apache.commons.lang3.mutable.MutableDouble:241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Double.valueOf(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:675","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.NoSuchFieldException java.lang.NoSuchFieldException","position":"org.apache.commons.lang3.reflect.FieldUtils:697","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2691","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(T , org.apache.commons.lang3.builder.ToStringStyle , null , java.lang.Class<? super T> , boolean , boolean).toString()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:287","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle","position":"org.apache.commons.lang3.builder.ToStringBuilder:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String))","position":"org.apache.commons.lang3.ClassUtils:825","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int > 0) {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf('/');\n    if (int < 0) {\n        throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n    } else {\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n        return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int);\n    }\n} ","position":"org.apache.commons.lang3.math.Fraction:331","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","position":"org.apache.commons.lang3.math.Fraction:346","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:729","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Double.java.lang.Double.parseDouble(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return double;\n}","position":"org.apache.commons.lang3.math.NumberUtils:277","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Character[].int) ; int++) {\n    char[][int] = java.lang.Character[][int].charValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:2964","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, (int + 1), (int - int))","position":"org.apache.commons.lang3.ArrayUtils:4576","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":84,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":35,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":52,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":0,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":94,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":39,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":104,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArrayHiddenByObject":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":50,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":82,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":11,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":112,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":48,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectBuild":8,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":74,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":33,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":110,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":64,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":71,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":36,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":92,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":59,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":15,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":47,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":73,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":107,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":81,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":98,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":16,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":93,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":72,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":45,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":23,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte":2,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":109,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":105,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":88,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":62,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":10,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_StringInt":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":78,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":53,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":9,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":108,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":70,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":83,"org.apache.commons.lang3.text.StrBuilderTest.testGetChars":60,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":96,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":111,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":12,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":61,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":30,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":31,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":97,"org.apache.commons.lang3.builder.EqualsBuilderTest.testSuper":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":77,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":49,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":21,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuildWrappedFactoryNull":117,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":40,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":115,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":90,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":1,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":69,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":41,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":51,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":116,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":76,"org.apache.commons.lang3.CharSetTest.testContains_Char":102,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArrayHiddenByObject":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":106,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":67,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":65,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":28,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArrayHiddenByObject":20,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":113,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":95,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":68,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObject":32,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":42,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":80,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":56,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":89}}]
