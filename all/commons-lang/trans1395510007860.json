[{"position":"org.apache.commons.lang3.builder.ToStringStyle:1275","failures":[0],"status":-1,"binaryOperator":"double[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:521","sourceCode":"if (boolean[][int]) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:612","sourceCode":"if ((byte[] == null) || (int == 0)) {\n    return byte[];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1289","sourceCode":"if (0 == int) {\n    return byte[];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY":"dst","length":"nBytes","array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:177","sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be negative\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1063","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:102","sourceCode":"if (int < 3) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:490","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:335","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isEquals":"uncapitalizeNext"}},{"position":"org.apache.commons.lang3.math.Fraction:640","failures":[5,6,7],"status":-1,"binaryOperator":"((long)(int)) * ((long)(int))","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.CharUtils:498","failures":[8,9,10],"status":-1,"binaryOperator":"(char <= 'z')","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:216","sourceCode":"return java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:131","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, null)","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"duration":"pattern"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:760","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"workArea":"workArea","trimStart":"trimStart"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1019","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"FreeBSD\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1229","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.1\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.AtomicInitializer:84","sourceCode":"if (T == null) {\n    T = org.apache.commons.lang3.concurrent.AtomicInitializer<T>.initialize();\n    if (!(java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n        T = java.util.concurrent.atomic.AtomicReference<T>.get();\n    } \n} ","type":"CtIfImpl"},"failures":[20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"object":"result"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:616","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:402","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, float[], null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:637","sourceCode":"for (int int = (java.lang.String.length()) - 1 ; int >= 0 ; int--) {\n    if ((java.lang.String.charAt(int)) != '0') {\n        return false;\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:107","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1048","sourceCode":"boolean ^= boolean","type":"CtOperatorAssignmentImpl"},"failures":[25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:123","sourceCode":"throw new java.lang.IllegalArgumentException(\"Callable must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:861","sourceCode":"throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object))","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:124","sourceCode":"return true","type":"CtReturnImpl"},"failures":[30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:957","sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","type":"CtIfImpl"},"failures":[29,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:481","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:134","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"file.separator\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.math.FractionTest.testMultiply":7,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":18,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":28,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaLower_char":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":19,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":11,"org.apache.commons.lang3.concurrent.AtomicInitializerTest.testGet":20,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":31,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":4,"org.apache.commons.lang3.math.FractionTest.testAdd":5,"org.apache.commons.lang3.math.FractionTest.testPow":6,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":24,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":3,"org.apache.commons.lang3.concurrent.AtomicInitializerTest.testGetConcurrent":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":16,"org.apache.commons.lang3.concurrent.AtomicInitializerTest.testGetMultipleTimes":22,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":14,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":30,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":32,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":26,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":8,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":17,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":29,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":2,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":23}}]
