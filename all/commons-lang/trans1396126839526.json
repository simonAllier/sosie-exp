[{"failures":[0,1,2],"variableMapping":{"input":"cs","start":"index1"},"name":"replace","transplant":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:85","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char char = java.lang.CharSequence.charAt(int++)","position":"org.apache.commons.lang3.CharSequenceUtils:197","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"this","this":"this"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)) {\n    throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n} ","position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")","position":"org.apache.commons.lang3.math.Fraction:253","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.char[] = null","position":"org.apache.commons.lang3.text.StrTokenizer:477","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char[])","position":"org.apache.commons.lang3.text.StrBuilder:981","type":"CtInvocationImpl"},"status":-2},{"failures":[3],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int--) > 0) {\n    java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n}","position":"org.apache.commons.lang3.ObjectUtils:618","type":"CtWhileImpl"},"status":-1},{"failures":[4,5,6,7,8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:952","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 4","position":"org.apache.commons.lang3.CharSet:185","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1439","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (float[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3907","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.EnumUtils:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.time.DurationFormatUtils:605","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"status":-2},{"failures":[9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"long = long - (long * (org.apache.commons.lang3.time.DateUtils.long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:142","type":"CtAssignmentImpl"},"status":-1},{"failures":[12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1971","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.tuple.Pair:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= int ; int++) {\n    if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, int)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1481","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Thread.UncaughtExceptionHandler == null) {\n    throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:346","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float[][int])) {\n    return java.lang.Float.float;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1063","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.StrMatcher.NoMatcher()","position":"org.apache.commons.lang3.text.StrMatcher:71","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.lang3.builder.ToStringStyle:412","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(java.lang.Class<?>, java.lang.reflect.ParameterizedType)","position":"org.apache.commons.lang3.reflect.TypeUtils:985","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"java.lang.Double.NaN"},"name":"add","transplant":{"sourceCode":"return this.java.lang.Double.double","position":"org.apache.commons.lang3.mutable.MutableDouble:231","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    if (java.lang.Double.java.lang.Double.isNaN(double[][int])) {\n        return java.lang.Double.double;\n    } \n    if ((double[][int]) < double) {\n        double = double[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:887","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence((int + int), ((int + int) + 4))","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:50","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return boolean[];\n} ","position":"org.apache.commons.lang3.Conversion:1584","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7037","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","position":"org.apache.commons.lang3.text.StrSubstitutor:1149","type":"CtReturnImpl"},"status":-2},{"failures":[13,14,15],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 5","position":"org.apache.commons.lang3.time.FastDatePrinter:1187","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? 1 : 0","position":"org.apache.commons.lang3.text.StrSubstitutor:878","type":"CtReturnImpl"},"status":-1},{"failures":[16,17],"variableMapping":{"str":"str","ignoreCase":"ignoreCase","this":"this","suffix":"p"},"name":"add","transplant":{"sourceCode":"if (((java.lang.String == null) || (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) || (org.apache.commons.lang3.StringUtils.endsWith(java.lang.String, java.lang.CharSequence, boolean))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:7413","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWith(java.lang.String, java.lang.CharSequence, boolean)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:7519","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(int[][int])","position":"org.apache.commons.lang3.StringUtils:3674","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence, java.lang.CharSequence, 0)","position":"org.apache.commons.lang3.StringUtils:1074","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"toClass":"toClass","bound":"bound","subtypeVarAssigns":"subtypeVarAssigns","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:816","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:826","type":"CtIfImpl"},"status":-2},{"failures":[18],"binaryOperator":"int > int","name":"negateConditional","position":"org.apache.commons.lang3.StringUtils:3671","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:824","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:745","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"strLen":"size","size":"size"},"name":"add","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5419","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"status":-2},{"failures":[19],"variableMapping":{"str":"arrayStart"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","position":"org.apache.commons.lang3.math.Fraction:320","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.EqualsBuilder.REGISTRY":"org.apache.commons.lang3.builder.HashCodeBuilder.REGISTRY"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove()","position":"org.apache.commons.lang3.builder.EqualsBuilder:204","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder) {\n    java.util.Set<org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry();\n    if ((java.util.Set<org.apache.commons.lang3.builder.IDKey> != null) && (java.util.Set<org.apache.commons.lang3.builder.IDKey>.isEmpty())) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n    } \n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:491","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Integer.java.lang.Integer.toHexString(int).toUpperCase(java.util.Locale.java.util.Locale)","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(null);\n    return this;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:547","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1151","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.time.FastDatePrinter:487","type":"CtReturnImpl"},"status":-2},{"failures":[20,21,22,23,24,25,26],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int)","position":"org.apache.commons.lang3.math.Fraction:229","type":"CtLocalVariableImpl"},"status":-1},{"failures":[27,28,29,30,31],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getLeft())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getMiddle()))) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getRight()))","position":"org.apache.commons.lang3.tuple.Triple:116","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',')","position":"org.apache.commons.lang3.tuple.Triple:142","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4256","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:645","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"c","tokenStart":"tokenStart","list":"list","newTokenStart":"tokenStart"},"name":"add","transplant":{"sourceCode":"if (int != int) {\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:3239","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)))","position":"org.apache.commons.lang3.StringUtils:3240","type":"CtInvocationImpl"},"status":0},{"failures":[32,33,34,35,36,37,38],"name":"returnValue","position":"org.apache.commons.lang3.StringUtils:6145","type":"mutation","return":"return true","status":-1},{"failures":[39],"variableMapping":{"str":"str","parsePatterns":"parsePatterns","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, null, java.lang.String[])","position":"org.apache.commons.lang3.time.DateUtils:268","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDateStrictly(java.lang.String, null, java.lang.String[])","position":"org.apache.commons.lang3.time.DateUtils:311","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"((int - 1) * 4)","name":"removeConditional","position":"org.apache.commons.lang3.Conversion:1431","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1040","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateFormat:564","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int & (int)","position":"org.apache.commons.lang3.BitField:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>(int[].int)","position":"org.apache.commons.lang3.ArrayUtils:5537","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:280","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(java.lang.Object))","position":"org.apache.commons.lang3.ObjectUtils:639","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Locale == null) {\n    java.util.Locale = java.util.Locale.java.util.Locale.getDefault();\n} ","position":"org.apache.commons.lang3.time.FormatCache:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.text.WordUtils:358","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.Object.toString()","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:152","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date(long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:284","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.divide(java.math.BigInteger.java.math.BigInteger.valueOf(int))","position":"org.apache.commons.lang3.math.Fraction:776","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long[][0]","position":"org.apache.commons.lang3.math.NumberUtils:941","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:357","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:709","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:352","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1190","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n        if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n            continue outer;\n        } \n    } else {\n        continue outer;\n    }\n} ","position":"org.apache.commons.lang3.StringUtils:1721","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:426","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:466","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.text.StrBuilder:1686","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.Conversion:1116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:500","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final long long = (65535L & (short[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:733","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    if (boolean) {\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 16);\n    } else {\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 10);\n    }\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return 0;\n}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:117","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.Range:458","type":"CtAssignmentImpl"},"status":-2},{"failures":[40],"binaryOperator":"java.lang.String == null","name":"removeConditional","position":"org.apache.commons.lang3.StringUtils:4941","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return char[].clone()","position":"org.apache.commons.lang3.ArrayUtils:390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:2982","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:1326","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())))","position":"org.apache.commons.lang3.time.DateUtils:944","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.text.Format java.text.Format = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:170","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(\"at\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:649","type":"CtLocalVariableImpl"},"status":-2},{"failures":[41,42],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:281","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:203","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4002","type":"CtReturnImpl"},"status":-2},{"failures":[43,44],"variableMapping":{"nBools":"i","srcPos":"i"},"name":"replace","transplant":{"sourceCode":"assert ((int - 1) * 1) < (16 - int)","position":"org.apache.commons.lang3.Conversion:1626","type":"CtAssertImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((boolean[][int]) || ((java.lang.String[][int]) == null)) || (java.lang.String[][int].isEmpty())) || ((java.lang.String[][int]) == null)) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:4723","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) {\n    switch (char[][java.text.ParsePosition.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int++;\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            final int int = java.text.ParsePosition.getIndex();\n            final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n            java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(int);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            java.text.Format java.text.Format = null;\n            java.lang.String java.lang.String = null;\n            if ((char[][java.text.ParsePosition.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                java.lang.String = org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n                java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String);\n                if (java.text.Format == null) {\n                    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n                } \n            } \n            java.util.ArrayList<java.text.Format>.add(java.text.Format);\n            java.util.ArrayList<java.lang.String>.add((java.text.Format == null ? null : java.lang.String));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.lang.String>.size()) == int));\n            if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n            } \n        default :\n            java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n    }\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:158","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vendor\")","position":"org.apache.commons.lang3.SystemUtils:485","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:540","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this)","position":"org.apache.commons.lang3.reflect.TypeUtils:260","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], java.lang.Short.shortValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5462","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:641","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"regex":"regex","i":"i","value":"value"},"name":"replace","transplant":{"sourceCode":"if ((++int) == (java.lang.String.length())) {\n    return java.lang.StringBuilder;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:341","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case '\\'' :\n        if (boolean) {\n            if ((++int) == (java.lang.String.length())) {\n                return java.lang.StringBuilder;\n            } \n            char = java.lang.String.charAt(int);\n        } \n        break;\n    case '\\\\' :\n        if ((++int) == (java.lang.String.length())) {\n            break;\n        } \n        java.lang.StringBuilder.append(char);\n        char = java.lang.String.charAt(int);\n        if (char == 'E') {\n            java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n            char = 'Q';\n        } \n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.FastDateParser:338","type":"CtSwitchImpl"},"status":-2},{"failures":[45],"name":"returnValue","position":"org.apache.commons.lang3.text.StrBuilder:2099","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2])","position":"org.apache.commons.lang3.LocaleUtils:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:651","type":"CtIfImpl"},"status":-2},{"failures":[46,47,48],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = ++int","position":"org.apache.commons.lang3.StringUtils:3101","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean || boolean) {\n    java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n    boolean = false;\n    boolean = true;\n} ","position":"org.apache.commons.lang3.StringUtils:2962","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup<?>, org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher, char, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrSubstitutor:358","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5557","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"java.util.Calendar.DAY_OF_MONTH":"java.util.Calendar.MONTH","start":"start","days":"java.util.Calendar.FEBRUARY"},"name":"add","transplant":{"sourceCode":"int += java.util.Calendar.getActualMaximum(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DurationFormatUtils:369","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n    int += 1;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:347","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(char, int).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5384","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?> != null) {\n    java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","position":"org.apache.commons.lang3.ClassUtils:332","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.lang.Class<?>.getTypeParameters().int) == (java.lang.reflect.Type[].int)), \"invalid number of type parameters specified: expected %s, got %s\", java.lang.Class<?>.getTypeParameters().int, java.lang.reflect.Type[].int)","position":"org.apache.commons.lang3.reflect.TypeUtils:1502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.getKey()","position":"org.apache.commons.lang3.reflect.TypeUtils:1219","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.getLength(java.lang.Object)","position":"org.apache.commons.lang3.ArrayUtils:6063","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.concurrent.ConcurrentMap<K, V> == null) || (org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:272","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1391","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:2954","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int - 1","position":"org.apache.commons.lang3.time.DateUtils:1195","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Float, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5808","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:345","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2043","type":"CtLocalVariableImpl"},"status":-2},{"failures":[49,50,51,52],"variableMapping":{"array":"array"},"name":"replace","transplant":{"sourceCode":"return T[].clone()","position":"org.apache.commons.lang3.ArrayUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:513","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.CharRange(char , char , true)","position":"org.apache.commons.lang3.CharRange:127","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), java.lang.String, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.FieldUtils:125","type":"CtInvocationImpl"},"status":-2},{"failures":[53],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:3190","type":"mutation","status":-1},{"failures":[],"variableMapping":{"strLen":"strLen"},"name":"add","transplant":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:5087","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[(int / 2) + 1]","position":"org.apache.commons.lang3.text.WordUtils:543","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"ex":"ex","this":"this"},"name":"add","transplant":{"sourceCode":"final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException = org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:106","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.concurrent.ConcurrentRuntimeException org.apache.commons.lang3.concurrent.ConcurrentRuntimeException = org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:127","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.setLength((int - int));\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:419","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:238","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (E.ordinal()) / (java.lang.Long.int)","position":"org.apache.commons.lang3.EnumUtils:272","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharRange) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharRange:212","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterString(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:279","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String[][int] = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.strip(java.lang.String[][int], java.lang.String)","position":"org.apache.commons.lang3.StringUtils:738","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:6000","type":"CtReturnImpl"},"status":-2},{"failures":[54],"binaryOperator":"int < 4","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:6397","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.math.NumberUtils:1141","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.concurrent.TimeUnit","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:382","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","position":"org.apache.commons.lang3.math.Fraction:953","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5366","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.CharUtils:381","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4253","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"b"},"name":"add","transplant":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double, double), double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:208","type":"CtReturnImpl"},"status":-2},{"failures":[55,56],"variableMapping":{"workArea":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","position":"org.apache.commons.lang3.text.StrTokenizer:739","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.StrBuilder:1137","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.builder.HashCodeBuilder.(org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n} ","position":"org.apache.commons.lang3.builder.HashCodeBuilder:468","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:697","type":"CtInvocationImpl"},"status":-2},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,5,118,119,120,121,122,123,124,125,126,6,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"variableMapping":{"regex":"regex"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append('(')","position":"org.apache.commons.lang3.time.FastDateParser:606","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\Q\")","position":"org.apache.commons.lang3.time.FastDateParser:335","type":"CtInvocationImpl"},"status":-1},{"failures":[171,172],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (T.isEmpty()) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:299","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup())","position":"org.apache.commons.lang3.text.StrSubstitutor:231","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.mapLookup(java.util.Map<java.lang.String, V>), java.lang.String, java.lang.String, char)","position":"org.apache.commons.lang3.text.StrSubstitutor:279","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":140,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":161,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":58,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":61,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":109,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":38,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":122,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":70,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":169,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":160,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":136,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":117,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":139,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":47,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":119,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":157,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":156,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":110,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":63,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":49,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":56,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":138,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":91,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":108,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":74,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":121,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":14,"org.apache.commons.lang3.math.FractionTest.testFactory_double":22,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":104,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":87,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":84,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":141,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":35,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":32,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":165,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":112,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":30,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":17,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":142,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":144,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":111,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":151,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":98,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":127,"org.apache.commons.lang3.StringUtilsTest.testOverlay_StringStringIntInt":40,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":0,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_short_short":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":78,"org.apache.commons.lang3.math.FractionTest.testMultiply":26,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":62,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":45,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":163,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_array":50,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":115,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":137,"org.apache.commons.lang3.ValidateTest.testNotEmptyCollection1":171,"org.apache.commons.lang3.ValidateTest.testNotEmptyCollection2":172,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":146,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":134,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":96,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":39,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":116,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":129,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":164,"org.apache.commons.lang3.math.FractionTest.testDivide":25,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":135,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":75,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":43,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":48,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":18,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":159,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":4,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":107,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":170,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":149,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":15,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":59,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":97,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":105,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray2":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":72,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray1":51,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":147,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":34,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":158,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":125,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":155,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":28,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":60,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":154,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":145,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":31,"org.apache.commons.lang3.time.StopWatchTest.testLang315":42,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":131,"org.apache.commons.lang3.LocaleUtilsTest.testThreeCharsLocale":33,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":152,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":86,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":12,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":36,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":150,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfPrimitiveArray":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":85,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":132,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":106,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":79,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":99,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":118,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":2,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":168,"org.apache.commons.lang3.math.FractionTest.testToProperString":23,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":7,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":126,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":162,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":44,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":57,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringInt":54,"org.apache.commons.lang3.math.FractionTest.testPow":21,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":65,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":11,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":153,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":82,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":148,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":8,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":55,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":166,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":9,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":73,"org.apache.commons.lang3.time.FastDateParserTest.testParses":167,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":76,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":27,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":88,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":24,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":66,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":95,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":124,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":130,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":13,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":113,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":37,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":120,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":20,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":102,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":100,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":128,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":69,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":133,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":94,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":92,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":10,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":114}}]
