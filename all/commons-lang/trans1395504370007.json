[{"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:130","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1229","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.1\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Range:371","sourceCode":"return org.apache.commons.lang3.Range<T>.isBefore(this.T)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:416","sourceCode":"return (T.equals(org.apache.commons.lang3.Range<T>.T)) && (T.equals(org.apache.commons.lang3.Range<T>.T))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum","otherRange":"range","this":"range"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:294","sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:177","sourceCode":"return new boolean[]{ true , true , true , false }","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2021","sourceCode":"for (int int = 0, int int = int - 1 ; int < int ; int++ , int--) {\n    final char char = char[][int];\n    char[][int] = char[][int];\n    char[][int] = char;\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:774","sourceCode":"if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n    int++;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"half":"endMatchLen","buf":"chars","size":"endMatchLen"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:446","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:568","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:677","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","failures":[],"status":0,"name":"returnValue","return":"return 1","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4376","sourceCode":"if ((char[][int]) != char) {\n    char[][int++] = char[][int];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:334","sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"remove":"ch","chars":"buffer","i":"i","pos":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"failures":[12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:358","sourceCode":"return '1'","type":"CtReturnImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return java.lang.Double.double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:894","sourceCode":"return double","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:72","sourceCode":"char char = ' '","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:743","sourceCode":"final char char = org.apache.commons.lang3.text.StrSubstitutor.getEscapeChar()","type":"CtLocalVariableImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,2,31,32,33,34,35,36,3,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1186","sourceCode":"return 5","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:221","sourceCode":"return char - 48","type":"CtReturnImpl"},"failures":[42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:741","sourceCode":"int = 8","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1161","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"radix":"i"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2021","sourceCode":"for (int int = 0, int int = int - 1 ; int < int ; int++ , int--) {\n    final char char = char[][int];\n    char[][int] = char[][int];\n    char[][int] = char;\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:334","sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"half":"i","buf":"delimiters","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:395","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:268","inlineConstant":"double double = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:303","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1341","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:817","sourceCode":"int = int[][int]","type":"CtAssignmentImpl"},"failures":[57],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:413","sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:203","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1547","sourceCode":"if ((int < 0) || (int > int)) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid offset: \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:813","sourceCode":"if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + int));\n    break;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","chars":"varNameExprChars","offset":"valueDelimiterMatchLen"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"double--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:251","sourceCode":"double = java.lang.Math.java.lang.Math.abs(double)","type":"CtAssignmentImpl"},"failures":[59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:799","sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1297","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (long >> int)));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"dstPos","nBytes":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:296","sourceCode":"throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:149","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:143","sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:616","sourceCode":"throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:338","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":18,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":58,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":43,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":61,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":29,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":7,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":42,"org.apache.commons.lang3.math.FractionTest.testFactory_double":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":21,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":37,"org.apache.commons.lang3.math.FractionTest.testSubtract":13,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfUncloneable":64,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":48,"org.apache.commons.lang3.math.FractionTest.testAdd":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":19,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":55,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":8,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":4,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":49,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":30,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":17,"org.apache.commons.lang3.RangeTest.testIntersectionWith":0,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":33,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":15,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":41,"org.apache.commons.lang3.RangeTest.testEqualsObject":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":31,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":54,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":6,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":46,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":62,"org.apache.commons.lang3.math.FractionTest.testToProperString":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":56,"org.apache.commons.lang3.ObjectUtilsTest.testPossibleCloneOfUncloneable":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":2,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":9}}]
