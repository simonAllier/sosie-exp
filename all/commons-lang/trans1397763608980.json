[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.text.StrTokenizer:1026","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[java.lang.Object[].int]","position":"org.apache.commons.lang3.ClassUtils:995","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"private class InitializationTask implements java.util.concurrent.Callable<T> {\n    /** \n     * Stores the executor service to be destroyed at the end.\n     */\nprivate final java.util.concurrent.ExecutorService execFinally;\n\n    /** \n     * Creates a new instance of {@code InitializationTask} and initializes\n     * it with the {@code ExecutorService} to be destroyed at the end.\n     * \n     * @param exec the {@code ExecutorService}\n     */\npublic InitializationTask(final java.util.concurrent.ExecutorService exec) {\n        java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService;\n    }\n\n    /** \n     * Initiates initialization and returns the result.\n     * \n     * @return the result object\n     * @throws Exception if an error occurs\n     */\n@java.lang.Override\n    public T call() throws java.lang.Exception {\n        try {\n            return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.initialize();\n        } finally {\n            if ((java.util.concurrent.ExecutorService) != null) {\n                java.util.concurrent.ExecutorService.shutdown();\n            } \n        }\n    }\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:304","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"denominator":"maxWidth"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","position":"org.apache.commons.lang3.StringUtils:6397","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char == 'o') || (char == 'O')) && ((char == 'n') || (char == 'N'))) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:576","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"initialCapacity":"months","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"months"},"name":"add","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.StrBuilder:114","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[0,1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1370","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.trim()","position":"org.apache.commons.lang3.time.DurationFormatUtils:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:2214","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrBuilder:1396","failures":[2,3,4],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[5,6,7],"variableMapping":{"offset":"months","spaceToWrapAt":"months"},"name":"replace","transplant":{"sourceCode":"int = int + 1","position":"org.apache.commons.lang3.text.WordUtils:197","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, boolean[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1404","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'E' :\n    return new boolean[]{ true , true , true , false };","position":"org.apache.commons.lang3.Conversion:255","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:7238","type":"CtReturnImpl"},"status":-2},{"failures":[8,9],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1654","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ClassUtils:729","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\")","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:669","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1064","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = ((org.apache.commons.lang3.CharSet)(java.lang.Object))","position":"org.apache.commons.lang3.CharSet:253","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char != char) {\n    for (int int = 0 ; int < (int) ; int++) {\n        if ((char[][int]) == char) {\n            char[][int] = char;\n        } \n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1849","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ObjectUtils:129","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2077","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:557","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[])","position":"org.apache.commons.lang3.event.EventUtils:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:501","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > (int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return V","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:280","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"denominator":"java.util.Calendar.DATE"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","position":"org.apache.commons.lang3.math.Fraction:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, -1)","position":"org.apache.commons.lang3.time.DateUtils:1221","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.StringBuilder.append(int[][int]);\n}","position":"org.apache.commons.lang3.StringUtils:3670","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.math.NumberUtils:488","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<java.text.Format>.add(java.text.Format)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:180","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1062","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.StopWatch:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.CompareToBuilder:326","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.text.StrBuilder.toString())","position":"org.apache.commons.lang3.text.StrSubstitutor:898","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token[].int","position":"org.apache.commons.lang3.time.DurationFormatUtils:419","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(java.lang.String[].int)","position":"org.apache.commons.lang3.text.StrTokenizer:444","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.ArrayUtils:4566","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.NumberUtils:729","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.length();\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int));\n    java.lang.StringBuffer.getChars(int, (int + int), char[], int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:605","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 2 :\n    return new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField(int);","position":"org.apache.commons.lang3.time.FastDatePrinter:361","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int -= int","position":"org.apache.commons.lang3.mutable.MutableInt:159","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.MethodUtils:356","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1262","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(this)","position":"org.apache.commons.lang3.math.Fraction:557","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Class used to match whitespace as per trim().\n */\nstatic final class TrimMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * Constructs a new instance of <code>TrimMatcher<\/code>.\n     */\nTrimMatcher() {\n        org.apache.commons.lang3.text.StrMatcher.super();\n    }\n\n    /** \n     * Returns whether or not the given character matches.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return (char[][int]) <= 32 ? 1 : 0;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:412","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , true , true , true }","position":"org.apache.commons.lang3.Conversion:196","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startInclusive":"startInclusive","endExclusive":"endExclusive"},"name":"add","transplant":{"sourceCode":"if (long == long) {\n    return long;\n} ","position":"org.apache.commons.lang3.RandomUtils:115","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomUtils.((long)(org.apache.commons.lang3.RandomUtils.nextDouble(long, long)))","position":"org.apache.commons.lang3.RandomUtils:119","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final short short : short[]) {\n    final java.lang.Short java.lang.Short = java.lang.Short.java.lang.Short.valueOf(short);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Short);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Short, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5449","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(((int) / int), ((int) / int))","position":"org.apache.commons.lang3.math.Fraction:477","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? java.lang.Boolean.java.lang.Boolean.hashCode() : java.lang.Boolean.java.lang.Boolean.hashCode()","position":"org.apache.commons.lang3.mutable.MutableBoolean:186","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.StringBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:903","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = (boolean[][(int + int)] ? 1 : 0) << int","position":"org.apache.commons.lang3.Conversion:1126","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"className":"fieldName"},"name":"add","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:530","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Left hand object cannot be null\")","position":"org.apache.commons.lang3.builder.DiffResult:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float","position":"org.apache.commons.lang3.ObjectUtils:915","type":"CtReturnImpl"},"status":-2},{"failures":[10],"variableMapping":{"str":"trueString","falseString":"falseString"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:733","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2524","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1604","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)","position":"org.apache.commons.lang3.text.StrTokenizer:303","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '3';\n    } else {\n        return '2';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '1';\n    } else {\n        return '0';\n    }\n}","position":"org.apache.commons.lang3.Conversion:567","type":"CtIfImpl"},"status":-2},{"failures":[11],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:497","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.ClassUtils:939","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object.toString()","position":"org.apache.commons.lang3.ObjectUtils:212","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"start":"sz"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:4945","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    int = int - 1;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:124","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Short[]","position":"org.apache.commons.lang3.ArrayUtils:3209","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    java.lang.Class<?> java.lang.Class<?> = null;\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    } else {\n        throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type));\n    }\n    if (org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>)) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.Type)(java.lang.Class<?>))))) {\n        java.lang.reflect.Type = java.lang.reflect.Type;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1056","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (char[].int)) {\n    int = (char[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2381","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.text.StrBuilder:2179","type":"CtReturnImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,19,20],"variableMapping":{"fieldName":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[])","position":"org.apache.commons.lang3.builder.ToStringStyle:974","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.text.Format.format(java.text.Format.parseObject(java.lang.String))","position":"org.apache.commons.lang3.text.CompositeFormat:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.io.PrintWriter == null) {\n    throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\");\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:492","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, ((int) - int))","position":"org.apache.commons.lang3.text.StrBuilder:1671","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:519","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"close","this":"this","separator":"str"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, -1, true)","position":"org.apache.commons.lang3.StringUtils:2753","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.String == null) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2517","type":"CtIfImpl"},"status":-2},{"failures":[21],"variableMapping":{"seconds":"comparison"},"name":"replace","transplant":{"sourceCode":"int += 60","position":"org.apache.commons.lang3.time.DurationFormatUtils:303","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:895","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:783","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:531","type":"CtReturnImpl"},"status":-2},{"failures":[22],"variableMapping":{"dec":"numeric","this":"this","numeric":"numeric","exp":"numeric"},"name":"replace","transplant":{"sourceCode":"if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:530","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:558","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(byte[])","position":"org.apache.commons.lang3.math.NumberUtils:859","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[])","position":"org.apache.commons.lang3.time.FastDatePrinter:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(long[])","position":"org.apache.commons.lang3.EnumUtils:181","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(float[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4938","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.StringBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:626","type":"CtLocalVariableImpl"},"status":0},{"failures":[23],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence[].int","position":"org.apache.commons.lang3.StringUtils:1967","type":"CtLocalVariableImpl"},"status":-1},{"failures":[24,25],"variableMapping":{"startCutoff":"hours"},"name":"replace","transplant":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 24 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:381","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","position":"org.apache.commons.lang3.CharUtils:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final byte byte : byte[]) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte.java.lang.Byte.valueOf(byte);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Byte);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Byte, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5360","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(null);\n    return this;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.short += short","position":"org.apache.commons.lang3.mutable.MutableShort:138","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.lang3.AnnotationUtils:204","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.text.StrBuilder:1727","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:465","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char)","position":"org.apache.commons.lang3.text.StrBuilder:1294","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:96","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(short)--","position":"org.apache.commons.lang3.mutable.MutableShort:127","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.notEqual(java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>, org.apache.commons.lang3.text.ExtendedMessageFormat.java.util.Map<java.lang.String, ? extends org.apache.commons.lang3.text.FormatFactory>)) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:281","type":"CtIfImpl"},"status":-2},{"failures":[26],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Writer must not be null\")","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:77","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case '0' :\n        return new boolean[]{ false , false , false , false };\n    case '1' :\n        return new boolean[]{ true , false , false , false };\n    case '2' :\n        return new boolean[]{ false , true , false , false };\n    case '3' :\n        return new boolean[]{ true , true , false , false };\n    case '4' :\n        return new boolean[]{ false , false , true , false };\n    case '5' :\n        return new boolean[]{ true , false , true , false };\n    case '6' :\n        return new boolean[]{ false , true , true , false };\n    case '7' :\n        return new boolean[]{ true , true , true , false };\n    case '8' :\n        return new boolean[]{ false , false , false , true };\n    case '9' :\n        return new boolean[]{ true , false , false , true };\n    case 'a' :\n    case 'A' :\n        return new boolean[]{ false , true , false , true };\n    case 'b' :\n    case 'B' :\n        return new boolean[]{ true , true , false , true };\n    case 'c' :\n    case 'C' :\n        return new boolean[]{ false , false , true , true };\n    case 'd' :\n    case 'D' :\n        return new boolean[]{ true , false , true , true };\n    case 'e' :\n    case 'E' :\n        return new boolean[]{ false , true , true , true };\n    case 'f' :\n    case 'F' :\n        return new boolean[]{ true , true , true , true };\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}","position":"org.apache.commons.lang3.Conversion:161","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5991","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:433","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:1396","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:1074","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(1 , 4)","position":"org.apache.commons.lang3.math.Fraction:67","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[][int] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>[][int])","position":"org.apache.commons.lang3.ClassUtils:738","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1661","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Constructor<T>)) && org.apache.commons.lang3.reflect.ConstructorUtils.(org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(java.lang.reflect.Constructor<T>.getDeclaringClass())) ? java.lang.reflect.Constructor<T> : null","position":"org.apache.commons.lang3.reflect.ConstructorUtils:219","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.util.Calendar java.util.Calendar = null","position":"org.apache.commons.lang3.time.DateUtils:1159","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.FastDatePrinter.newCalendar()","position":"org.apache.commons.lang3.time.FastDatePrinter:398","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.Conversion:1020","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1350","type":"CtReturnImpl"},"status":-2},{"failures":[27,28],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1865","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:709","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:289","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 60 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:385","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2382","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()","position":"org.apache.commons.lang3.builder.EqualsBuilder:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)","position":"org.apache.commons.lang3.reflect.TypeUtils:442","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (!boolean) && boolean","position":"org.apache.commons.lang3.math.NumberUtils:1449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((java.lang.Class<?>)(java.lang.reflect.Type)).getTypeParameters().int) > 0","position":"org.apache.commons.lang3.reflect.TypeUtils:1432","type":"CtReturnImpl"},"status":-2},{"failures":[29],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = 1","position":"org.apache.commons.lang3.math.NumberUtils:734","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.String.indexOf('/')","position":"org.apache.commons.lang3.math.Fraction:334","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.StringUtils:3087","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (int) - 1","position":"org.apache.commons.lang3.text.StrTokenizer:564","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2871","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrSubstitutor:714","failures":[11],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?>.getTypeParameters()","position":"org.apache.commons.lang3.reflect.TypeUtils:1503","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    try {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class.java.lang.Class.forName(java.lang.String));\n    } catch (final java.lang.Exception java.lang.Exception) {\n        java.util.List<java.lang.Class<?>>.add(null);\n    }\n}","position":"org.apache.commons.lang3.ClassUtils:402","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float)","position":"org.apache.commons.lang3.builder.ToStringStyle:817","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Class<java.lang.Character>.equals(java.lang.Class<?>)) {\n    return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>));\n} ","position":"org.apache.commons.lang3.ClassUtils:672","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:912","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Type[].int) > 0) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.Type[][0]));\n    for (int int = 1 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        java.lang.StringBuilder.append(java.lang.String).append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.Type[][int]));\n    }\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1839","type":"CtIfImpl"},"status":-2},{"failures":[30,31,32,33,34,35],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.NullPointerException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:278","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(char[][int], char[][int])","position":"org.apache.commons.lang3.builder.CompareToBuilder:827","type":"CtInvocationImpl"},"status":-1},{"failures":[36,37,38,39,40,41],"variableMapping":{"java.lang.Integer.MIN_VALUE":"dim","numerator":"dim","denominator":"dim"},"name":"replace","transplant":{"sourceCode":"if ((int == int) || (int == int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","position":"org.apache.commons.lang3.math.Fraction:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.lang.StringBuilder.append(\"[]\");\n}","position":"org.apache.commons.lang3.ClassUtils:1132","type":"CtForImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} ","position":"org.apache.commons.lang3.text.WordUtils:295","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[][int], java.lang.reflect.Type[][int]))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1641","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The fragment \" + int) + \" is not supported\"))","position":"org.apache.commons.lang3.time.DateUtils:1728","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndexInclusive":"length"},"name":"add","transplant":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1612","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[] == null ? -1 : char[].int","position":"org.apache.commons.lang3.text.WordUtils:354","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:735","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (boolean[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1421","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Boolean == null) {\n    return boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"lhs":"lhs","this":"this","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.unregister(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:476","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_String":37,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":5,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":14,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":41,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":39,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":10,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":11,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShortRange":27,"org.apache.commons.lang3.ArrayUtilsTest.testReverseCharRange":9,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":18,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":25,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":32,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":35,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":34,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":6,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":4,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":12,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":20,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":26,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":21,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":33,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":22,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":17,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":1,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":31,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":29,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShort":28,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":16,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":0,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":23,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Class":38,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":40,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":15,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":36,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":3,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArray":30}}]
