[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.java.lang.String.valueOf(float))","position":"org.apache.commons.lang3.text.StrBuilder:829","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1879","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.time.FastDatePrinter:304","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateParser:223","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.time.DateUtils:180","failures":[0,1],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String))","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:345","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long))","position":"org.apache.commons.lang3.Validate:1084","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"newEnd":"index","buffer":"org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.CSV_SEARCH_CHARS","oldEnd":"index"},"name":"replace","transplant":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    this.org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char[][int] = '\u0000';\n}","position":"org.apache.commons.lang3.text.StrBuilder:210","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"static class CsvEscaper extends org.apache.commons.lang3.text.translate.CharSequenceTranslator {\n    private static final char CSV_DELIMITER = ',';\n\n    private static final char CSV_QUOTE = '\\\"';\n\n    private static final java.lang.String CSV_QUOTE_STR = java.lang.String.java.lang.String.valueOf(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n\n    private static final char[] CSV_SEARCH_CHARS = new char[]{ org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char , org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char , org.apache.commons.lang3.CharUtils.char , org.apache.commons.lang3.CharUtils.char };\n\n    @java.lang.Override\n    public int translate(final java.lang.CharSequence input, final int index, final java.io.Writer out) throws java.io.IOException {\n        if (int != 0) {\n            throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n        } \n        if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char[])) {\n            java.io.Writer.write(java.lang.CharSequence.toString());\n        } else {\n            java.io.Writer.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n            java.io.Writer.write(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.CharSequence.toString(), org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String, ((org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.java.lang.String))));\n            java.io.Writer.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char);\n        }\n        return java.lang.Character.java.lang.Character.codePointCount(java.lang.CharSequence, 0, java.lang.CharSequence.length());\n    }\n}","position":"org.apache.commons.lang3.StringEscapeUtils:250","type":"CtClassImpl"},"status":-2},{"failures":[2],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getSimpleName(java.lang.Object.getClass())","position":"org.apache.commons.lang3.ClassUtils:255","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length()))) {\n    int = (java.lang.CharSequence.length()) - (java.lang.CharSequence.length());\n} ","position":"org.apache.commons.lang3.StringUtils:1375","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableSet(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.keySet())","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:320","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array1"},"name":"replace","transplant":{"sourceCode":"return long[].clone()","position":"org.apache.commons.lang3.ArrayUtils:342","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(long[])","position":"org.apache.commons.lang3.ArrayUtils:3911","type":"CtReturnImpl"},"status":0},{"transformationPoint":"org.apache.commons.lang3.time.DurationFormatUtils:640","failures":[3],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.reflect.TypeUtils:1842","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int)","position":"org.apache.commons.lang3.text.translate.CodePointTranslator:37","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final long long = ((long)(int)) + ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:676","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object)","position":"org.apache.commons.lang3.text.StrBuilder:1096","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:83","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, null)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:526","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:342","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    char = ((char)((java.util.Random.nextInt(int)) + int));\n} else {\n    char = char[][((java.util.Random.nextInt(int)) + int)];\n}","position":"org.apache.commons.lang3.RandomStringUtils:256","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.CharSet:140","type":"CtReturnImpl"},"status":-2},{"failures":[4,5],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object[][int])","position":"org.apache.commons.lang3.StringUtils:3575","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:782","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.Range<T> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:315","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrTokenizer:834","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[23,24],"variableMapping":{"genericInterface":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type != null) {\n    return java.lang.reflect.Type;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1077","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    return java.lang.Class<?>.isArray() ? java.lang.Class<?>.getComponentType() : null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1345","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole())","position":"org.apache.commons.lang3.math.Fraction:945","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = org.apache.commons.lang3.time.DurationFormatUtils.Token[][int]","position":"org.apache.commons.lang3.time.DurationFormatUtils:421","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasPrevious()) {\n    return java.lang.String[][--(int)];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:551","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int]","position":"org.apache.commons.lang3.reflect.TypeUtils:1025","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean boolean = (int != int) && ((java.lang.CharSequence.charAt(int)) == ';')","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[25],"variableMapping":{"codepointLow":"codepoint","codepointHigh":"codepoint"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.translate.UnicodeEscaper(int , int , true)","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.UnicodeEscaper.org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, int)","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:74","type":"CtReturnImpl"},"status":-1},{"transformationPoint":"org.apache.commons.lang3.Conversion:770","failures":[26],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[27,28],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == (boolean[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2923","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The character \" + char) + \" is not in the range \\'0\\' - \\'9\\'\"))","position":"org.apache.commons.lang3.CharUtils:219","type":"CtThrowImpl"},"status":-2},{"failures":[29,30],"variableMapping":{"index":"i"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1586","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((int + int) < (java.lang.CharSequence.length())) && ((java.lang.CharSequence.charAt((int + int))) == 'u')) {\n    int++;\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:40","type":"CtWhileImpl"},"status":-1},{"failures":[31],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5299","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) == 1) {\n    final char char = java.lang.String.charAt(0);\n    while (int < int) {\n        if ((java.lang.String.charAt(int)) == char) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n} else {\n    while (int < int) {\n        if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:3108","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.boolean = true","position":"org.apache.commons.lang3.builder.EqualsBuilder:947","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:971","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:368","type":"CtInvocationImpl"},"status":-2},{"failures":[32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char","position":"org.apache.commons.lang3.text.StrBuilder:329","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:762","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:762","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(\"]\")","position":"org.apache.commons.lang3.AnnotationUtils:65","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.nio.charset.Charset.java.nio.charset.Charset.isSupported(java.lang.String)","position":"org.apache.commons.lang3.CharEncoding:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ex":"ex"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(java.util.concurrent.ExecutionException.getMessage() , java.util.concurrent.ExecutionException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:516","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","position":"org.apache.commons.lang3.StringUtils:4696","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence[][int]","position":"org.apache.commons.lang3.StringUtils:2025","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.is(java.lang.String.charAt(int)))","position":"org.apache.commons.lang3.CharSet:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:392","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(java.lang.Throwable).size()","position":"org.apache.commons.lang3.exception.ExceptionUtils:234","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2248","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3077","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    int = (int) * (int);\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:860","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"className","maxWidth":"dim"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String.length()) <= int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6400","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 1) {\n    return java.lang.String;\n} else {\n    if (java.lang.String.startsWith(\"L\")) {\n        java.lang.String = java.lang.String.substring(1, (java.lang.String.endsWith(\";\") ? (java.lang.String.length()) - 1 : java.lang.String.length()));\n    } else {\n        if ((java.lang.String.length()) > 0) {\n            java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.substring(0, 1));\n        } \n    }\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String);\n    for (int int = 0 ; int < int ; int++) {\n        java.lang.StringBuilder.append(\"[]\");\n    }\n    return java.lang.StringBuilder.toString();\n}","position":"org.apache.commons.lang3.ClassUtils:1117","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:6627","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry()","position":"org.apache.commons.lang3.builder.ToStringStyle:172","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String).append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.Type[][int]))","position":"org.apache.commons.lang3.reflect.TypeUtils:1842","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.JavaVersion(1.3F , \"1.3\")","position":"org.apache.commons.lang3.JavaVersion:44","type":"CtNewClassImpl"},"status":-2},{"failures":[33,34,35,6,7,8,9,10,11,12,36,37,38,39,21,22,40,41,42],"variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(false)","position":"org.apache.commons.lang3.text.StrTokenizer:98","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:267","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<java.lang.Object>","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.PrintStream.println(java.lang.String)","position":"org.apache.commons.lang3.exception.ExceptionUtils:464","type":"CtInvocationImpl"},"status":-2},{"failures":[43,44,45,46,47,48,49,50],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\")","position":"org.apache.commons.lang3.SerializationUtils:148","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.text.StrTokenizer.cloneReset();\n} catch (final java.lang.CloneNotSupportedException java.lang.CloneNotSupportedException) {\n    return null;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:1076","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:544","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 100) {\n    int = org.apache.commons.lang3.time.FastDateParser.adjustYear(int);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:696","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:5462","failures":[51],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(char[], char, 0, char[].int)","position":"org.apache.commons.lang3.StringUtils:3467","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.Exception)","position":"org.apache.commons.lang3.AnnotationUtils:206","type":"CtThrowImpl"},"status":-2},{"failures":[52],"variableMapping":{"sz":"i"},"name":"replace","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.math.NumberUtils:1377","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 16) + int","position":"org.apache.commons.lang3.Conversion:1230","type":"CtAssignmentImpl"},"status":-1},{"failures":[53],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Byte.java.lang.Byte.valueOf(((byte)(1)))","position":"org.apache.commons.lang3.math.NumberUtils:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], double[].int, double[].int)","position":"org.apache.commons.lang3.ArrayUtils:3973","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (float[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3496","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:107","type":"CtInvocationImpl"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long)","position":"org.apache.commons.lang3.builder.ToStringStyle:649","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:551","type":"CtIfImpl"},"status":-1},{"failures":[90],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4879","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.StringUtils:5640","type":"CtReturnImpl"},"status":-1},{"failures":[91,92,93,94,95,96,97,98],"variableMapping":{"sz":"csLast","i":"i"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n    if (int == int) {\n        return false;\n    } \n    if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n        return false;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.StringUtils:1886","type":"CtIfImpl"},"status":-1},{"failures":[99],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (int * 16) + int","position":"org.apache.commons.lang3.Conversion:769","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1161","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int >= (char[].int)) {\n    int = (char[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2383","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, float[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1379","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (org.apache.commons.lang3.builder.Diff<?> org.apache.commons.lang3.builder.Diff<?> : java.util.List<org.apache.commons.lang3.builder.Diff<?>>) {\n    org.apache.commons.lang3.builder.ToStringBuilder.append(org.apache.commons.lang3.builder.Diff<?>.getFieldName(), org.apache.commons.lang3.builder.Diff<?>.getLeft());\n    org.apache.commons.lang3.builder.ToStringBuilder.append(org.apache.commons.lang3.builder.Diff<?>.getFieldName(), org.apache.commons.lang3.builder.Diff<?>.getRight());\n}","position":"org.apache.commons.lang3.builder.DiffResult:188","type":"CtForEachImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrBuilder:659","failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2203","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(float[], int, float[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:1170","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n    T = java.util.concurrent.atomic.AtomicReference<T>.get();\n} ","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:86","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream = new org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream(java.io.ByteArrayInputStream , T.getClass().getClassLoader());\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.readObject()));\n    return T;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new org.apache.commons.lang3.SerializationException(\"ClassNotFoundException while reading cloned object data\" , java.lang.ClassNotFoundException);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new org.apache.commons.lang3.SerializationException(\"IOException while reading cloned object data\" , java.io.IOException);\n} finally {\n    try {\n        if (org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream != null) {\n            org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close();\n        } \n    } catch (final java.io.IOException java.io.IOException) {\n        throw new org.apache.commons.lang3.SerializationException(\"IOException on closing cloned object data InputStream.\" , java.io.IOException);\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:86","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","position":"org.apache.commons.lang3.ClassUtils:84","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, java.lang.Object[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:952","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1612","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"classLoader":"classLoader","org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR":"org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR","lastDotIndex":"lastDotIndex","this":"this","className":"className","initialize":"initialize"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (this.org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean)","position":"org.apache.commons.lang3.ClassUtils:837","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n}","position":"org.apache.commons.lang3.ClassUtils:836","type":"CtTryImpl"},"status":-2},{"failures":[115],"variableMapping":{"className":"toProperString"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(1, (java.lang.String.endsWith(\";\") ? (java.lang.String.length()) - 1 : java.lang.String.length()))","position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"-1\"","position":"org.apache.commons.lang3.math.Fraction:937","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:536","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Double.java.lang.Double.valueOf(double)))","position":"org.apache.commons.lang3.Validate:131","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output the twenty four hour field.<\/p>\n */\nprivate static class TwentyFourHourField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final org.apache.commons.lang3.time.FastDatePrinter.NumberRule mRule;\n\n    /** \n     * Constructs an instance of {@code TwentyFourHourField} with the specified\n     * {@code NumberRule}.\n     * \n     * @param rule the rule\n     */\nTwentyFourHourField(final org.apache.commons.lang3.time.FastDatePrinter.NumberRule rule) {\n        org.apache.commons.lang3.time.FastDatePrinter.NumberRule = org.apache.commons.lang3.time.FastDatePrinter.NumberRule;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return org.apache.commons.lang3.time.FastDatePrinter.NumberRule.estimateLength();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = java.util.Calendar.get(java.util.Calendar.int);\n        if (int == 0) {\n            int = (java.util.Calendar.getMaximum(java.util.Calendar.int)) + 1;\n        } \n        org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(java.lang.StringBuffer, int);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(java.lang.StringBuffer, int);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1044","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher, null, 0, int, -1)","position":"org.apache.commons.lang3.text.StrBuilder:1781","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) > 0) {\n    java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.substring(0, 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:1127","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = java.lang.String[].int ; (--int) >= 0 ; ) {\n    final int int = java.lang.String[][int].length();\n    if (int > int) {\n        int = int;\n    } \n}","position":"org.apache.commons.lang3.time.FastDatePrinter:699","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Calendar.getTime()","position":"org.apache.commons.lang3.time.DateUtils:655","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    java.lang.Class<?> = java.lang.Class<?>;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:341","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:940","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long > (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n} ","position":"org.apache.commons.lang3.math.Fraction:660","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"cal2":"definingCalendar","cal1":"definingCalendar"},"name":"replace","transplant":{"sourceCode":"if ((java.util.Calendar == null) || (java.util.Calendar == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:180","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date())","position":"org.apache.commons.lang3.time.FastDateParser:124","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:732","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence[][0].length()","position":"org.apache.commons.lang3.text.translate.LookupTranslator:52","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"name"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.StringUtils:5640","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.JavaVersion:165","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()","position":"org.apache.commons.lang3.builder.EqualsBuilder:178","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"iface":"cls"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(java.lang.Class<?>))","position":"org.apache.commons.lang3.AnnotationUtils:78","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.FieldUtils:214","type":"CtLocalVariableImpl"},"status":-2},{"failures":[116],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:706","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A strategy that handles a timezone field in the parsing pattern\n */\nprivate static class TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final java.lang.String validTimeZoneChars;\n\n    private final java.util.SortedMap<java.lang.String, java.util.TimeZone> tzNames = new java.util.TreeMap<java.lang.String, java.util.TimeZone>(java.lang.String.java.util.Comparator<java.lang.String>);\n\n    /** \n     * Index of zone id\n     */\nprivate static final int ID = 0;\n\n    /** \n     * Index of the long name of zone in standard time\n     */\nprivate static final int LONG_STD = 1;\n\n    /** \n     * Index of the short name of zone in standard time\n     */\nprivate static final int SHORT_STD = 2;\n\n    /** \n     * Index of the long name of zone in daylight saving time\n     */\nprivate static final int LONG_DST = 3;\n\n    /** \n     * Index of the short name of zone in daylight saving time\n     */\nprivate static final int SHORT_DST = 4;\n\n    /** \n     * Construct a Strategy that parses a TimeZone\n     * @param locale The Locale\n     */\nTimeZoneStrategy(final java.util.Locale locale) {\n        final java.lang.String[][] java.lang.String[][] = java.text.DateFormatSymbols.java.text.DateFormatSymbols.getInstance(java.util.Locale).getZoneStrings();\n        for (java.lang.String[] java.lang.String[] : java.lang.String[][]) {\n            if (java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int].startsWith(\"GMT\")) {\n                continue;\n            } \n            final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]);\n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (java.util.TimeZone.useDaylightTime()) {\n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n            } \n        }\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        java.lang.StringBuilder.append(\"(GMT[+\\\\-]\\\\d{0,1}\\\\d{2}|[+\\\\-]\\\\d{2}:?\\\\d{2}|\");\n        for (final java.lang.String java.lang.String : java.util.SortedMap<java.lang.String, java.util.TimeZone>.keySet()) {\n            org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|');\n        }\n        java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n        java.lang.String = java.lang.StringBuilder.toString();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        java.lang.StringBuilder.append(java.lang.String);\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.TimeZone java.util.TimeZone;\n        if (((java.lang.String.charAt(0)) == '+') || ((java.lang.String.charAt(0)) == '-')) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone((\"GMT\" + java.lang.String));\n        } else if (java.lang.String.startsWith(\"GMT\")) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n        } else {\n            java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n            if (java.util.TimeZone == null) {\n                throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n            } \n        }\n        java.util.Calendar.setTimeZone(java.util.TimeZone);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:706","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be reset before being restarted. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:178","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2560","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:515","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:499","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int))","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:51","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:993","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5051","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.get(java.lang.String)","position":"org.apache.commons.lang3.JavaVersion:119","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:148","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"inLiteral":"hasNext"},"name":"replace","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.lang3.time.FastDatePrinter:334","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.CharRange:289","type":"CtAssignmentImpl"},"status":0},{"failures":[117],"variableMapping":{"radix":"depth"},"name":"replace","transplant":{"sourceCode":"int = 8","position":"org.apache.commons.lang3.math.NumberUtils:743","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:381","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.StringUtils:307","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:672","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:382","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.text.WordUtils:358","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:186","type":"CtAssignmentImpl"},"status":-2},{"failures":[118],"variableMapping":{"this":"otherRange","maximum":"minimum","minimum":"minimum","otherRange":"otherRange"},"name":"replace","transplant":{"sourceCode":"return ((org.apache.commons.lang3.Range<T>.contains(this.T)) || (org.apache.commons.lang3.Range<T>.contains(this.T))) || (org.apache.commons.lang3.Range<T>.contains(this.T))","position":"org.apache.commons.lang3.Range:354","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Range<T>.isBefore(org.apache.commons.lang3.Range<T>.T)","position":"org.apache.commons.lang3.Range:372","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:7395","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:647","type":"CtReturnImpl"},"status":0},{"transformationPoint":"org.apache.commons.lang3.BooleanUtils:736","failures":[119],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:5196","failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (java.lang.Boolean != null) && (java.lang.Boolean.booleanValue())","position":"org.apache.commons.lang3.BooleanUtils:159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.booleanValue()","position":"org.apache.commons.lang3.builder.ToStringStyle:1577","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 'e'","position":"org.apache.commons.lang3.Conversion:527","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.charAt(0)","position":"org.apache.commons.lang3.CharUtils:198","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new () {\n    @java.lang.Override\n    boolean isStarted() {\n        return true;\n    }\n\n    @java.lang.Override\n    boolean isStopped() {\n        return false;\n    }\n\n    @java.lang.Override\n    boolean isSuspended() {\n        return false;\n    }\n}","position":"org.apache.commons.lang3.time.StopWatch:72","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float[]","position":"org.apache.commons.lang3.ArrayUtils:3375","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5719","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:540","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:781","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Float getLeft() {\n        return java.lang.Float.java.lang.Float.valueOf(float);\n    }\n\n    @java.lang.Override\n    public java.lang.Float getRight() {\n        return java.lang.Float.java.lang.Float.valueOf(float);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:473","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":82,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":129,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":1,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":96,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":114,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":106,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":127,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":56,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":47,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":57,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":0,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":44,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":59,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":117,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":78,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":48,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayCharSeparator":5,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetPrimitiveArrayComponentType":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":91,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":63,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":118,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":104,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":68,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":80,"org.apache.commons.lang3.ArrayUtilsTest.testToString":54,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":65,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":105,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":84,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetArrayComponentType":24,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":93,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":35,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":100,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":79,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":77,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":29,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":138,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":71,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":3,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":46,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":135,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":4,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":26,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":67,"org.apache.commons.lang3.text.StrTokenizerTest.test8":20,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":30,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":52,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":121,"org.apache.commons.lang3.text.StrTokenizerTest.test5":17,"org.apache.commons.lang3.text.StrTokenizerTest.test4":16,"org.apache.commons.lang3.text.StrTokenizerTest.test7":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":73,"org.apache.commons.lang3.text.StrTokenizerTest.test6":18,"org.apache.commons.lang3.ClassUtilsTest.test_getSimpleName_Object":2,"org.apache.commons.lang3.text.StrTokenizerTest.test1":13,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":122,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":123,"org.apache.commons.lang3.text.StrTokenizerTest.test3":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":108,"org.apache.commons.lang3.text.StrTokenizerTest.test2":14,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":72,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":128,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":119,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":126,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":90,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":34,"org.apache.commons.lang3.text.StrBuilderTest.testSetCharAt":32,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveNumberArray":132,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":74,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":137,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":25,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":31,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":124,"org.apache.commons.lang3.math.FractionTest.testToProperString":115,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":133,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":130,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":49,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":9,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":12,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNotSupportedException":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":70,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":55,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":66,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":125,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":75,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":111,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":38,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":99,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":37,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":103,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":131,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":94,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":112,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":116,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":110,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":113}}]
