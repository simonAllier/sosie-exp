[{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:650","sourceCode":"if ((int != (-1)) && (java.lang.String.substring(0, int).trim().isEmpty())) {\n    boolean = true;\n    java.util.List<java.lang.String>.add(java.lang.String);\n} else if (boolean) {\n    break;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:571","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:875","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:527","sourceCode":"return 'e'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:430","sourceCode":"if (boolean[][int]) {\n    return 'd';\n} else {\n    return '5';\n}","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1998","sourceCode":"int = (int - int) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:241","sourceCode":"int = 'z' + 1","type":"CtAssignmentImpl"},"failures":[2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"to":"end","replaceLen":"end","removeLen":"end"}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","sourceCode":"int int = int + 2","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:40","sourceCode":"int int = ((java.lang.CharSequence.length()) - int) - 1","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:494","failures":[6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.apache.commons.lang3.math.NumberUtils:1395","failures":[10],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:419","sourceCode":"int = 0","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1015","sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:305","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[11,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1365","failures":[13],"status":-1,"binaryOperator":"(int * 8)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:573","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"prefix":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:395","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:273","sourceCode":"if (java.lang.Class<?>.isAnnotation()) {\n    return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:270","sourceCode":"if (java.lang.Class<?>.isArray()) {\n    return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(java.lang.Class<?>.getComponentType(), java.lang.Object, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o2":"o2","o1":"o2","type":"type","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:859","sourceCode":"int = 3","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:760","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"digits":"trimStart"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1300","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"arraySeparator"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:67","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:130","sourceCode":"throw org.apache.commons.lang3.concurrent.ConcurrentRuntimeException","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:437","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:619","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"appendStatics","superEquals":"appendStatics"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:430","sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append((boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int)));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append((boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int)));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append((boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int)));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append((boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int)));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append((boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int)));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int += 1000;\n        final java.lang.String java.lang.String = boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int);\n        java.lang.StringBuilder.append(java.lang.String.substring(1));\n    } else {\n        java.lang.StringBuilder.append((boolean ? org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.Integer.java.lang.Integer.toString(int), int, '0') : java.lang.Integer.java.lang.Integer.toString(int)));\n    }\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"days"}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:196","sourceCode":"java.text.DateFormat java.text.DateFormat","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:358","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:888","sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","sourceCode":"byte = byte","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1164","sourceCode":"byte = ((byte)((byte & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"out","a":"out"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:176","sourceCode":"if (java.lang.Boolean == null) {\n    return boolean;\n} ","type":"CtIfImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:124","sourceCode":"if (T != null) {\n    return T;\n} ","type":"CtIfImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:452","sourceCode":"int += 1000","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1116","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"milliseconds":"a"}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":6,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":13,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":10,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":17,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":2,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":3,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":0,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":18,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":11,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":14,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":16,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":24,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanDefaultIfNull_Boolean_boolean":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":19,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":25,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":21,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":4,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":8,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":22,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":9,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":20,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":1}}]
