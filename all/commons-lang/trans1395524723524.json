[{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4748","sourceCode":"if (int > 0) {\n    int += 3 * int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:816","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"greater":"trimStart","increase":"trimStart"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:536","sourceCode":"java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:216","sourceCode":"return java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:459","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"duration":"result"}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:789","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:242","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:592","sourceCode":"int = -1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:736","sourceCode":"int += 2","type":"CtOperatorAssignmentImpl"},"failures":[29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"comparison":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5983","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:556","sourceCode":"return null","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:531","sourceCode":"return 'd'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:645","sourceCode":"return 'e'","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:335","sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6388","sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1195","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 32) + int;\n    int[][(int + int)] = ((int)(-1 & (long >> int)));\n}","type":"CtForImpl"},"failures":[44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"maxWidth":"srcPos"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:523","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:488","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n}","type":"CtIfImpl"},"failures":[45,46,47,48,48,34,49,35,50,51,51,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:403","sourceCode":"return char < 128","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:216","sourceCode":"return (((char) == (org.apache.commons.lang3.CharRange.char)) && ((char) == (org.apache.commons.lang3.CharRange.char))) && ((boolean) == (org.apache.commons.lang3.CharRange.boolean))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ch":"end"}},{"position":"org.apache.commons.lang3.math.NumberUtils:1371","failures":[56],"status":-1,"binaryOperator":"(char[][int]) == '.'","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1028","sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 12)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1065","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int >= 12) {\n        int -= 12;\n    } \n    boolean = int >= 6;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:932","sourceCode":"if ((int) == 0) {\n    java.lang.String = \"0\";\n} else if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:936","sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"numerator":"numerator","denominator":"numerator","this":"this","toProperString":"toProperString"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:114","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:150","sourceCode":"int = -int","type":"CtAssignmentImpl"},"failures":[63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"initialCapacity":"numerator","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"numerator"}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:748","inlineConstant":"boolean boolean = false","failures":[65,66,67],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:791","sourceCode":"long long = long[][0]","type":"CtLocalVariableImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:957","sourceCode":"if ((java.util.Calendar.get(int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:522","sourceCode":"java.util.Calendar.add(int, int)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,58,78,79,80,81,82,83,84,59,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"val":"c","java.util.Calendar.YEAR":"calendarField"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:210","sourceCode":"java.util.concurrent.ScheduledExecutorService = java.util.concurrent.ScheduledExecutorService","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:217","sourceCode":"java.util.concurrent.ScheduledExecutorService = java.util.concurrent.ScheduledThreadPoolExecutor","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:541","sourceCode":"return 'a'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"failures":[97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:553","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:530","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'd';\n} else {\n    return 'c';\n}","type":"CtIfImpl"},"failures":[97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1366","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[99,100,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:493","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setSizeEndText(java.lang.String)","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:762","sourceCode":"org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1))","type":"CtInvocationImpl"},"failures":[1,102,5,9,21,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:617","sourceCode":"final char char = java.lang.String.charAt(3)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:611","sourceCode":"try {\n    if (int <= 16) {\n        final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n        if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n            return java.lang.Double;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[56],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:105","sourceCode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:173","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[57],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1083","failures":[73],"status":-1,"binaryOperator":"(int - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:952","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, java.lang.Object[].int)","type":"CtInvocationImpl"},"failures":[45,46,47,48,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"fieldName"}},{"position":"org.apache.commons.lang3.LocaleUtils:116","failures":[103],"status":-1,"binaryOperator":"(java.lang.String.charAt(3)) != '_'","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:473","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"this"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1262","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:237","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:262","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:487","sourceCode":"return java.lang.Character.java.lang.Character.isWhitespace(char)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1625","sourceCode":"if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n    if (int == int) {\n        return true;\n    } \n    if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n        return true;\n    } \n} else {\n    return true;\n}","type":"CtIfImpl"},"failures":[104,105,106,107,108,109,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":37,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":59,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":84,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":19,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":86,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":111,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":48,"org.apache.commons.lang3.time.DateUtilsTest.testRound":61,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":69,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":78,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":62,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":72,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":51,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":18,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":91,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":77,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":87,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":52,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":10,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":53,"org.apache.commons.lang3.math.FractionTest.testReduce":63,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":16,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":102,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":49,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":74,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":5,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":23,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":34,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":55,"org.apache.commons.lang3.time.DateUtilsTest.testAddDays":90,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":79,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":83,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":85,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":98,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":39,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":54,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":56,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":107,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":64,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":95,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":22,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuffer":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":21,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":15,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":50,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":33,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong":68}}]
