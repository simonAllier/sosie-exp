[{"position":"org.apache.commons.lang3.time.FastDateParser:472","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(java.lang.String.length()) > 2","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:228","sourceCode":"return ((short)(org.apache.commons.lang3.BitField.set(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:167","sourceCode":"return org.apache.commons.lang3.BitField.((short)(setValue(short, short)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"holder":"holder","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1015","sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CsvUnescaper:312","sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:879","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1073","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1077","sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offsetSet":"offsetSet"}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.EntityArrays:420","sourceCode":"java.lang.String[][][int][1] = java.lang.String[][][int][0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.EntityArrays:419","sourceCode":"java.lang.String[][][int][0] = java.lang.String[][][int][1]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"newarray":"newarray","i":"i","array":"newarray"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1579","sourceCode":"int += 4","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:218","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"size":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:557","sourceCode":"return '6'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"failures":[37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:302","sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:184","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Range must not be null\")","type":"CtThrowImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:701","sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    return -1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:748","sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:414","sourceCode":"if (boolean[][(int + 2)]) {\n    if (boolean[][(int + 1)]) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return '7';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return '3';\n        }\n    }\n} else {\n    if (boolean[][(int + 1)]) {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return '5';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '1';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:337","sourceCode":"if (boolean[][int]) {\n    return '7';\n} else {\n    return '6';\n}","type":"CtIfImpl"},"failures":[40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:676","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[42,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"prefix":"fieldName"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:155","sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\");\n} ","type":"CtIfImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:290","sourceCode":"if (java.lang.Integer == null) {\n    if (java.lang.Integer == null) {\n        return true;\n    } \n    if (java.lang.Integer == null) {\n        return false;\n    } \n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return true;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:297","sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return true;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"trueValue":"falseValue","falseValue":"trueValue","value":"trueValue"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:387","sourceCode":"return java.util.Date","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:386","sourceCode":"if ((java.util.Date != null) && ((java.text.ParsePosition.getIndex()) == (java.lang.String.length()))) {\n    return java.util.Date;\n} ","type":"CtIfImpl"},"failures":[45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"date":"date"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1795","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[49,50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:172","sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.time.DateUtils:1170","failures":[23],"status":-1,"binaryOperator":"int == (org.apache.commons.lang3.time.DateUtils.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:387","sourceCode":"return java.util.Date","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:404","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:130","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String, java.util.Calendar)","type":"CtAssignmentImpl"},"failures":[58,0,59,60,1,61,62,63,64,65,66,67,68,69,70,71,72,73,2,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,8,9,10,11,12,97,13,98,14,15,16,17,99,100,18,19,101,20,102,21,22,103,104,3,105,106,4,107,108,109,110,111,112,113,114,115,116,117,118,119,5,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:251","sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","type":"CtIfImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"source"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:459","sourceCode":"if (java.io.PrintStream == null) {\n    throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:464","sourceCode":"java.io.PrintStream.println(java.lang.String)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:560","sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","type":"CtIfImpl"},"failures":[154],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1560","failures":[155],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.math.NumberUtils:1037","failures":[],"status":0,"binaryOperator":"(double[][int]) > double","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:169","sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ContextedException:188","sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.setContextValue(java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exceptionContext":"exceptionContext","value":"value","label":"label"}},{"position":"org.apache.commons.lang3.reflect.MemberUtils:75","failures":[156,157,158,159,160,161],"status":-1,"binaryOperator":"(int & (org.apache.commons.lang3.reflect.MemberUtils.int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:154","sourceCode":"float += 1.5F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:157","sourceCode":"this.float += float","type":"CtOperatorAssignmentImpl"},"failures":[162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:762","sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1627","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (short >> int)) != 0;\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"srcPos","dstPos":"srcPos"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:127","sourceCode":"return 13","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:103","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:155","sourceCode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[164],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":144,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteField":156,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":101,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":74,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":60,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":77,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":107,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":164,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":158,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":19,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":124,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":117,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":135,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":100,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":64,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":134,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":102,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":37,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":112,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":94,"org.apache.commons.lang3.CharRangeTest.testContainsNullArg":39,"org.apache.commons.lang3.time.DateUtilsTest.testRound":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":15,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":32,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":126,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":24,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":27,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":148,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":70,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":8,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":95,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":140,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":145,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":84,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":161,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":52,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":78,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":13,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":79,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":106,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":114,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":72,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":21,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":138,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_FAIL":47,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":61,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":88,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":121,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":22,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":91,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_nullValue":44,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":76,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL":48,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":93,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":85,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":129,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":82,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":83,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":115,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":3,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":43,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":6,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":97,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":160,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":90,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":151,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":73,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":153,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":141,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":2,"org.apache.commons.lang3.ConversionTest.testLongToBinary":155,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":17,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":159,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":163,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":137,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":125,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":92,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":65,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":149,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":132,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":33,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":80,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":128,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":36,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":55,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":66,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":86,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":130,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":59,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":87,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":108,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":16,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_831":152,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":51,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":116,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":53,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":139,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":127,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":5,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":20,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":136,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":69,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":45,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":56,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":119,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":38,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":25,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":120,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":68,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":111,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":104,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":30,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":142,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":41,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":118,"org.apache.commons.lang3.mutable.MutableFloatTest.testAddValuePrimitive":162,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":63,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":109,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":54,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":34,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":110,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":99,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":146,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":42,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":62,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":157,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":147,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":31,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":49,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":143,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":133,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":46,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":23,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":154,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":122}}]
