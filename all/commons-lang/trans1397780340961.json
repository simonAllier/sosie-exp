[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 1 :\n    return '8';","position":"org.apache.commons.lang3.Conversion:632","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:148","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1223","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.translate.AggregateTranslator(new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE()) , new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE()) , new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE()) , new org.apache.commons.lang3.text.translate.NumericEntityUnescaper())","position":"org.apache.commons.lang3.StringEscapeUtils:350","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (\"1.2\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.3\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.4\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.5\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.6\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.7\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:136","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:723","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>.toArray())","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:317","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5414","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"array"},"name":"add","transplant":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if (java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1081","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"(\\\\p{Nd}{\")","position":"org.apache.commons.lang3.time.FastDateParser:663","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object)","position":"org.apache.commons.lang3.StringUtils:4058","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append('+')","position":"org.apache.commons.lang3.time.FastDatePrinter:1201","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int])","position":"org.apache.commons.lang3.reflect.TypeUtils:1410","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"The field must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:381","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.M = M","position":"org.apache.commons.lang3.tuple.MutableTriple:114","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.StringUtils:3087","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"superEquals"},"name":"add","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.mutable.MutableBoolean:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:437","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (0 == int) {\n    return short;\n} ","position":"org.apache.commons.lang3.Conversion:971","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return short;\n} ","position":"org.apache.commons.lang3.Conversion:1115","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","position":"org.apache.commons.lang3.text.WordUtils:421","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>[][int], (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.Type) ? java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type) : java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:876","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += 24 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:381","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:615","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY","length":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Short[] == null) || ((this.int) == 0)) {\n    return this.org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:733","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    return null;\n} else if ((short[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3206","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:624","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DurationFormatUtils:355","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:482","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, 0, java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:836","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String.java.lang.String.format(java.lang.String, org.apache.commons.lang3.tuple.Pair<L, R>.getLeft(), org.apache.commons.lang3.tuple.Pair<L, R>.getRight())","position":"org.apache.commons.lang3.tuple.Pair:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:249","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5376","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) == 1) {\n    final char char = java.lang.String.charAt(0);\n    if ((char == (org.apache.commons.lang3.CharUtils.char)) || (char == (org.apache.commons.lang3.CharUtils.char))) {\n        return org.apache.commons.lang3.StringUtils.java.lang.String;\n    } \n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5001","type":"CtIfImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"variableMapping":{"this":"array"},"name":"replace","transplant":{"sourceCode":"java.lang.Object.notifyAll()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object, 0, java.lang.Object, 0, int)","position":"org.apache.commons.lang3.ArrayUtils:4251","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5563","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex((int + (org.apache.commons.lang3.text.ExtendedMessageFormat.java.lang.String.length())))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:493","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2358","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:102","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = int == (java.util.Calendar.int) ? new org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(java.util.Locale) : new org.apache.commons.lang3.time.FastDateParser.TextStrategy(int , java.util.Calendar , java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:536","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return java.lang.CharSequence.equals(java.lang.CharSequence);\n} ","position":"org.apache.commons.lang3.StringUtils:801","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))","position":"org.apache.commons.lang3.StringUtils:238","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2335","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5588","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.ClassUtils:923","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double)","position":"org.apache.commons.lang3.builder.ToStringStyle:789","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:698","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:483","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 8 :\n    return '1';","position":"org.apache.commons.lang3.Conversion:646","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtIfImpl"},"status":-2},{"failures":[13],"variableMapping":{"hours":"startIndexInclusive","minutes":"startIndexInclusive"},"name":"replace","transplant":{"sourceCode":"int += 60 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:385","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:1159","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double < double) || (double > double)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String));\n} ","position":"org.apache.commons.lang3.Validate:1012","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.TypeVariable<?>, \"typeVariable is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:5821","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:477","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"endIndexExclusive"},"name":"add","transplant":{"sourceCode":"int int = int + 2","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(int[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1753","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n} ","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:52","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((long < (java.lang.Integer.int)) || (long > (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: add\");\n} ","position":"org.apache.commons.lang3.math.Fraction:695","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (int < 0)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2459","type":"CtIfImpl"},"status":-2},{"failures":[14,15,16,17,18,19,20,21],"variableMapping":{"workArea":"workArea","trimStart":"trimStart"},"name":"add","transplant":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","position":"org.apache.commons.lang3.text.StrTokenizer:772","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","position":"org.apache.commons.lang3.text.StrTokenizer:781","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"input":"fieldName","chars":"array"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String != null) {\n    char[] = java.lang.String.toCharArray();\n} else {\n    char[] = null;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1218","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY":"array"},"name":"replace","transplant":{"sourceCode":"return java.lang.Byte[]","position":"org.apache.commons.lang3.ArrayUtils:774","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Byte[]","position":"org.apache.commons.lang3.ArrayUtils:776","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"java.util.Calendar.YEAR":"$anonymous0"},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(int)","position":"org.apache.commons.lang3.time.FastDateParser:805","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int) {\n    @java.lang.Override\n    int modify(final int iValue) {\n        return int % 24;\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:812","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","length":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY"},"name":"replace","transplant":{"sourceCode":"if ((this.int) == 0) {\n    return this.org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3072","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    return null;\n} else if ((long[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3070","type":"CtIfImpl"},"status":-2},{"failures":[22],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5917","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field, true)","position":"org.apache.commons.lang3.reflect.FieldUtils:662","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5997","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1586","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer, int, int).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:943","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.AnnotationUtils:329","failures":[23],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.time.DurationFormatUtils:502","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:451","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.math.NumberUtils:1344","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(char)) {\n    org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n    char = java.lang.String.charAt(java.text.ParsePosition.getIndex());\n    if ((char != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (char != (org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n        boolean = true;\n        continue;\n    } \n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:338","type":"CtIfImpl"},"status":0},{"failures":[24,25,26,27,28,29,30,31,32],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 1","position":"org.apache.commons.lang3.math.Fraction:586","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1334","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:621","type":"CtForEachImpl"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,14,15,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,16,17,73,18,19,74,75,76,77,78,79,20,21],"variableMapping":{"_mask":"size","holder":"size"},"name":"replace","transplant":{"sourceCode":"return int & (~(this.int))","position":"org.apache.commons.lang3.BitField:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:266","type":"CtReturnImpl"},"status":-1},{"failures":[80],"variableMapping":{"m1":"str","m2":"str"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    return 0.0;\n} ","position":"org.apache.commons.lang3.StringUtils:7060","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return double;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtIfImpl"},"status":-1},{"transformationPoint":"org.apache.commons.lang3.text.StrBuilder:346","failures":[81,82,83,84,85,86,87],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:217","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1896","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:216","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"float float = 0.0F","position":"org.apache.commons.lang3.reflect.MemberUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float float = float[][0]","position":"org.apache.commons.lang3.math.NumberUtils:913","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Byte java.lang.Byte = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], java.lang.Byte.byteValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5370","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"element":"maximum"},"name":"add","transplant":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Range<T>.isAfter(org.apache.commons.lang3.Range<T>.T)","position":"org.apache.commons.lang3.Range:335","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:659","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int + int) - 1","position":"org.apache.commons.lang3.text.StrBuilder:2002","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5308","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.toString()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:693","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(int[], int)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2194","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:1252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (short[].int) < (short[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:783","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Range<T>.isAfter(org.apache.commons.lang3.Range<T>.T)","position":"org.apache.commons.lang3.Range:335","type":"CtReturnImpl"},"status":-2},{"failures":[88],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:220","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[])","position":"org.apache.commons.lang3.ArrayUtils:3853","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:746","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((--int) >= 0) {\n    final int int = int[][int];\n    if ((int < 0) || (int >= int)) {\n        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n    } \n    if (int >= int) {\n        continue;\n    } \n    int++;\n    int = int;\n}","position":"org.apache.commons.lang3.ArrayUtils:6020","type":"CtWhileImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.reflect.TypeUtils:1533","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > 16) {\n    throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1687","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(int[], int, int[].int, java.lang.Integer.int)","position":"org.apache.commons.lang3.StringUtils:6932","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n    java.lang.String = java.lang.String.substring((int + 1), java.lang.String.length());\n} else {\n    java.lang.String = null;\n}","position":"org.apache.commons.lang3.math.NumberUtils:579","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.lang3.CharRange:341","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:627","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1329","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((double[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(double[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4873","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharSetUtils:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:824","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < (char[].int) ; int++) {\n    final int int = java.lang.Character.java.lang.Character.getType(char[][int]);\n    if (int == int) {\n        continue;\n    } \n    if ((boolean && (int == (java.lang.Character.byte))) && (int == (java.lang.Character.byte))) {\n        final int int = int - 1;\n        if (int != int) {\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n            int = int;\n        } \n    } else {\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n        int = int;\n    }\n    int = int;\n}","position":"org.apache.commons.lang3.StringUtils:3232","type":"CtForImpl"},"status":-2},{"failures":[89],"variableMapping":{"pos":"index","i":"index","chars":"buffer"},"name":"replace","transplant":{"sourceCode":"char[][int++] = char[][int]","position":"org.apache.commons.lang3.StringUtils:4386","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = 'e'","position":"org.apache.commons.lang3.text.StrBuilder:1581","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.Range:458","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Float[] == null) {\n    return null;\n} else if ((java.lang.Float[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.float[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3366","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1362","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2129","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.mutable.MutableByte:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"final char[] char[] = this.char[]","position":"org.apache.commons.lang3.text.StrBuilder:2246","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = org.apache.commons.lang3.text.StrBuilder.char[]","position":"org.apache.commons.lang3.text.StrBuilder:2657","type":"CtLocalVariableImpl"},"status":0},{"failures":[90],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.int) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.int)) {\n    return false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:639","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int <= 4) {\n    return (java.lang.String.substring(0, (int - 3))) + java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6410","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:84","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Map<java.lang.String, E>","position":"org.apache.commons.lang3.EnumUtils:63","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.Iterable<?>.iterator(), java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4151","type":"CtReturnImpl"},"status":-2},{"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.(isStarted())) {\n    java.util.concurrent.ExecutorService java.util.concurrent.ExecutorService;\n    java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getExternalExecutor();\n    if ((java.util.concurrent.ExecutorService) == null) {\n        java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor();\n    } else {\n        java.util.concurrent.ExecutorService = null;\n    }\n    java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService));\n    return true;\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:175","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"className":"this"},"name":"replace","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:345","type":"CtIfImpl"},"status":-2},{"failures":[118],"variableMapping":{"value":"index","operand":"index"},"name":"add","transplant":{"sourceCode":"int -= int","position":"org.apache.commons.lang3.mutable.MutableInt:159","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, (int + 1))","position":"org.apache.commons.lang3.StringUtils:1038","type":"CtAssignmentImpl"},"status":-1},{"failures":[119],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:118","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.getStyle().getNullText()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:685","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DurationFormatUtils:337","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"lowerBounds"},"name":"replace","transplant":{"sourceCode":"return java.lang.reflect.Type[]","position":"org.apache.commons.lang3.reflect.TypeUtils:1538","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type[].clone()","position":"org.apache.commons.lang3.reflect.TypeUtils:252","type":"CtReturnImpl"},"status":0},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:4018","failures":[0,1,2,3,12],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:966","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:674","failures":[120,121,122,123],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.BooleanUtils:729","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.CharSequence = java.lang.CharSequence","position":"org.apache.commons.lang3.StringUtils:6775","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"style":"java.util.Calendar.DST_OFFSET","mStyle":"java.util.Calendar.DST_OFFSET"},"name":"add","transplant":{"sourceCode":"int = int | -2147483648","position":"org.apache.commons.lang3.time.FastDatePrinter:1239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a time zone name.<\/p>\n */\nprivate static class TimeZoneNameRule implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final java.util.Locale mLocale;\n\n    private final int mStyle;\n\n    private final java.lang.String mStandard;\n\n    private final java.lang.String mDaylight;\n\n    /** \n     * Constructs an instance of {@code TimeZoneNameRule} with the specified properties.\n     * \n     * @param timeZone the time zone\n     * @param locale the locale\n     * @param style the style\n     */\nTimeZoneNameRule(final java.util.TimeZone timeZone ,final java.util.Locale locale ,final int style) {\n        java.util.Locale = java.util.Locale;\n        int = int;\n        java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone, false, int, java.util.Locale);\n        java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone, true, int, java.util.Locale);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return java.lang.Math.java.lang.Math.max(java.lang.String.length(), java.lang.String.length());\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        final java.util.TimeZone java.util.TimeZone = java.util.Calendar.getTimeZone();\n        if ((java.util.TimeZone.useDaylightTime()) && ((java.util.Calendar.get(java.util.Calendar.int)) != 0)) {\n            java.lang.StringBuffer.append(org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone, true, int, java.util.Locale));\n        } else {\n            java.lang.StringBuffer.append(org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone, false, int, java.util.Locale));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1116","type":"CtClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.reflect.Field.setAccessible(false);\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:692","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:334","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>(float[].int)","position":"org.apache.commons.lang3.ArrayUtils:5804","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((++int) == (java.lang.String.length())) {\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:348","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.String.charAt(int);\n    final int int = java.lang.String.indexOf(char);\n    if (int >= 0) {\n        boolean = true;\n        if (int < int) {\n            java.lang.StringBuilder.append(java.lang.String.charAt(int));\n        } \n    } else {\n        java.lang.StringBuilder.append(char);\n    }\n}","position":"org.apache.commons.lang3.StringUtils:4888","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:577","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'd' :","position":"org.apache.commons.lang3.math.NumberUtils:556","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl"},"status":-2},{"failures":[124],"variableMapping":{"timeToLive":"found"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","position":"org.apache.commons.lang3.StringUtils:4696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object).isEquals()","position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableLong) {\n    return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue());\n} ","position":"org.apache.commons.lang3.mutable.MutableLong:236","type":"CtIfImpl"},"status":-2},{"failures":[125,126,127,128,129,130,131,132,133,134],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case java.util.Calendar.int :","position":"org.apache.commons.lang3.time.DateUtils:1714","type":"CtCaseImpl"},"status":-1},{"failures":[135],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.ClassUtils:199","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:709","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.StrBuilder:2045","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:6467","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:5418","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.translate.UnicodeEscaper.org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int, java.lang.Integer.int)","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T = T","position":"org.apache.commons.lang3.ObjectUtils:446","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testConstructors":35,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":115,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":104,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":50,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":94,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":128,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":51,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayBoolean":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":82,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":49,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":120,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayInt":4,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":93,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":117,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":37,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":46,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":114,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":36,"org.apache.commons.lang3.math.FractionTest.testFactory_double":28,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":13,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":38,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":129,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":124,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":59,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":105,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":40,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":20,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":68,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":99,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullArrayElement":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":21,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":85,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":81,"org.apache.commons.lang3.math.FractionTest.testMultiply":32,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":96,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":84,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":80,"org.apache.commons.lang3.StringUtilsTest.testLANG666":123,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":135,"org.apache.commons.lang3.math.FractionTest.testAdd":25,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":43,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":44,"org.apache.commons.lang3.math.FractionTest.testDivide":31,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayObject":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":119,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":47,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":79,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":109,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":90,"org.apache.commons.lang3.text.StrBuilderTest.testSize":34,"org.apache.commons.lang3.text.StrTokenizerTest.test8":67,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":97,"org.apache.commons.lang3.text.StrTokenizerTest.test5":65,"org.apache.commons.lang3.text.StrTokenizerTest.test4":64,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray2":1,"org.apache.commons.lang3.text.StrTokenizerTest.test7":66,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray1":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":74,"org.apache.commons.lang3.text.StrTokenizerTest.test1":61,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":113,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":60,"org.apache.commons.lang3.text.StrTokenizerTest.test3":63,"org.apache.commons.lang3.text.StrTokenizerTest.test2":62,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":92,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":107,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayLong":9,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":95,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArrayElement":2,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":75,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":87,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":77,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":132,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":78,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":42,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":98,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":103,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":23,"org.apache.commons.lang3.math.FractionTest.testSubtract":27,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayChar":8,"org.apache.commons.lang3.math.FractionTest.testToProperString":29,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripEnd_StringString":122,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":116,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":110,"org.apache.commons.lang3.math.FractionTest.testPow":26,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":71,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":72,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":106,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayFloat":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":54,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":100,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":55,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":19,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":101,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":131,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":30,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":125,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":24,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":112,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":118,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":17,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayByte":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":18,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":108,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":83,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":70,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayShort":6,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":33,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":111,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":88,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":86,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":126,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayDouble":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":133,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":91}}]
