[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(long[], long)","position":"org.apache.commons.lang3.ArrayUtils:5097","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:445","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Class<?> == null) || (!(java.lang.Class<?>.isPrimitive()))","position":"org.apache.commons.lang3.reflect.TypeUtils:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1669","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","length":"length"},"name":"replace","transplant":{"sourceCode":"return (int[] == null) || ((this.int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3521","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int[] != null) && ((int[].int) != 0)","position":"org.apache.commons.lang3.ArrayUtils:3622","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int)","position":"org.apache.commons.lang3.text.StrBuilder:1745","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2421","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>[].int) == 0) {\n    return java.lang.Class<?>[];\n} ","position":"org.apache.commons.lang3.ClassUtils:732","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.FastDateParser:116","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","position":"org.apache.commons.lang3.reflect.TypeUtils:989","type":"CtReturnImpl"},"status":-2},{"failures":[0],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.Conversion:912","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3994","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:2098","type":"CtIfImpl"},"status":-2},{"failures":[1,2,3,4],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:533","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'e'","position":"org.apache.commons.lang3.Conversion:527","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2129","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(org.apache.commons.lang3.SystemUtils.java.lang.String)","position":"org.apache.commons.lang3.SystemUtils:795","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4101","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, null, null)","position":"org.apache.commons.lang3.time.FastDateFormat:242","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(int, int, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:355","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.BooleanUtils:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 's' :\n    java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n    break;","position":"org.apache.commons.lang3.time.DurationFormatUtils:522","type":"CtCaseImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n            if (int >= 15) {\n                int -= 15;\n            } \n            boolean = int > 7;\n            boolean = true;\n        } \n        break;\n    case java.util.Calendar.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            if (int >= 12) {\n                int -= 12;\n            } \n            boolean = int >= 6;\n            boolean = true;\n        } \n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.DateUtils:1048","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean != boolean) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Boolean getLeft() {\n            return java.lang.Boolean.java.lang.Boolean.valueOf(boolean);\n        }\n\n        @java.lang.Override\n        public java.lang.Boolean getRight() {\n            return java.lang.Boolean.java.lang.Boolean.valueOf(boolean);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3881","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"tmp","operand":"tmp"},"name":"replace","transplant":{"sourceCode":"short += short","position":"org.apache.commons.lang3.mutable.MutableShort:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = short[][int]","position":"org.apache.commons.lang3.ArrayUtils:1861","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\")","position":"org.apache.commons.lang3.math.Fraction:296","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(int)","position":"org.apache.commons.lang3.text.StrBuilder:201","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"byte byte","position":"org.apache.commons.lang3.ArrayUtils:1614","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte byte = byte","position":"org.apache.commons.lang3.Conversion:1158","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5051","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String, int);\n} ","position":"org.apache.commons.lang3.StringUtils:5179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.NumberUtils:1320","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (int >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1330","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:261","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.AnnotationUtils:148","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1479","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:205","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1029","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:282","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 seconds\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = java.lang.String;\n        java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\");\n        if ((java.lang.String.length()) != (java.lang.String.length())) {\n            java.lang.String = java.lang.String;\n            java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n            if ((java.lang.String.length()) != (java.lang.String.length())) {\n                java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n            } \n        } \n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:197","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"dstPos","srcPos":"dstPos"},"name":"add","transplant":{"sourceCode":"assert ((int - 1) * 1) < (16 - int)","position":"org.apache.commons.lang3.Conversion:1626","type":"CtAssertImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    byte = ((byte)((byte & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:1160","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:912","type":"CtInvocationImpl"},"status":-2},{"failures":[12,13],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:662","type":"CtReturnImpl"},"status":-1},{"failures":[14,15],"variableMapping":{"wholeNumber":"a2","value":"y1"},"name":"replace","transplant":{"sourceCode":"double -= int","position":"org.apache.commons.lang3.math.Fraction:257","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double - (int * double)","position":"org.apache.commons.lang3.math.Fraction:279","type":"CtAssignmentImpl"},"status":-1},{"failures":[16],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.BooleanUtils:729","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:179","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"osVersion":"osName","osName":"osName"},"name":"add","transplant":{"sourceCode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.SystemUtils:1447","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.SystemUtils:1464","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1687","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1688","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.ArrayUtils:1377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.GenericArrayType == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:520","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1825","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.PrintWriter.flush()","position":"org.apache.commons.lang3.exception.ExceptionUtils:499","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:807","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.StrTokenizer:796","type":"CtContinueImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.WordUtils:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.util.concurrent.atomic.AtomicReference<T>()","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:69","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:107","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:465","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:513","type":"CtInvocationImpl"},"status":-2},{"failures":[17],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"char[][int++] = 'u'","position":"org.apache.commons.lang3.text.StrBuilder:1580","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int++] = 'r'","position":"org.apache.commons.lang3.text.StrBuilder:1579","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'E' :\n    return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);","position":"org.apache.commons.lang3.time.FastDateParser:471","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"digits":"mSize"},"name":"add","transplant":{"sourceCode":"int = 3","position":"org.apache.commons.lang3.time.FastDatePrinter:860","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; (--int) >= int ; ) {\n    java.lang.StringBuffer.append('0');\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:865","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:204","type":"CtIfImpl"},"status":0},{"failures":[18],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long, \"H:mm:ss.SSS\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long, org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false)","position":"org.apache.commons.lang3.time.DurationFormatUtils:97","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar, int)","position":"org.apache.commons.lang3.time.DateUtils:1128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5823","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 'a'","position":"org.apache.commons.lang3.Conversion:641","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.CharSequenceUtils:73","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Comparator<T>) == (org.apache.commons.lang3.Range.ComparableComparator.org.apache.commons.lang3.Range.ComparableComparator)","position":"org.apache.commons.lang3.Range:207","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"float += 0.25F","position":"org.apache.commons.lang3.reflect.MemberUtils:144","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(float)++","position":"org.apache.commons.lang3.mutable.MutableFloat:137","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[19],"variableMapping":{"index":"i","buffer":"output2"},"name":"add","transplant":{"sourceCode":"char[][int++] = 'f'","position":"org.apache.commons.lang3.text.StrBuilder:1586","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char","position":"org.apache.commons.lang3.StringUtils:5145","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.DiffResult.OBJECTS_SAME_STRING":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.builder.DiffResult:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:6511","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean[] == null) || ((boolean[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String, int, int).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:878","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return int != 0","position":"org.apache.commons.lang3.BooleanUtils:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(byte[], byte)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2508","type":"CtReturnImpl"},"status":-2},{"failures":[20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char == (org.apache.commons.lang3.CharUtils.char)) && ((java.lang.String.charAt((int - 1))) == (org.apache.commons.lang3.CharUtils.char))) {\n    return java.lang.String.substring(0, (int - 1));\n} ","position":"org.apache.commons.lang3.StringUtils:5090","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:259","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return 0;\n} else if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return java.lang.System.(java.lang.System.nanoTime()) - (this.long);\n} ","position":"org.apache.commons.lang3.time.StopWatch:340","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:3861","type":"CtLocalVariableImpl"},"status":-2},{"failures":[21],"variableMapping":{"a":"out","b":"out"},"name":"replace","transplant":{"sourceCode":"byte = byte","position":"org.apache.commons.lang3.math.NumberUtils:1260","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte = ((byte)((byte & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:1164","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"size":"strLen","endIndex":"openLen"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < (int - int)) {\n    int int = java.lang.String.indexOf(java.lang.String, int);\n    if (int < 0) {\n        break;\n    } \n    int += int;\n    final int int = java.lang.String.indexOf(java.lang.String, int);\n    if (int < 0) {\n        break;\n    } \n    java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n    int = int + int;\n}","position":"org.apache.commons.lang3.StringUtils:2528","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date(long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:286","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:3011","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:879","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = (long & (~long)) | long","position":"org.apache.commons.lang3.Conversion:698","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.lang3.builder.EqualsBuilder:412","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.StringUtils:4958","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.InterruptedException java.lang.InterruptedException","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:216","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final char char = java.lang.CharSequence.charAt((int - 1))","position":"org.apache.commons.lang3.StringUtils:6937","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.StringUtils:1719","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.delete(0, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2055","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(long)++","position":"org.apache.commons.lang3.mutable.MutableLong:118","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{"t":"i"},"name":"add","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int /= 2;\n}","position":"org.apache.commons.lang3.math.Fraction:610","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int])","position":"org.apache.commons.lang3.builder.ToStringStyle:1120","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    java.lang.StringBuilder.append(java.lang.Object);\n} ","position":"org.apache.commons.lang3.StringUtils:4050","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:333","type":"CtReturnImpl"},"status":-2},{"failures":[22],"variableMapping":{"comparison":"denominator","lhs":"denominator","rhs":"denominator"},"name":"add","transplant":{"sourceCode":"int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:226","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"binaryOperator":"(\"Index: \" + int)","name":"math","position":"org.apache.commons.lang3.ArrayUtils:6023","type":"mutation","status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32],"variableMapping":{"sz":"srcIndex"},"name":"add","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.math.NumberUtils:1377","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int - int","position":"org.apache.commons.lang3.ArrayUtils:6084","type":"CtAssignmentImpl"},"status":-1},{"failures":[33],"binaryOperator":"int <= 0","name":"removeConditional","position":"org.apache.commons.lang3.StringUtils:3666","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n    if (java.util.Map<java.lang.Object, java.lang.Object> != null) {\n        java.util.Map<java.lang.Object, java.lang.Object>.remove(java.lang.Object);\n        if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n            org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n        } \n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.CharSet(\"a-zA-Z\")","position":"org.apache.commons.lang3.CharSet:54","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2924","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.concurrent.atomic.AtomicLong.get()","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:192","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((java.lang.String.length()) == 0) || ((java.lang.String.length()) == 0)) {\n    return 0.0;\n} ","position":"org.apache.commons.lang3.StringUtils:7054","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1278","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:864","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()","position":"org.apache.commons.lang3.builder.EqualsBuilder:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"user.name\")","position":"org.apache.commons.lang3.SystemUtils:832","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 3","position":"org.apache.commons.lang3.time.FastDatePrinter:860","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.lang3.time.FastDateParser.java.util.regex.Pattern.matcher(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:144","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:304","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup<java.lang.String>","position":"org.apache.commons.lang3.text.StrLookup:83","type":"CtReturnImpl"},"status":-2},{"failures":[34],"variableMapping":{"value":"start"},"name":"replace","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.mutable.MutableInt:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.String.length()) + int","position":"org.apache.commons.lang3.StringUtils:2070","type":"CtAssignmentImpl"},"status":-1},{"failures":[35],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1644","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char = char","position":"org.apache.commons.lang3.CharRange:72","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return short[];\n} ","position":"org.apache.commons.lang3.Conversion:1255","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:59","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:667","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.LocaleUtils:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.util.Collection<?>)","position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:84","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * GenericArrayType implementation class.\n * @since 3.2\n */\nprivate static final class GenericArrayTypeImpl implements java.lang.reflect.GenericArrayType {\n    private final java.lang.reflect.Type componentType;\n\n    /** \n     * Constructor\n     * @param componentType of this array type\n     */\nprivate GenericArrayTypeImpl(java.lang.reflect.Type componentType) {\n        this.java.lang.reflect.Type = java.lang.reflect.Type;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type getGenericComponentType() {\n        return java.lang.reflect.Type;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(java.lang.Object obj) {\n        return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.GenericArrayType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.GenericArrayType)(java.lang.Object)))));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        int int = 67 << 4;\n        int |= java.lang.reflect.Type.hashCode();\n        return int;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:96","type":"CtClassImpl"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:403","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[], java.lang.Object[], null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:621","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (boolean[][(int + int)] ? 1 : 0) << int","position":"org.apache.commons.lang3.Conversion:1162","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String[][0].substring(0, int)","position":"org.apache.commons.lang3.StringUtils:6699","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, false)","position":"org.apache.commons.lang3.RandomStringUtils:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:364","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds()","position":"org.apache.commons.lang3.reflect.TypeUtils:1810","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Properties == null) {\n    return java.lang.Object.toString();\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:210","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.JavaVersion(1.5F , \"1.5\")","position":"org.apache.commons.lang3.JavaVersion:54","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n    if (java.lang.reflect.Type != null) {\n        java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1381","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5461","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>();\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:907","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.TreeSet<T> java.util.TreeSet<T> = new java.util.TreeSet<T>()","position":"org.apache.commons.lang3.ObjectUtils:529","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>[] == null) {\n    java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n} ","position":"org.apache.commons.lang3.ClassUtils:520","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.Conversion:1078","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1356","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4091","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:716","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:400","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ObjectUtils:582","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"prefix":"name"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A data class for storing the results of the background initialization\n * performed by {@code MultiBackgroundInitializer}. Objects of this inner\n * class are returned by {@link MultiBackgroundInitializer#initialize()}.\n * They allow access to all result objects produced by the\n * {@link BackgroundInitializer} objects managed by the owning instance. It\n * is also possible to retrieve status information about single\n * {@link BackgroundInitializer}s, i.e. whether they completed normally or\n * caused an exception.\n */\npublic static class MultiBackgroundInitializerResults {\n    /** \n     * A map with the child initializers.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> initializers;\n\n    /** \n     * A map with the result objects.\n     */\nprivate final java.util.Map<java.lang.String, java.lang.Object> resultObjects;\n\n    /** \n     * A map with the exceptions.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> exceptions;\n\n    /** \n     * Creates a new instance of {@code MultiBackgroundInitializerResults}\n     * and initializes it with maps for the {@code BackgroundInitializer}\n     * objects, their result objects and the exceptions thrown by them.\n     * \n     * @param inits the {@code BackgroundInitializer} objects\n     * @param results the result objects\n     * @param excepts the exceptions\n     */\nprivate MultiBackgroundInitializerResults(final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> inits ,final java.util.Map<java.lang.String, java.lang.Object> results ,final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> excepts) {\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>;\n        java.util.Map<java.lang.String, java.lang.Object> = java.util.Map<java.lang.String, java.lang.Object>;\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>;\n    }\n\n    /** \n     * Returns the {@code BackgroundInitializer} with the given name. If the\n     * name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the {@code BackgroundInitializer} with this name\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(final java.lang.String name) {\n        return org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n    }\n\n    /** \n     * Returns the result object produced by the {@code\n     * BackgroundInitializer} with the given name. This is the object\n     * returned by the initializer's {@code initialize()} method. If this\n     * {@code BackgroundInitializer} caused an exception, <b>null<\/b> is\n     * returned. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the result object produced by this {@code\n     * BackgroundInitializer}\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic java.lang.Object getResultObject(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a flag whether the {@code BackgroundInitializer} with the\n     * given name caused an exception.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return a flag whether this initializer caused an exception\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic boolean isException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(java.lang.String);\n    }\n\n    /** \n     * Returns the {@code ConcurrentException} object that was thrown by the\n     * {@code BackgroundInitializer} with the given name. If this\n     * initializer did not throw an exception, the return value is\n     * <b>null<\/b>. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the exception thrown by this initializer\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.ConcurrentException getException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a set with the names of all {@code BackgroundInitializer}\n     * objects managed by the {@code MultiBackgroundInitializer}.\n     * \n     * @return an (unmodifiable) set with the names of the managed {@code\n     * BackgroundInitializer} objects\n     */\npublic java.util.Set<java.lang.String> initializerNames() {\n        return java.util.Collections.java.util.Collections.unmodifiableSet(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.keySet());\n    }\n\n    /** \n     * Returns a flag whether the whole initialization was successful. This\n     * is the case if no child initializer has thrown an exception.\n     * \n     * @return a flag whether the initialization was successful\n     */\npublic boolean isSuccessful() {\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.isEmpty();\n    }\n\n    /** \n     * Checks whether an initializer with the given name exists. If not,\n     * throws an exception. If it exists, the associated child initializer\n     * is returned.\n     * \n     * @param name the name to check\n     * @return the initializer with this name\n     * @throws NoSuchElementException if the name is unknown\n     */\nprivate org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n        final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(java.lang.String);\n        if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n            throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String));\n        } \n        return org.apache.commons.lang3.concurrent.BackgroundInitializer<?>;\n    }\n}","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:227","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 16","position":"org.apache.commons.lang3.math.NumberUtils:740","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char >= '0') && (char <= '3')","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:78","type":"CtReturnImpl"},"status":-2},{"failures":[47,48,49],"variableMapping":{"this":"this","i":"tmpLen","seq":"substring"},"name":"add","transplant":{"sourceCode":"if (java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1504","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int--) > 0) {\n    char char = java.lang.CharSequence.charAt(int++);\n    char char = java.lang.CharSequence.charAt(int++);\n    if (char == char) {\n        continue;\n    } \n    if (!boolean) {\n        return false;\n    } \n    if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:196","type":"CtWhileImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsTest.testCeil":11,"org.apache.commons.lang3.time.DateUtilsTest.testRound":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":5,"org.apache.commons.lang3.StringUtilsTest.testChop":20,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":26,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":16,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":17,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":25,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":19,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":37,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":49,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":46,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":47,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":6,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":29,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":43,"org.apache.commons.lang3.math.FractionTest.testFactory_double":14,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":8,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":18,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":30,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":12,"org.apache.commons.lang3.ConversionTest.testHexToLong":0,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":3,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":42,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":32,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringInt":34,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":7,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":23,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":48,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":39,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":15,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":38,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":27,"org.apache.commons.lang3.ArrayUtilsTest.testReverseCharRange":35,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":1,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":13,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":22,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":21,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":4,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":9,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":28,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfInts":33,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":24,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":31,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":36,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":41}}]
