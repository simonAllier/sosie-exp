[{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:528","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:246","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableByte) {\n    return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(java.lang.Object)).byteValue());\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:879","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1062","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:194","sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"suffix":"pattern"}},{"position":"org.apache.commons.lang3.mutable.MutableObject:98","failures":[14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:668","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arrayEnd":"tok"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:40","sourceCode":"int int = ((java.lang.CharSequence.length()) - int) - 1","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:774","sourceCode":"if ((int < (java.lang.Byte.byte)) || (int > (java.lang.Byte.byte))) {\n    throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + int) + \"]\"));\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:502","sourceCode":"return T.compareTo(T)","type":"CtReturnImpl"},"failures":[16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:1038","failures":[19,20,21,22,23],"status":-1,"binaryOperator":"boolean[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:227","sourceCode":"java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:235","sourceCode":"java.lang.Thread.setDaemon(org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag().booleanValue())","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:845","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:109","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:265","sourceCode":"if (int == int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:290","sourceCode":"if (java.lang.Integer == null) {\n    if (java.lang.Integer == null) {\n        return true;\n    } \n    if (java.lang.Integer == null) {\n        return false;\n    } \n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return true;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:222","sourceCode":"return ((this.java.util.Comparator<T>.compare(T, T)) > (-1)) && ((this.java.util.Comparator<T>.compare(T, this.T)) < 1)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:261","sourceCode":"return (java.util.Comparator<T>.compare(T, T)) == 0","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"element":"maximum","minimum":"element","maximum":"maximum","comparator":"comparator"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:978","sourceCode":"return true","type":"CtReturnImpl"},"failures":[28,29,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1112","sourceCode":"if (int > int) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:361","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,32,33,34,35,12,36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startPos":"trial","org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"trial","endLimit":"trial"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:933","sourceCode":"java.lang.String = \"0\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:935","sourceCode":"java.lang.String = \"1\"","type":"CtAssignmentImpl"},"failures":[40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:118","sourceCode":"java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:40","sourceCode":"return 1","type":"CtReturnImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:641","sourceCode":"return 'a'","type":"CtReturnImpl"},"failures":[53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:328","sourceCode":"return '9'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:533","sourceCode":"return 'c'","type":"CtReturnImpl"},"failures":[54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","sourceCode":"if ((int >= (this.int)) && (int <= int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"codepoint":"above","below":"below","above":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:256","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}","type":"CtIfImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"b"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:928","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:217","sourceCode":"return int == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:760","sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:760","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.builder.ToStringStyle:2002","failures":[59,60],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:133","sourceCode":"return 11","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:226","sourceCode":"return ((83 + (char)) + (7 * (char))) + (boolean ? 1 : 0)","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:166","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:181","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(char[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1336","sourceCode":"return false","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:218","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:255","sourceCode":"if (!(boolean)) {\n    if (boolean) {\n        org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService().shutdownNow();\n    } \n    if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n        java.util.concurrent.ScheduledFuture<?>.cancel(false);\n    } \n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[63,64,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"ownExecutor":"shutdown"}},{"position":"org.apache.commons.lang3.text.WordUtils:373","inlineConstant":"boolean boolean = true","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":47,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":38,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":8,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":52,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":15,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":4,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":51,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":12,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":49,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":41,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":45,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":48,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":58,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":57,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":34,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":1,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":3,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":44,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":0,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":46,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":60,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":21,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":10,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":55,"org.apache.commons.lang3.ObjectUtilsTest.testCompare":18,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":5,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":50,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":56,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":9,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":64,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":43,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":62,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownOwnExecutor":63,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":37,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_3items":23,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":33,"org.apache.commons.lang3.ObjectUtilsTest.testMax":16,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":30,"org.apache.commons.lang3.ObjectUtilsTest.testMin":17,"org.apache.commons.lang3.RangeTest.testIsEndedBy":27,"org.apache.commons.lang3.CharRangeTest.testHashCode":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":59,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":32,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":20,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":39,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":36,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":42,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":65,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":13,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_nullInput":19,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":2,"org.apache.commons.lang3.math.FractionTest.testToProperString":40,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":7,"org.apache.commons.lang3.BooleanUtilsTest.testXor_primitive_validInput_2items":22,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":26,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":14,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":24,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":53,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":6,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":35}}]
