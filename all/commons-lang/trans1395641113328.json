[{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:566","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:478","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"numeric":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1580","sourceCode":"boolean[][int] = boolean[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1662","sourceCode":"boolean[][(int + int)] = (1 & (byte >> int)) != 0","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"j":"dstPos","array":"dst","i":"dstPos"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:524","sourceCode":"for (int int = int ; (--int) >= 0 ; ) {\n    final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.List<java.lang.String>;\n    if (int != 0) {\n        java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n        org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n    } \n    if (int == (int - 1)) {\n        java.util.List<java.lang.String>.add(java.lang.Throwable[][int].toString());\n    } else {\n        java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())));\n    }\n    for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n        java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1512","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:485","sourceCode":"return false","type":"CtReturnImpl"},"failures":[17,35,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1398","inlineConstant":"int int = 0","failures":[88],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:836","sourceCode":"if ((int < (java.lang.Short.short)) || (int > (java.lang.Short.short))) {\n    throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + int) + \"]\"));\n} ","type":"CtIfImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.NumberStrategy:632","sourceCode":"java.lang.StringBuilder.append(\"(\\\\p{IsNd}{\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:53","sourceCode":"java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int))","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"builder"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:360","sourceCode":"final char[] char[] = new char[int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:459","sourceCode":"final char[] char[] = new char[(int / 2) + 1]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"size":"strLen"}},{"position":"org.apache.commons.lang3.CharUtils:218","failures":[91,92],"status":-1,"binaryOperator":"org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)) == false","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4523","sourceCode":"int = int + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:290","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[93,94,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"replLength":"numer1","start":"numer2","end":"numer1"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:168","sourceCode":"java.lang.Boolean.java.lang.Boolean.hashCode()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3474","sourceCode":"for (int int = 0 ; int < (boolean[].int) ; int++) {\n    java.lang.Boolean[][int] = boolean[][int] ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n}","type":"CtForImpl"},"failures":[96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","sourceCode":"if (java.lang.Throwable == null) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:45","sourceCode":"int >>= 1","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1688","sourceCode":"throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:122","sourceCode":"return java.lang.Integer.java.lang.Integer.toHexString(int).toUpperCase(java.util.Locale.java.util.Locale)","type":"CtReturnImpl"},"failures":[98,99,100,101,102,103,104,105],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2099","sourceCode":"if (int == 0) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:104","sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","type":"CtIfImpl"},"failures":[99,100,101,103,106,107,104,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"len":"below"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:97","sourceCode":"if (int < 2) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2821","sourceCode":"while (int < int) {\n    int = java.lang.String.indexOf(java.lang.String, int);\n    if (int > (-1)) {\n        if (int > int) {\n            int += 1;\n            if (int == int) {\n                int = int;\n                java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n            } else {\n                java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int));\n                int = int + int;\n            }\n        } else {\n            if (boolean) {\n                int += 1;\n                if (int == int) {\n                    int = int;\n                    java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n                } else {\n                    java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n                }\n            } \n            int = int + int;\n        }\n    } else {\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n        int = int;\n    }\n}","type":"CtWhileImpl"},"failures":[109,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:180","sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:701","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:111","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, true)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:313","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, java.lang.String.toCharArray())","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:176","sourceCode":"return null","type":"CtReturnImpl"},"failures":[113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1692","failures":[115,116,117,118,119,120,121,122],"status":-1,"binaryOperator":"((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:194","sourceCode":"try {\n    java.lang.reflect.Method = java.lang.Throwable.getClass().getMethod(java.lang.String);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:331","sourceCode":"if (org.apache.commons.lang3.Range<T> == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:236","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableLong) {\n    return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:236","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableInt) {\n    return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(java.lang.Object)).intValue());\n} ","type":"CtIfImpl"},"failures":[124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:986","sourceCode":"for (int int = 1 ; int < (short[].int) ; int++) {\n    if ((short[][int]) > short) {\n        short = short[][int];\n    } \n}","type":"CtForImpl"},"failures":[125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1048","sourceCode":"boolean ^= boolean","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:266","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"shutdown","element":"shutdown"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:524","sourceCode":"if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:429","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","type":"CtIfImpl"},"failures":[126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"srcPos","src":"src"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:256","sourceCode":"java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1159","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:662","sourceCode":"java.lang.StringBuffer.append(long)","type":"CtInvocationImpl"},"failures":[2,3,4,9,10,11,128,32,33,41,59,60,61,66,67,68,73,74,75,81,82,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:90","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:358","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:321","sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return 'a';\n}","type":"CtIfImpl"},"failures":[129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6017","sourceCode":"if (int >= int) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"index":"trimStart","prevIndex":"trimStart"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:119","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)))","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:511","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Method)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:535","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n        continue hierarchyTraversal;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.ObjectUtils:234","failures":[131],"status":-1,"binaryOperator":"(int * 31) + org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:460","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:624","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1013","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[132,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":37,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":27,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":89,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":39,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":9,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":36,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":121,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":106,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":48,"org.apache.commons.lang3.math.FractionTest.testFactory_double":93,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":52,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":79,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":81,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":29,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":24,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":128,"org.apache.commons.lang3.time.DateUtilsTest.testRound":112,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":78,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":50,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":83,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":101,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":11,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":2,"org.apache.commons.lang3.RangeTest.testIsAfterRange":123,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":41,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":53,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":12,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":58,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":17,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":54,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":110,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":117,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":113,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":8,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":80,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":40,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":90,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":46,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":64,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":60,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":68,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":127,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":85,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":51,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":133,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":105,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":92,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":95,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":21,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":91,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":130,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":20,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":104,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":31,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":4,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_boolean":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":18,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":67,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":114,"org.apache.commons.lang3.ArrayUtilsTest.testToString":87,"org.apache.commons.lang3.ConversionTest.testLongToHex":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":86,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":23,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":75,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":42,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":62,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":34,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":118,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":14,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":66,"org.apache.commons.lang3.ConversionTest.testByteToBinary":0,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":124,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":49,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":44,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":72,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":109,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":28,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":32,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":26,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":1,"org.apache.commons.lang3.math.FractionTest.testToProperString":94,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":82}}]
