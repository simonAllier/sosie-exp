[{"failures":[0,1],"binaryOperator":"(java.lang.CharSequence == null)","name":"negateConditional","position":"org.apache.commons.lang3.StringUtils:1372","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:691","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.text.StrTokenizer:475","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int[][int] = int","position":"org.apache.commons.lang3.ArrayUtils:1758","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.StringUtils:5210","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = int ; int < (int[].int) ; int++) {\n    if (int == (int[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2131","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","position":"org.apache.commons.lang3.time.DateUtils:832","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[])","position":"org.apache.commons.lang3.ArrayUtils:5164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.ObjectUtils:158","type":"CtReturnImpl"},"status":-2},{"failures":[2,3,4,5,6,7],"variableMapping":{"buf":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(']')","position":"org.apache.commons.lang3.Range:456","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:428","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"strLen":"i","this":"this","seq":"cs"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1503","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:312","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == (org.apache.commons.lang3.ArrayUtils.int)) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:4773","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[] == null ? -1 : char[].int","position":"org.apache.commons.lang3.text.WordUtils:410","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"timeToLive","srcPos":"timeToLive"},"name":"add","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","position":"org.apache.commons.lang3.StringUtils:4696","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"startIndex":"months","size":"months"},"name":"replace","transplant":{"sourceCode":"int = int >= int ? int - 1 : int","position":"org.apache.commons.lang3.text.StrBuilder:2423","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:370","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[8],"variableMapping":{"milliseconds":"j"},"name":"add","transplant":{"sourceCode":"int += 1000","position":"org.apache.commons.lang3.time.DurationFormatUtils:299","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int[][int]","position":"org.apache.commons.lang3.math.NumberUtils:819","type":"CtAssignmentImpl"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","position":"org.apache.commons.lang3.ObjectUtils:344","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.CompareToBuilder:326","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += char[].int","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:89","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[3,136,7,137],"binaryOperator":"long / (org.apache.commons.lang3.time.DateUtils.long)","name":"math","position":"org.apache.commons.lang3.time.DurationFormatUtils:137","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Byte[] == null) {\n    return null;\n} else if ((java.lang.Byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char","position":"org.apache.commons.lang3.RandomStringUtils:286","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(1)","position":"org.apache.commons.lang3.BooleanUtils:617","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:797","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:952","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Iterable<? extends E>)","position":"org.apache.commons.lang3.EnumUtils:144","type":"CtInvocationImpl"},"status":-2},{"failures":[138,139,140],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.lang3.time.FastDatePrinter:569","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ true , true , false , false }","position":"org.apache.commons.lang3.Conversion:250","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.Conversion:1619","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4291","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.int;\n        int = java.util.Calendar.int;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.get(java.util.Calendar.int);\n        int = int - 1;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n        int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.DateUtils:1185","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:574","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.StringBuilder.toString())","position":"org.apache.commons.lang3.time.FastDateParser:627","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"cs1":"seq","cs2":"seq"},"name":"replace","transplant":{"sourceCode":"return java.lang.CharSequence.equals(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:802","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1499","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3908","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(float[][int], float[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:872","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.ArrayUtils:4073","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3232","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"width","denominator":"width","numerator":"width"},"name":"add","transplant":{"sourceCode":"if ((int == int) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = java.lang.StringBuilder.length() ; int < int ; int++) {\n    java.lang.StringBuilder.insert((boolean ? int : 0), char);\n}","position":"org.apache.commons.lang3.text.FormattableUtils:144","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int /= 2","position":"org.apache.commons.lang3.math.Fraction:611","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(1 , 5)","position":"org.apache.commons.lang3.math.Fraction:79","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.Object)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1293","type":"CtLocalVariableImpl"},"status":-2},{"failures":[141],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.Conversion:1197","type":"mutation","status":-1},{"failures":[142],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:855","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n    java.util.List<java.lang.Object>.add(org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue());\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:80","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FormatCache<F>.getDateTimeInstance(java.lang.Integer.java.lang.Integer.valueOf(int), null, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:160","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.Validate.DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EX_MESSAGE":"org.apache.commons.lang3.Validate.DEFAULT_NOT_BLANK_EX_MESSAGE","this":"this","iterable":"chars"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.Validate.noNullElements(T, this.org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:601","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notBlank(T, org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:476","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:243","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.String[])","position":"org.apache.commons.lang3.StringUtils:6687","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"cs1":"cs2","cs2":"cs2"},"name":"replace","transplant":{"sourceCode":"return java.lang.CharSequence.equals(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:802","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return java.lang.CharSequence.equals(java.lang.CharSequence);\n} ","position":"org.apache.commons.lang3.StringUtils:801","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Range:437","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\")","position":"org.apache.commons.lang3.time.FastDateParser:361","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int))","position":"org.apache.commons.lang3.time.FastDateParser:318","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:1032","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","position":"org.apache.commons.lang3.exception.ExceptionUtils:209","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1298","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.runtime.name\")","position":"org.apache.commons.lang3.SystemUtils:373","type":"CtInvocationImpl"},"status":-2},{"failures":[143],"binaryOperator":"org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))","name":"removeConditional","position":"org.apache.commons.lang3.StringUtils:2373","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1766","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isPrimitive())) {\n    float += 0.1F;\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:170","type":"CtIfImpl"},"status":-2},{"failures":[144],"variableMapping":{"value":"shift","operand":"dstPos"},"name":"replace","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.mutable.MutableInt:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:879","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final int int = 15 << int;\n    int = (int & (~int)) | int;\n}","position":"org.apache.commons.lang3.Conversion:946","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException((int - int))","position":"org.apache.commons.lang3.text.StrBuilder:2131","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str","i":"pads"},"name":"replace","transplant":{"sourceCode":"if (int == (-1)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:311","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.concat(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.StringUtils:5318","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.CharSequence.equals(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:802","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 seconds\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:198","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.time.DurationFormatUtils.m":"org.apache.commons.lang3.time.DurationFormatUtils.m","value":"org.apache.commons.lang3.time.DurationFormatUtils.S"},"name":"add","transplant":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object","position":"org.apache.commons.lang3.time.DurationFormatUtils:520","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:436","type":"CtIfImpl"},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154],"variableMapping":{"index":"index"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, ((int - int) - 1))","position":"org.apache.commons.lang3.ArrayUtils:5199","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"numerator":"length"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(short[], 0, short[].int)","position":"org.apache.commons.lang3.ArrayUtils:1481","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The style must not be null\")","position":"org.apache.commons.lang3.builder.ToStringBuilder:137","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:254","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"srcPos","shift":"srcPos","i":"srcPos"},"name":"add","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1593","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:1331","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"classLoader":"classLoader","org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR":"org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR","lastDotIndex":"lastDotIndex","this":"this","className":"className","initialize":"initialize"},"name":"add","transplant":{"sourceCode":"try {\n    return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n}","position":"org.apache.commons.lang3.ClassUtils:836","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean)","position":"org.apache.commons.lang3.ClassUtils:837","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:675","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:6072","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:1123","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output a two digit year.<\/p>\n */\nprivate static class TwoDigitYearField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField INSTANCE = new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField();\n\n    /** \n     * Constructs an instance of {@code TwoDigitYearField}.\n     */\nTwoDigitYearField() {\n        java.lang.Object.super();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 2;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(java.lang.StringBuffer, ((java.util.Calendar.get(java.util.Calendar.int)) % 100));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:921","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:226","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, float[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1379","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    short[][(int + int)] = ((short)(65535 & (long >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1229","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Lookup implementation that uses a Map.\n */\nstatic class MapStrLookup<V> extends org.apache.commons.lang3.text.StrLookup<V> {\n    /** \n     * Map keys are variable names and value.\n     */\nprivate final java.util.Map<java.lang.String, V> map;\n\n    /** \n     * Creates a new instance backed by a Map.\n     * \n     * @param map  the map of keys to values, may be null\n     */\nMapStrLookup(final java.util.Map<java.lang.String, V> map) {\n        this.java.util.Map<java.lang.String, V> = java.util.Map<java.lang.String, V>;\n    }\n\n    /** \n     * Looks up a String key to a String value using the map.\n     * <p>\n     * If the map is null, then null is returned.\n     * The map result object is converted to a string using toString().\n     * \n     * @param key  the key to be looked up, may be null\n     * @return the matching value, null if no match\n     */\n@java.lang.Override\n    public java.lang.String lookup(final java.lang.String key) {\n        if ((java.util.Map<java.lang.String, V>) == null) {\n            return null;\n        } \n        final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(java.lang.String);\n        if (java.lang.Object == null) {\n            return null;\n        } \n        return java.lang.Object.toString();\n    }\n}","position":"org.apache.commons.lang3.text.StrLookup:137","type":"CtClassImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (37 << 4) | (java.lang.reflect.Type.hashCode())","position":"org.apache.commons.lang3.reflect.TypeLiteral:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (byte) < byte ? -1 : (byte) == byte ? 0 : 1","position":"org.apache.commons.lang3.mutable.MutableByte:272","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.util.List<java.lang.Class<?>>) {\n    if (java.lang.Class<?> == null) {\n        java.util.List<java.lang.String>.add(null);\n    } else {\n        java.util.List<java.lang.String>.add(java.lang.Class<?>.getName());\n    }\n}","position":"org.apache.commons.lang3.ClassUtils:429","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.Conversion:870","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY":"result"},"name":"replace","transplant":{"sourceCode":"return java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:794","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:3351","type":"CtReturnImpl"},"status":0},{"failures":[155,156,157,158,159,160,161,162],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; (--int) >= 2 ; ) {\n    java.lang.StringBuffer.append('0');\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:852","type":"CtForImpl"},"status":-1},{"failures":[163,164,165,166,167,168,169,170],"variableMapping":{"date1":"date","cal1":"val"},"name":"replace","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:160","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Date.getTime()) != long) {\n    java.util.Date.setTime(long);\n    java.util.Calendar.setTime(java.util.Date);\n} ","position":"org.apache.commons.lang3.time.DateUtils:1001","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.concurrent.Future<T>) != null","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.RandomStringUtils:266","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Element that is parsed from the format pattern.\n */\nstatic class Token {\n    /** \n     * Helper method to determine if a set of tokens contain a value\n     * \n     * @param tokens set to look in\n     * @param value to look for\n     * @return boolean <code>true<\/code> if contained\n     */\nstatic boolean containsTokenWithValue(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final java.lang.Object value) {\n        final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token[].int;\n        for (int int = 0 ; int < int ; int++) {\n            if ((org.apache.commons.lang3.time.DurationFormatUtils.Token[][int].getValue()) == java.lang.Object) {\n                return true;\n            } \n        }\n        return false;\n    }\n\n    private final java.lang.Object value;\n\n    private int count;\n\n    /** \n     * Wraps a token around a value. A value would be something like a 'Y'.\n     * \n     * @param value to wrap\n     */\nToken(final java.lang.Object value) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = 1;\n    }\n\n    /** \n     * Wraps a token around a repeated number of a value, for example it would\n     * store 'yyyy' as a value for y and a count of 4.\n     * \n     * @param value to wrap\n     * @param count to wrap\n     */\nToken(final java.lang.Object value ,final int count) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = int;\n    }\n\n    /** \n     * Adds another one of the value\n     */\nvoid increment() {\n        (int)++;\n    }\n\n    /** \n     * Gets the current number of values represented\n     * \n     * @return int number of values represented\n     */\nint getCount() {\n        return int;\n    }\n\n    /** \n     * Gets the particular value this token represents.\n     * \n     * @return Object value\n     */\njava.lang.Object getValue() {\n        return java.lang.Object;\n    }\n\n    /** \n     * Supports equality of this Token to another Token.\n     * \n     * @param obj2 Object to consider equality of\n     * @return boolean <code>true<\/code> if equal\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj2) {\n        if (java.lang.Object instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(java.lang.Object));\n            if ((this.java.lang.Object.getClass()) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.getClass())) {\n                return false;\n            } \n            if ((this.int) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.int)) {\n                return false;\n            } \n            if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n            } else if ((this.java.lang.Object) instanceof java.lang.Number) {\n                return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            } else {\n                return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            }\n        } \n        return false;\n    }\n\n    /** \n     * Returns a hash code for the token equal to the\n     * hash code for the token's value. Thus 'TT' and 'TTTT'\n     * will have the same hash code.\n     * \n     * @return The hash code for the token\n     */\n@java.lang.Override\n    public int hashCode() {\n        return this.java.lang.Object.hashCode();\n    }\n\n    /** \n     * Represents this token as a String.\n     * \n     * @return String representation of the token\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(this.java.lang.Object.toString(), this.int);\n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:557","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    final char char = java.lang.CharSequence.charAt(int);\n    boolean boolean = false;\n    for (int int = java.lang.Math.java.lang.Math.max(0, (int - int)) ; (!boolean) && (int < java.lang.Math.(java.lang.Math.min((int + int), java.lang.CharSequence.length()))) ; int++) {\n        if ((java.lang.StringBuilder.charAt(int)) == char) {\n            boolean = true;\n            java.lang.StringBuilder.append(char);\n            java.lang.StringBuilder.setCharAt(int, '*');\n        } \n    }\n}","position":"org.apache.commons.lang3.StringUtils:7091","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((((char == 'f') || (char == 'F')) && ((char == 'a') || (char == 'A'))) && ((char == 'l') || (char == 'L'))) && ((char == 's') || (char == 'S'))) && ((char == 'e') || (char == 'E'))) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:621","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:577","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:944","type":"CtIfImpl"},"status":-2},{"failures":[171],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue())","position":"org.apache.commons.lang3.mutable.MutableLong:237","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"list":"list"},"name":"replace","transplant":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2541","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.StringUtils:2977","type":"CtReturnImpl"},"status":-2},{"failures":[172],"variableMapping":{"fieldName":"contentStart"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1818","type":"CtIfImpl"},"status":-1},{"failures":[],"binaryOperator":"(int + 3)","name":"math","position":"org.apache.commons.lang3.Conversion:554","type":"mutation","status":0},{"failures":[163,164,165,166,167,168,169,170],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Date.setTime(long)","position":"org.apache.commons.lang3.time.DateUtils:1002","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:382","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:65","type":"CtThrowImpl"},"status":-2},{"failures":[173,174,175,176,177,4,158,162],"binaryOperator":"int / ((60 * 60) * 1000)","name":"math","position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1204","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:276","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return 0;\n} ","position":"org.apache.commons.lang3.CharSetUtils:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:410","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (double[].int) ; int++) {\n    if (double == (double[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2565","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"regex"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4002","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replacePattern(java.lang.String, java.lang.String, org.apache.commons.lang3.StringUtils.java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4458","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.ToStringStyle.DEFAULT_STYLE":"org.apache.commons.lang3.builder.ToStringBuilder.defaultStyle","style":"org.apache.commons.lang3.builder.ToStringBuilder.defaultStyle"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = this.org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle","position":"org.apache.commons.lang3.builder.DiffResult:93","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = org.apache.commons.lang3.builder.ToStringStyle","position":"org.apache.commons.lang3.builder.ToStringBuilder:139","type":"CtAssignmentImpl"},"status":-2},{"failures":[178],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object, java.util.Map<java.lang.String, java.lang.String>)","position":"org.apache.commons.lang3.text.StrSubstitutor:220","type":"CtReturnImpl"},"status":-1},{"failures":[179,180],"binaryOperator":"(double[].int) - 1","name":"math","position":"org.apache.commons.lang3.ArrayUtils:2659","type":"mutation","status":-1},{"failures":[181],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:252","type":"CtIfImpl"},"status":-1},{"failures":[182,183,184,185,186,187],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}","position":"org.apache.commons.lang3.math.Fraction:596","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1610","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.time.DateUtils:374","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:6917","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type, java.lang.Class<?>, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.Class<?>.getTypeParameters()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1522","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:259","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","position":"org.apache.commons.lang3.StringUtils:4696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"The field must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:509","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(int[], int[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Integer[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Integer[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:598","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setSizeEndText(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:493","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:423","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:297","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Short[] == null) {\n    return null;\n} else if ((java.lang.Short[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"format":"format","previousValue":"format"},"name":"add","transplant":{"sourceCode":"F = F","position":"org.apache.commons.lang3.time.FormatCache:87","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"F = org.apache.commons.lang3.time.FormatCache<F>.createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:82","type":"CtAssignmentImpl"},"status":0},{"failures":[188],"name":"returnValue","position":"org.apache.commons.lang3.AnnotationUtils:327","type":"mutation","return":"return false","status":-1},{"failures":[189,190],"variableMapping":{"denom2":"j","numer2":"j","fraction":"tmp"},"name":"replace","transplant":{"sourceCode":"double = ((double)(int)) / ((double)(int))","position":"org.apache.commons.lang3.math.Fraction:282","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double[][int]","position":"org.apache.commons.lang3.ArrayUtils:1686","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((--int) >= 0) {\n    final int int = int[][int];\n    if ((int < 0) || (int >= int)) {\n        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n    } \n    if (int >= int) {\n        continue;\n    } \n    int++;\n    int = int;\n}","position":"org.apache.commons.lang3.ArrayUtils:6020","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.java.lang.String.valueOf(int))","position":"org.apache.commons.lang3.text.StrBuilder:809","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"obj"},"name":"replace","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T == null ? T : T","position":"org.apache.commons.lang3.ObjectUtils:664","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2))","position":"org.apache.commons.lang3.ClassUtils:965","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.text.StrSubstitutor:846","type":"CtAssignmentImpl"},"status":-2},{"failures":[191],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:136","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:6073","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> = org.apache.commons.lang3.time.FastDatePrinter.parsePattern()","position":"org.apache.commons.lang3.time.FastDatePrinter:149","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = ++int","position":"org.apache.commons.lang3.StringUtils:3101","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:648","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((int = java.util.BitSet.nextSetBit(int)) != (-1)) {\n    int = int - int;\n    if (int > 0) {\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int);\n        int += int;\n    } \n    int = java.util.BitSet.nextClearBit(int);\n}","position":"org.apache.commons.lang3.ArrayUtils:6076","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6768","type":"CtIfImpl"},"status":-2},{"failures":[192],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:7317","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((char) <= (org.apache.commons.lang3.CharRange.char)) && ((char) >= (org.apache.commons.lang3.CharRange.char))","position":"org.apache.commons.lang3.CharRange:195","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:240","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(byte[], byte[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Byte[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Byte[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:262","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:4055","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long += int","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:417","type":"CtOperatorAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":81,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":78,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":170,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":149,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":174,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":14,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":94,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":171,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":125,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":155,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":56,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":107,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":109,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":131,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":165,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":51,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":103,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":91,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":68,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":93,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":72,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":62,"org.apache.commons.lang3.math.FractionTest.testMultiply":186,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":140,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":40,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":100,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":0,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":74,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":159,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":99,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":177,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":87,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":89,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":158,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBeforeLast_StringString":143,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":54,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":121,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":112,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":77,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":37,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":154,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":110,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":144,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":137,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":61,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":42,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":104,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":55,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":126,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":35,"org.apache.commons.lang3.math.FractionTest.testReduce":187,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":160,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":6,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":138,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":108,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":129,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":106,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":43,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":136,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":71,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":169,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":66,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":49,"org.apache.commons.lang3.ArrayUtilsTest.testReverseDouble":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":26,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":119,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":134,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":31,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":139,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":45,"org.apache.commons.lang3.ArrayUtilsTest.testReverseDoubleRange":190,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":13,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":176,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":34,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":2,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":11,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":133,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":67,"org.apache.commons.lang3.math.FractionTest.testFactory_double":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":53,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":123,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":115,"org.apache.commons.lang3.ArrayUtilsTest.testToString":9,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":16,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":172,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":113,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":21,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":175,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":130,"org.apache.commons.lang3.math.FractionTest.testAdd":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":80,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":98,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":58,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":114,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":60,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":146,"org.apache.commons.lang3.ClassUtilsTest.test_getSimpleName_Object":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":36,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":95,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":19,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":148,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":167,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":192,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveNumberArray":151,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":101,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":23,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":63,"org.apache.commons.lang3.math.FractionTest.testPow":184,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":150,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":124,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":152,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":168,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":22,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":48,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":97,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":153,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerNullName":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":39,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":163,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":156,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":117,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":41,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":118,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":38,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":85,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":164,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":128}}]
