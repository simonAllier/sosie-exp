[{"failures":[],"variableMapping":{"sz":"srcPos"},"name":"replace","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.math.NumberUtils:1377","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1479","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2349","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"i":"i"},"name":"add","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:1971","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) != (char[][int])) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:372","type":"CtIfImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:827","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T) == null ? 0 : T.hashCode()","position":"org.apache.commons.lang3.mutable.MutableObject:114","type":"CtReturnImpl"},"status":-1},{"failures":[1],"variableMapping":{"change":"start","varLen":"start","startPos":"openLen","endPos":"openLen"},"name":"add","transplant":{"sourceCode":"int = (int + int) - (int - int)","position":"org.apache.commons.lang3.text.StrSubstitutor:855","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.StringUtils:2533","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder, int, int).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:969","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:126","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"startCutoff":"org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE","java.util.Calendar.SUNDAY":"modType"},"name":"add","transplant":{"sourceCode":"if (int < int) {\n    int += 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!boolean) && (((org.apache.commons.lang3.time.DateUtils.int) == int) || (int < 30))) {\n    long = long - (int * 60000L);\n} ","position":"org.apache.commons.lang3.time.DateUtils:996","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.WordUtils:189","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3)","position":"org.apache.commons.lang3.time.FastDateParser:520","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"switch (char[][java.text.ParsePosition.getIndex()]) {\n    case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n        org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n        return java.lang.StringBuilder == null ? null : java.lang.StringBuilder.append(char[], int, ((java.text.ParsePosition.getIndex()) - int));\n    default :\n        org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:497","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:365","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:607","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int >= (int) ? (int) - 1 : int","position":"org.apache.commons.lang3.text.StrBuilder:2423","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case java.util.Calendar.int :\n    long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);","position":"org.apache.commons.lang3.time.DateUtils:1721","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:541","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"bit_pattern":"length","count":"length"},"name":"add","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","position":"org.apache.commons.lang3.BitField:43","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Character[].int) ; int++) {\n    char[][int] = java.lang.Character[][int].charValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:2964","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int < 0) || (int >= org.apache.commons.lang3.text.StrBuilder.(length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.text.StrBuilder:1727","type":"CtBreakImpl"},"status":-2},{"failures":[2,3,4],"variableMapping":{"prefix":"valueDelimiter","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","position":"org.apache.commons.lang3.text.StrSubstitutor:1010","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","position":"org.apache.commons.lang3.text.StrSubstitutor:1149","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], java.lang.Byte.byteValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5373","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, (java.lang.Class<?> == null ? \"null\" : java.lang.Class<?>.getName()), java.lang.Class<?>.getName()))","position":"org.apache.commons.lang3.Validate:1228","type":"CtThrowImpl"},"status":-2},{"failures":[5],"binaryOperator":"((int[] == null) && (int[] != null))","name":"removeConditional","position":"org.apache.commons.lang3.ArrayUtils:1264","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:506","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][((T[].int) - 1)] = T","position":"org.apache.commons.lang3.ArrayUtils:4018","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Lookup implementation that uses a Map.\n */\nstatic class MapStrLookup<V> extends org.apache.commons.lang3.text.StrLookup<V> {\n    /** \n     * Map keys are variable names and value.\n     */\nprivate final java.util.Map<java.lang.String, V> map;\n\n    /** \n     * Creates a new instance backed by a Map.\n     * \n     * @param map  the map of keys to values, may be null\n     */\nMapStrLookup(final java.util.Map<java.lang.String, V> map) {\n        this.java.util.Map<java.lang.String, V> = java.util.Map<java.lang.String, V>;\n    }\n\n    /** \n     * Looks up a String key to a String value using the map.\n     * <p>\n     * If the map is null, then null is returned.\n     * The map result object is converted to a string using toString().\n     * \n     * @param key  the key to be looked up, may be null\n     * @return the matching value, null if no match\n     */\n@java.lang.Override\n    public java.lang.String lookup(final java.lang.String key) {\n        if ((java.util.Map<java.lang.String, V>) == null) {\n            return null;\n        } \n        final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(java.lang.String);\n        if (java.lang.Object == null) {\n            return null;\n        } \n        return java.lang.Object.toString();\n    }\n}","position":"org.apache.commons.lang3.text.StrLookup:137","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return 0;\n} ","position":"org.apache.commons.lang3.StringUtils:6545","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.java.lang.Character.codePointCount(java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringEscapeUtils:401","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:243","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1275","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:545","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n        continue outer;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2470","type":"CtForImpl"},"status":-2},{"failures":[6,7,8,9,10,11,12],"binaryOperator":"int < (java.lang.Boolean[].int)","name":"conditionalBoundary","position":"org.apache.commons.lang3.ArrayUtils:3440","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String != null) {\n    final int int = java.lang.String.length();\n    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n    boolean = true;\n    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n    int = (int + int) - (int - int);\n    int += int;\n    int += int;\n    int += int;\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:848","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:389","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"long < long","name":"conditionalBoundary","position":"org.apache.commons.lang3.math.NumberUtils:1102","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<L>.remove(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:202","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5515","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(new java.util.Date(long), java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDatePrinter:444","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Element that is parsed from the format pattern.\n */\nstatic class Token {\n    /** \n     * Helper method to determine if a set of tokens contain a value\n     * \n     * @param tokens set to look in\n     * @param value to look for\n     * @return boolean <code>true<\/code> if contained\n     */\nstatic boolean containsTokenWithValue(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final java.lang.Object value) {\n        final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token[].int;\n        for (int int = 0 ; int < int ; int++) {\n            if ((org.apache.commons.lang3.time.DurationFormatUtils.Token[][int].getValue()) == java.lang.Object) {\n                return true;\n            } \n        }\n        return false;\n    }\n\n    private final java.lang.Object value;\n\n    private int count;\n\n    /** \n     * Wraps a token around a value. A value would be something like a 'Y'.\n     * \n     * @param value to wrap\n     */\nToken(final java.lang.Object value) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = 1;\n    }\n\n    /** \n     * Wraps a token around a repeated number of a value, for example it would\n     * store 'yyyy' as a value for y and a count of 4.\n     * \n     * @param value to wrap\n     * @param count to wrap\n     */\nToken(final java.lang.Object value ,final int count) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = int;\n    }\n\n    /** \n     * Adds another one of the value\n     */\nvoid increment() {\n        (int)++;\n    }\n\n    /** \n     * Gets the current number of values represented\n     * \n     * @return int number of values represented\n     */\nint getCount() {\n        return int;\n    }\n\n    /** \n     * Gets the particular value this token represents.\n     * \n     * @return Object value\n     */\njava.lang.Object getValue() {\n        return java.lang.Object;\n    }\n\n    /** \n     * Supports equality of this Token to another Token.\n     * \n     * @param obj2 Object to consider equality of\n     * @return boolean <code>true<\/code> if equal\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj2) {\n        if (java.lang.Object instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(java.lang.Object));\n            if ((this.java.lang.Object.getClass()) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.getClass())) {\n                return false;\n            } \n            if ((this.int) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.int)) {\n                return false;\n            } \n            if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n            } else if ((this.java.lang.Object) instanceof java.lang.Number) {\n                return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            } else {\n                return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            }\n        } \n        return false;\n    }\n\n    /** \n     * Returns a hash code for the token equal to the\n     * hash code for the token's value. Thus 'TT' and 'TTTT'\n     * will have the same hash code.\n     * \n     * @return The hash code for the token\n     */\n@java.lang.Override\n    public int hashCode() {\n        return this.java.lang.Object.hashCode();\n    }\n\n    /** \n     * Represents this token as a String.\n     * \n     * @return String representation of the token\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(this.java.lang.Object.toString(), this.int);\n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:557","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (((int + int) >= int) || ((char[][(int + int)]) != (char[][(int + int)]))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrTokenizer:832","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1416","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.CompareToBuilder().append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle())","position":"org.apache.commons.lang3.tuple.Triple:97","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.Range<T>.(isOverlappedBy(org.apache.commons.lang3.Range<T>))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>));\n} ","position":"org.apache.commons.lang3.Range:383","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:5154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","position":"org.apache.commons.lang3.time.DateUtils:668","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableLong:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.BitField.(getRawValue(int)) >> (int)","position":"org.apache.commons.lang3.BitField:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:227","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"float += 0.1F","position":"org.apache.commons.lang3.reflect.MemberUtils:177","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.ClassLoader java.lang.ClassLoader = java.lang.ClassLoader == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClassLoader() : java.lang.ClassLoader","position":"org.apache.commons.lang3.ClassUtils:893","type":"CtLocalVariableImpl"},"status":-2},{"failures":[13,14],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"(double)++","position":"org.apache.commons.lang3.mutable.MutableDouble:137","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.lang3.math.Fraction:278","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) != 0) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[] == null) || ((float[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.float[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:653","type":"CtIfImpl"},"status":-2},{"failures":[15],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isTrue(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isFalse(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:141","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"str","pos":"pos","this":"this"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.math.Fraction:332","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)))","position":"org.apache.commons.lang3.math.Fraction:339","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Class<?>[]","position":"org.apache.commons.lang3.ArrayUtils:496","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:827","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"bestMatch":"candidateMethod","accessibleMethod":"candidateMethod"},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:492","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.ClassUtils:938","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"code":"remove"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.NotImplementedException:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"variableMapping":{"item":"item","fieldName":"fieldName","this":"this","arrayContentDetail":"arrayContentDetail","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:905","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:909","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.divide(java.math.BigInteger.java.math.BigInteger.valueOf(int))","position":"org.apache.commons.lang3.math.Fraction:776","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.short = java.lang.Number.shortValue()","position":"org.apache.commons.lang3.mutable.MutableShort:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[43,44,45],"variableMapping":{"definingCalendar":"val"},"name":"replace","transplant":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date())","position":"org.apache.commons.lang3.time.FastDateParser:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n    java.util.Calendar.add(java.util.Calendar.int, 12);\n} else {\n    java.util.Calendar.add(java.util.Calendar.int, -12);\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1028","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:531","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableShort) {\n    return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue());\n} ","position":"org.apache.commons.lang3.mutable.MutableShort:246","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"values":"values","this":"message","message":"this"},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:925","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:448","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final long long : long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(long);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:799","type":"CtForEachImpl"},"status":-2},{"failures":[46],"variableMapping":{"negated":"negated","start":"start","range":"range","end":"start"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.CharRange.boolean) {\n        return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n    } \n    return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char));\n} ","position":"org.apache.commons.lang3.CharRange:186","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n} ","position":"org.apache.commons.lang3.CharRange:187","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) == (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\");\n} ","position":"org.apache.commons.lang3.math.Fraction:493","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int))","position":"org.apache.commons.lang3.time.FastDatePrinter:203","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"locale","locale":"locale"},"name":"add","transplant":{"sourceCode":"if (java.util.Locale == null) {\n    java.util.Locale = java.util.Locale.getDefault();\n} ","position":"org.apache.commons.lang3.time.FormatCache:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Locale.getCountry().length()) > 0) {\n    java.util.List<java.util.Locale>.add(new java.util.Locale(java.util.Locale.getLanguage() , \"\"));\n} ","position":"org.apache.commons.lang3.LocaleUtils:201","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Void.java.lang.Class<java.lang.Void>, java.lang.Void.java.lang.Class<java.lang.Void>)","position":"org.apache.commons.lang3.ClassUtils:89","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(T, java.lang.Class<?>, org.apache.commons.lang3.builder.HashCodeBuilder, boolean, java.lang.String[])","position":"org.apache.commons.lang3.builder.HashCodeBuilder:340","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:293","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 100) {\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:909","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:901","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:968","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:6037","type":"CtLocalVariableImpl"},"status":-2},{"failures":[47],"variableMapping":{"ch":"ch","this":"this"},"name":"add","transplant":{"sourceCode":"if (char < 256) {\n    return \"\\\\u00\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} else if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\\\\u000\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","position":"org.apache.commons.lang3.CharUtils:354","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.reflect.Method.getDeclaringClass().getModifiers())) {\n    return java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.ClassUtils:924","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:799","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte < byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return !(java.lang.Class<?>.isPrimitive())","position":"org.apache.commons.lang3.ClassUtils:630","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:673","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:489","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.CharRange:289","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][int++] = 's'","position":"org.apache.commons.lang3.text.StrBuilder:1589","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:849","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][int] = java.lang.Character == null ? char : java.lang.Character.charValue()","position":"org.apache.commons.lang3.ArrayUtils:2988","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + 4))","position":"org.apache.commons.lang3.text.StrBuilder:1576","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"dim","nHexs":"dim"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1391","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.lang.StringBuilder.append(\"[]\");\n}","position":"org.apache.commons.lang3.ClassUtils:1132","type":"CtForImpl"},"status":0},{"failures":[48,49],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:539","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:533","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = char == char","position":"org.apache.commons.lang3.builder.EqualsBuilder:555","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Collections.java.util.Collections.synchronizedMap(new java.util.HashMap<java.lang.String, org.apache.commons.lang3.CharSet>())","position":"org.apache.commons.lang3.CharSet:79","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)","position":"org.apache.commons.lang3.text.StrBuilder:903","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.String.indexOf(java.lang.String, int)","position":"org.apache.commons.lang3.StringUtils:4521","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    int -= 1;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:338","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1155","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int < int) && (((((java.lang.CharSequence.charAt(int)) >= '0') && ((java.lang.CharSequence.charAt(int)) <= '9')) || (((java.lang.CharSequence.charAt(int)) >= 'a') && ((java.lang.CharSequence.charAt(int)) <= 'f'))) || (((java.lang.CharSequence.charAt(int)) >= 'A') && ((java.lang.CharSequence.charAt(int)) <= 'F')))) {\n    int++;\n}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:98","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:702","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:689","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0)","position":"org.apache.commons.lang3.time.FastDateParser:285","type":"CtThrowImpl"},"status":-2},{"failures":[50],"binaryOperator":"((java.lang.String.length()) / ((double)(java.lang.String.length())))","name":"math","position":"org.apache.commons.lang3.StringUtils:7071","type":"mutation","status":-1},{"failures":[51,52,53],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:2965","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean || (boolean && boolean)) {\n    java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n} ","position":"org.apache.commons.lang3.StringUtils:2974","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"this","this":"this"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendSeparator(java.lang.String, null)","position":"org.apache.commons.lang3.text.StrBuilder:1215","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:630","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = char[][((java.util.Random.nextInt(int)) + int)]","position":"org.apache.commons.lang3.RandomStringUtils:259","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"default :\n    break;","position":"org.apache.commons.lang3.BooleanUtils:630","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","position":"org.apache.commons.lang3.text.StrSubstitutor:213","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:191","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.ArrayUtils:1251","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Object.getClass().getComponentType(), (int - 1))","position":"org.apache.commons.lang3.ArrayUtils:5196","type":"CtLocalVariableImpl"},"status":-2},{"failures":[54,55,56,57,58,59,60,61],"variableMapping":{"numerator":"count"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} ","position":"org.apache.commons.lang3.math.Fraction:490","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char >= 56320) && (char <= 57343)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = char;\n        int--;\n        char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n    }\n} else if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:264","type":"CtIfImpl"},"status":-1},{"failures":[62],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.Conversion:1124","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.StrSubstitutor:759","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:512","type":"CtReturnImpl"},"status":0},{"failures":[44,45],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:538","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The field \" + int) + \" is not supported\"))","position":"org.apache.commons.lang3.time.DateUtils:1093","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:806","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , true , false , true }","position":"org.apache.commons.lang3.Conversion:184","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Object.getClass().getComponentType(), (int - 1))","position":"org.apache.commons.lang3.ArrayUtils:5196","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(double[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1683","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int])","position":"org.apache.commons.lang3.reflect.MethodUtils:536","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.FastDatePrinter:341","type":"CtInvocationImpl"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73],"binaryOperator":"(int - int) - 1","name":"math","position":"org.apache.commons.lang3.ArrayUtils:6039","type":"mutation","status":-1},{"failures":[74],"binaryOperator":"int > (java.lang.String.length())","name":"negateConditional","position":"org.apache.commons.lang3.StringUtils:2076","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:796","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:669","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n} ","position":"org.apache.commons.lang3.StringUtils:6742","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.util.Locale(\"\" , java.lang.String.substring(1, 3))","position":"org.apache.commons.lang3.LocaleUtils:115","type":"CtReturnImpl"},"status":-2},{"failures":[75,76],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.StringUtils:4776","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String[][int])","position":"org.apache.commons.lang3.StringUtils:4771","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double > (java.lang.Integer.int)) || java.lang.Double.(java.lang.Double.isNaN(double))) {\n    throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\");\n} ","position":"org.apache.commons.lang3.math.Fraction:252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(byte)","position":"org.apache.commons.lang3.builder.ToStringStyle:746","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.text.StrSubstitutor:758","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:589","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"pos":"startPos"},"name":"add","transplant":{"sourceCode":"if (int >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2879","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, int)","position":"org.apache.commons.lang3.StringUtils:970","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n    return ;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:664","type":"CtIfImpl"},"status":-2},{"failures":[77],"name":"inlineConstant","inlineConstant":"int int = 1","position":"org.apache.commons.lang3.StringUtils:6936","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5910","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrTokenizer:640","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"lhs":"rhs","this":"this","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if ((byte[] == null) || (byte[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return org.apache.commons.lang3.builder.EqualsBuilder;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:801","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((byte[].int) != (byte[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:805","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:975","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:716","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":36,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":45,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":71,"org.apache.commons.lang3.time.DateUtilsTest.testRound":44,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":30,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":3,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":10,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":48,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":38,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":65,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":4,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":54,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":55,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":46,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":52,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringsBetween_StringStringString":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":2,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":19,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":29,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":67,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":23,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":76,"org.apache.commons.lang3.math.FractionTest.testFactory_double":13,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":31,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":15,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":62,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":5,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":33,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":57,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":58,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":25,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":39,"org.apache.commons.lang3.ArrayUtilsTest.testToString":42,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":50,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringInt":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":43,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":56,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":63,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArray":64,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":14,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":40,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":49,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":8,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":20,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":32,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":77,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":47,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":73,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_boolean":12,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":24,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":60,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":22,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":53,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":75,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":61,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":69,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":9,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":17,"org.apache.commons.lang3.mutable.MutableObjectTest.testHashCode":0,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":11,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":66,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":28,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":51}}]
