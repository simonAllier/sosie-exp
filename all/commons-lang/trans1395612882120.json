[{"position":"org.apache.commons.lang3.text.StrTokenizer:779","failures":[],"status":0,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:234","sourceCode":"if ((int == 0) && (int == 0)) {\n    if (char[] != null) {\n        int = int;\n    } else {\n        if ((!boolean) && (!boolean)) {\n            int = int;\n        } else {\n            int = 'z' + 1;\n            int = ' ';\n        }\n    }\n} else {\n    if (int <= int) {\n        throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n    } \n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:261","sourceCode":"if (((boolean && java.lang.Character.(java.lang.Character.isLetter(char))) || (boolean && java.lang.Character.(java.lang.Character.isDigit(char)))) || ((!boolean) && (!boolean))) {\n    if ((char >= 56320) && (char <= 57343)) {\n        if (int == 0) {\n            int++;\n        } else {\n            char[][int] = char;\n            int--;\n            char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n        }\n    } else if ((char >= 55296) && (char <= 56191)) {\n        if (int == 0) {\n            int++;\n        } else {\n            char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n            int--;\n            char[][int] = char;\n        }\n    } else if ((char >= 56192) && (char <= 56319)) {\n        int++;\n    } else {\n        char[][int] = char;\n    }\n} else {\n    int++;\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"start":"count","numbers":"numbers","length":"count","chars":"buffer","java.lang.Integer.MAX_VALUE":"count","letters":"letters","end":"count"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:117","sourceCode":"return this.org.apache.commons.lang3.builder.ToStringStyle","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1043","sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.builder.ToStringBuilder.defaultStyle":"style"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:285","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:771","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"failures":[8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:219","sourceCode":"if (T == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:317","sourceCode":"return org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T)) && org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"element":"minimum"}},{"position":"org.apache.commons.lang3.text.WordUtils:102","failures":[],"status":0,"binaryOperator":"(int - int) > int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:113","sourceCode":"return 10","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:348","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable, java.lang.Class<?>, 0, true)","type":"CtReturnImpl"},"failures":[11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:261","sourceCode":"java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>()","type":"CtAssignmentImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:996","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:76","sourceCode":"T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:460","sourceCode":"T = T","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"result"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1005","sourceCode":"if (java.lang.Boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:6028","sourceCode":"for (int int = (int[].int) - 1 ; int >= 0 ; int--) {\n    final int int = int[][int];\n    if ((int - int) > 1) {\n        final int int = (int - int) - 1;\n        int -= int;\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, int);\n    } \n    int = int;\n}","type":"CtForImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:965","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:350","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup<?>, org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher, char, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher)","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1455","sourceCode":"java.lang.StringBuffer.append(org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(java.lang.Object.getClass()))","type":"CtInvocationImpl"},"failures":[73,74,75,76,15,16,77,78,79,80,81,82,19,20,83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:381","sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","type":"CtIfImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1116","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.0\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1191","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" NT\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1031","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:771","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1088","failures":[87],"status":-1,"binaryOperator":"(int * 1) + int","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:58","failures":[],"status":0,"binaryOperator":"((java.lang.CharSequence.length()) * 2)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1115","sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return short;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:284","sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:906","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:651","sourceCode":"java.util.Calendar.setLenient(false)","type":"CtInvocationImpl"},"failures":[89,90,91,92,93,94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:257","sourceCode":"char = ((char)((java.util.Random.nextInt(int)) + int))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:259","sourceCode":"char = char[][((java.util.Random.nextInt(int)) + int)]","type":"CtAssignmentImpl"},"failures":[0,1,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"numeric","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:432","sourceCode":"int = (37 * int) + (T.hashCode())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1661","failures":[96],"status":-1,"binaryOperator":"(int * 1) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:551","sourceCode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:556","sourceCode":"while ((int >= 0) && (int >= 0)) {\n    final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int);\n    final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int);\n    if (java.lang.String.equals(java.lang.String)) {\n        java.util.List<java.lang.String>.remove(int);\n    } \n    int--;\n    int--;\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"causeFrames":"wrapperFrames","wrapperFrames":"wrapperFrames"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:267","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[41,42,43,44,45,46,47,116,48,117,118,49,50,51,52,53,55,56,57,59,119,61,62,63,64,66,67,69,120],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:769","failures":[121],"status":-1,"binaryOperator":"(int * 16)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:202","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:249","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[122,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllShortArray":33,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":69,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":56,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":21,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":22,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":93,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":99,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":25,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":29,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":14,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":66,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":43,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":82,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":91,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":76,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllBooleanArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":67,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":57,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":113,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":31,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":54,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":106,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":77,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":104,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllIntArray":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":103,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":100,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllCharArray":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":47,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":88,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":38,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":26,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":98,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":86,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllByteArray":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":42,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":15,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":114,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":46,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllLongArray":39,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":63,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":111,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":70,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":85,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":12,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":108,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":20,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllFloatArray":37,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":89,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":123,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":17,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":90,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":52,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":10,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":16,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":41,"org.apache.commons.lang3.ConversionTest.testByteToBinary":96,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":9,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":40,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":4,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":5,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":120,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":116,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":61,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":80,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":112,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":65,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":53,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":81,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":87}}]
