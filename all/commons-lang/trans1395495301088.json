[{"transplant":{"position":"org.apache.commons.lang3.Conversion:769","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:277","sourceCode":"int = ((int)(double / double))","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"a2","shift":"a2","i":"a2"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:734","sourceCode":"final long long = 65535L << int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:676","sourceCode":"final long long = ((long)(int)) + ((long)(int))","type":"CtLocalVariableImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shift":"y"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:940","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:826","sourceCode":"if ((org.apache.commons.lang3.math.Fraction.int) == 0) {\n    throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\");\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nHex":"numerator","dstPos":"numerator"}},{"position":"org.apache.commons.lang3.CharUtils:355","failures":[4,5],"status":-1,"binaryOperator":"char < 256","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1073","sourceCode":"if ((java.lang.Boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:127","sourceCode":"return 13","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:645","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[2,6,7,3,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSequenceUtils:124","sourceCode":"if (int >= int) {\n    int = int - 1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:233","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    int = (int * 31) + org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object));\n}","type":"CtForEachImpl"},"failures":[9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"start":"hash","sz":"hash"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:519","sourceCode":"if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n    java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n} else {\n    java.lang.String = null;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:520","sourceCode":"java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1310","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:493","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:179","sourceCode":"throw java.lang.RuntimeException","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:290","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:280","sourceCode":"int = (int * int) + int","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numer1":"a1","numer2":"numer2"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:474","sourceCode":"if (int == 1) {\n    return this;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:499","sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","type":"CtReturnImpl"},"failures":[3,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"gcd":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:137","sourceCode":"java.lang.StringBuilder.append(\"Exception Context:\\n\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:227","sourceCode":"java.lang.StringBuilder.append(char[][int])","type":"CtInvocationImpl"},"failures":[13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:97","sourceCode":"double = double","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:278","sourceCode":"double = double","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"y1"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1554","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:808","sourceCode":"if (java.lang.Boolean == null) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:308","sourceCode":"return 'f'","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1478","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (short >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1695","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:172","sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"c":"cls"}},{"position":"org.apache.commons.lang3.Conversion:105","failures":[34],"status":-1,"name":"returnValue","return":"return 8","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return java.lang.Double.double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1042","sourceCode":"return double","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1016","failures":[36],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2042","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:256","sourceCode":"char[] = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:555","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectEndText(java.lang.String)","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:201","sourceCode":"return ((int)(double))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:272","sourceCode":"return (short) < short ? -1 : (short) == short ? 0 : 1","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:987","sourceCode":"if ((short[][int]) > short) {\n    short = short[][int];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:988","sourceCode":"short = short[][int]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"max":"max","array":"array","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:357","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((long[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:366","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((boolean[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:94","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:649","sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n} ","type":"CtIfImpl"},"failures":[39,40,41,42,43,44,45,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:377","sourceCode":"java.text.ParsePosition.setIndex(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:158","sourceCode":"while ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) {\n    switch (char[][java.text.ParsePosition.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int++;\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            final int int = java.text.ParsePosition.getIndex();\n            final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n            java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(int);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            java.text.Format java.text.Format = null;\n            java.lang.String java.lang.String = null;\n            if ((char[][java.text.ParsePosition.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                java.lang.String = org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n                java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String);\n                if (java.text.Format == null) {\n                    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n                } \n            } \n            java.util.ArrayList<java.text.Format>.add(java.text.Format);\n            java.util.ArrayList<java.lang.String>.add((java.text.Format == null ? null : java.lang.String));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.lang.String>.size()) == int));\n            if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n            } \n        default :\n            java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n    }\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pos":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:510","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:559","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[47,40,41,48,42,43,44,49,50,51,17,52,53,54,54,55,56,56,57,58,59,59,60,60,18,18,61,61,62,62,63,63,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,79,80,81,81,82,83,84,84,85,85,86,87,88,88,89,89,90,91,91,92,92,93,93,94,95,96,97,98,98,99,99,100,101,102,103,104,105,105,106,107,108,108,109,109,110,111,112,113,114,115,115,116,117,19,19,118,118,119,119,120,120,121,122,122,123,123,124,125,126,20,127,128,129,130,131,132,133,134,135,136,137,138,139,140,21,141,142,143,22,144,145,146,23,147,148,149,24,150,151,152],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:156","sourceCode":"if (java.lang.Object == java.lang.Object) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[153,47,40,41,48,42,44,49,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"object1"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:703","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1258","sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:509","sourceCode":"if (int > (java.lang.String.length())) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"failures":[179,180,181,182],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"expPos","srcPos":"expPos"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:958","sourceCode":"throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:503","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unterminated quoted string at position \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:362","sourceCode":"java.util.concurrent.ThreadFactory = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:119","sourceCode":"java.util.concurrent.ThreadFactory = org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.java.util.concurrent.ThreadFactory","type":"CtAssignmentImpl"},"failures":[183,184,185,186,187,188,189,190,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.event.ProxyInvocationHandler:315","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:488","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parseObject(java.lang.String, java.text.ParsePosition)","type":"CtReturnImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":110,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":86,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":127,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":112,"org.apache.commons.lang3.math.FractionTest.testFactory_double":0,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":117,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":176,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWildcardType":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":71,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":96,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":133,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":122,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":135,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":168,"org.apache.commons.lang3.mutable.MutableShortTest.testCompareTo":37,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":178,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":138,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":11,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":72,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":190,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":59,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":150,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":119,"org.apache.commons.lang3.math.FractionTest.testPow":6,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":188,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":14,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":146,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":163,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":160,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":38,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":174,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":93,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":100,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":34,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":1,"org.apache.commons.lang3.ConversionTest.testShortToHex":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":83,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":154,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":31,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":109,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":77,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":4,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":115,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonFalse":187,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoExHandler":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":111,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":121,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":82,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":78,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":136,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":165,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":140,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":173,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":87,"org.apache.commons.lang3.ConversionTest.testHexToByte":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":75,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":69,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":106,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":56,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_emptyArray":9,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":134,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":74,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":131,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":66,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":19,"org.apache.commons.lang3.math.FractionTest.testInvert":12,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":149,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":162,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":50,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":118,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":192,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":21,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":25,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":94,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":99,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":128,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":151,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":116,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoNamingPattern":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":54,"org.apache.commons.lang3.text.StrTokenizerTest.test1":47,"org.apache.commons.lang3.text.StrTokenizerTest.test3":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":46,"org.apache.commons.lang3.text.StrTokenizerTest.test2":40,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":156,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":81,"org.apache.commons.lang3.math.FractionTest.testSubtract":7,"org.apache.commons.lang3.text.StrTokenizerTest.test8":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":76,"org.apache.commons.lang3.math.FractionTest.testAdd":2,"org.apache.commons.lang3.text.StrTokenizerTest.test5":42,"org.apache.commons.lang3.text.StrTokenizerTest.test4":48,"org.apache.commons.lang3.text.StrTokenizerTest.test7":44,"org.apache.commons.lang3.text.StrTokenizerTest.test6":43,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":142,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWrap":169,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":35,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":153,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":103,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":16,"org.apache.commons.lang3.ArrayUtilsTest.testToString":152,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":33,"org.apache.commons.lang3.math.FractionTest.testMultiply":8,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_3":181,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":182,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":52,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":148,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":147,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":130,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":79,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":161,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":91,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoPriority":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":55,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":5,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoDaemonFlag":183,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":189,"org.apache.commons.lang3.math.FractionTest.testDivide":3,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":107,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":157,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":179,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":125}}]
