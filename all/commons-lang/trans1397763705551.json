[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1899","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.String.length(), java.lang.String.length())","position":"org.apache.commons.lang3.time.FastDatePrinter:1145","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:475","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.applyRules(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDatePrinter:454","type":"CtReturnImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1628","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, int, int)","position":"org.apache.commons.lang3.StringUtils:899","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(java.lang.Class<?>.getComponentType(), java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:271","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.replace((int - (java.lang.CharSequence.length())), java.lang.CharSequence.length(), java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.text.FormattableUtils:141","type":"CtInvocationImpl"},"status":-1},{"failures":[5,6],"variableMapping":{"tmpHash":"count","hash":"count"},"name":"add","transplant":{"sourceCode":"int = (int * 31) + int","position":"org.apache.commons.lang3.ObjectUtils:243","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.CharSetUtils:148","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[7,8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int < 0) {\n        int -= 1;\n    } \n    while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n        int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n        if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n            int += 1;\n        } \n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        int += java.util.Calendar.get(java.util.Calendar.int);\n    }\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:336","type":"CtIfImpl"},"status":-1},{"transformationPoint":"org.apache.commons.lang3.Conversion:1687","failures":[9],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.time.DateUtils:1861","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:202","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:5154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2927","type":"CtReturnImpl"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.exception.ExceptionUtils:645","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = int > 0","position":"org.apache.commons.lang3.text.StrTokenizer:741","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.lang.Class<?>.getTypeParameters().int) == (java.lang.reflect.Type[].int)), \"invalid number of type parameters specified: expected %s, got %s\", java.lang.Class<?>.getTypeParameters().int, java.lang.reflect.Type[].int)","position":"org.apache.commons.lang3.reflect.TypeUtils:1502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.FastDatePrinter:341","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str1":"org.apache.commons.lang3.StringUtils.EMPTY","str2":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6503","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:5085","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"months":"length","years":"length"},"name":"replace","transplant":{"sourceCode":"while (int != 0) {\n    int += 12 * int;\n    int = 0;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:328","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n        continue hierarchyTraversal;\n    } \n}","position":"org.apache.commons.lang3.reflect.MethodUtils:535","type":"CtForImpl"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37],"variableMapping":{"varNameExpr":"source"},"name":"replace","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:804","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(java.lang.String, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:417","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char = 'Q'","position":"org.apache.commons.lang3.time.FastDateParser:362","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == short[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:736","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case java.util.Calendar.int :\n    long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1724","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-2},{"failures":[38,39],"variableMapping":{"srcPos":"srcPos","src":"src","length":"srcPos"},"name":"replace","transplant":{"sourceCode":"if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","position":"org.apache.commons.lang3.Conversion:524","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return '3';\n}","position":"org.apache.commons.lang3.Conversion:422","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"len"},"name":"replace","transplant":{"sourceCode":"this(int)","position":"org.apache.commons.lang3.text.StrBuilder:103","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + 1))","position":"org.apache.commons.lang3.text.StrBuilder:797","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"longestStrLen"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2560","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean || ((int == 0) && (!boolean))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:6617","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.time.StopWatch:84","failures":[40],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[41,42],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"variableMapping":{"lhs":"rhs","this":"this","rhs":"lhs"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.EqualsBuilder:475","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:482","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char != char) {\n    for (int int = 0 ; int < (int) ; int++) {\n        if ((char[][int]) == char) {\n            char[][int] = char;\n            break;\n        } \n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1868","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, 1)","position":"org.apache.commons.lang3.ArrayUtils:4254","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n        return org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue();\n    } \n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:92","type":"CtForEachImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:574","failures":[65,66],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:126","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2777","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:417","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:427","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n        return int;\n    } \n} else {\n    return int;\n}","position":"org.apache.commons.lang3.StringUtils:1548","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (char[].int)) {\n    int = char[].int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1041","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"tokenPos":"i"},"name":"add","transplant":{"sourceCode":"return int - 1","position":"org.apache.commons.lang3.text.StrTokenizer:564","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2819","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.Integer[] == null) || ((java.lang.Integer[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:713","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3140","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isTrue(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:304","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:4525","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:864","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1504","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (!boolean) && boolean","position":"org.apache.commons.lang3.math.NumberUtils:1449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int < int) || (((int < (int + 1)) && boolean) && (!boolean))) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        boolean = true;\n        boolean = false;\n    } else if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        boolean = true;\n    } else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        if (boolean) {\n            return false;\n        } \n        if (!boolean) {\n            return false;\n        } \n        boolean = true;\n        boolean = true;\n    } else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n        if (!boolean) {\n            return false;\n        } \n        boolean = false;\n        boolean = false;\n    } else {\n        return false;\n    }\n    int++;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1382","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 5","position":"org.apache.commons.lang3.time.FastDatePrinter:1187","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float < float ? -1 : float < float ? 1 : 0","position":"org.apache.commons.lang3.reflect.MemberUtils:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:873","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:690","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.Writer.write(java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString(), 8))","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:57","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","position":"org.apache.commons.lang3.Conversion:948","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char >= 56320) && (char <= 57343)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = char;\n        int--;\n        char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n    }\n} else if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:264","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1559","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final long long : long[]) {\n    final java.lang.Long java.lang.Long = java.lang.Long.java.lang.Long.valueOf(long);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Long);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5716","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    int = (int) * (int);\n} else {\n    for (final byte byte : byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(byte);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '9';\n} else {\n    return '8';\n}","position":"org.apache.commons.lang3.Conversion:327","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:206","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:981","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[][int]) > float) {\n    float = float[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1066","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4253","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ClassCastException((\"Could not iterate based on \" + java.lang.Object))","position":"org.apache.commons.lang3.time.DateUtils:1254","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = (int) - 1 ; int >= 0 ; int--) {\n    final char char = char[][int];\n    final char char = char[][int];\n    if ((char != char) && (java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2658","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"HashCodeBuilder requires an odd initial value\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:540","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output one of a set of values.<\/p>\n */\nprivate static class TextField implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final int mField;\n\n    private final java.lang.String[] mValues;\n\n    /** \n     * Constructs an instance of {@code TextField}\n     * with the specified field and values.\n     * \n     * @param field the field\n     * @param values the field values\n     */\nTextField(final int field ,final java.lang.String[] values) {\n        int = int;\n        java.lang.String[] = java.lang.String[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        int int = 0;\n        for (int int = java.lang.String[].int ; (--int) >= 0 ; ) {\n            final int int = java.lang.String[][int].length();\n            if (int > int) {\n                int = int;\n            } \n        }\n        return int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String[][java.util.Calendar.get(int)]);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:677","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object == null ? \"\" : java.lang.Object.toString()","position":"org.apache.commons.lang3.ObjectUtils:397","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)) {\n    throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n} ","position":"org.apache.commons.lang3.math.NumberUtils:765","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((double >= 0), \"Both range values must be non-negative.\")","position":"org.apache.commons.lang3.RandomUtils:140","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3076","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (org.apache.commons.lang3.StringUtils.java.lang.String.equals(java.lang.String))) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, null, int, boolean);\n} ","position":"org.apache.commons.lang3.StringUtils:2815","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.EnumUtils.org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:250","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.EnumUtils.org.apache.commons.lang3.EnumUtils.asEnum(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:290","type":"CtInvocationImpl"},"status":-2},{"failures":[67],"variableMapping":{"java.lang.Integer.MIN_VALUE":"startIndex","denominator":"startIndex","numerator":"startIndex"},"name":"add","transplant":{"sourceCode":"if ((int == int) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtIfImpl"},"status":-1},{"failures":[68,69],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:3247","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.java.text.Format","position":"org.apache.commons.lang3.text.CompositeFormat:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    char = ((char)((java.util.Random.nextInt(int)) + int));\n} else {\n    char = char[][((java.util.Random.nextInt(int)) + int)];\n}","position":"org.apache.commons.lang3.RandomStringUtils:256","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:508","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3912","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)), java.lang.reflect.Type);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1581","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDateParser:668","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.reflect.Type != null) && (!(java.lang.reflect.Type.equals(java.lang.reflect.Type)))) && (!((java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))))) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:471","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"lhs":"lhs"},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.CompareToBuilder:281","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.EqualsBuilder:336","type":"CtLocalVariableImpl"},"status":-2},{"failures":[70,71],"variableMapping":{"newLineStr":"varNameExpr","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"varNameExpr"},"name":"replace","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:806","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()","position":"org.apache.commons.lang3.StringUtils:4041","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.int;\n        int = java.util.Calendar.int;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.get(java.util.Calendar.int);\n        int = int - 1;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n        int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.DateUtils:1185","type":"CtSwitchImpl"},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:82","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>","position":"org.apache.commons.lang3.time.FastDatePrinter:288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:958","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.time.DateUtils:974","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1743","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.reflect.Type instanceof java.lang.Class<?>)) {\n    throw new java.lang.IllegalStateException((\"Wait... What!? Type of rawType: \" + java.lang.reflect.Type));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1247","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = new java.lang.String[]{ \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[])","position":"org.apache.commons.lang3.ArrayUtils:5802","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (int <= 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5550","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double = double","position":"org.apache.commons.lang3.math.Fraction:276","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double -= java.lang.Number.doubleValue()","position":"org.apache.commons.lang3.mutable.MutableDouble:189","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:140","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method))","position":"org.apache.commons.lang3.AnnotationUtils:174","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.mutable.MutableByte:202","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:2067","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:340","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:728","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"n":"length"},"name":"add","transplant":{"sourceCode":"int[] int[] = new int[int + 1]","position":"org.apache.commons.lang3.StringUtils:6781","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[java.lang.Integer[].int]","position":"org.apache.commons.lang3.ArrayUtils:3121","type":"CtLocalVariableImpl"},"status":-2},{"failures":[117],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.CharSequenceUtils:122","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[], double, java.lang.Integer.int)","position":"org.apache.commons.lang3.ArrayUtils:2618","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:409","type":"CtReturnImpl"},"status":-2},{"failures":[118,118,119,120,121,121,122,123,124,125,126,127,128,129,129,130,131,132,133,134,135,136,137,138,139,140,141],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:524","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:516","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FastDateParser org.apache.commons.lang3.time.FastDateParser = ((org.apache.commons.lang3.time.FastDateParser)(java.lang.Object))","position":"org.apache.commons.lang3.time.FastDateParser:225","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n    java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()));\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n    java.util.Calendar.add(java.util.Calendar.int, -1);\n    if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n        int = java.util.Calendar.int;\n        int = java.util.Calendar.int;\n    } \n    break;","position":"org.apache.commons.lang3.time.DateUtils:1165","type":"CtCaseImpl"},"status":-2},{"failures":[142,143,144],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:2971","type":"CtAssignmentImpl"},"status":-1},{"failures":[145,146,147],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:630","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)(int + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:754","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.StringUtils:6608","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Class used to define a set of characters for matching purposes.\n */\nstatic final class CharSetMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * The set of characters to match.\n     */\nprivate final char[] chars;\n\n    /** \n     * Constructor that creates a matcher from a character array.\n     * \n     * @param chars  the characters to match, must not be null\n     */\nCharSetMatcher(final char[] chars) {\n        org.apache.commons.lang3.text.StrMatcher.super();\n        this.char[] = char[].clone();\n        java.util.Arrays.java.util.Arrays.sort(this.char[]);\n    }\n\n    /** \n     * Returns whether or not the given character matches.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return java.util.Arrays.(java.util.Arrays.binarySearch(char[], char[][int])) >= 0 ? 1 : 0;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:275","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"input":"s","index":"min","i":"max"},"name":"add","transplant":{"sourceCode":"if (((int + int) < (java.lang.CharSequence.length())) && ((java.lang.CharSequence.charAt((int + int))) == '+')) {\n    int++;\n} ","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:44","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; int++) {\n    if ((java.lang.CharSequence.charAt((int - 1))) == char) {\n        int[][int] = int[][(int - 1)];\n    } else {\n        int[][int] = 1 + java.lang.Math.(java.lang.Math.min(java.lang.Math.java.lang.Math.min(int[][(int - 1)], int[][int]), int[][(int - 1)]));\n    }\n}","position":"org.apache.commons.lang3.StringUtils:6955","type":"CtForImpl"},"status":-2},{"failures":[116],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 9","position":"org.apache.commons.lang3.Conversion:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 1 + (java.lang.StringBuilder.length())","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:58","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char = ((char)((org.apache.commons.lang3.CharRange.char) + 1))","position":"org.apache.commons.lang3.CharRange:291","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '7'","position":"org.apache.commons.lang3.Conversion:555","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","j":"java.lang.Integer.MAX_VALUE","threshold":"threshold"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.Math.java.lang.Math.max(1, (int - int))","position":"org.apache.commons.lang3.StringUtils:6941","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:6942","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(float[][int], float[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:872","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:888","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:679","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if ((java.lang.String.charAt(int)) == char) {\n        if (boolean || boolean) {\n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n            boolean = true;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:2960","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((long >= long), \"Start value must be smaller or equal to end value.\")","position":"org.apache.commons.lang3.RandomUtils:111","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final float float = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class<?>[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MemberUtils:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.ArrayUtils:6080","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:975","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:284","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.time.FastDatePrinter:858","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1540","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","position":"org.apache.commons.lang3.text.StrTokenizer:491","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence[][int];\n    if (java.lang.CharSequence == null) {\n        continue;\n    } \n    int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, 0);\n    if (int == (org.apache.commons.lang3.StringUtils.int)) {\n        continue;\n    } \n    if (int < int) {\n        int = int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1973","type":"CtForImpl"},"status":-2},{"failures":[47,61,62,64],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.EqualsBuilder:481","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"nBools":"decPos","dstPos":"decPos"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (-1)) {\n    if ((int < int) || (int > (java.lang.String.length()))) {\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    } \n    java.lang.String = java.lang.String.substring((int + 1), int);\n} else {\n    java.lang.String = java.lang.String.substring((int + 1));\n}","position":"org.apache.commons.lang3.math.NumberUtils:497","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3077","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'H' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:477","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1370","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrTokenizer:412","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())));\n}","position":"org.apache.commons.lang3.time.DateUtils:939","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.boolean = java.lang.Boolean.booleanValue()","position":"org.apache.commons.lang3.mutable.MutableBoolean:117","type":"CtAssignmentImpl"},"status":-2},{"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"variableMapping":{"outputStream":"outputStream"},"name":"replace","transplant":{"sourceCode":"if (java.io.OutputStream == null) {\n    throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\");\n} ","position":"org.apache.commons.lang3.SerializationUtils:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.io.ObjectOutputStream = new java.io.ObjectOutputStream(java.io.OutputStream);\n    java.io.ObjectOutputStream.writeObject(java.io.Serializable);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new org.apache.commons.lang3.SerializationException(java.io.IOException);\n} finally {\n    try {\n        if (java.io.ObjectOutputStream != null) {\n            java.io.ObjectOutputStream.close();\n        } \n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:151","type":"CtTryImpl"},"status":-1},{"failures":[169],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (short < short) {\n    short = short;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDatePrinter:1260","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Field.getModifiers())) {\n    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.getDeclaredField(\"modifiers\");\n    final boolean boolean = boolean && (!(java.lang.reflect.Field.isAccessible()));\n    if (boolean) {\n        java.lang.reflect.Field.setAccessible(true);\n    } \n    try {\n        java.lang.reflect.Field.setInt(java.lang.reflect.Field, ((java.lang.reflect.Field.getModifiers()) & (~(java.lang.reflect.Modifier.int))));\n    } finally {\n        if (boolean) {\n            java.lang.reflect.Field.setAccessible(false);\n        } \n    }\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:682","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":132,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":134,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":84,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":43,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":131,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":64,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":65,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":47,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":37,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":126,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":55,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":52,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":143,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":98,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeClassCastException":166,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":117,"org.apache.commons.lang3.SerializationUtilsTest.testRoundtrip":165,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":111,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":68,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":85,"org.apache.commons.lang3.text.FormattableUtilsTest.testEllipsis":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":119,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":96,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":71,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":89,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":109,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":136,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":146,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":107,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamNullObj":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":124,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":76,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":114,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharacter":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":80,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":155,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":125,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":106,"org.apache.commons.lang3.CharSetTest.testSerialization":148,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":127,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStream":163,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":63,"org.apache.commons.lang3.text.FormattableUtilsTest.testDefaultAppend":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":122,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":149,"org.apache.commons.lang3.SerializationUtilsTest.testPrimitiveTypeClassSerialization":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":133,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":150,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":102,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":144,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":141,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":169,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamUnserializable":164,"org.apache.commons.lang3.SerializationUtilsTest.testClone":160,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":147,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":121,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":142,"org.apache.commons.lang3.text.StrTokenizerTest.test8":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":87,"org.apache.commons.lang3.text.StrTokenizerTest.test5":21,"org.apache.commons.lang3.text.StrTokenizerTest.test4":20,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":62,"org.apache.commons.lang3.text.StrTokenizerTest.test7":23,"org.apache.commons.lang3.text.StrTokenizerTest.test6":22,"org.apache.commons.lang3.text.StrTokenizerTest.test1":17,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":97,"org.apache.commons.lang3.text.StrTokenizerTest.test3":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":90,"org.apache.commons.lang3.text.StrTokenizerTest.test2":18,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":50,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":101,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeBytesUnserializable":158,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":99,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":56,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":9,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":77,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":140,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":130,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":79,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":53,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":42,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":73,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringArray":41,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":113,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":59,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":108,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":57,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharAndEllipsis":3,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":116,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":91,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":48,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":110,"org.apache.commons.lang3.ConversionTest.testShortToBinary":0,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":14,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":49,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":13,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeBytes":167,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":129,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":26,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":40,"org.apache.commons.lang3.CharRangeTest.testSerialization":153,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeBytesNull":161,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":135,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":66,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":34,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":86,"org.apache.commons.lang3.RangeTest.testSerializing":168,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":157,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":138,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":69,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":94,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShortWithStartIndex":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":123,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":139,"org.apache.commons.lang3.ObjectUtilsTest.testNull":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":36}}]
