[{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:463","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:351","sourceCode":"if (boolean[][int]) {\n    return '3';\n} else {\n    return '2';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:416","sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return '7';\n}","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:398","sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(long)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1062","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1055","sourceCode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[][int]);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"suffix":"arraySeparator"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1421","sourceCode":"return boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1388","sourceCode":"if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"foundDigit":"allowSigns"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:453","sourceCode":"return boolean[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1654","sourceCode":"return boolean[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:124","sourceCode":"if (T != null) {\n    return T;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:598","sourceCode":"if (T instanceof java.lang.Cloneable) {\n    final java.lang.Object java.lang.Object;\n    if (T.getClass().isArray()) {\n        final java.lang.Class<?> java.lang.Class<?> = T.getClass().getComponentType();\n        if (!(java.lang.Class<?>.isPrimitive())) {\n            java.lang.Object = ((java.lang.Object[])(T)).clone();\n        } else {\n            int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(T);\n            java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int);\n            while ((int--) > 0) {\n                java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n            }\n        }\n    } else {\n        try {\n            final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\");\n            java.lang.Object = java.lang.reflect.Method.invoke(T);\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Cannot clone Cloneable type \" + (T.getClass().getName())) , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause());\n        }\n    }\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(java.lang.Object));\n    return T;\n} ","type":"CtIfImpl"},"failures":[3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"val":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1104","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(org.apache.commons.lang3.SystemUtils.java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1128","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.SystemUtils.OS_NAME_WINDOWS_PREFIX":"org.apache.commons.lang3.SystemUtils.OS_NAME_WINDOWS_PREFIX","this":"this"}},{"position":"org.apache.commons.lang3.AnnotationUtils:124","failures":[6,7],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventListenerSupport:189","sourceCode":"return java.util.List<L>.size()","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:269","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2796","sourceCode":"if ((int < 0) || (int > int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:888","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"field","size":"field"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:295","sourceCode":"return false","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:970","failures":[12,13,14,15,16],"status":-1,"binaryOperator":"boolean[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2005","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:251","sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","type":"CtIfImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1512","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[20,21,22,23,17,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:331","sourceCode":"if (int == int) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:328","sourceCode":"if (int == int) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:306","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:459","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'c';\n    } else {\n        return '4';\n    }\n} else {\n    if (boolean[][int]) {\n        return '8';\n    } else {\n        return '0';\n    }\n}","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:107","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:399","sourceCode":"return (java.lang.Class<?>.equals(java.lang.Object.java.lang.Object)) || ((java.lang.Class<?>.isArray()) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.lang.Class<?>.getComponentType())))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:151","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:434","sourceCode":"return java.lang.String[].clone()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:731","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1426","sourceCode":"return (java.lang.String.startsWith(java.lang.String)) && (java.lang.String.startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"osVersion","falseString":"osVersion"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:110","sourceCode":"if (int == 3) {\n    return new java.util.Locale(\"\" , java.lang.String.substring(1, 3));\n} ","type":"CtIfImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:957","sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","type":"CtIfImpl"},"failures":[108,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:430","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int[], null)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:131","sourceCode":"if ((java.lang.String.charAt(2)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1019","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"FreeBSD\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:927","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.7\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:385","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char)","type":"CtAssignmentImpl"},"failures":[112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:965","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:479","sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers())) && (!org.apache.commons.lang3.builder.ReflectionToStringBuilder.(isAppendTransients()))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[39,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:477","sourceCode":"if ((int > 16) || ((int == 16) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:54","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:387","sourceCode":"if ((java.lang.Throwable == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","type":"CtIfImpl"},"failures":[117,118,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"child":"type","parent":"type"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:424","sourceCode":"if (char[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":55,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int_noMatch":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":45,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":57,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":54,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":66,"org.apache.commons.lang3.event.EventListenerSupportTest.testRemoveListenerDuringEvent":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":70,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":107,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":97,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfUncloneable":5,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":99,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":24,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":53,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":51,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":68,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":101,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":10,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":29,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":18,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":79,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":21,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":71,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":30,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":35,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":112,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":81,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":72,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":111,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":17,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":94,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":98,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":83,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":58,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":77,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":89,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":110,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":64,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":82,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":78,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":86,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":103,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":1,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_nullInput":12,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":14,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":69,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":39,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":65,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":48,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfNotCloneable":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":38,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":75,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":25,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":49,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":115,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_831":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":23,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":6,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":61,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":108,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":85,"org.apache.commons.lang3.ArrayUtilsTest.testToString":105,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":41,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":93,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":60,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":52,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":32,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":84,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":2,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":40,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":62,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":46,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":44,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":118,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":106,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":20,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":100,"org.apache.commons.lang3.ObjectUtilsTest.testPossibleCloneOfUncloneable":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":121}}]
