[{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:958","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:677","sourceCode":"return (java.lang.String + \": \") + org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.defaultString(java.lang.String))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toProperString":"msg"}},{"transplant":{"position":"org.apache.commons.lang3.CharacterIterator:315","sourceCode":"char = ((char)(char + 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:72","sourceCode":"char = char","type":"CtAssignmentImpl"},"failures":[2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"current":"end"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:433","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:432","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n            T = T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:467","sourceCode":"char char = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:376","sourceCode":"final char char = char[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1353","sourceCode":"if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1366","sourceCode":"while ((int < int) || (((int < (int + 1)) && boolean) && (!boolean))) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        boolean = true;\n        boolean = false;\n    } else if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        boolean = true;\n    } else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        if (boolean) {\n            return false;\n        } \n        if (!boolean) {\n            return false;\n        } \n        boolean = true;\n        boolean = true;\n    } else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n        if (!boolean) {\n            return false;\n        } \n        boolean = false;\n        boolean = false;\n    } else {\n        return false;\n    }\n    int++;\n}","type":"CtWhileImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"chars":"chars","i":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:350","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup<?>, org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher, char, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:399","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:482","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"value","this":"this"}},{"position":"org.apache.commons.lang3.time.DateUtils:973","inlineConstant":"boolean boolean = false","failures":[41,42,43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:558","sourceCode":"if ((int % 2) == 0) {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n} else {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:758","sourceCode":"return new org.apache.commons.lang3.math.Fraction((boolean ? org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addAndCheck(int, int) : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.subAndCheck(int, int)) , org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, org.apache.commons.lang3.math.Fraction.int))","type":"CtReturnImpl"},"failures":[7,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"fraction","power":"uvp"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:449","sourceCode":"if (java.lang.String == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32);\n    java.lang.StringBuilder.append('[');\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(\"..\");\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(']');\n    java.lang.String = java.lang.StringBuilder.toString();\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"failures":[50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"toString"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","sourceCode":"java.lang.Object.notifyAll()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1241","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[52,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"focus"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:986","sourceCode":"for (int int = 1 ; int < (short[].int) ; int++) {\n    if ((short[][int]) > short) {\n        short = short[][int];\n    } \n}","type":"CtForImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:434","sourceCode":"if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n    T = T;\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"result"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:189","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:188","sourceCode":"if (java.util.Map<java.lang.Object, java.lang.Object> == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>());\n} ","type":"CtIfImpl"},"failures":[55,56,57,58,59],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:823","sourceCode":"if (org.apache.commons.lang3.math.Fraction == null) {\n    throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n} ","type":"CtIfImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:145","sourceCode":"return org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class<T>, java.lang.Object[], java.lang.Class<?>[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:85","sourceCode":"return org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class<T>, java.lang.Object[], java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"cls","args":"args","this":"this","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1815","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:172","sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:102","sourceCode":"if (int < 3) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:3106","sourceCode":"while (int < int) {\n    if ((java.lang.String.charAt(int)) == char) {\n        if (boolean || boolean) {\n            boolean = true;\n            if ((int++) == int) {\n                int = int;\n                boolean = false;\n            } \n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","type":"CtWhileImpl"},"failures":[62,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"str","len":"start"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:226","sourceCode":"return java.lang.Float.java.lang.Float.parseFloat(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:225","sourceCode":"try {\n    return java.lang.Float.java.lang.Float.parseFloat(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return float;\n}","type":"CtTryImpl"},"failures":[64,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1480","failures":[66],"status":-1,"binaryOperator":"(short >> int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CharSet:189","sourceCode":"int += 3","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:113","sourceCode":"int = int + 1","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pos":"offset"}},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":10,"org.apache.commons.lang3.CharSetTest.testContains_Char":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":56,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":40,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatStringF":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":37,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":46,"org.apache.commons.lang3.ConversionTest.testShortToHex":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":14,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":31,"org.apache.commons.lang3.RangeTest.testToString":50,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":48,"org.apache.commons.lang3.math.FractionTest.testSubtract":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":59,"org.apache.commons.lang3.math.FractionTest.testAdd":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":39,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":28,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":54,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":45,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":63,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":51,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":1,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":34,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":11,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":9,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":42,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":35,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":62,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":4,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":25,"org.apache.commons.lang3.ObjectUtilsTest.testMin":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":22,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":17,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":29,"org.apache.commons.lang3.math.FractionTest.testDivide":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":13,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":21,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":53}}]
