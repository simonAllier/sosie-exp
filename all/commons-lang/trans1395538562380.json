[{"position":"org.apache.commons.lang3.mutable.MutableInt:239","failures":[1],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1691","sourceCode":"if (int >= 8) {\n    org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getLeastSignificantBits(), 0, byte[], (int + 8), (int - 8));\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1187","failures":[3],"status":-1,"binaryOperator":"0 == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:310","sourceCode":"int += 24","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:738","sourceCode":"int = 16","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"hours":"radix"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:226","sourceCode":"if ((org.apache.commons.lang3.CharSet.contains(char[][int])) == boolean) {\n    java.lang.StringBuilder.append(char[][int]);\n} ","type":"CtIfImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1426","sourceCode":"return (boolean && (!boolean)) && (!boolean)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:977","sourceCode":"if (boolean) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"foundDigit":"element","hasExp":"element","hasDecPoint":"element"}},{"position":"org.apache.commons.lang3.math.Fraction:624","failures":[12,13,14,15,16,17],"status":-1,"binaryOperator":"(1 << int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:263","sourceCode":"java.util.concurrent.ScheduledFuture<?>.cancel(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:297","sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) == null) {\n    java.util.concurrent.ScheduledFuture<?> = org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"task":"task"}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:194","sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:195","sourceCode":"try {\n    java.text.DateFormat java.text.DateFormat;\n    if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n    }\n    java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String = java.lang.String;\n    } \n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:381","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:541","sourceCode":"return (this.int) > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:506","sourceCode":"return (int) < (java.lang.String[].int)","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"tokenPos":"tokenPos"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1027","sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n    java.util.Calendar.add(java.util.Calendar.int, 12);\n} else {\n    java.util.Calendar.add(java.util.Calendar.int, -12);\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1047","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n            if (int >= 15) {\n                int -= 15;\n            } \n            boolean = int > 7;\n            boolean = true;\n        } \n        break;\n    case java.util.Calendar.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            if (int >= 12) {\n                int -= 12;\n            } \n            boolean = int >= 6;\n            boolean = true;\n        } \n        break;\n}","type":"CtSwitchImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:248","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:260","sourceCode":"for (java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.reflect.Constructor<?>[]) {\n    if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Constructor<?>.getParameterTypes(), true)) {\n        java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>);\n        if (java.lang.reflect.Constructor<?> != null) {\n            org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n            if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n                java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n            } \n        } \n    } \n}","type":"CtForEachImpl"},"failures":[101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ctor":"result","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","sourceCode":"if (int != 0) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:122","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"consumed":"defaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:937","sourceCode":"java.lang.String = \"-1\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:456","sourceCode":"java.lang.String = java.lang.StringBuilder.toString()","type":"CtAssignmentImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toProperString":"result"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:157","sourceCode":"float += float","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:178","sourceCode":"this.float -= float","type":"CtOperatorAssignmentImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"operand","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:179","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2083","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"summaryObjectEndText"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1054","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[106,107,108,109,110,111,18,112,113,114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:667","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:660","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[116,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:325","sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:367","sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getSplitNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","type":"CtReturnImpl"},"failures":[118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:88","sourceCode":"return java.lang.Double.java.lang.Double.valueOf(this.double)","type":"CtReturnImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4687","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","sourceCode":"if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"timeToLive":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2843","sourceCode":"if (boolean) {\n    int += 1;\n    if (int == int) {\n        int = int;\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n    } else {\n        java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:903","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SerializationUtils:109","sourceCode":"throw new org.apache.commons.lang3.SerializationException(\"IOException on closing cloned object data InputStream.\" , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:256","sourceCode":"this.char[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:492","sourceCode":"this.char[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[])","type":"CtAssignmentImpl"},"failures":[25,31,35,52,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"chars":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:85","sourceCode":"return org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(java.lang.Class<T>, java.lang.Object[], java.lang.Class<?>[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:145","sourceCode":"return org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(java.lang.Class<T>, java.lang.Object[], java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testToString":36,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":8,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":82,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":22,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":110,"org.apache.commons.lang3.math.FractionTest.testFactory_double":15,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":63,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":81,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":70,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":35,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":84,"org.apache.commons.lang3.time.DateUtilsTest.testRound":90,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":76,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":97,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":33,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":21,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":88,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":91,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":95,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":31,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":69,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":52,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":58,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":73,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":61,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":59,"org.apache.commons.lang3.math.FractionTest.testPow":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":44,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":112,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":43,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":86,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":2,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":40,"org.apache.commons.lang3.math.FractionTest.testReduce":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":41,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":116,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":113,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":27,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":107,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":9,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":66,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":11,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":71,"org.apache.commons.lang3.mutable.MutableFloatTest.testSubtractValuePrimitive":105,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":65,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":12,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":101,"org.apache.commons.lang3.RangeTest.testToString":104,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":100,"org.apache.commons.lang3.math.FractionTest.testAdd":13,"org.apache.commons.lang3.text.StrTokenizerTest.test6":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":56,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":83,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":106,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":0,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":37,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":89,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":7,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":108,"org.apache.commons.lang3.math.FractionTest.testMultiply":16,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":46,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":4,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":30,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":6,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":94,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":51,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":109,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":10,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":99,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":115,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":102,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":57,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":20,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":87,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":117,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":32,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":3,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":34,"org.apache.commons.lang3.mutable.MutableDoubleTest.testGetSet":119}}]
