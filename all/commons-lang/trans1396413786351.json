[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long > (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n} ","position":"org.apache.commons.lang3.math.Fraction:660","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.reflect.Type[]","position":"org.apache.commons.lang3.reflect.TypeUtils:1538","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type[].clone()","position":"org.apache.commons.lang3.reflect.TypeUtils:244","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[])","position":"org.apache.commons.lang3.ArrayUtils:3882","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())))","position":"org.apache.commons.lang3.exception.ExceptionUtils:533","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"rawType":"typeArgument"},"name":"add","transplant":{"sourceCode":"return ((java.lang.Class<?>)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1305","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2421","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:470","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean == false) {\n    int = -1;\n} else {\n    int = +1;\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:591","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:362","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:835","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getMostSignificantBits(), 0, byte[], int, (int > 8 ? 8 : int))","position":"org.apache.commons.lang3.Conversion:1690","type":"CtInvocationImpl"},"status":-1},{"failures":[1,2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int)(double / double))","position":"org.apache.commons.lang3.math.Fraction:277","type":"CtAssignmentImpl"},"status":-1},{"failures":[3,4],"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & (~(java.lang.reflect.Modifier.int)))","name":"math","position":"org.apache.commons.lang3.reflect.FieldUtils:690","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:643","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:535","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, boolean)","position":"org.apache.commons.lang3.builder.ToStringBuilder:527","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream = null","position":"org.apache.commons.lang3.SerializationUtils:85","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass()","position":"org.apache.commons.lang3.reflect.MethodUtils:517","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'c';\n    } else {\n        return '4';\n    }\n} else {\n    if (boolean[][int]) {\n        return '8';\n    } else {\n        return '0';\n    }\n}","position":"org.apache.commons.lang3.Conversion:459","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String[] == null) || ((int = java.lang.String[].int) == 0)) {\n    return java.lang.String[];\n} ","position":"org.apache.commons.lang3.StringUtils:733","type":"CtIfImpl"},"status":-2},{"failures":[5,6,7],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.apache.commons.lang3.ClassUtils:95","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.java.lang.Character.codePointCount(java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringEscapeUtils:401","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.register(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:401","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long))","position":"org.apache.commons.lang3.Validate:1084","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5637","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Boolean[].int) ; int++) {\n    boolean[][int] = java.lang.Boolean[][int].booleanValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3440","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"prefix":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n} ","position":"org.apache.commons.lang3.CharUtils:173","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrTokenizer:640","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char - 48","position":"org.apache.commons.lang3.CharUtils:221","type":"CtReturnImpl"},"status":-2},{"failures":[8,9],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.StringUtils:4776","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String[][int])","position":"org.apache.commons.lang3.StringUtils:4771","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:160","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:443","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Conversion:1085","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>[] == null) {\n    java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[];\n} ","position":"org.apache.commons.lang3.ClassUtils:520","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:266","type":"CtLocalVariableImpl"},"status":-2},{"failures":[10],"name":"returnValue","position":"org.apache.commons.lang3.CharEncoding:101","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.StrTokenizer:761","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","position":"org.apache.commons.lang3.math.Fraction:953","type":"CtInvocationImpl"},"status":-2},{"failures":[11,12],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:3085","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    int = (int) * (int);\n} else {\n    for (final byte byte : byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(byte);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtIfImpl"},"status":-1},{"failures":[13],"name":"returnValue","position":"org.apache.commons.lang3.ArrayUtils:1251","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator())","position":"org.apache.commons.lang3.math.Fraction:865","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Helper class to hold multi-part Map keys<\/p>\n */\nprivate static class MultipartKey {\n    private final java.lang.Object[] keys;\n\n    private int hashCode;\n\n    /** \n     * Constructs an instance of <code>MultipartKey<\/code> to hold the specified objects.\n     * @param keys the set of objects that make up the key.  Each key may be null.\n     */\npublic MultipartKey(final java.lang.Object... keys) {\n        this.java.lang.Object[] = java.lang.Object[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        return java.util.Arrays.java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(java.lang.Object)).java.lang.Object[]);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        if ((int) == 0) {\n            int int = 0;\n            for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n                if (java.lang.Object != null) {\n                    int = (int * 7) + (java.lang.Object.hashCode());\n                } \n            }\n            int = int;\n        } \n        return int;\n    }\n}","position":"org.apache.commons.lang3.time.FormatCache:225","type":"CtClassImpl"},"status":-2},{"failures":[14],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long[][int]) < long) {\n    long = long[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:795","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"nullText":"validTimeZoneChars"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy that handles a timezone field in the parsing pattern\n */\nprivate static class TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final java.lang.String validTimeZoneChars;\n\n    private final java.util.SortedMap<java.lang.String, java.util.TimeZone> tzNames = new java.util.TreeMap<java.lang.String, java.util.TimeZone>(java.lang.String.java.util.Comparator<java.lang.String>);\n\n    /** \n     * Index of zone id\n     */\nprivate static final int ID = 0;\n\n    /** \n     * Index of the long name of zone in standard time\n     */\nprivate static final int LONG_STD = 1;\n\n    /** \n     * Index of the short name of zone in standard time\n     */\nprivate static final int SHORT_STD = 2;\n\n    /** \n     * Index of the long name of zone in daylight saving time\n     */\nprivate static final int LONG_DST = 3;\n\n    /** \n     * Index of the short name of zone in daylight saving time\n     */\nprivate static final int SHORT_DST = 4;\n\n    /** \n     * Construct a Strategy that parses a TimeZone\n     * @param locale The Locale\n     */\nTimeZoneStrategy(final java.util.Locale locale) {\n        final java.lang.String[][] java.lang.String[][] = java.text.DateFormatSymbols.java.text.DateFormatSymbols.getInstance(java.util.Locale).getZoneStrings();\n        for (java.lang.String[] java.lang.String[] : java.lang.String[][]) {\n            if (java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int].startsWith(\"GMT\")) {\n                continue;\n            } \n            final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]);\n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (java.util.TimeZone.useDaylightTime()) {\n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n            } \n        }\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        java.lang.StringBuilder.append(\"(GMT[+\\\\-]\\\\d{0,1}\\\\d{2}|[+\\\\-]\\\\d{2}:?\\\\d{2}|\");\n        for (final java.lang.String java.lang.String : java.util.SortedMap<java.lang.String, java.util.TimeZone>.keySet()) {\n            org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|');\n        }\n        java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n        java.lang.String = java.lang.StringBuilder.toString();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        java.lang.StringBuilder.append(java.lang.String);\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.TimeZone java.util.TimeZone;\n        if (((java.lang.String.charAt(0)) == '+') || ((java.lang.String.charAt(0)) == '-')) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone((\"GMT\" + java.lang.String));\n        } else if (java.lang.String.startsWith(\"GMT\")) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n        } else {\n            java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n            if (java.util.TimeZone == null) {\n                throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n            } \n        }\n        java.util.Calendar.setTimeZone(java.util.TimeZone);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:706","type":"CtClassImpl"},"status":-2},{"failures":[15,16,17,18,19,20,21],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.translate.CharSequenceTranslator[][0] = this","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:109","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd())","position":"org.apache.commons.lang3.time.FastDateParser:153","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output one of a set of values.<\/p>\n */\nprivate static class TextField implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final int mField;\n\n    private final java.lang.String[] mValues;\n\n    /** \n     * Constructs an instance of {@code TextField}\n     * with the specified field and values.\n     * \n     * @param field the field\n     * @param values the field values\n     */\nTextField(final int field ,final java.lang.String[] values) {\n        int = int;\n        java.lang.String[] = java.lang.String[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        int int = 0;\n        for (int int = java.lang.String[].int ; (--int) >= 0 ; ) {\n            final int int = java.lang.String[][int].length();\n            if (int > int) {\n                int = int;\n            } \n        }\n        return int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String[][java.util.Calendar.get(int)]);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:677","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((!boolean) && (!boolean)) {\n    int = java.lang.Integer.int;\n} else {\n    int = 'z' + 1;\n    int = ' ';\n}","position":"org.apache.commons.lang3.RandomStringUtils:238","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long[]","position":"org.apache.commons.lang3.ArrayUtils:536","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, long[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:815","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2030","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.text.StrBuilder:2230","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int + int","position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:169","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.classToString(java.lang.Class<?>.getEnclosingClass()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1746","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.StringUtils:4534","type":"CtBreakImpl"},"status":-2},{"failures":[22],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY"},"name":"replace","transplant":{"sourceCode":"return short[].clone()","position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.short[]","position":"org.apache.commons.lang3.ArrayUtils:1006","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:624","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1078","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:657","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class<?>, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:552","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"traceStarted":"hasNext"},"name":"replace","transplant":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == 0) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = 0;\n}","position":"org.apache.commons.lang3.CharRange:286","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"increase":"startIndexInclusive","greater":"startIndexInclusive"},"name":"add","transplant":{"sourceCode":"int += 3 * int","position":"org.apache.commons.lang3.StringUtils:4758","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:1199","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","position":"org.apache.commons.lang3.math.Fraction:679","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:510","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"length"},"name":"replace","transplant":{"sourceCode":"final int int = (this.int) / 2","position":"org.apache.commons.lang3.text.StrBuilder:2022","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String[].int","position":"org.apache.commons.lang3.StringUtils:4701","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} else if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3792","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(char[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4808","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.SystemUtils:1448","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:758","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) == 1) {\n    final char char = java.lang.String.charAt(0);\n    while (int < int) {\n        if ((java.lang.String.charAt(int)) == char) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n} else {\n    while (int < int) {\n        if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:3108","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"status":-2},{"failures":[59,60,61,62,63,64],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.NumberUtils:729","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.text.StrMatcher:367","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1619","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.lang3.math.NumberUtils:1120","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:775","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(short[], 0, short[], short[].int, short[].int)","position":"org.apache.commons.lang3.ArrayUtils:3857","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n    boolean = false;\n} else {\n    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n}","position":"org.apache.commons.lang3.CharRange:287","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return null;\n} else if ((char[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3002","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.tuple.Triple:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3105","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.text.ExtendedMessageFormat.(containsElements(java.util.ArrayList<java.lang.String>))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:408","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:5926","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append('.').append(java.lang.Class<?>.getSimpleName())","position":"org.apache.commons.lang3.reflect.TypeUtils:1794","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:278","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.org.apache.commons.lang3.exception.ExceptionContext.getContextEntries()","position":"org.apache.commons.lang3.exception.ContextedRuntimeException:213","type":"CtReturnImpl"},"status":-2},{"failures":[65,66],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return '4'","position":"org.apache.commons.lang3.Conversion:563","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:335","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"traceStarted"},"name":"replace","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.mutable.MutableBoolean:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.exception.ExceptionUtils:651","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replacePattern(java.lang.String, java.lang.String, org.apache.commons.lang3.StringUtils.java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4458","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ false , false , true , false }","position":"org.apache.commons.lang3.Conversion:227","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.length();\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int));\n    java.lang.StringBuffer.getChars(0, int, char[], int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:577","type":"CtIfImpl"},"status":-2},{"failures":[67,68,69],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:220","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case '4' :\n    return new boolean[]{ false , false , true , false };","position":"org.apache.commons.lang3.Conversion:170","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1218","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"T = null","position":"org.apache.commons.lang3.ObjectUtils:586","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(char[], char)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2405","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (short[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:774","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (int)) {\n    org.apache.commons.lang3.text.StrBuilder.delete(int, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2052","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"toProperString":"dec"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"-1\"","position":"org.apache.commons.lang3.math.Fraction:937","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = null","position":"org.apache.commons.lang3.math.NumberUtils:516","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.getChars(int, (int + int), char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:708","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName()","position":"org.apache.commons.lang3.SerializationUtils:321","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"runningState":"runningState"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.time.StopWatch.State.isStopped()","position":"org.apache.commons.lang3.time.StopWatch:475","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.State.isSuspended()","position":"org.apache.commons.lang3.time.StopWatch:460","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7040","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        int++;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:7115","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\");\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:155","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"toClass":"toClass","subtypeVarAssigns":"subtypeVarAssigns","this":"this","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:801","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:813","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1624","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:4000","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","type":"superType"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType, org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType), null)","position":"org.apache.commons.lang3.reflect.TypeUtils:748","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.reflect.ParameterizedType)","position":"org.apache.commons.lang3.reflect.TypeUtils:978","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"milliseconds":"days","days":"days","org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY":"days"},"name":"add","transplant":{"sourceCode":"long = long - (long * (org.apache.commons.lang3.time.DateUtils.long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:138","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long / (org.apache.commons.lang3.time.DateUtils.long)","position":"org.apache.commons.lang3.time.DurationFormatUtils:137","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"second":"second"},"name":"add","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7089","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.CharSequence.toString(), java.lang.CharSequence.toString()).length()","position":"org.apache.commons.lang3.StringUtils:7131","type":"CtLocalVariableImpl"},"status":-2},{"failures":[70],"variableMapping":{"newLineStr":"duration","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"duration"},"name":"replace","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \" \" + java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:178","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","position":"org.apache.commons.lang3.reflect.TypeUtils:910","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.TypeUtils:901","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.CharRange.boolean) {\n        return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n    } \n    return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char));\n} ","position":"org.apache.commons.lang3.CharRange:186","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>)) {\n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getField(java.lang.String);\n        org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), java.lang.String, java.lang.Class<?>);\n        java.lang.reflect.Field = java.lang.reflect.Field;\n    } catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n    }\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:122","type":"CtForEachImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isInstance(java.lang.Object)) {\n    java.lang.Class<?> = java.lang.Class<?>;\n    if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n        java.lang.Class<?> = java.lang.Class<?>;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:345","type":"CtIfImpl"},"status":-2},{"failures":[71,72],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.HashCodeBuilder()","position":"org.apache.commons.lang3.ArrayUtils:190","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(float)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:728","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.time.FormatCache:254","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:679","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(java.lang.Object, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:447","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.TypeUtils:168","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isInterface()) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.Class<?>.getGenericInterfaces();\n    java.lang.reflect.Type java.lang.reflect.Type = null;\n    for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.Class<?> java.lang.Class<?> = null;\n        if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n        } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n        } else {\n            throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type));\n        }\n        if (org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>)) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.Type)(java.lang.Class<?>))))) {\n            java.lang.reflect.Type = java.lang.reflect.Type;\n        } \n    }\n    if (java.lang.reflect.Type != null) {\n        return java.lang.reflect.Type;\n    } \n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1049","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1485","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) || (int <= 0)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1026","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.math.NumberUtils:379","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2272","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2033","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == 0) && (int == 0)) {\n    if (char[] != null) {\n        int = char[].int;\n    } else {\n        if ((!boolean) && (!boolean)) {\n            int = java.lang.Integer.int;\n        } else {\n            int = 'z' + 1;\n            int = ' ';\n        }\n    }\n} else {\n    if (int <= int) {\n        throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n    } \n}","position":"org.apache.commons.lang3.RandomStringUtils:234","type":"CtIfImpl"},"status":-2},{"failures":[73,74,75],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:5434","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2129","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:409","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2879","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = 'z' + 1","position":"org.apache.commons.lang3.RandomStringUtils:241","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.text.StrTokenizer:459","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"traceStarted":"result"},"name":"replace","transplant":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final boolean boolean : boolean[]) {\n    boolean ^= boolean;\n}","position":"org.apache.commons.lang3.BooleanUtils:1051","type":"CtForEachImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.Conversion:1659","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + 4));\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + 4), ((int) - int));\n    char[][int++] = 't';\n    char[][int++] = 'r';\n    char[][int++] = 'u';\n    char[][int] = 'e';\n    int += 4;\n} else {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + 5));\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + 5), ((int) - int));\n    char[][int++] = 'f';\n    char[][int++] = 'a';\n    char[][int++] = 'l';\n    char[][int++] = 's';\n    char[][int] = 'e';\n    int += 5;\n}","position":"org.apache.commons.lang3.text.StrBuilder:1575","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String, 0.0F)","position":"org.apache.commons.lang3.math.NumberUtils:199","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierWithAccess":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":21,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":56,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":39,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":74,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":5,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":29,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":63,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":22,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":52,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":68,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":0,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":54,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":20,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":16,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":12,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":46,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":62,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":35,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":75,"org.apache.commons.lang3.math.FractionTest.testFactory_double":1,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":57,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":60,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":71,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":70,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":58,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":51,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":37,"org.apache.commons.lang3.ArrayUtilsTest.testToString":23,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":27,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":2,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":19,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":53,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifier":4,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":49,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":7,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":32,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":65,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArray":11,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":50,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":43,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":36,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":40,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":34,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":17,"org.apache.commons.lang3.RangeTest.testIsWithCompare":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":28,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":10,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":61,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":64,"org.apache.commons.lang3.RangeTest.testContains":69,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":44}}]
