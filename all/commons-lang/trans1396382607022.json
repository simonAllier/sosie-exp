[{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(L, \"Listener object cannot be null.\")","position":"org.apache.commons.lang3.event.EventListenerSupport:201","type":"CtInvocationImpl"},"status":-1},{"failures":[1],"variableMapping":{"toProperString":"tmp"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"0\"","position":"org.apache.commons.lang3.math.Fraction:933","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:206","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Throwable[].int","position":"org.apache.commons.lang3.exception.ExceptionUtils:521","type":"CtLocalVariableImpl"},"status":-2},{"failures":[2],"binaryOperator":"(int * 1) + int","name":"math","position":"org.apache.commons.lang3.Conversion:1088","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.reflect.MethodUtils:395","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int])","position":"org.apache.commons.lang3.time.FastDateParser:742","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>(double[].int)","position":"org.apache.commons.lang3.ArrayUtils:5893","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6040","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n    T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n} ","position":"org.apache.commons.lang3.ObjectUtils:587","type":"CtIfImpl"},"status":-2},{"failures":[3,4],"name":"returnValue","position":"org.apache.commons.lang3.reflect.ConstructorUtils:293","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:7316","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"hours":"sz","minutes":"sz"},"name":"add","transplant":{"sourceCode":"while (int < 0) {\n    int += 60;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:306","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = org.apache.commons.lang3.time.DurationFormatUtils.Token[][int];\n    final java.lang.Object java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.Token.getValue();\n    final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token.getCount();\n    if (java.lang.Object instanceof java.lang.StringBuilder) {\n        java.lang.StringBuilder.append(java.lang.Object.toString());\n    } else {\n        if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = true;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            if (boolean) {\n                int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n                java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n            } else {\n                java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            }\n            boolean = false;\n        } \n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:420","type":"CtForImpl"},"status":-2},{"failures":[5],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.long = java.lang.System.java.lang.System.currentTimeMillis()","position":"org.apache.commons.lang3.time.StopWatch:185","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return java.lang.System.java.lang.System.getProperty(java.lang.String);\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    java.lang.System.java.io.PrintStream.println(((\"Caught a SecurityException reading the system property \\'\" + java.lang.String) + \"\\'; the SystemUtils property value will default to null.\"));\n    return null;\n}","position":"org.apache.commons.lang3.SystemUtils:1344","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.mutable.MutableInt:249","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '4'","position":"org.apache.commons.lang3.Conversion:346","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.StrMatcher:373","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:692","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:1958","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"symbols":"symbols"},"name":"add","transplant":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getAmPmStrings()","position":"org.apache.commons.lang3.time.FastDatePrinter:177","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getMonths()","position":"org.apache.commons.lang3.time.FastDatePrinter:173","type":"CtLocalVariableImpl"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1057","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.EqualsBuilder:336","type":"CtLocalVariableImpl"},"status":-1},{"failures":[39],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final java.lang.String java.lang.String = \"...\"","position":"org.apache.commons.lang3.StringUtils:6409","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.trim(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:444","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.lang3.text.StrBuilder:2874","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int))","position":"org.apache.commons.lang3.Conversion:663","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:936","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return byte[];\n} ","position":"org.apache.commons.lang3.Conversion:1684","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.io.ObjectOutputStream java.io.ObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream())","position":"org.apache.commons.lang3.event.EventListenerSupport:224","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigInteger java.math.BigInteger = java.math.BigInteger.divide(java.math.BigInteger.java.math.BigInteger.valueOf(int))","position":"org.apache.commons.lang3.math.Fraction:776","type":"CtLocalVariableImpl"},"status":-2},{"failures":[40,41,42,43,44],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1663","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.ClassUtils:647","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DurationFormatUtils:512","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{"fromIndex":"count"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:390","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; (--int) >= 0 ; ) {\n    final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.List<java.lang.String>;\n    if (int != 0) {\n        java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n        org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n    } \n    if (int == (int - 1)) {\n        java.util.List<java.lang.String>.add(java.lang.Throwable[][int].toString());\n    } else {\n        java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())));\n    }\n    for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n        java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n    }\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:524","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((int = java.util.BitSet.nextSetBit(int)) != (-1)) {\n    int = int - int;\n    if (int > 0) {\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int);\n        int += int;\n    } \n    int = java.util.BitSet.nextClearBit(int);\n}","position":"org.apache.commons.lang3.ArrayUtils:6076","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.text.translate.LookupTranslator:56","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readField(java.lang.reflect.Field, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:430","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.lang3.exception.ExceptionUtils:657","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"java.util.Calendar.SUNDAY","dstPos":"java.util.Calendar.SUNDAY"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1081","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1214","type":"CtIfImpl"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"variableMapping":{"regex":"buf"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\Q\")","position":"org.apache.commons.lang3.time.FastDateParser:335","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.FastDatePrinter:313","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, java.lang.String, org.apache.commons.lang3.StringUtils.java.lang.String, -1)","position":"org.apache.commons.lang3.StringUtils:4356","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final int int = 15 << int;\n    short = ((short)((short & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:980","type":"CtForImpl"},"status":-2},{"failures":[72],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5372","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3435","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:559","type":"CtForEachImpl"},"status":0},{"failures":[73,74],"binaryOperator":"float == (float[][int])","name":"negateConditional","position":"org.apache.commons.lang3.ArrayUtils:2818","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle()","position":"org.apache.commons.lang3.builder.ToStringStyle:128","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:574","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tok2":"tok2","value":"value"},"name":"add","transplant":{"sourceCode":"return this.java.lang.Object.equals(this.java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:645","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n    return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n} else if ((this.java.lang.Object) instanceof java.lang.Number) {\n    return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n} else {\n    return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:642","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"min":"startPos","max":"startPos"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    return -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6945","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1382","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final int int : int[]) {\n    if (int == int) {\n        if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n            if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n                if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                    java.util.Calendar.add(java.util.Calendar.int, 15);\n                } else {\n                    java.util.Calendar.add(java.util.Calendar.int, -15);\n                    java.util.Calendar.add(java.util.Calendar.int, 1);\n                }\n            } else if (int == (java.util.Calendar.int)) {\n                if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                    java.util.Calendar.add(java.util.Calendar.int, 12);\n                } else {\n                    java.util.Calendar.add(java.util.Calendar.int, -12);\n                    java.util.Calendar.add(java.util.Calendar.int, 1);\n                }\n            } else {\n                java.util.Calendar.add(int[][0], 1);\n            }\n        } \n        return ;\n    } \n}","position":"org.apache.commons.lang3.time.DateUtils:1009","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.Range<T>.isBefore(T)) {\n    return 1;\n} else {\n    return 0;\n}","position":"org.apache.commons.lang3.Range:295","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));","position":"org.apache.commons.lang3.Conversion:140","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2704","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return V","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:280","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (V == null) {\n    return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>.get());\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:277","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (short[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3464","type":"CtIfImpl"},"status":-2},{"failures":[75],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:375","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())))","position":"org.apache.commons.lang3.time.DateUtils:944","type":"CtThrowImpl"},"status":-1},{"failures":[76],"variableMapping":{"start":"value","this":"message","end":"value","message":"message","value":"value"},"name":"replace","transplant":{"sourceCode":"if ((double <= double) || (double >= double)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(java.lang.String));\n} ","position":"org.apache.commons.lang3.Validate:1150","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Double.java.lang.Double.valueOf(double)));\n} ","position":"org.apache.commons.lang3.Validate:130","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((long >= long), \"Start value must be smaller or equal to end value.\")","position":"org.apache.commons.lang3.RandomUtils:111","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:959","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(2)","position":"org.apache.commons.lang3.BooleanUtils:605","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for ( ; (java.text.ParsePosition.getIndex()) < (java.lang.String.length()) ; org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)) {\n    switch (java.lang.String.charAt(java.text.ParsePosition.getIndex())) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int++;\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int--;\n            if (int == 0) {\n                return java.lang.String.substring(int, java.text.ParsePosition.getIndex());\n            } \n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(java.lang.String, java.text.ParsePosition, false);\n            break;\n        default :\n            break;\n    }\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:378","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"toClass":"toClass","subtypeVarAssigns":"subtypeVarAssigns","this":"this","type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n            return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    }\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:823","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n            return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    }\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:812","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 12","position":"org.apache.commons.lang3.Conversion:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<L>.size()","position":"org.apache.commons.lang3.event.EventListenerSupport:189","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = 255 << int","position":"org.apache.commons.lang3.Conversion:881","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (int == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.text.WordUtils:411","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.java.lang.reflect.Type[] = java.lang.reflect.Type[]","position":"org.apache.commons.lang3.reflect.TypeUtils:79","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:320","type":"CtInvocationImpl"},"status":-2},{"failures":[77],"variableMapping":{"srcPos":"srcPos","shift":"i","i":"i"},"name":"add","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1628","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 32) + int","position":"org.apache.commons.lang3.Conversion:1196","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1206","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.lang3.mutable.MutableObject:97","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1446","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)) == false) {\n    throw new java.lang.IllegalArgumentException(((\"The character \" + char) + \" is not in the range \\'0\\' - \\'9\\'\"));\n} ","position":"org.apache.commons.lang3.CharUtils:218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:895","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"obj2":"rhs","obj1":"rhs"},"name":"replace","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:321","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1428","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:514","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:376","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.ExceptionUtils:213","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((long)(double))","position":"org.apache.commons.lang3.mutable.MutableDouble:211","type":"CtReturnImpl"},"status":-2},{"failures":[78,79],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:1202","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:448","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.lang3.concurrent.ConcurrentException(java.util.concurrent.ExecutionException.getMessage() , java.util.concurrent.ExecutionException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String == null) || (java.lang.String[] == null)) {\n    throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:627","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharSetUtils:117","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.RandomStringUtils:252","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.time.DateUtils:1046","type":"CtLocalVariableImpl"},"status":-2},{"failures":[80],"binaryOperator":"int < (java.lang.Float[].int)","name":"negateConditional","position":"org.apache.commons.lang3.ArrayUtils:3394","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.StringUtils:5786","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:1983","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:554","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int])","position":"org.apache.commons.lang3.time.FastDateParser:742","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Integer : java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:508","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))","position":"org.apache.commons.lang3.time.DateUtils:183","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:763","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long[][((E.ordinal()) / (java.lang.Long.int))] |= 1 << ((E.ordinal()) % (java.lang.Long.int))","position":"org.apache.commons.lang3.EnumUtils:179","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.concurrent.ExecutionException java.util.concurrent.ExecutionException","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:213","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigInteger java.math.BigInteger = new java.math.BigInteger(java.lang.String.substring(int) , int)","position":"org.apache.commons.lang3.math.NumberUtils:747","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","t1":"type","t2":"type"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:1576","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:545","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-1","position":"org.apache.commons.lang3.ArrayUtils:128","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrSubstitutor:808","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[81,82],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\")","position":"org.apache.commons.lang3.StringEscapeUtils:262","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\")","position":"org.apache.commons.lang3.SerializationUtils:148","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:399","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 1) {\n    int[][(int - 1)] = java.lang.Integer.int;\n} ","position":"org.apache.commons.lang3.StringUtils:6950","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"((java.lang.String == null) && (java.lang.String == null))","name":"removeConditional","position":"org.apache.commons.lang3.math.NumberUtils:530","type":"mutation","status":0},{"failures":[],"variableMapping":{"array":"subarray"},"name":"add","transplant":{"sourceCode":"return byte[].clone()","position":"org.apache.commons.lang3.ArrayUtils:406","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.ArrayUtils:1091","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int | -2147483648","position":"org.apache.commons.lang3.time.FastDatePrinter:1239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence, java.lang.CharSequence, int, true)","position":"org.apache.commons.lang3.StringUtils:1263","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(float)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:728","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int | -2147483648","position":"org.apache.commons.lang3.time.FastDatePrinter:1239","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(double[])","position":"org.apache.commons.lang3.math.NumberUtils:883","type":"CtInvocationImpl"},"status":-2},{"failures":[83],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.EnumUtils:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"nullText":"fieldName"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:717","type":"CtIfImpl"},"status":-2},{"failures":[84],"variableMapping":{"index":"startIndexInclusive"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n} ","position":"org.apache.commons.lang3.StringEscapeUtils:395","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(float[], int, float[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:1170","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    if (java.lang.reflect.Type == null) {\n        return null;\n    } \n    final java.lang.Object java.lang.Object = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)).getGenericDeclaration();\n    if (!(java.lang.Object instanceof java.lang.Class<?>)) {\n        return null;\n    } \n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.Object)));\n    if (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null) {\n        return null;\n    } \n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type);\n    if (java.lang.reflect.Type == null) {\n        return null;\n    } \n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type, java.lang.reflect.Type);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1277","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, boolean[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1440","type":"CtInvocationImpl"},"status":-2},{"failures":[85,86,87,88,89,90],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.WordUtils:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    while ((int != int) && java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n        int++;\n    }\n} else if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:622","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"bits":"b","out":"a","mask":"b"},"name":"add","transplant":{"sourceCode":"long = (long & (~long)) | long","position":"org.apache.commons.lang3.Conversion:1055","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1100","type":"CtAssignmentImpl"},"status":0},{"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.String[], char)","position":"org.apache.commons.lang3.StringUtils:6317","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.String.length(), java.lang.String.length())","position":"org.apache.commons.lang3.time.FastDatePrinter:1145","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:96","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (int) + int","position":"org.apache.commons.lang3.time.FastDateParser:392","type":"CtLocalVariableImpl"},"status":-2},{"failures":[244],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:6080","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (long[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:339","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.long[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:925","type":"CtIfImpl"},"status":0},{"failures":[245],"variableMapping":{"cost":"min"},"name":"replace","transplant":{"sourceCode":"float += 0.1F","position":"org.apache.commons.lang3.reflect.MemberUtils:172","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float = float[][int]","position":"org.apache.commons.lang3.math.NumberUtils:919","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5515","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (double[].int)) {\n    int = (double[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2656","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:156","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"str":"str","radix":"strLen","pos":"strLen"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.startsWith(\"#\", int)) {\n    int = 16;\n    int++;\n} else if ((java.lang.String.startsWith(\"0\", int)) && ((java.lang.String.length()) > (int + 1))) {\n    int = 8;\n    int++;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:739","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:1442","type":"CtInvocationImpl"},"status":-2},{"failures":[246,1],"binaryOperator":"long - (long * (org.apache.commons.lang3.time.DateUtils.long))","name":"math","position":"org.apache.commons.lang3.time.DurationFormatUtils:138","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(T[], int, T[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:890","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ClassUtils.Interfaces != (org.apache.commons.lang3.ClassUtils.Interfaces.org.apache.commons.lang3.ClassUtils.Interfaces)) {\n    return java.lang.Iterable<java.lang.Class<?>>;\n} ","position":"org.apache.commons.lang3.ClassUtils:1189","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":222,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":155,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":152,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":179,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":10,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":48,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":218,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":55,"org.apache.commons.lang3.ValidateTest.testIsTrue5":76,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":190,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":197,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":64,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":130,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":203,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":230,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":205,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":17,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":183,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":125,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":7,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":68,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":231,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":180,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":36,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":187,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":2,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":142,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":146,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":136,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":113,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":228,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":42,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamNullNull":81,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":148,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":57,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":53,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":227,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":161,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":71,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":185,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":128,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":193,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":208,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":102,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat":245,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":14,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":97,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":121,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":151,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":172,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":110,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":206,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":38,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":54,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":23,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":63,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":182,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":1,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":60,"org.apache.commons.lang3.event.EventListenerSupportTest.testRemoveNullListener":0,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":120,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":135,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":212,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":115,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":129,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":108,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":56,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":28,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":204,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":166,"org.apache.commons.lang3.SerializationUtilsTest.testSerializeStreamObjNull":82,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":202,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":188,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":116,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":13,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":246,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":145,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToNull":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":101,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":140,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":123,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":98,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":215,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":8,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":171,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":104,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripStart_StringString":85,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":24,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":106,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":162,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":119,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":18,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":118,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":50,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":173,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":107,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":232,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":170,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":141,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":20,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":127,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":195,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloatWithStartIndex":73,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":211,"org.apache.commons.lang3.time.StopWatchTest.testGetStartTime":5,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":220,"org.apache.commons.lang3.ArrayUtilsTest.testToString":243,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":93,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":49,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":16,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":167,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":181,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_boolean":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":154,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":226,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":31,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":96,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNullStringShouldThrow":79,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":177,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":143,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":132,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":210,"org.apache.commons.lang3.text.StrTokenizerTest.test8":241,"org.apache.commons.lang3.text.StrTokenizerTest.test5":238,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":41,"org.apache.commons.lang3.text.StrTokenizerTest.test4":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":133,"org.apache.commons.lang3.text.StrTokenizerTest.test7":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":134,"org.apache.commons.lang3.text.StrTokenizerTest.test6":239,"org.apache.commons.lang3.text.StrTokenizerTest.test1":234,"org.apache.commons.lang3.text.StrTokenizerTest.test3":236,"org.apache.commons.lang3.text.StrTokenizerTest.test2":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":109,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":27,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":164,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":191,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumericSpace":244,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":59,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":22,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":223,"org.apache.commons.lang3.ValidateTest.testNotBlankNullStringShouldThrow":78,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":89,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":62,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":33,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":3,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":229,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":4,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":35,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":58,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":137,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":11,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":196,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":175,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":207,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":94,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":70,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":122,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":112,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":67,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":32,"org.apache.commons.lang3.EnumUtilsTest.test_isEnum":83,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":213,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfFloat":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":114,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":214,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_float_float":80,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":242,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":90,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":111,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":159,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":165}}]
