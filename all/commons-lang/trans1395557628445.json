[{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:832","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (((int + int) >= int) || ((char[][(int + int)]) != (char[][(int + int)]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2893","sourceCode":"if (long < 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:737","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"n":"out"}},{"position":"org.apache.commons.lang3.ArrayUtils:1245","failures":[17],"status":-1,"binaryOperator":"((((long[] == null) && (long[] != null)) && ((long[].int) > 0)) || (((long[] == null) && (long[] != null)) && ((long[].int) > 0)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:201","sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:204","sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"formatter":"formatter","dateStyle":"dateStyle","locale":"locale","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:613","sourceCode":"return byte[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1301","sourceCode":"return byte[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:564","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:860","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"failures":[18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"causeFrameIndex":"endMatchLen"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1061","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1077","sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","type":"CtIfImpl"},"failures":[20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offsetSet":"roundUp"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1315","sourceCode":"return false","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1054","failures":[24],"status":-1,"binaryOperator":"1L << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:113","sourceCode":"return 10","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:301","sourceCode":"return java.lang.Double.java.lang.Double.compare(double, double)","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:288","sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(\"Element is null\");\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1999","sourceCode":"int = (int + int) - 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:44","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"replaceLen":"count","i":"count"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:196","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(java.lang.String.toCharArray())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:194","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(java.lang.String.charAt(0))","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1009","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:386","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1516","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:809","sourceCode":"if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n    break;\n} ","type":"CtIfImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:89","sourceCode":"int += char[].int","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:234","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(java.lang.Throwable).size()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:372","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable, java.lang.Class<?>, int, true)","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:267","sourceCode":"double double = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:269","sourceCode":"double double = double - int","type":"CtLocalVariableImpl"},"failures":[35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","sourceCode":"java.lang.String java.lang.String = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:516","sourceCode":"final java.lang.String java.lang.String = java.lang.reflect.Field.getName()","type":"CtLocalVariableImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:645","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[61,62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1111","sourceCode":"final int int = ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length())) + 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:83","sourceCode":"final int int = java.lang.CharSequence.length()","type":"CtLocalVariableImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"input","searchStr":"input"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:772","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"on\", \"off\", null)","type":"CtReturnImpl"},"failures":[97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:377","sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldSeparatorAtStart":"fieldSeparatorAtStart","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:246","sourceCode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:932","sourceCode":"if ((int) == 0) {\n    java.lang.String = \"0\";\n} else if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"start":"numerator","end":"numerator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:138","sourceCode":"throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())))","type":"CtThrowImpl"},"failures":[100,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:246","sourceCode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1087","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    int = (int & (~int)) | int;\n}","type":"CtForImpl"},"failures":[102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"start":"out","end":"nBools"}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":94,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":84,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":53,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":72,"org.apache.commons.lang3.math.FractionTest.testFactory_double":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":58,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":42,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":86,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":39,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":83,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":96,"org.apache.commons.lang3.time.DateUtilsTest.testRound":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":78,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":59,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":40,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":90,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":43,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":33,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":46,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":69,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":23,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":89,"org.apache.commons.lang3.RangeTest.testElementCompareTo":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":20,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":48,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":32,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":24,"org.apache.commons.lang3.math.FractionTest.testPow":62,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":97,"org.apache.commons.lang3.BitFieldTest.testSetValue":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":2,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":4,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":76,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":0,"org.apache.commons.lang3.mutable.MutableDoubleTest.testCompareTo":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":54,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":91,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":80,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":29,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":79,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":77,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":36,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":49,"org.apache.commons.lang3.text.StrTokenizerTest.test1":7,"org.apache.commons.lang3.text.StrTokenizerTest.test3":9,"org.apache.commons.lang3.text.StrTokenizerTest.test2":8,"org.apache.commons.lang3.math.FractionTest.testSubtract":63,"org.apache.commons.lang3.text.StrTokenizerTest.test8":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":47,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":34,"org.apache.commons.lang3.BitFieldTest.testGetValue":27,"org.apache.commons.lang3.math.FractionTest.testAdd":61,"org.apache.commons.lang3.text.StrTokenizerTest.test5":11,"org.apache.commons.lang3.text.StrTokenizerTest.test4":10,"org.apache.commons.lang3.text.StrTokenizerTest.test7":13,"org.apache.commons.lang3.text.StrTokenizerTest.test6":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":75,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":71,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":73,"org.apache.commons.lang3.math.FractionTest.testMultiply":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":55,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":31,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":98,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":50,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":60,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":85,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":81,"org.apache.commons.lang3.math.FractionTest.testDivide":64,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":44,"org.apache.commons.lang3.math.FractionTest.testToProperString":99,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":18,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":102}}]
