[{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5184","sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1263","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    short[][(int + int)] = ((short)(65535 & (int >> int)));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"index":"nShorts","length":"src"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:381","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:835","sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:414","sourceCode":"if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n    boolean = false;\n    break;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,27,27,28,29,29,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,39,40,40,41,42,43,44,45,45,46,47,48,49,50,50,51,52,52,53,53,54,55,56,56,57,57,58,59,60,61,61,62,62,63,64,65,66,67,68,68,69,69,70,70,71,72,72,73,74,74,75,75,76,77,77,78,78,79,79,80,81,82,83,84,84,85,86,86,87,87,88,89,89,90,91,92,93,93,94,95,95,96,96,97,98,99,100,101,102,103,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"len","nBytes":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:552","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:466","sourceCode":"if (boolean[][int]) {\n    return '8';\n} else {\n    return '0';\n}","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1177","inlineConstant":"int int = 0","failures":[39,76,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6278","sourceCode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:918","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"toString"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:733","sourceCode":"final long long = (65535L & (short[][(int + int)])) << int","type":"CtLocalVariableImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:117","sourceCode":"return 14","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:209","sourceCode":"return (java.lang.String.hashCode()) + (13 * ((java.util.TimeZone.hashCode()) + (13 * (java.util.Locale.hashCode()))))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:191","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry().put(java.lang.Object, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:484","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"failures":[108,8,109,110,30,88,111,112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:114","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:177","sourceCode":"int += org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.reflect.Method.getName(), java.lang.Object)","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"initialCapacity":"result","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"result"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:391","sourceCode":"while (java.lang.Class<?> != null) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers())) {\n        try {\n            return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            return null;\n        }\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:980","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[113,7,114,115,71,71,72,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:208","sourceCode":"int int = 71 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:122","sourceCode":"if (java.util.concurrent.Callable<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Callable must not be null!\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:78","sourceCode":"final java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:859","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:810","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char[][int++])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:803","sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:351","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((int[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:360","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:357","sourceCode":"if (char < 4096) {\n    return \"\\\\u0\" + (java.lang.Integer.toHexString(char));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:354","sourceCode":"return \"\\\\u000\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","type":"CtReturnImpl"},"failures":[169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ch":"ch","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:977","sourceCode":"if (boolean) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[170,171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.AnnotationUtils:143","failures":[174],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:861","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1033","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delimMatcher":"suffixMatcher","this":"suffixMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1587","sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1660","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (byte >> int)) != 0;\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:222","failures":[175,176,177,178,179,180,181,182],"status":-1,"binaryOperator":"((java.util.Comparator<T>.compare(T, T)) < 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:342","sourceCode":"return long - long","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:686","sourceCode":"return long","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startTime":"dstInit","stopTime":"dstInit"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:618","sourceCode":"final char char = java.lang.String.charAt(4)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:586","sourceCode":"final char char = java.lang.String.charAt(1)","type":"CtLocalVariableImpl"},"failures":[184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":45,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":39,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":170,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":62,"org.apache.commons.lang3.RangeTest.testRangeOfChars":177,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":56,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":82,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":87,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":17,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":3,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":128,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":44,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":14,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":30,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":41,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":84,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":126,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":7,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":182,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":15,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":58,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":18,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":54,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":116,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":149,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":153,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":110,"org.apache.commons.lang3.RangeTest.testIntersectionWith":178,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":42,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":1,"org.apache.commons.lang3.RangeTest.testContains":181,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":174,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":28,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":179,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":90,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":162,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":161,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":160,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":138,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":137,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":108,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":134,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":136,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":64,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":168,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":132,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":69,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":78,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":119,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":63,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":9,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":60,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":86,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":23,"org.apache.commons.lang3.text.StrTokenizerTest.test1":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":165,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":166,"org.apache.commons.lang3.text.StrTokenizerTest.test3":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":53,"org.apache.commons.lang3.text.StrTokenizerTest.test2":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":51,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":184,"org.apache.commons.lang3.text.StrTokenizerTest.test8":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":46,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":22,"org.apache.commons.lang3.text.StrTokenizerTest.test5":145,"org.apache.commons.lang3.text.StrTokenizerTest.test4":144,"org.apache.commons.lang3.text.StrTokenizerTest.test7":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":26,"org.apache.commons.lang3.text.StrTokenizerTest.test6":146,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":155,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":156,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":95,"org.apache.commons.lang3.RangeTest.testContainsRange":180,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":47,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":114,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":107,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":12,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":85,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":130,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":81,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":131,"org.apache.commons.lang3.math.FractionTest.testToString":106,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":68,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":35,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":113,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":92,"org.apache.commons.lang3.RangeTest.testIsWithCompare":175,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":123,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":49,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":33,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":74,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":94,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":48,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":158,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":6,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":125,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":0}}]
