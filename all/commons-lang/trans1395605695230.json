[{"position":"org.apache.commons.lang3.Conversion:843","failures":[0],"status":-1,"binaryOperator":"(255 & (byte[][(int + int)]))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:395","sourceCode":"if ((this.boolean) == false) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:347","sourceCode":"throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:331","sourceCode":"return java.util.List<java.lang.String>.toArray(org.apache.commons.lang3.ArrayUtils.java.lang.String[])","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:987","failures":[11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"long - (int * 1000L)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:541","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:390","sourceCode":"throw new java.text.ParseException((\"Unable to parse the date: \" + java.lang.String) , -1)","type":"CtThrowImpl"},"failures":[23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1421","sourceCode":"for (int int = 0 ; int < (boolean[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[][int]);\n}","type":"CtForImpl"},"failures":[27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1363","sourceCode":"int int = int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:431","sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:193","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:487","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:335","failures":[41,42],"status":-1,"binaryOperator":"(int + 2)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:304","failures":[41,42],"status":-1,"binaryOperator":"(int + 3)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:811","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:457","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n            T = T;\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:433","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:516","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:407","sourceCode":"if (((boolean[].int) - int) < 4) {\n    throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (boolean[].int)) + \", srcPos=\") + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1711","sourceCode":"if (((byte[].int) - int) < 16) {\n    throw new java.lang.IllegalArgumentException(\"Need at least 16 bytes for UUID\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:749","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:499","sourceCode":"java.io.PrintWriter.flush()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:522","sourceCode":"if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:488","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n}","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,99,100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:672","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:141","sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isFalse(java.lang.Boolean))","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:635","sourceCode":"return '4'","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:142","sourceCode":"org.apache.commons.lang3.text.StrMatcher.stringMatcher(\":-\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:958","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[66,69,70,78,79,80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"ignored"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:628","sourceCode":"java.lang.StringBuffer.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtInvocationImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testToString":54,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":100,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":30,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":35,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":47,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":53,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":3,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":111,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":95,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":5,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":19,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":51,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":13,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":4,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":6,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":49,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":39,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":73,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":77,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":9,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":37,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":96,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":114,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":87,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":84,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_FAIL":25,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":62,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":99,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":60,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":106,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":104,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":109,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":20,"org.apache.commons.lang3.text.StrTokenizerTest.test1":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":89,"org.apache.commons.lang3.text.StrTokenizerTest.test3":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":90,"org.apache.commons.lang3.text.StrTokenizerTest.test2":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":113,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":41,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":22,"org.apache.commons.lang3.text.StrTokenizerTest.test8":72,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":105,"org.apache.commons.lang3.text.StrTokenizerTest.test5":70,"org.apache.commons.lang3.text.StrTokenizerTest.test4":69,"org.apache.commons.lang3.text.StrTokenizerTest.test7":71,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":81,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":74,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":78,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":38,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":1,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":64,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":23,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":14,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":55,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":36,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":103,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":97,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":65,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":2,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":48,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":17,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":42,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":76,"org.apache.commons.lang3.ObjectUtilsTest.testMin":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":107,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":21,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":108,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":7,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":18,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":82,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":24,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":32,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":50,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":52,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":102}}]
