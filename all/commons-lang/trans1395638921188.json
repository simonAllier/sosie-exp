[{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:421","sourceCode":"return (int) / (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:392","sourceCode":"return java.lang.Math.java.lang.Math.abs(((int) % (int)))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1359","sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:416","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)","type":"CtInvocationImpl"},"failures":[2,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"value","nBytes":"value"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:346","sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:335","sourceCode":"if (int < 0) {\n    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int);\n}","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this","pos":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:159","sourceCode":"this.byte -= byte","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:118","sourceCode":"(byte)++","type":"CtUnaryOperatorImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:212","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharRange) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:303","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"o1"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1240","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:115","sourceCode":"return 6","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:969","sourceCode":"return int","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:274","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>","type":"CtAssignmentImpl"},"failures":[10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:210","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:211","sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"capitalizeNext":"capitalizeNext"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:335","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:888","sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:907","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:357","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1629","failures":[15],"status":-1,"binaryOperator":"(1 & (short >> int))","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","failures":[],"status":0,"binaryOperator":"int > 255","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:243","sourceCode":"return char - 48","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1543","sourceCode":"if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n        return int;\n    } \n} else {\n    return int;\n}","type":"CtIfImpl"},"failures":[16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:777","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not round \" + java.lang.Object));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:856","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object));\n}","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:137","sourceCode":"if ((java.util.regex.Matcher.regionStart()) != (java.util.regex.Matcher.regionEnd())) {\n    throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())));\n} ","type":"CtIfImpl"},"failures":[31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"prefix":"pattern"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:704","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:274","sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)))","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:143","sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:775","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + int) + \"]\"))","type":"CtThrowImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:335","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:521","sourceCode":"if (boolean[][int]) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1033","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[36,37,38,13,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:325","sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:367","sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getSplitNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:141","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:7199","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:319","sourceCode":"return this","type":"CtReturnImpl"},"failures":[70,70,71,72],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1210","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:60","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":70,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":33,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":63,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":39,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":59,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":55,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":27,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":74,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":24,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":26,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":32,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":30,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":61,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":37,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":7,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":9,"org.apache.commons.lang3.math.FractionTest.testGets":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":36,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":5,"org.apache.commons.lang3.mutable.MutableByteTest.testIncrement":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":62,"org.apache.commons.lang3.ConversionTest.testShortToBinary":15,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":53,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":64,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":69,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":50,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":46,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":2,"org.apache.commons.lang3.math.FractionTest.testToProperString":1,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":49,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":21}}]
