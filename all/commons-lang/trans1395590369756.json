[{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:138","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Float.NaN":"b"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:193","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.time.FastDateParser)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:236","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableInt) {\n    return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(java.lang.Object)).intValue());\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:479","sourceCode":"try {\n    if (java.lang.Object instanceof java.util.Collection<?>) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n        }\n    } else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n        }\n    } else if (java.lang.Object instanceof long[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof int[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof short[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof byte[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof char[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof double[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof float[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof boolean[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object.getClass().isArray()) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n        }\n    } else {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n        }\n    }\n} finally {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:530","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1321","sourceCode":"return java.lang.System.java.lang.System.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:70","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:92","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String;\n} ","type":"CtIfImpl"},"failures":[37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"newLineStr"}},{"position":"org.apache.commons.lang3.Range:246","failures":[49],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1452","sourceCode":"if (boolean && (java.lang.Object != null)) {\n    org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object);\n    if (boolean) {\n        java.lang.StringBuffer.append(this.org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(java.lang.Object.getClass()));\n    } else {\n        java.lang.StringBuffer.append(java.lang.Object.getClass().getName());\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:863","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object, java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","useClassName":"fullDetail","useShortClassName":"fullDetail","object":"obj","this":"style"}},{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:55","failures":[58,59],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:909","sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:914","failures":[61],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:903","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2034","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1212","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1522","sourceCode":"if ((boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"fieldNameValueSeparator":"fieldNameValueSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:664","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n        return ;\n    } \n    if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n        java.lang.String = null;\n    } \n} ","type":"CtIfImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:283","sourceCode":"java.util.Calendar.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:651","sourceCode":"java.util.Calendar.setLenient(false)","type":"CtInvocationImpl"},"failures":[113,25,30,32,33,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cal":"c"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:546","sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","type":"CtReturnImpl"},"failures":[114,115,116,117,118,119,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:573","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:664","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1577","sourceCode":"boolean boolean","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:729","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:491","failures":[123,124,125,126],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:45","sourceCode":"int >>= 1","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1204","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bit_pattern":"startCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1045","sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:256","sourceCode":"if (char[] == null) {\n    char = ((char)((java.util.Random.nextInt(int)) + int));\n} else {\n    char = char[][((java.util.Random.nextInt(int)) + int)];\n}","type":"CtIfImpl"},"failures":[128,129,130,131,132,133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"start","nBools":"gap"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:246","sourceCode":"try {\n    final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>);\n    return java.lang.reflect.Constructor<T>;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1366","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[134,74,135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1159","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:968","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:307","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1196","sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) + 3","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"acquireCount":"endCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:789","sourceCode":"if (int == 0) {\n    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n    if (boolean) {\n        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n    } \n    int += int;\n    final int int = int;\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String java.lang.String = null;\n    if (org.apache.commons.lang3.text.StrMatcher != null) {\n        final char[] char[] = java.lang.String.toCharArray();\n        int int = 0;\n        for (int int = 0 ; int < (char[].int) ; int++) {\n            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                break;\n            } \n            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n                java.lang.String = java.lang.String.substring((int + int));\n                break;\n            } \n        }\n    } \n    if (java.util.List<java.lang.String> == null) {\n        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n    } \n    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n    java.util.List<java.lang.String>.add(java.lang.String);\n    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n    if (java.lang.String == null) {\n        java.lang.String = java.lang.String;\n    } \n    if (java.lang.String != null) {\n        final int int = java.lang.String.length();\n        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n        boolean = true;\n        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n        int = (int + int) - (int - int);\n        int += int;\n        int += int;\n        int += int;\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    } \n    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n    break;\n} else {\n    int--;\n    int += int;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.AnnotationUtils:327","failures":[136],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5419","sourceCode":"return java.lang.String.concat(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:213","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, null)","type":"CtReturnImpl"},"failures":[137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"pattern","padStr":"pattern"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1101","sourceCode":"long = long","type":"CtAssignmentImpl"},"failures":[141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:72","sourceCode":"char char = ' '","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:617","sourceCode":"final char char = java.lang.String.charAt(3)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":123,"org.apache.commons.lang3.ConversionTest.testHexToLong":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":72,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":93,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":120,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":55,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":29,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":7,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":112,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":40,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":128,"org.apache.commons.lang3.StringUtilsTest.testToString":47,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":6,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":12,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":78,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInNumberFormat":44,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":140,"org.apache.commons.lang3.SystemUtilsTest.testIS_OS":45,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":53,"org.apache.commons.lang3.time.DateUtilsTest.testRound":22,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":2,"org.apache.commons.lang3.SystemUtilsTest.testJavaAwtHeadless":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":73,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_1_8":15,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":33,"org.apache.commons.lang3.CharEncodingTest.testWorksOnJava1_2_2":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":76,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":90,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":23,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":127,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":9,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":103,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":38,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":115,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":54,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":57,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":80,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":136,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":24,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumLong":141,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":129,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":124,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":109,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":108,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":97,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":82,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":50,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":26,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":96,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":10,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":3,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":137,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":125,"org.apache.commons.lang3.CharEncodingTest.testMustBeSupportedJava1_3_1":14,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":18,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":119,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":87,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInDateTimeFormat":39,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":63,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":85,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":77,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":1,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":133,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":138,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":34,"org.apache.commons.lang3.StringUtilsTest.testToEncodedString":48,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":37,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":36,"org.apache.commons.lang3.text.StrTokenizerTest.test8":102,"org.apache.commons.lang3.text.StrTokenizerTest.test4":101,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":83,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":104,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":27,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":17,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqualObject":59,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":8,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":113,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":69,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":25,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":65,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":94,"org.apache.commons.lang3.ArrayUtilsTest.testToString":84,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":95,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":56,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":100,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":42,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":68,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":88,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":130,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":31,"org.apache.commons.lang3.RangeTest.testIsStartedBy":49,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":117,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":131,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":134,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":106,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":114,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testBuiltInChoiceFormat":41,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":35,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqual":58,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":121,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":118,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":11,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":43,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":132,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":126,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":32,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":21,"org.apache.commons.lang3.math.FractionTest.testToProperString":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":66,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":139,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":19,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":105,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":4,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":79,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":13,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":91}}]
