[{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:110","failures":[0,1,2,3,4,5,6],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:428","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, char[].int)","type":"CtInvocationImpl"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:367","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String java.lang.String = java.lang.String;\n    if (java.lang.String.endsWith(\"ZZ\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    } \n    java.text.SimpleDateFormat.applyPattern(java.lang.String);\n    java.text.ParsePosition.setIndex(0);\n    java.lang.String java.lang.String = java.lang.String;\n    if (java.lang.String.endsWith(\"ZZ\")) {\n        java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n    } \n    final java.util.Date java.util.Date = java.text.SimpleDateFormat.parse(java.lang.String, java.text.ParsePosition);\n    if ((java.util.Date != null) && ((java.text.ParsePosition.getIndex()) == (java.lang.String.length()))) {\n        return java.util.Date;\n    } \n}","type":"CtForEachImpl"},"failures":[120,121,122,123,124,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:607","sourceCode":"while ((int--) > 0) {\n    java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:608","sourceCode":"java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","length":"length","obj":"obj","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:239","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:617","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"t","end":"v"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:201","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:269","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:223","sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on class: \") + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.AnnotationUtils:126","failures":[129,130],"status":-1,"binaryOperator":"(java.lang.annotation.Annotation == null) || (java.lang.annotation.Annotation == null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1191","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" NT\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1158","sourceCode":"int int = java.util.Calendar.int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:336","sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4749","sourceCode":"int += 3 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1204","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"greater":"startCutoff","increase":"startCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:745","sourceCode":"if ((int) == 0) {\n    return boolean ? org.apache.commons.lang3.math.Fraction : org.apache.commons.lang3.math.Fraction.negate();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:754","sourceCode":"if (int == 1) {\n    final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(int, org.apache.commons.lang3.math.Fraction.int);\n    final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(org.apache.commons.lang3.math.Fraction.int, int);\n    return new org.apache.commons.lang3.math.Fraction((boolean ? org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addAndCheck(int, int) : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.subAndCheck(int, int)) , org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, org.apache.commons.lang3.math.Fraction.int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"fraction":"this","isAdd":"isAdd","numerator":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:834","sourceCode":"return false","type":"CtReturnImpl"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:351","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((int[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:458","sourceCode":"for (final T T : T[]) {\n    if ((org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:457","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n            T = T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","values":"values","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:393","sourceCode":"return boolean ? 1 : 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:469","sourceCode":"return java.lang.Boolean.booleanValue() ? int : int","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:653","sourceCode":"if (java.lang.String == null) {\n    if (java.lang.String == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.String == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.String == null) {\n        return null;\n    } \n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[151],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.CharEncoding:101","failures":[152],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:518","sourceCode":"if ((!java.lang.Character.(java.lang.Character.isDigit(char))) && (char != '.')) {\n    if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n        java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n    } else {\n        java.lang.String = null;\n    }\n    final java.lang.String java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String));\n    switch (char) {\n        case 'l' :\n        case 'L' :\n            if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n                } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n                }\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n            } \n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        case 'f' :\n        case 'F' :\n            try {\n                final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n                if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                    return java.lang.Float;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        case 'd' :\n        case 'D' :\n            try {\n                final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n                if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                    return java.lang.Double;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        default :\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    }\n} ","type":"CtIfImpl"},"failures":[153,154,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:83","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2178","sourceCode":"return new java.lang.String(char[] , 0 , int)","type":"CtReturnImpl"},"failures":[156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1845","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:517","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1014","inlineConstant":"int int = 0","failures":[157],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:464","sourceCode":"java.io.PrintStream.println(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pattern":"element"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5806","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1635","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:789","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"yes\", \"no\", null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:552","sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SerializationUtils:209","sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(java.io.ObjectInputStream.readObject()))","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:204","sourceCode":"final java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:544","sourceCode":"return java.util.Set<java.lang.reflect.Method>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:937","sourceCode":"java.lang.String = \"-1\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:582","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"failures":[153,158,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toProperString":"exp"}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:132","sourceCode":"java.io.Writer.write(int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:115","sourceCode":"java.io.Writer.write(java.lang.Integer.java.lang.Integer.toString(int, 10))","type":"CtInvocationImpl"},"failures":[159,160,161,162,163,164],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"entityValue":"codepoint","out":"out"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:289","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:113","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, null, false, false, null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:659","sourceCode":"final long long = ((long)(int)) * ((long)(int))","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":163,"org.apache.commons.lang3.ConversionTest.testHexToByte":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":41,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":68,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":1,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":73,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":78,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":161,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":164,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":89,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":116,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":50,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":4,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":75,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":91,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":53,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":49,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":99,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_Boolean_int_int_int":150,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":63,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":79,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":106,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":38,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_OK":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":25,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":128,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":80,"org.apache.commons.lang3.ObjectUtilsTest.testMax":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":81,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":137,"org.apache.commons.lang3.text.StrBuilderTest.testLeftString":156,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":136,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":103,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":133,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":132,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":134,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":59,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":148,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":131,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":61,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":12,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":111,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":15,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":58,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":55,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":62,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":160,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":29,"org.apache.commons.lang3.text.StrTokenizerTest.test1":138,"org.apache.commons.lang3.text.StrTokenizerTest.test3":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":48,"org.apache.commons.lang3.text.StrTokenizerTest.test2":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":118,"org.apache.commons.lang3.text.StrTokenizerTest.test8":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":42,"org.apache.commons.lang3.text.StrTokenizerTest.test5":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":110,"org.apache.commons.lang3.text.StrTokenizerTest.test4":141,"org.apache.commons.lang3.text.StrTokenizerTest.test7":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":28,"org.apache.commons.lang3.text.StrTokenizerTest.test6":143,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":146,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":85,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":43,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":158,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":21,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":76,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":14,"org.apache.commons.lang3.ArrayUtilsTest.testToString":107,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_OK":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":0,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfPrimitiveArray":126,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":94,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":31,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":13,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":74,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":33,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":39,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_WITH_DE_LOCALE":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":44,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":34,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":69,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":90,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":124,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":153,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":86}}]
