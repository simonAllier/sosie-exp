[{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:864","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1192","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:664","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7089","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.reflect.Field.getName()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:521","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.StringUtils:7092","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:797","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + ((int)((long ^ (long >> 32))))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:782","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'M' :\n    return (java.lang.String.length()) >= 3 ? org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:481","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toShort(java.lang.String, ((short)(0)))","position":"org.apache.commons.lang3.math.NumberUtils:352","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Throwable == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:456","type":"CtIfImpl"},"status":-2},{"failures":[7,8,9],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.List<L>.add(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:180","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<L>.remove(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:202","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1613","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:677","type":"CtIfImpl"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18],"variableMapping":{"value":"v"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.mutable.MutableInt:118","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:593","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1029","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3071","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:335","type":"CtIfImpl"},"status":-2},{"failures":[19,20,21],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append('+')","position":"org.apache.commons.lang3.time.FastDatePrinter:1201","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1240","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtIfImpl"},"status":-2},{"failures":[22],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:376","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"date":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:936","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())));\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:127","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1645","type":"CtReturnImpl"},"status":-2},{"failures":[23],"binaryOperator":"int < int","name":"removeConditional","position":"org.apache.commons.lang3.ArrayUtils:5640","type":"mutation","status":-1},{"failures":[24,25],"binaryOperator":"int - 1","name":"math","position":"org.apache.commons.lang3.StringUtils:1879","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:275","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object[][int])","position":"org.apache.commons.lang3.text.StrBuilder:1138","type":"CtInvocationImpl"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.concurrent.ThreadFactory = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:362","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ThreadFactory = org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.java.util.concurrent.ThreadFactory","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:119","type":"CtAssignmentImpl"},"status":-1},{"failures":[35],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    java.lang.String = java.lang.String.substring((int + 1)).trim();\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:312","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"top":"quoting","altered":"quoting"},"name":"replace","transplant":{"sourceCode":"if (boolean) {\n    return boolean ? 1 : 0;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:877","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","position":"org.apache.commons.lang3.text.StrTokenizer:748","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    if (int == (java.lang.Integer.int)) {\n        return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n    } \n    return org.apache.commons.lang3.math.Fraction.invert().pow(-int);\n} else {\n    final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(this);\n    if ((int % 2) == 0) {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n    } else {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n    }\n}","position":"org.apache.commons.lang3.math.Fraction:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf('/');\n    if (int < 0) {\n        throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n    } else {\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n        return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int);\n    }\n} ","position":"org.apache.commons.lang3.math.Fraction:331","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(long[])","position":"org.apache.commons.lang3.EnumUtils:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:718","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2880","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1305","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:409","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , false , false , false }","position":"org.apache.commons.lang3.Conversion:223","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:767","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} ","position":"org.apache.commons.lang3.LocaleUtils:297","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Enumeration<?> java.util.Enumeration<?> = java.util.Properties.propertyNames()","position":"org.apache.commons.lang3.text.StrSubstitutor:214","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:709","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Boolean java.lang.Boolean = java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(boolean[], java.lang.Boolean.booleanValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5989","type":"CtForEachImpl"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.HashMap<java.lang.String, java.lang.CharSequence>.put(java.lang.CharSequence[][0].toString(), java.lang.CharSequence[][1])","position":"org.apache.commons.lang3.text.translate.LookupTranslator:51","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; (int < (double[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(double[][int], double[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:906","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","position":"org.apache.commons.lang3.time.StopWatch:282","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:310","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.util.regex.Matcher.group()","position":"org.apache.commons.lang3.time.FastDateParser:158","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = (int & 1) == 1 ? int : -(int / 2)","position":"org.apache.commons.lang3.math.Fraction:604","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5514","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:827","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","position":"org.apache.commons.lang3.Conversion:261","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'W' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:485","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2391","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    return boolean ? -1 : 1;\n} ","position":"org.apache.commons.lang3.ObjectUtils:510","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.valueOf(short)","position":"org.apache.commons.lang3.mutable.MutableShort:283","type":"CtReturnImpl"},"status":-2},{"failures":[52,53,54],"name":"inlineConstant","inlineConstant":"int int = 1","position":"org.apache.commons.lang3.StringUtils:3084","type":"mutation","status":-1},{"failures":[],"variableMapping":{"strLen":"seqEnd","startIndex":"seqEnd"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2343","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:91","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    java.lang.StringBuilder.append(java.lang.Object);\n} ","position":"org.apache.commons.lang3.StringUtils:4096","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:1123","type":"CtIfImpl"},"status":-2},{"failures":[55],"variableMapping":{"quoteLen":"startIndex","pos":"startIndex"},"name":"replace","transplant":{"sourceCode":"int += int * 2","position":"org.apache.commons.lang3.text.StrTokenizer:759","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2337","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"stopTime":"dstInit","startTime":"dstInit"},"name":"add","transplant":{"sourceCode":"return long - long","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:723","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:958","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.concurrent.Future<T>","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"fieldSeparator":"fieldSeparator"},"name":"add","transplant":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1899","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n        boolean = false;\n        break;\n    } \n}","position":"org.apache.commons.lang3.builder.ToStringStyle:413","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:166","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object, java.util.Map<java.lang.String, java.lang.String>)","position":"org.apache.commons.lang3.text.StrSubstitutor:220","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"result","close":"result","open":"result"},"name":"add","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.Range:460","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"str":"str","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, false)","position":"org.apache.commons.lang3.StringUtils:3176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, char, false)","position":"org.apache.commons.lang3.StringUtils:2603","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (int) > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 100) {\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:909","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1054","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:594","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String.isEmpty() ? null : java.lang.String","position":"org.apache.commons.lang3.StringUtils:529","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, null, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"firstDiff":"i","shortestStrLen":"i","longestStrLen":"i"},"name":"add","transplant":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2699","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = ((int) * (int)) + java.lang.Float.(java.lang.Float.floatToIntBits(float))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:710","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotBlank(java.lang.String), \"The field name must not be blank/empty\")","position":"org.apache.commons.lang3.reflect.FieldUtils:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.reflect.Type == null) || (java.lang.reflect.Type instanceof java.lang.Class<?>)) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][0] = int;\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[]);\n    int = int[][0];\n    final int int = java.lang.String.length();\n    if (int == 0) {\n        break;\n    } \n    org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule;\n    final char char = java.lang.String.charAt(0);\n    switch (char) {\n        case 'G' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'y' :\n            if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n            }\n            break;\n        case 'M' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 3) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n            }\n            break;\n        case 'd' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'h' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'H' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'm' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 's' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'S' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'E' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n            break;\n        case 'D' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'F' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'w' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'W' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'a' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'k' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'K' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'z' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            }\n            break;\n        case 'Z' :\n            if (int == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            }\n            break;\n        case '\\'' :\n            final java.lang.String java.lang.String = java.lang.String.substring(1);\n            if ((java.lang.String.length()) == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n            }\n            break;\n        default :\n            throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n    }\n    java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.add(org.apache.commons.lang3.time.FastDatePrinter.Rule);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:182","type":"CtForImpl"},"status":-2},{"failures":[56],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.this.append(java.lang.String, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:2980","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:451","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int)","position":"org.apache.commons.lang3.time.FastDatePrinter:862","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:529","type":"CtIfImpl"},"status":-2},{"failures":[57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","position":"org.apache.commons.lang3.math.Fraction:953","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, false)","position":"org.apache.commons.lang3.math.Fraction:727","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.AnnotationUtils:265","type":"CtReturnImpl"},"status":-2},{"failures":[58,59,60,61],"variableMapping":{"hasExp":"shutdown"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1395","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:278","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.java.lang.Character.valueOf(char)","position":"org.apache.commons.lang3.CharUtils:88","type":"CtReturnImpl"},"status":-2},{"failures":[62],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(java.lang.Throwable).size()","position":"org.apache.commons.lang3.exception.ExceptionUtils:234","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 100) {\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:755","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:825","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()","position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4172","type":"CtReturnImpl"},"status":-2},{"failures":[63],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:830","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Character.(java.lang.Character.isDigit(java.lang.CharSequence.charAt(int))) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6039","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:311","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:1001","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:303","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:836","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"start":"value","i":"value"},"name":"add","transplant":{"sourceCode":"int = ++int","position":"org.apache.commons.lang3.StringUtils:2967","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.Integer.java.lang.Integer.toString(int).length()","position":"org.apache.commons.lang3.time.FastDatePrinter:863","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final float[] float[] = new float[java.lang.Float[].int]","position":"org.apache.commons.lang3.ArrayUtils:3393","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:633","type":"CtReturnImpl"},"status":-2},{"failures":[64,65],"variableMapping":{"start":"start","i":"start"},"name":"add","transplant":{"sourceCode":"int = ++int","position":"org.apache.commons.lang3.StringUtils:3142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.String.indexOf(java.lang.String[][int], int)","position":"org.apache.commons.lang3.StringUtils:4785","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.lang3.reflect.FieldUtils:699","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.lang3.ObjectUtils:630","type":"CtLocalVariableImpl"},"status":-2},{"failures":[66],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:554","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:534","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:274","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, (\"add\" + (java.lang.Class<L>.getSimpleName())), L);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have an accessible add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Unable to add listener.\" , java.lang.reflect.InvocationTargetException.getCause());\n}","position":"org.apache.commons.lang3.event.EventUtils:49","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.event.EventUtils.org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object, java.lang.Class<L>, L)","position":"org.apache.commons.lang3.event.EventUtils:79","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1631","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.charAt(0))","position":"org.apache.commons.lang3.StringUtils:5312","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:745","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:879","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int++) == int) {\n    int = int;\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3094","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char[][java.text.ParsePosition.getIndex()]) {\n    case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n        org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true);\n        break;\n    case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n        int++;\n        org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n        final int int = java.text.ParsePosition.getIndex();\n        final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n        java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(int);\n        org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n        java.text.Format java.text.Format = null;\n        java.lang.String java.lang.String = null;\n        if ((char[][java.text.ParsePosition.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n            java.lang.String = org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n            java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String);\n            if (java.text.Format == null) {\n                java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n            } \n        } \n        java.util.ArrayList<java.text.Format>.add(java.text.Format);\n        java.util.ArrayList<java.lang.String>.add((java.text.Format == null ? null : java.lang.String));\n        org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int));\n        org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.lang.String>.size()) == int));\n        if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n            throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n        } \n    default :\n        java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n        org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:159","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:608","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence[].int","position":"org.apache.commons.lang3.StringUtils:6598","type":"CtLocalVariableImpl"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,19,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,20,132,133,134,135,21,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(\"yyyy-MM-dd\")","position":"org.apache.commons.lang3.time.DateFormatUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>())","position":"org.apache.commons.lang3.builder.ToStringStyle:189","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.java.lang.String.valueOf(int)","position":"org.apache.commons.lang3.mutable.MutableInt:273","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Map<java.lang.Object, java.lang.Object> != null) && (java.util.Map<java.lang.Object, java.lang.Object>.containsKey(java.lang.Object))","position":"org.apache.commons.lang3.builder.ToStringStyle:173","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == int) {\n    int = int;\n    java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n} else {\n    java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:2850","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:3351","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:150","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = { \"0x\" , \"0X\" , \"-0x\" , \"-0X\" , \"#\" , \"-#\" }","position":"org.apache.commons.lang3.math.NumberUtils:458","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"length","lhs":"length","rhs":"comparison"},"name":"replace","transplant":{"sourceCode":"this.int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (boolean[].int) < (boolean[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:983","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Constructor<T>","position":"org.apache.commons.lang3.reflect.ConstructorUtils:279","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6778","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"start":"start"},"name":"add","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.math.NumberUtils:1379","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:85","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"while (int != 0) {\n    int += 12 * int;\n    int = 0;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:328","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (!java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n        char[][int++] = java.lang.String.charAt(int);\n    } \n}","position":"org.apache.commons.lang3.StringUtils:4177","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4717","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(java.util.concurrent.ExecutionException.getMessage() , java.util.concurrent.ExecutionException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:88","type":"CtReturnImpl"},"status":-2},{"failures":[57],"variableMapping":{"threshold":"numerator"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","position":"org.apache.commons.lang3.StringUtils:6854","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:938","type":"CtIfImpl"},"status":-1},{"failures":[213],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2207","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.HashCodeBuilder()","position":"org.apache.commons.lang3.ArrayUtils:190","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:589","type":"CtInvocationImpl"},"status":0},{"failures":[214],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:584","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:703","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"i":"i"},"name":"add","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1387","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int + 4","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[])","position":"org.apache.commons.lang3.builder.ToStringStyle:974","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6168","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:860","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object, java.lang.Object, null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:370","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"defaultValue":"collection","object":"collection"},"name":"replace","transplant":{"sourceCode":"return T != null ? T : T","position":"org.apache.commons.lang3.ObjectUtils:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:302","type":"CtReturnImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":138,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":133,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":173,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":202,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":183,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":66,"org.apache.commons.lang3.event.EventListenerSupportTest.testGetListeners":9,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":191,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":77,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":193,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":48,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":156,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":177,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":50,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":111,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":45,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":78,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":46,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":174,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":199,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":131,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":162,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":121,"org.apache.commons.lang3.math.FractionTest.testMultiply":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":71,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":99,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":75,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":178,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoNamingPattern":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":132,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":53,"org.apache.commons.lang3.math.FractionTest.testDivide":16,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":74,"org.apache.commons.lang3.StringUtilsSubstringTest.testRight_String":213,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":110,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":40,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":144,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":27,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":197,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":114,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":179,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":145,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":88,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":83,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":107,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":42,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":135,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":96,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":194,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":56,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":65,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":176,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoExHandler":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":91,"org.apache.commons.lang3.event.EventListenerSupportTest.testSerialization":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":101,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":139,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":164,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":115,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":184,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":10,"org.apache.commons.lang3.math.FractionTest.testReduce":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":94,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":31,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":192,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":154,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":190,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":200,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":102,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":87,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testPassAfterShutdown":58,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":125,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":84,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":152,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":159,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":90,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":92,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":68,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonFalse":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":104,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":167,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":6,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":93,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":186,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownOwnExecutor":59,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":126,"org.apache.commons.lang3.math.FractionTest.testFactory_double":14,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":113,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":181,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfCharWithStartIndex":55,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882":37,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":148,"org.apache.commons.lang3.ArrayUtilsTest.testToString":67,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":163,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":41,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoPriority":28,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":146,"org.apache.commons.lang3.event.EventListenerSupportTest.testRemoveListenerDuringEvent":7,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":155,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":175,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":60,"org.apache.commons.lang3.math.FractionTest.testAdd":11,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLong":1,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":137,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":73,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":185,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":82,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":128,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":147,"org.apache.commons.lang3.text.StrTokenizerTest.test8":211,"org.apache.commons.lang3.text.StrTokenizerTest.test5":208,"org.apache.commons.lang3.text.StrTokenizerTest.test4":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":118,"org.apache.commons.lang3.text.StrTokenizerTest.test7":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":119,"org.apache.commons.lang3.text.StrTokenizerTest.test6":209,"org.apache.commons.lang3.text.StrTokenizerTest.test1":204,"org.apache.commons.lang3.text.StrTokenizerTest.test3":206,"org.apache.commons.lang3.text.StrTokenizerTest.test2":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":95,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":203,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":166,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":76,"org.apache.commons.lang3.math.FractionTest.testSubtract":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":81,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":61,"org.apache.commons.lang3.math.FractionTest.testToProperString":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":122,"org.apache.commons.lang3.math.FractionTest.testPow":12,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":182,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":169,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":4,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testBasicLookup":36,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":195,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":80,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":15,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":98,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":150,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":63,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoDaemonFlag":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":141,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":151,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":142,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":153}}]
