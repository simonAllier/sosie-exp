[{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:367","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:643","sourceCode":"this.java.lang.String[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","sourceCode":"java.util.Arrays.java.util.Arrays.sort(this.java.lang.String[])","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1556","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:596","sourceCode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:929","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"v":"i","u":"i","k":"i"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:284","sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1080","sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:762","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:585","sourceCode":"if ((java.lang.Math.(java.lang.Math.abs(int)) == 1) || (java.lang.Math.(java.lang.Math.abs(int)) == 1)) {\n    return 1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:582","sourceCode":"return java.lang.Math.(java.lang.Math.abs(int)) + java.lang.Math.(java.lang.Math.abs(int))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:557","sourceCode":"return '6'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:553","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","type":"CtIfImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:731","inlineConstant":"int int = 0","failures":[16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.math.Fraction:183","failures":[17,18,19,20,21,22],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:484","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"failures":[4,5,6,8,9,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:459","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1240","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:531","sourceCode":"return 'd'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:340","sourceCode":"return '6'","type":"CtReturnImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5602","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:480","sourceCode":"if ((int > 8) || ((int == 8) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[28,29],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:221","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:217","sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","type":"CtIfImpl"},"failures":[30,31,32,21,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"numerator","numerator":"denominator","denominator":"denominator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:705","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short)","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:387","sourceCode":"return java.util.Date","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:538","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:411","failures":[38],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:732","sourceCode":"int = 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:644","sourceCode":"while ((int >= 0) && (int < int)) {\n    int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>);\n    if (int >= int) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    } \n}","type":"CtWhileImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pos":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:183","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:296","sourceCode":"throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","sourceCode":"if ((int >= (int)) && (int <= (int))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[86,87,88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"codepoint":"codepoint","below":"below","above":"above"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:451","sourceCode":"return this.org.apache.commons.lang3.time.StopWatch.State.isStarted()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:465","sourceCode":"return org.apache.commons.lang3.time.StopWatch.State.isSuspended()","type":"CtReturnImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"runningState":"runningState"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:495","sourceCode":"if (int > (-1)) {\n    if (int > (-1)) {\n        if ((int < int) || (int > (java.lang.String.length()))) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring((int + 1), int);\n    } else {\n        java.lang.String = java.lang.String.substring((int + 1));\n    }\n    java.lang.String = java.lang.String.substring(0, int);\n    int = java.lang.String.length();\n} else {\n    if (int > (-1)) {\n        if (int > (java.lang.String.length())) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring(0, int);\n    } else {\n        java.lang.String = java.lang.String;\n    }\n    java.lang.String = null;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:813","sourceCode":"if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + int));\n    break;\n} ","type":"CtIfImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dec":"varDefaultValue","str":"varDefaultValue","numDecimals":"i","mant":"varNameExpr","expPos":"valueDelimiterMatchLen","decPos":"valueDelimiterMatchLen"}},{"position":"org.apache.commons.lang3.Conversion:982","failures":[122],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int)))))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Range:290","sourceCode":"throw new java.lang.NullPointerException(\"Element is null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:60","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: \\'\" + (java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length()))) + \"\\' due to end of CharSequence\"))","type":"CtThrowImpl"},"failures":[123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:192","sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) == 0) && ((char) == (java.lang.Character.char));\n} ","type":"CtIfImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:357","sourceCode":"final java.util.LinkedHashSet<java.lang.Class<?>> java.util.LinkedHashSet<java.lang.Class<?>> = new java.util.LinkedHashSet<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:506","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = int == (java.util.Calendar.int) ? new org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(java.util.Locale) : new org.apache.commons.lang3.time.FastDateParser.TextStrategy(int , java.util.Calendar , java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:284","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","sourceCode":"java.lang.Object.notifyAll()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"object":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1448","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:518","failures":[14,15],"status":-1,"binaryOperator":"((int + 1) - int)","name":"math","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":88,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":50,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":39,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":119,"org.apache.commons.lang3.math.FractionTest.testFactory_double":32,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":43,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":89,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":36,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":111,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":11,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":8,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":2,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":123,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":47,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":117,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":22,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":92,"org.apache.commons.lang3.math.FractionTest.testGets":18,"org.apache.commons.lang3.ConversionTest.testIntToHex":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":9,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":109,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":20,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":78,"org.apache.commons.lang3.math.FractionTest.testPow":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":106,"org.apache.commons.lang3.RangeTest.testEqualsObject":38,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":100,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":56,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":41,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":25,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":12,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":103,"org.apache.commons.lang3.text.StrTokenizerTest.test1":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":83,"org.apache.commons.lang3.text.StrTokenizerTest.test3":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":95,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":30,"org.apache.commons.lang3.text.StrTokenizerTest.test2":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":115,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":26,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":37,"org.apache.commons.lang3.text.StrTokenizerTest.test8":68,"org.apache.commons.lang3.text.StrTokenizerTest.test5":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":93,"org.apache.commons.lang3.text.StrTokenizerTest.test4":65,"org.apache.commons.lang3.text.StrTokenizerTest.test7":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":13,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":28,"org.apache.commons.lang3.ConversionTest.testHexToShort":122,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":16,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":60,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":15,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":51,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":24,"org.apache.commons.lang3.math.FractionTest.testToString":19,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":116,"org.apache.commons.lang3.math.FractionTest.testMultiply":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":91,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":10,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":61,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":44,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":27,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":97,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":102,"org.apache.commons.lang3.math.FractionTest.testDivide":34,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":94,"org.apache.commons.lang3.math.FractionTest.testConversions":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":99,"org.apache.commons.lang3.math.FractionTest.testToProperString":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":110,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":105,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":46,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":48}}]
