[{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:729","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:942","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1037","sourceCode":"if ((double[][int]) > double) {\n    double = double[][int];\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:279","failures":[4,5],"status":-1,"binaryOperator":"double - (int * double)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:663","sourceCode":"if ((java.lang.Object != null) && ((java.lang.Class<?>.isInstance(java.lang.Object)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\");\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:126","sourceCode":"return new java.util.Locale(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:136","sourceCode":"return new java.util.Locale(java.lang.String.substring(0, 2) , \"\" , java.lang.String.substring(4))","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1554","sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:174","sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:121","sourceCode":"java.lang.String = java.util.regex.Matcher.group()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:123","sourceCode":"for ( ;  ; ) {\n    java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd());\n    if (!(java.util.regex.Matcher.lookingAt())) {\n        org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n        break;\n    } \n    final java.lang.String java.lang.String = java.util.regex.Matcher.group();\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String, java.util.Calendar);\n    if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n        java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n    } \n    java.lang.String = java.lang.String;\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n}","type":"CtForImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:596","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:942","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:177","sourceCode":"java.lang.String = \" \" + java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:953","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"duration":"toProperString"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:492","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:372","sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bestMatch":"method","accessibleMethod":"method"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:573","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"fieldName"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:489","sourceCode":"if (java.lang.Throwable == null) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1440","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1423","sourceCode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1057","sourceCode":"int -= 15","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1116","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"offset":"a"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:382","sourceCode":"if (!org.apache.commons.lang3.Range<T>.(isOverlappedBy(org.apache.commons.lang3.Range<T>))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>));\n} ","type":"CtIfImpl"},"failures":[126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:373","sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:134","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pattern":"currentFormatField"}},{"position":"org.apache.commons.lang3.math.NumberUtils:1346","failures":[128],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:65","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:204","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.getTSVClone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:139","sourceCode":"return ((org.apache.commons.lang3.text.StrTokenizer)(org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.clone()))","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:208","sourceCode":"int int = 71 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:490","sourceCode":"final int int = ((java.lang.String.indexOf('e')) + (java.lang.String.indexOf('E'))) + 1","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:114","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:591","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[131,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4687","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:302","sourceCode":"do {\n    boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()));\n    if (!boolean) {\n        java.lang.Object.wait();\n    } else {\n        (int)++;\n    }\n} while (!boolean )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"timeToLive":"org.apache.commons.lang3.concurrent.TimedSemaphore.NO_LIMIT"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:943","sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator()","type":"CtLocalVariableImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1441","failures":[],"status":-2,"binaryOperator":"(int + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1848","sourceCode":"if ((char[][int]) == char) {\n    char[][int] = char;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:336","sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","replace":"ch","search":"ch","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1013","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1097","sourceCode":"if (long < long) {\n    long = long;\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:974","sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1297","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (long >> int)));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"nHex":"nBytes","dstPos":"shift"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:137","sourceCode":"if ((java.util.regex.Matcher.regionStart()) != (java.util.regex.Matcher.regionEnd())) {\n    throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())));\n} ","type":"CtIfImpl"},"failures":[60,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:437","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:213","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"capitalizeNext","superEquals":"capitalizeNext"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:724","sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"failures":[134],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1812","sourceCode":"long = this.long","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:417","sourceCode":"long += int","type":"CtOperatorAssignmentImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"totalAcquireCount","org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY":"totalAcquireCount"}},{"failureDictionary":{"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":26,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":90,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":109,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":88,"org.apache.commons.lang3.math.FractionTest.testFactory_double":4,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":51,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":25,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":61,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":69,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":122,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":102,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":130,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":95,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":121,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":28,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":44,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":18,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":107,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":87,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":19,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":71,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":127,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":84,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":101,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":45,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":12,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":76,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":34,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":110,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":16,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":49,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":39,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":113,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":8,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":29,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":74,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":92,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":11,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":66,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":41,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":50,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":108,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":43,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":35,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":116,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":33,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":32,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":59,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAverageCallsPerPeriod":135,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":47,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":15,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":104,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":86,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":21,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":73,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":5,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":134,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":42,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":70,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":125,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":14,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":126,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":96,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":119,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":85,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":112,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":124,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":36,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":117,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":89,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":37,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":48,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":52,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":20,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":132,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":60,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":75,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":64,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":72,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":24,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":100,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":63,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":99,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":57,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":55,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":46,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":128,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":78,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":62,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":94,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":53,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":54,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":22,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":82,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":93,"org.apache.commons.lang3.math.FractionTest.testToProperString":133,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":83,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":2,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":79,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":120,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":131,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":7,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":67,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":1}}]
