[{"failures":[],"variableMapping":{"comparison":"i","lhs":"d","length":"i","rhs":"d"},"name":"replace","transplant":{"sourceCode":"int = int < int ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:743","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int[][(int - 1)]","position":"org.apache.commons.lang3.StringUtils:6958","type":"CtAssignmentImpl"},"status":-2},{"failures":[0],"binaryOperator":"(int - 1)","name":"math","position":"org.apache.commons.lang3.StringUtils:6951","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String != null) {\n    final int int = java.lang.String.length();\n    if (int > 0) {\n        final int int = (int) + int;\n        org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n        java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int));\n        int = int;\n        java.lang.String.getChars(0, int, char[], int);\n    } \n} ","position":"org.apache.commons.lang3.text.StrBuilder:1497","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = (int) + int;\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int));\n    int = int;\n    java.lang.String.getChars(0, int, char[], int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double, double), double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:208","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String","position":"org.apache.commons.lang3.exception.ExceptionUtils:642","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight()","position":"org.apache.commons.lang3.tuple.Triple:132","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1687","type":"CtIfImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Character[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:2960","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[] == null) || ((char[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:593","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n} ","position":"org.apache.commons.lang3.SerializationUtils:265","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1156","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:294","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:252","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = int + 1","position":"org.apache.commons.lang3.text.StrBuilder:2516","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = 1 << int","position":"org.apache.commons.lang3.Conversion:1090","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return int & (~(int))","position":"org.apache.commons.lang3.BitField:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return int;\n} ","position":"org.apache.commons.lang3.RandomUtils:89","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new java.util.concurrent.ConcurrentHashMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>(7)","position":"org.apache.commons.lang3.time.FormatCache:42","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:1156","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"java.lang.Long.SIZE","endIndex":"java.lang.Long.SIZE"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final E E : java.util.EnumSet<E>) {\n    long[][((E.ordinal()) / (java.lang.Long.int))] |= 1 << ((E.ordinal()) % (java.lang.Long.int));\n}","position":"org.apache.commons.lang3.EnumUtils:229","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (short[].int)) {\n    int = (short[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2276","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.time.FastDatePrinter:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true)","position":"org.apache.commons.lang3.time.FastDatePrinter:1168","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","position":"org.apache.commons.lang3.Conversion:201","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(double[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int)(long))","position":"org.apache.commons.lang3.math.Fraction:681","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"pos","endLimit":"pos","startPos":"pos"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    return this.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt((int)++)","position":"org.apache.commons.lang3.text.StrBuilder:2866","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"change":"milliseconds","varLen":"milliseconds","startPos":"milliseconds","endPos":"milliseconds"},"name":"replace","transplant":{"sourceCode":"int = (int + int) - (int - int)","position":"org.apache.commons.lang3.text.StrSubstitutor:855","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 1000","position":"org.apache.commons.lang3.time.DurationFormatUtils:299","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:234","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder))","position":"org.apache.commons.lang3.time.DurationFormatUtils:531","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (short[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3400","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(char[], char, 0, char[].int)","position":"org.apache.commons.lang3.StringUtils:3467","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"/** \n * A specialized {@code Future} implementation which wraps a constant value.\n * @param <T> the type of the value wrapped by this class\n */\nstatic final class ConstantFuture<T> implements java.util.concurrent.Future<T> {\n    /** \n     * The constant value.\n     */\nprivate final T value;\n\n    /** \n     * Creates a new instance of {@code ConstantFuture} and initializes it\n     * with the constant value.\n     * \n     * @param value the value (may be <b>null<\/b>)\n     */\nConstantFuture(final T value) {\n        this.T = T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>true<\/b> because\n     * the constant object managed by this {@code Future} implementation is\n     * always available.\n     */\n@java.lang.Override\n    public boolean isDone() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value.\n     */\n@java.lang.Override\n    public T get() {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value; it\n     * does not block, therefore the timeout has no meaning.\n     */\n@java.lang.Override\n    public T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>false<\/b>; there\n     * is no background process which could be cancelled.\n     */\n@java.lang.Override\n    public boolean isCancelled() {\n        return false;\n    }\n\n    /** \n     * {@inheritDoc} The cancel operation is not supported. This\n     * implementation always returns <b>false<\/b>.\n     */\n@java.lang.Override\n    public boolean cancel(final boolean mayInterruptIfRunning) {\n        return false;\n    }\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:331","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy that handles a number field in the parsing pattern\n */\nprivate static class NumberStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final int field;\n\n    /** \n     * Construct a Strategy that parses a Number field\n     * @param field The Calendar field\n     */\nNumberStrategy(final int field) {\n        this.int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean isNumber() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        if (org.apache.commons.lang3.time.FastDateParser.isNextNumber()) {\n            java.lang.StringBuilder.append(\"(\\\\p{Nd}{\").append(org.apache.commons.lang3.time.FastDateParser.getFieldWidth()).append(\"}+)\");\n        } else {\n            java.lang.StringBuilder.append(\"(\\\\p{Nd}++)\");\n        }\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.Calendar.set(int, org.apache.commons.lang3.time.FastDateParser.NumberStrategy.modify(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)));\n    }\n\n    /** \n     * Make any modifications to parsed integer\n     * @param iValue The parsed integer\n     * @return The modified value\n     */\nint modify(final int iValue) {\n        return int;\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:637","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.getQuotedString(java.lang.String, java.text.ParsePosition, false)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:390","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.builder.ToStringBuilder:1031","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > 0) {\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:794","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int >= 0) && (int >= 0)) {\n    final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int);\n    final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int);\n    if (java.lang.String.equals(java.lang.String)) {\n        java.util.List<java.lang.String>.remove(int);\n    } \n    int--;\n    int--;\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:556","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.AnnotationUtils:225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'e' :","position":"org.apache.commons.lang3.Conversion:254","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Short[].int) ; int++) {\n    short[][int] = java.lang.Short[][int].shortValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3168","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1492","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:538","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:336","type":"CtThrowImpl"},"status":-2},{"failures":[16],"variableMapping":{"this":"style","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"this.org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:1535","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, double[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:374","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:629","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:799","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.Range:458","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double > (java.lang.Integer.int)) || java.lang.Double.(java.lang.Double.isNaN(double))) {\n    throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\");\n} ","position":"org.apache.commons.lang3.math.Fraction:252","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"midClass":"raw","this":"this","midType":"owner"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n} else {\n    throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type));\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1059","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", java.lang.reflect.Type, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1497","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"codepoint":"length","below":"length","above":"length"},"name":"replace","transplant":{"sourceCode":"if ((int >= (this.int)) && (int <= (this.int))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((boolean[] == null) && (boolean[] != null)) && ((boolean[].int) > 0)) || (((boolean[] == null) && (boolean[] != null)) && ((boolean[].int) > 0))) || (((boolean[] != null) && (boolean[] != null)) && ((boolean[].int) != (boolean[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1372","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean[][(int + int)] = (1 & (short >> int)) != 0","position":"org.apache.commons.lang3.Conversion:1629","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:358","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.ArrayUtils:1305","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1628","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:7116","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > 1) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n    if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n        java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n    } \n} ","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2])","position":"org.apache.commons.lang3.LocaleUtils:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < 0) {\n    int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n    int -= 1;\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:316","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Byte[].int) ; int++) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte[][int];\n    byte[][int] = java.lang.Byte == null ? byte : java.lang.Byte.byteValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3258","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:833","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1897","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.RandomStringUtils:266","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"variableMapping":{"executor":"tempExec","this":"this","tempExec":"executor"},"name":"add","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutorService) == null) {\n    java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor();\n} else {\n    java.util.concurrent.ExecutorService = null;\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:296","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ClassUtils:729","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.io.PrintWriter.println(java.lang.String);\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:496","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[][int]) {\n    return 'c';\n} else {\n    return '4';\n}","position":"org.apache.commons.lang3.Conversion:460","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:171","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3765","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.State.isSuspended()","position":"org.apache.commons.lang3.time.StopWatch:460","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"byte = byte[][int]","position":"org.apache.commons.lang3.math.NumberUtils:865","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.time.FastDatePrinter:179","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(int)","position":"org.apache.commons.lang3.text.StrBuilder:1028","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:929","type":"CtInvocationImpl"},"status":-2},{"failures":[44],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:841","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:835","type":"CtReturnImpl"},"status":-1},{"failures":[45,46],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'e';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'a';\n    } else {\n        return '2';\n    }\n}","position":"org.apache.commons.lang3.Conversion:445","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:522","type":"CtIfImpl"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"pattern must not be null\")","position":"org.apache.commons.lang3.time.FormatCache:71","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","position":"org.apache.commons.lang3.text.StrTokenizer:772","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.ArrayUtils:6026","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces();\n    for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n        if (java.util.HashSet<java.lang.Class<?>>.add(java.lang.Class<?>)) {\n            org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>, java.util.HashSet<java.lang.Class<?>>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","position":"org.apache.commons.lang3.ClassUtils:370","type":"CtWhileImpl"},"status":-2},{"failures":[64,65],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:211","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int + 1","position":"org.apache.commons.lang3.text.WordUtils:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"date2":"date","date1":"date"},"name":"add","transplant":{"sourceCode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:156","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:522","type":"CtInvocationImpl"},"status":0},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,9,82,83,84,85,86,87,88,89,90,91],"variableMapping":{"buffer":"buf"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"Exception Context:\\n\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:137","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.FastDatePrinter:313","type":"CtInvocationImpl"},"status":-1},{"failures":[92],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:266","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:486","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4)","position":"org.apache.commons.lang3.CharRange:237","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:67","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:362","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrTokenizer:424","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3712","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(double[])","position":"org.apache.commons.lang3.math.NumberUtils:1031","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:481","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = char[][int]","position":"org.apache.commons.lang3.ArrayUtils:1651","type":"CtAssignmentImpl"},"status":-2},{"failures":[93],"binaryOperator":"(float[].int) == 0","name":"negateConditional","position":"org.apache.commons.lang3.ArrayUtils:3412","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.Class<T>.getConstructor(java.lang.Class<?>[]))","position":"org.apache.commons.lang3.reflect.ConstructorUtils:200","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:265","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","position":"org.apache.commons.lang3.reflect.FieldUtils:213","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.ArrayUtils:5202","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","separator":"str"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2338","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2809","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1239","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"found an unhandled type: \" + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:346","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"operand"},"name":"add","transplant":{"sourceCode":"java.lang.Number = java.lang.Number.shortValue()","position":"org.apache.commons.lang3.mutable.MutableShort:108","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.short -= java.lang.Number.shortValue()","position":"org.apache.commons.lang3.mutable.MutableShort:170","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object, java.lang.Object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>))","position":"org.apache.commons.lang3.builder.CompareToBuilder:200","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    java.lang.StringBuilder.append(char);\n    org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:436","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.math.NumberUtils:486","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int)","position":"org.apache.commons.lang3.exception.ExceptionUtils:560","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:93","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) && (java.lang.Object != null)) {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object);\n    if (boolean) {\n        java.lang.StringBuffer.append(org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(java.lang.Object.getClass()));\n    } else {\n        java.lang.StringBuffer.append(java.lang.Object.getClass().getName());\n    }\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1452","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"lhsClass":"parentClass","testClass":"parentClass"},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:340","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.reflect.MethodUtils:399","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 4","position":"org.apache.commons.lang3.time.FastDatePrinter:835","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return boolean ? 1 : 0;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:877","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1556","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher();\n} else {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtIfImpl"},"status":-2},{"failures":[94],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double[] == null) {\n    return null;\n} else if ((java.lang.Double[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.double[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtIfImpl"},"status":-1},{"failures":[95,96],"variableMapping":{"str":"str","separator":"str"},"name":"replace","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2338","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.WordUtils:542","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Short getLeft() {\n        return java.lang.Short.java.lang.Short.valueOf(short);\n    }\n\n    @java.lang.Override\n    public java.lang.Short getRight() {\n        return java.lang.Short.java.lang.Short.valueOf(short);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:725","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + int))","position":"org.apache.commons.lang3.text.StrBuilder:752","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int % 2) == 0) {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n} else {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n}","position":"org.apache.commons.lang3.math.Fraction:558","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrTokenizer:834","type":"CtReturnImpl"},"status":-2},{"failures":[97,98],"variableMapping":{"array":"chars","length":"i"},"name":"replace","transplant":{"sourceCode":"return (char[] != null) && (int != 0)","position":"org.apache.commons.lang3.ArrayUtils:3644","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1370","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter()","position":"org.apache.commons.lang3.exception.ExceptionUtils:583","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((java.lang.CharSequence.length()) * 2))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:58","type":"CtLocalVariableImpl"},"status":-2},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"binaryOperator":"(int + 1)","name":"math","position":"org.apache.commons.lang3.CharSet:186","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority()","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:231","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == (org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][int])) {\n    float += 0.1F;\n    if (int < ((org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n        java.lang.Class<?> = org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(int + 1)];\n    } \n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:176","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharSet != null) {\n    return org.apache.commons.lang3.CharSet;\n} ","position":"org.apache.commons.lang3.CharSet:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuilder.append(\"null\");\n} else {\n    java.lang.String java.lang.String;\n    try {\n        java.lang.String = java.lang.Object.toString();\n    } catch (final java.lang.Exception java.lang.Exception) {\n        java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception));\n    }\n    java.lang.StringBuilder.append(java.lang.String);\n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:147","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:3565","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:565","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:249","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String, (int + (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:2486","type":"CtLocalVariableImpl"},"status":-2},{"failures":[122,123],"variableMapping":{"toClass":"toClass","type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return (java.lang.Class<?> == null) || (!(java.lang.Class<?>.isPrimitive()));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:358","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))), java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:381","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (final double double : double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(double);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:693","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(float[], 0, float[].int)","position":"org.apache.commons.lang3.ArrayUtils:1537","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:313","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String, java.util.regex.Pattern.int).matcher(java.lang.String).replaceAll(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4442","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:297","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:531","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:1535","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:512","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.math.NumberUtils:471","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 100) {\n    for (int int = int ; (--int) >= 2 ; ) {\n        java.lang.StringBuffer.append('0');\n    }\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    int int;\n    if (int < 1000) {\n        int = 3;\n    } else {\n        org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int);\n        int = java.lang.Integer.java.lang.Integer.toString(int).length();\n    }\n    for (int int = int ; (--int) >= int ; ) {\n        java.lang.StringBuffer.append('0');\n    }\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:851","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.time.FastDatePrinter:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Byte getLeft() {\n        return java.lang.Byte.java.lang.Byte.valueOf(byte);\n    }\n\n    @java.lang.Override\n    public java.lang.Byte getRight() {\n        return java.lang.Byte.java.lang.Byte.valueOf(byte);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:221","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence((int + int), ((int + int) + 4))","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:50","type":"CtLocalVariableImpl"},"status":-2},{"failures":[124,98,125],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2066","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring((int + 1))","position":"org.apache.commons.lang3.math.NumberUtils:503","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.CharSequenceUtils:132","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int);\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:715","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int == 1) || (int == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5129","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.char[]","position":"org.apache.commons.lang3.ArrayUtils:1046","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6550","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:437","type":"CtReturnImpl"},"status":-2},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())","position":"org.apache.commons.lang3.text.StrSubstitutor:697","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2809","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1303","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)[0])) || org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)[0]));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1442","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar, java.util.Calendar)","position":"org.apache.commons.lang3.time.DateUtils:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!java.lang.Character.(java.lang.Character.isDigit(char))) && (char != '.')) {\n    if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n        java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n    } else {\n        java.lang.String = null;\n    }\n    final java.lang.String java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String));\n    switch (char) {\n        case 'l' :\n        case 'L' :\n            if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n                } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n                }\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n            } \n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        case 'f' :\n        case 'F' :\n            try {\n                final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n                if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                    return java.lang.Float;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        case 'd' :\n        case 'D' :\n            try {\n                final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n                if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                    return java.lang.Double;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        default :\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    }\n} ","position":"org.apache.commons.lang3.math.NumberUtils:518","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":106,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":29,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":15,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":3,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":18,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":66,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":139,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":76,"org.apache.commons.lang3.CharSetTest.testHashCode":117,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":35,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":126,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":44,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":130,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":71,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":34,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":31,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":2,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":28,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":98,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":89,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":88,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":105,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":97,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":138,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":128,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":19,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":94,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":118,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":40,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":131,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":37,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":70,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":95,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":129,"org.apache.commons.lang3.CharSetTest.testEquals_Object":112,"org.apache.commons.lang3.CharSetTest.testSerialization":110,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":102,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":0,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":99,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":78,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":74,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":119,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":72,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":10,"org.apache.commons.lang3.CharSetTest.testStatics":121,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":91,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":23,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":6,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":115,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":38,"org.apache.commons.lang3.text.StrTokenizerTest.test8":61,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":67,"org.apache.commons.lang3.text.StrTokenizerTest.test5":58,"org.apache.commons.lang3.text.StrTokenizerTest.test4":57,"org.apache.commons.lang3.text.StrTokenizerTest.test7":60,"org.apache.commons.lang3.text.StrTokenizerTest.test6":59,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":27,"org.apache.commons.lang3.text.StrTokenizerTest.test1":54,"org.apache.commons.lang3.text.StrTokenizerTest.test3":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":132,"org.apache.commons.lang3.text.StrTokenizerTest.test2":55,"org.apache.commons.lang3.CharSetTest.testGetInstance":120,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":33,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":21,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":68,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":36,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":80,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":111,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":133,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":16,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":39,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":4,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":17,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":64,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":11,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":79,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_float":93,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":86,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":125,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":75,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":30,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":83,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":24,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":73,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":108,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":20,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":81,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":123,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":114,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":48,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":51,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":52,"org.apache.commons.lang3.CharSetTest.testContains_Char":113,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":63,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":90,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":46,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":87,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":135,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":100,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":62,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":77,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":104,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":12,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":43,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyCharNull":1,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":127,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":116,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":25,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":103,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":124,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":136,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":85,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":96,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":9,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":134,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":137}}]
