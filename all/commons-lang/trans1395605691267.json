[{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1367","sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    boolean = true;\n    boolean = false;\n} else if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    boolean = true;\n} else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1399","sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:126","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:221","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:424","sourceCode":"return null","type":"CtReturnImpl"},"failures":[8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:762","sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:210","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[7,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nShorts":"denominator","dstPos":"denominator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:97","sourceCode":"this.float = float","type":"CtAssignmentImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:884","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:725","sourceCode":"return true","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:302","sourceCode":"int += 60","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:865","sourceCode":"int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"seconds":"hashCode"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:309","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:306","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:981","failures":[20],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3074","sourceCode":"final int int = java.lang.String.length()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1376","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:137","sourceCode":"(this.float)++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:97","sourceCode":"this.float = float","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:437","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1675","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isEquals":"useFieldNames","superEquals":"useFieldNames"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:748","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:940","sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:941","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2095","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1313","sourceCode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:293","sourceCode":"java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>()","type":"CtAssignmentImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:270","sourceCode":"if (java.lang.Class<?>.isArray()) {\n    return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(java.lang.Class<?>.getComponentType(), java.lang.Object, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:273","sourceCode":"if (java.lang.Class<?>.isAnnotation()) {\n    return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o2":"o1","o1":"o2","type":"type","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1111","sourceCode":"return \"StrTokenizer\" + org.apache.commons.lang3.text.StrTokenizer.(getTokenList())","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:322","sourceCode":"int += 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1213","sourceCode":"int -= 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"months":"endCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:817","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:301","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1182","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.int;\n        int = java.util.Calendar.int;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = java.util.Calendar.get(java.util.Calendar.int);\n        int = int - 1;\n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n        int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n        int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n        break;\n}","type":"CtSwitchImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1153","failures":[24],"status":-1,"binaryOperator":"byte[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1403","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1741","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1475","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)","type":"CtLocalVariableImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:897","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:150","sourceCode":"return int","type":"CtReturnImpl"},"failures":[27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2783","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:946","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final int int = 15 << int;\n    int = (int & (~int)) | int;\n}","type":"CtForImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndex":"nHex","endIndex":"nHex"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:419","sourceCode":"return '7'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"failures":[30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1587","sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:287","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"i","nBools":"i"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","sourceCode":"java.lang.Object.notifyAll()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:582","sourceCode":"org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuffer, java.lang.Object)","type":"CtInvocationImpl"},"failures":[32,32,33,34,34,35,36,37,38,39,24,40,40,41,42,43,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,71,72,72,73,74,75,76,77,77,78,79,79,80,81,82,83,84,85,86,87,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":45,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":24,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":82,"org.apache.commons.lang3.math.FractionTest.testFactory_double":12,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":44,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":84,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":4,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":58,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":54,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":10,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":71,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":42,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":19,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":21,"org.apache.commons.lang3.ConversionTest.testHexToInt":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":90,"org.apache.commons.lang3.math.FractionTest.testPow":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":6,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":33,"org.apache.commons.lang3.ConversionTest.testShortToHex":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":53,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":7,"org.apache.commons.lang3.mutable.MutableFloatTest.testGetSet":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":47,"org.apache.commons.lang3.ConversionTest.testHexToShort":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":85,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":31,"org.apache.commons.lang3.ConversionTest.testLongToHex":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":81,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":68,"org.apache.commons.lang3.math.FractionTest.testMultiply":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":52,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":74,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":43,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":94,"org.apache.commons.lang3.math.FractionTest.testDivide":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":48,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":35}}]
