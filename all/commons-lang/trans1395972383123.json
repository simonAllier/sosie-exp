[{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString(), 8))","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:57","type":"CtInvocationImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return '3'","position":"org.apache.commons.lang3.Conversion:569","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:637","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.StringBuilder == null ? null : java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:486","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((++int) == (java.lang.String.length())) {\n        return java.lang.StringBuilder;\n    } \n    char = java.lang.String.charAt(int);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:340","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 32) + int","position":"org.apache.commons.lang3.Conversion:695","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2246","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(T[]);\n} else if (T[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(T[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3716","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((java.lang.reflect.Method.getParameterTypes().int) == 0) && org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.reflect.Method.getReturnType()))) {\n    final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n    final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n    if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.AnnotationUtils:138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:585","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8],"variableMapping":{"r":"org.apache.commons.lang3.ClassUtils.abbreviationMap","m":"org.apache.commons.lang3.ClassUtils.abbreviationMap"},"name":"add","transplant":{"sourceCode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n}","position":"org.apache.commons.lang3.ClassUtils:130","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"className must not be null.\");\n} else if (java.lang.String.endsWith(\"[]\")) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    while (java.lang.String.endsWith(\"[]\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2));\n        java.lang.StringBuilder.append(\"[\");\n    }\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } else {\n        java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\");\n    }\n    java.lang.String = java.lang.StringBuilder.toString();\n} ","position":"org.apache.commons.lang3.ClassUtils:960","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:801","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\")","position":"org.apache.commons.lang3.text.StrTokenizer:709","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char)","position":"org.apache.commons.lang3.StringUtils:5783","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)) {\n    try {\n        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n        org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n    }\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:522","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","position":"org.apache.commons.lang3.math.Fraction:320","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:723","type":"CtInvocationImpl"},"status":-2},{"failures":[9,10],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.WordUtils:544","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character == null) {\n    throw new java.lang.IllegalArgumentException(\"The Character must not be null\");\n} ","position":"org.apache.commons.lang3.CharUtils:130","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return '7';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return '3';\n    }\n}","position":"org.apache.commons.lang3.Conversion:415","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException","position":"org.apache.commons.lang3.CharEncoding:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[11,12,13],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return ((((java.lang.Short.java.lang.Class<java.lang.Short>.equals(java.lang.Class<?>)) || (java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>))) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:685","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:673","type":"CtReturnImpl"},"status":-1},{"failures":[14,15,16,17,18,19,20,21],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1677","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n    if (int == int) {\n        return false;\n    } \n    if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n        return false;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.StringUtils:1886","type":"CtIfImpl"},"status":-1},{"failures":[22],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1420","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n    return (boolean && (!boolean)) && (!boolean);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1439","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"increase":"srcPos","greater":"length"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    int += 3 * int;\n} ","position":"org.apache.commons.lang3.StringUtils:4757","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((byte[].int) - int) < 16) {\n    throw new java.lang.IllegalArgumentException(\"Need at least 16 bytes for UUID\");\n} ","position":"org.apache.commons.lang3.Conversion:1711","type":"CtIfImpl"},"status":-2},{"failures":[23,24,25],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1422","type":"CtIfImpl"},"status":-1},{"failures":[26],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:166","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, null, false, false, null)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:118","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:437","type":"CtReturnImpl"},"status":-2},{"failures":[27,28,29,30,31,32,33],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new java.util.TreeMap<java.lang.String, java.util.TimeZone>(java.lang.String.java.util.Comparator<java.lang.String>)","position":"org.apache.commons.lang3.time.FastDateParser:709","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object","position":"org.apache.commons.lang3.time.DurationFormatUtils:508","type":"CtAssignmentImpl"},"status":-1},{"failures":[34],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(((int[][(int - 1)]) + 1), ((int[][int]) + 1)), ((int[][(int - 1)]) + int))","position":"org.apache.commons.lang3.StringUtils:6804","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:400","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T[].getClass()","position":"org.apache.commons.lang3.ArrayUtils:4009","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char char = java.lang.String.charAt(java.text.ParsePosition.getIndex())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:337","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:294","type":"CtThrowImpl"},"status":-2},{"failures":[35],"variableMapping":{"index":"nShorts"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    short[][(int + int)] = ((short)(65535 & (long >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1229","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue()","position":"org.apache.commons.lang3.ObjectUtils:584","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (java.util.Calendar.int)) {\n    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n        java.util.Calendar.add(java.util.Calendar.int, 12);\n    } else {\n        java.util.Calendar.add(java.util.Calendar.int, -12);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n} else {\n    java.util.Calendar.add(int[][0], 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1024","type":"CtIfImpl"},"status":-2},{"failures":[36],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Short[][int] = java.lang.Short.java.lang.Short.valueOf(short[][int])","position":"org.apache.commons.lang3.ArrayUtils:3213","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:154","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class<?>, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.MemberUtils:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String.toUpperCase()","position":"org.apache.commons.lang3.StringUtils:5591","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4285","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"method":"method"},"name":"add","transplant":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass()","position":"org.apache.commons.lang3.reflect.MethodUtils:517","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:487","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    final java.lang.String java.lang.String = ((java.lang.String)(java.util.Enumeration<?>.nextElement()));\n    final java.lang.String java.lang.String = java.util.Properties.getProperty(java.lang.String);\n    java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:215","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Byte[] == null) || ((java.lang.Byte[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:773","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:881","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:1756","type":"CtAssignmentImpl"},"status":-2},{"failures":[37],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(java.lang.String[])","position":"org.apache.commons.lang3.StringUtils:6316","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String[][int] = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.strip(java.lang.String[][int], java.lang.String)","position":"org.apache.commons.lang3.StringUtils:738","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"strs":"excludeFieldNames"},"name":"add","transplant":{"sourceCode":"return java.lang.String[][0]","position":"org.apache.commons.lang3.StringUtils:6693","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(java.lang.Object).setExcludeFieldNames(java.lang.String[]).toString()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:350","type":"CtReturnImpl"},"status":-2},{"failures":[38],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, int)","position":"org.apache.commons.lang3.StringUtils:2300","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.StringUtils:6633","type":"CtBreakImpl"},"status":0},{"failures":[39,40,41,42],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1743","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(char[][int], char[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:779","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5645","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object[][int]","position":"org.apache.commons.lang3.ArrayUtils:1827","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Date","position":"org.apache.commons.lang3.time.DateUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (byte[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(byte[][int], byte[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:866","type":"CtForImpl"},"status":-2},{"failures":[43,44],"variableMapping":{"value":"y1"},"name":"replace","transplant":{"sourceCode":"double++","position":"org.apache.commons.lang3.mutable.MutableDouble:137","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.lang3.math.Fraction:278","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n    final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(java.lang.Object));\n    return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale));\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = char == char","position":"org.apache.commons.lang3.builder.EqualsBuilder:555","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.StringEscapeUtils:411","type":"CtInvocationImpl"},"status":-2},{"failures":[45],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.StringUtils:662","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == null) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:2026","type":"CtIfImpl"},"status":-1},{"failures":[46],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.byte -= java.lang.Number.byteValue()","position":"org.apache.commons.lang3.mutable.MutableByte:170","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double += java.lang.Number.doubleValue()","position":"org.apache.commons.lang3.mutable.MutableDouble:168","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:939","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:2971","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.tuple.MutablePair<L, R>.setRight(R)","position":"org.apache.commons.lang3.tuple.MutablePair:120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:495","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:744","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:180","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DateUtils:1204","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.add(new org.apache.commons.lang3.tuple.ImmutablePair<java.lang.String, java.lang.Object>(java.lang.String , java.lang.Object))","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:54","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:448","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:1253","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int[] int[] = new int[int + 1]","position":"org.apache.commons.lang3.StringUtils:6781","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[java.lang.Integer[].int]","position":"org.apache.commons.lang3.ArrayUtils:3099","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:2291","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2601","type":"CtReturnImpl"},"status":-2},{"failures":[47],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(\"-\")) {\n    boolean = true;\n    int = 1;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:732","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.Conversion:884","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1316","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:251","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.ClassUtils:1135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final byte byte : byte[]) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte.java.lang.Byte.valueOf(byte);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Byte);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Byte, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5360","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.isUseIdentityHashCode()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getField(java.lang.String);\n    org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), java.lang.String, java.lang.Class<?>);\n    java.lang.reflect.Field = java.lang.reflect.Field;\n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:123","type":"CtTryImpl"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:996","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float[][int], float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:191","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:596","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return char[].int","position":"org.apache.commons.lang3.text.StrBuilder:224","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++ , int++) {\n    if ((char[][int]) != (char[][int])) {\n        return 0;\n    } \n}","position":"org.apache.commons.lang3.text.StrMatcher:371","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType();\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1349","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:1078","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n    int = 0;\n} else {\n    java.util.Calendar.setTime(new java.util.Date());\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 80;\n}","position":"org.apache.commons.lang3.time.FastDateParser:119","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:203","type":"CtLocalVariableImpl"},"status":-2},{"failures":[22],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1445","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for ( ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(java.lang.reflect.Type[], int--);\n    } else {\n        java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1409","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) == 0) && ((char) == (java.lang.Character.char));\n} ","position":"org.apache.commons.lang3.CharRange:192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:806","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int + 1","position":"org.apache.commons.lang3.text.WordUtils:197","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:692","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String.java.lang.String.valueOf(org.apache.commons.lang3.ClassUtils.char)","position":"org.apache.commons.lang3.ClassUtils:74","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"os.version\")","position":"org.apache.commons.lang3.SystemUtils:720","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrSubstitutor:1044","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:166","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2809","type":"CtLocalVariableImpl"},"status":-2},{"failures":[65,66],"variableMapping":{"bufferEnd":"startIndex","len":"size","pos":"startIndex"},"name":"add","transplant":{"sourceCode":"if ((int + int) > int) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:368","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > 0) && (int <= (int))) {\n    if (int == 1) {\n        return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String.charAt(0), int);\n    } \n    outer : for (int int = (int - int) + 1 ; int >= 0 ; int--) {\n        for (int int = 0 ; int < int ; int++) {\n            if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n                continue outer;\n            } \n        }\n        return int;\n    }\n} else if (int == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2463","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((int >= 0) && (int < int)) {\n    int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>);\n    if (int >= int) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    } \n}","position":"org.apache.commons.lang3.text.StrTokenizer:644","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long)","position":"org.apache.commons.lang3.builder.ToStringStyle:649","type":"CtInvocationImpl"},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,30,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"variableMapping":{"canonicalClassNameBuffer":"sb"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"[]\")","position":"org.apache.commons.lang3.ClassUtils:1133","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false)","position":"org.apache.commons.lang3.time.FastDateParser:762","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (short < short) {\n    short = short;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:554","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) == 1) {\n    final char char = java.lang.String.charAt(0);\n    while (int < int) {\n        if ((java.lang.String.charAt(int)) == char) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n} else {\n    while (int < int) {\n        if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:3108","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Date)(java.lang.Object)), int)","position":"org.apache.commons.lang3.time.DateUtils:1250","type":"CtReturnImpl"},"status":-2},{"failures":[136,30,107,110,111,112,131],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1208","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"lhsClass":"clss","testClass":"clss"},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:340","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4291","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:4062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.event.EventUtils:118","type":"CtReturnImpl"},"status":-2},{"failures":[137,138,139,140,141,48,49,142,143,144,145,146,147,148,54,55,149,150,151,152,153,154,59,60,155,156,157],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.builder.ToStringStyle:1457","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:378","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.charAt(int)) == char) {\n    if (boolean || boolean) {\n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n        boolean = false;\n        boolean = true;\n    } \n    int = ++int;\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:2961","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[] = new char[int]","position":"org.apache.commons.lang3.text.StrBuilder:395","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"/** \n * <p>Inner class to output a constant string.<\/p>\n */\nprivate static class StringLiteral implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final java.lang.String mValue;\n\n    /** \n     * Constructs a new instance of {@code StringLiteral}\n     * to hold the specified value.\n     * \n     * @param value the string literal\n     */\nStringLiteral(final java.lang.String value) {\n        java.lang.String = java.lang.String;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return java.lang.String.length();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:644","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a constant single character.<\/p>\n */\nprivate static class CharacterLiteral implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final char mValue;\n\n    /** \n     * Constructs a new instance of {@code CharacterLiteral}\n     * to hold the specified value.\n     * \n     * @param value the character literal\n     */\nCharacterLiteral(final char value) {\n        char = char;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 1;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(char);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:611","type":"CtClassImpl"},"status":-2},{"failures":[158],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Byte java.lang.Byte = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], java.lang.Byte.byteValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5370","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this","type":"type"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1669","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(')","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"[\")","position":"org.apache.commons.lang3.ClassUtils:966","type":"CtInvocationImpl"},"status":0},{"failures":[159],"binaryOperator":"(int * 1) + int","name":"math","position":"org.apache.commons.lang3.Conversion:1661","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException()","position":"org.apache.commons.lang3.time.FastDatePrinter:824","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:488","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return new java.util.Locale(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:131","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case 0 :\n        if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String)) && ((int == 2) || (int == 3))) {\n            return new java.util.Locale(java.lang.String);\n        } else {\n            throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n        }\n    case 1 :\n        if (((org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String[][0])) && (((java.lang.String[][0].length()) == 2) || ((java.lang.String[][0].length()) == 3))) && ((java.lang.String[][1].length()) == 2)) && org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.String[][1]))) {\n            return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1]);\n        } else {\n            throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n        }\n    case 2 :\n        if (((org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String[][0])) && (((java.lang.String[][0].length()) == 2) || ((java.lang.String[][0].length()) == 3))) && (((java.lang.String[][1].length()) == 0) || (((java.lang.String[][1].length()) == 2) && org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.String[][1]))))) && ((java.lang.String[][2].length()) > 0)) {\n            return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2]);\n        } \n    default :\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n}","position":"org.apache.commons.lang3.LocaleUtils:128","type":"CtSwitchImpl"},"status":-2},{"failures":[160],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:6038","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:594","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1360","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ClassUtils:1112","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:450","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:690","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, java.lang.String.toCharArray())","position":"org.apache.commons.lang3.RandomStringUtils:313","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = int == (java.util.Calendar.int) ? new org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy(java.util.Locale) : new org.apache.commons.lang3.time.FastDateParser.TextStrategy(int , java.util.Calendar , java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:536","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NullPointerException java.lang.NullPointerException","position":"org.apache.commons.lang3.BooleanUtils:949","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence))","position":"org.apache.commons.lang3.StringUtils:1680","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.tuple.Pair<L, R>.getKey()","position":"org.apache.commons.lang3.tuple.Pair:151","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || ((int = java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:618","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","position":"org.apache.commons.lang3.text.StrTokenizer:167","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n    continue hierarchyTraversal;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:538","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"object"},"name":"add","transplant":{"sourceCode":"java.lang.Object.wait()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:305","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:823","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == 0) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = 0;\n}","position":"org.apache.commons.lang3.CharRange:286","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} else {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n}","position":"org.apache.commons.lang3.text.WordUtils:468","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":24,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":39,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":75,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":19,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":106,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":109,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":124,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":152,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":154,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":86,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":81,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":74,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":133,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":37,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":153,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":125,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":54,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":111,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":143,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":149,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":1,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":50,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":123,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":145,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":65,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":4,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":22,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":90,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":130,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":144,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":135,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":14,"org.apache.commons.lang3.math.FractionTest.testFactory_double":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":52,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":119,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":100,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":79,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":29,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":63,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":158,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":61,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":59,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":60,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":134,"org.apache.commons.lang3.ArrayUtilsTest.testToString":137,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":126,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":117,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":94,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":110,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":128,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":139,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":16,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":49,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":83,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":129,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValueObject":46,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":78,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":48,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":112,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":5,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":31,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":57,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":6,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":141,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":97,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":122,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":82,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":69,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":99,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":107,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":35,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":41,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":120,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":87,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":88,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":34,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":68,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":15,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":7,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":72,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":21,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":108,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":47,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":157,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":8,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":132,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":102,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":142,"org.apache.commons.lang3.ConversionTest.testByteToBinary":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":121,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":95,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":118,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":150,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":25,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":105,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":42,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":113,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":2,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":64,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":98,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":151,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":136,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":0,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":12,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":40,"org.apache.commons.lang3.time.FastDateParserTest.testParses":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":92,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":62,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":104,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":44,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":58,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":155,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":140,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":56,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":32,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":38,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":45,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":96,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":17,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":55,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":160,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":148,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":85,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":138,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":115,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":10,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":51,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Unboxing_Widening":13,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":30,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":18,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_short":36,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":147}}]
