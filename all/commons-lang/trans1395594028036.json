[{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1070","sourceCode":"int -= 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:170","sourceCode":"this.int -= java.lang.Number.intValue()","type":"CtOperatorAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offset":"value"}},{"position":"org.apache.commons.lang3.math.NumberUtils:519","failures":[1],"status":-1,"binaryOperator":"(int < ((java.lang.String.length()) - 1))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:87","sourceCode":"F = F","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:82","sourceCode":"F = org.apache.commons.lang3.time.FormatCache<F>.createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"format":"format","previousValue":"format"}},{"position":"org.apache.commons.lang3.time.DateUtils:1663","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"java.util.Date == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:859","sourceCode":"int = 3","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:419","sourceCode":"int = 0","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"digits":"acquireCount"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1377","sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1399","sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:54","sourceCode":"return org.apache.commons.lang3.time.FormatCache<F>.getDateTimeInstance(java.text.DateFormat.int, java.text.DateFormat.int, java.util.TimeZone.java.util.TimeZone.getDefault(), java.util.Locale.java.util.Locale.getDefault())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:143","sourceCode":"return org.apache.commons.lang3.time.FormatCache<F>.getDateTimeInstance(java.lang.Integer.java.lang.Integer.valueOf(int), java.lang.Integer.java.lang.Integer.valueOf(int), java.util.TimeZone, java.util.Locale)","type":"CtReturnImpl"},"failures":[27,28,29,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrLookup:54","sourceCode":"org.apache.commons.lang3.text.StrLookup<java.lang.String> = new org.apache.commons.lang3.text.StrLookup.MapStrLookup<java.lang.String>(java.util.Map<java.lang.String, java.lang.String>)","type":"CtAssignmentImpl"},"failures":[32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:87","sourceCode":"F = F","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:82","sourceCode":"F = org.apache.commons.lang3.time.FormatCache<F>.createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"format":"format","previousValue":"format"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4561","sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1478","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (short >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"dstPos","length":"append"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:990","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"done"}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:323","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:109","sourceCode":"if (int >= int) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n    java.lang.StringBuilder.append(java.lang.String);\n    int = int + 1;\n} else {\n    if (boolean) {\n        java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)));\n        java.lang.StringBuilder.append(java.lang.String);\n        int += int;\n    } else {\n        int = java.lang.String.indexOf(' ', (int + int));\n        if (int >= 0) {\n            java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n            java.lang.StringBuilder.append(java.lang.String);\n            int = int + 1;\n        } else {\n            java.lang.StringBuilder.append(java.lang.String.substring(int));\n            int = int;\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:360","sourceCode":"final char[] char[] = new char[int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:110","sourceCode":"final char[] char[] = java.lang.Character.java.lang.Character.toChars(int)","type":"CtLocalVariableImpl"},"failures":[35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"size":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:528","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:133","sourceCode":"if (java.lang.Object instanceof java.util.Map.Entry<?, ?>) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    return org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getKey(), java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getValue(), java.util.Map.Entry<?, ?>.getValue()));\n} ","type":"CtIfImpl"},"failures":[37,38,39,40,41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:143","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2259","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.(indexOf(java.lang.String, 0)) >= 0","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrLookup:51","sourceCode":"final java.util.Map<?, ?> java.util.Map<?, ?> = java.lang.System.java.lang.System.getProperties()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:123","sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","type":"CtForEachImpl"},"failures":[45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:979","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:94","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:96","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:373","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.runtime.name\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:885","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5542","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:710","sourceCode":"return java.lang.Long.java.lang.Long.decode(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:139","sourceCode":"return 15","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventListenerSupport:189","sourceCode":"return java.util.List<L>.size()","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:73","sourceCode":"new java.util.Locale(\"ja\" , \"JP\" , \"JP\")","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:934","sourceCode":"if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","sourceCode":"if (java.lang.reflect.Method == null) {\n    java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:367","sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[49,50,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:846","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:676","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"position":"org.apache.commons.lang3.CharUtils:130","failures":[59],"status":-1,"binaryOperator":"java.lang.Character == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1115","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.time.NumberStrategy:632","sourceCode":"java.lang.StringBuilder.append(\"(\\\\p{IsNd}{\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:451","sourceCode":"java.lang.StringBuilder.append('[')","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"regex":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2658","sourceCode":"if ((char != char) && ((java.lang.Character.toUpperCase(char)) != (java.lang.Character.toUpperCase(char)))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:487","sourceCode":"return java.lang.Character.java.lang.Character.isWhitespace(char)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c1":"ch","c2":"ch","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":3,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":49,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":29,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":27,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":36,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":42,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":17,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":55,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":14,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":22,"org.apache.commons.lang3.ConversionTest.testShortToHex":34,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":41,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":20,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":16,"org.apache.commons.lang3.event.EventListenerSupportTest.testRemoveListenerDuringEvent":48,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":35,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":8,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":15,"org.apache.commons.lang3.RangeTest.testToString":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":58,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":59,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":44,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":62,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":31,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":51,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":25,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":33,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":10,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":26,"org.apache.commons.lang3.text.StrLookupTest.testSystemProperiesLookup":32,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":1,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":54,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":9,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":45,"org.apache.commons.lang3.math.FractionTest.testPow":46,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":12,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":13,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":24,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":2,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":61,"org.apache.commons.lang3.math.FractionTest.testCompareTo":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":52,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":11,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":50,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":18,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":38,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":39,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":57,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValueObject":0}}]
