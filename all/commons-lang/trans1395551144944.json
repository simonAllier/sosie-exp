[{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:210","sourceCode":"int <<= 4","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:242","sourceCode":"int = ' '","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"start"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1683","sourceCode":"double[][int] = double","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:890","sourceCode":"double = double[][int]","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"tmp":"min","array":"array","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1433","sourceCode":"return (!boolean) && boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1646","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"foundDigit":"useIdentityHashCode","allowSigns":"useIdentityHashCode"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:2536","sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:539","sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"list":"frames"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1154","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:148","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:193","sourceCode":"java.lang.String = java.lang.String.substring(1)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1769","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[91,92,93,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"duration":"arrayEnd"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1579","sourceCode":"this.int += 4","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:127","sourceCode":"(int)--","type":"CtUnaryOperatorImpl"},"failures":[96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"size":"value"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"(this.short)--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:138","sourceCode":"this.short += short","type":"CtOperatorAssignmentImpl"},"failures":[97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"position":"org.apache.commons.lang3.Conversion:1014","inlineConstant":"int int = 0","failures":[98],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.SystemUtils:1441","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1443","sourceCode":"return java.lang.String.startsWith(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"osNamePrefix","falseString":"osName","trueString":"osNamePrefix"}},{"transplant":{"position":"org.apache.commons.lang3.time.TextStrategy:576","sourceCode":"java.lang.StringBuilder.append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:453","sourceCode":"java.lang.StringBuilder.append(\"..\")","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:70","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","sourceCode":"if (java.lang.String != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSuper(java.lang.StringBuffer, java.lang.String);\n} ","type":"CtIfImpl"},"failures":[59,73,81,100,89,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"superToString"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:885","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"priorVariables":"priorVariables","buf":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:382","sourceCode":"java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\")","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1819","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[137],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str2":"contentStart","str":"contentStart"}},{"position":"org.apache.commons.lang3.Conversion:1124","inlineConstant":"int int = 0","failures":[138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6388","sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:561","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    java.util.List<java.lang.String>.remove(int);\n} ","type":"CtIfImpl"},"failures":[140,141,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maxWidth":"causeFrameIndex"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:986","sourceCode":"for (int int = 1 ; int < (short[].int) ; int++) {\n    if ((short[][int]) > short) {\n        short = short[][int];\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:165","sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double[][int], double);\n}","type":"CtForImpl"},"failures":[143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1965","sourceCode":"int int = java.lang.Integer.int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1085","sourceCode":"int int = int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:865","failures":[],"status":0,"binaryOperator":"((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1151","sourceCode":"if (byte < byte) {\n    byte = byte;\n} ","type":"CtIfImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1195","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 32) + int;\n    int[][(int + int)] = ((int)(-1 & (long >> int)));\n}","type":"CtForImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:483","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:602","sourceCode":"if (int <= 7) {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} ","type":"CtIfImpl"},"failures":[146,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:645","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.WildcardTypeImpl:275","sourceCode":"int int = 73 << 8","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:338","sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1368","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1393","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"foundDigit":"foundDigit"}},{"position":"org.apache.commons.lang3.Conversion:845","failures":[150],"status":-1,"binaryOperator":"(int & (~int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:455","sourceCode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:335","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:246","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableShort) {\n    return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:247","sourceCode":"return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(java.lang.Object)).byteValue())","type":"CtReturnImpl"},"failures":[151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1819","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:356","sourceCode":"if (java.lang.String != null) {\n    final int int = (java.lang.String.indexOf(java.lang.String)) + (java.lang.String.length());\n    final int int = java.lang.String.lastIndexOf(java.lang.String);\n    if (((int != int) && (int >= 0)) && (int >= 0)) {\n        final java.lang.String java.lang.String = java.lang.String.substring(int, int);\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n        } \n        java.lang.StringBuffer.append(java.lang.String);\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","type":"CtIfImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,73,74,75,76,77,78,79,80,81,100,82,83,84,85,86,87,88,89,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:501","sourceCode":"java.lang.String = java.lang.String.substring((int + 1), int)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:503","sourceCode":"java.lang.String = java.lang.String.substring((int + 1))","type":"CtAssignmentImpl"},"failures":[146,149,148],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:111","failures":[152,153],"status":-1,"binaryOperator":"((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(char[][0]))) + \"\\\\u\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToByte":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":47,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":79,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":136,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":52,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":57,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":76,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":93,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":124,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":6,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":91,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":54,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":131,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":58,"org.apache.commons.lang3.mutable.MutableIntTest.testDecrement":96,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":60,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":142,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":119,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumByte":144,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":95,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":113,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":38,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":82,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":40,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":68,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":49,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":109,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":69,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":33,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":140,"org.apache.commons.lang3.mutable.MutableShortTest.testAddValuePrimitive":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":37,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":152,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":27,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":129,"org.apache.commons.lang3.RangeTest.testToString":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":21,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":22,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":147,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":94,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":55,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":130,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":43,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":26,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":84,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":3,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":127,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":13,"org.apache.commons.lang3.math.FractionTest.testToProperString":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":112,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":48,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":77,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":118,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":65}}]
