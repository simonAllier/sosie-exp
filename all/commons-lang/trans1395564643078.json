[{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:291","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:730","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:225","sourceCode":"/** \n * <p>Helper class to hold multi-part Map keys<\/p>\n */\nprivate static class MultipartKey {\n    private final java.lang.Object[] keys;\n\n    private int hashCode;\n\n    /** \n     * Constructs an instance of <code>MultipartKey<\/code> to hold the specified objects.\n     * @param keys the set of objects that make up the key.  Each key may be null.\n     */\npublic MultipartKey(final java.lang.Object... keys) {\n        this.java.lang.Object[] = java.lang.Object[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        return java.util.Arrays.java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(java.lang.Object)).java.lang.Object[]);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        if ((int) == 0) {\n            int int = 0;\n            for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n                if (java.lang.Object != null) {\n                    int = (int * 7) + (java.lang.Object.hashCode());\n                } \n            }\n            int = int;\n        } \n        return int;\n    }\n}","type":"CtClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:136","sourceCode":"return new java.util.Locale(java.lang.String.substring(0, 2) , \"\" , java.lang.String.substring(4))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:143","sourceCode":"return new java.util.Locale(java.lang.String.substring(0, 2) , java.lang.String.substring(3, 5))","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:218","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Constructor<T>, \"constructor cannot be null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:359","sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:271","sourceCode":"double double","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:300","sourceCode":"final double double = org.apache.commons.lang3.mutable.MutableDouble.double","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ContextedException:169","sourceCode":"this.org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ContextedException:188","sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.setContextValue(java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exceptionContext":"exceptionContext","value":"value","label":"label"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:179","sourceCode":"if ((java.util.Calendar == null) || (java.util.Calendar == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1019","sourceCode":"java.util.Calendar.add(java.util.Calendar.int, -15)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cal1":"val","cal2":"val"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:382","sourceCode":"java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\")","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:913","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str2":"toString","str":"toString"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"numeric","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:381","sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:236","sourceCode":"if ((java.lang.String) == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4);\n    if (org.apache.commons.lang3.CharRange.isNegated()) {\n        java.lang.StringBuilder.append('^');\n    } \n    java.lang.StringBuilder.append(char);\n    if ((char) != (char)) {\n        java.lang.StringBuilder.append('-');\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.String = java.lang.StringBuilder.toString();\n} ","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str2":"iToString","parsePattern":"iToString","str":"iToString"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1163","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1340","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[])","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:365","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:242","sourceCode":"return (java.lang.Integer.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:888","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:885","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:887","sourceCode":"org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.util.List<java.lang.String>, \"->\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1400","sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:832","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (((int + int) >= int) || ((char[][(int + int)]) != (char[][(int + int)]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"chars":"srcChars","i":"pos"}},{"position":"org.apache.commons.lang3.Conversion:1013","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.math.NumberUtils:480","failures":[33,34],"status":-1,"binaryOperator":"(char > '7')","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:326","sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:138","sourceCode":"throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())))","type":"CtThrowImpl"},"failures":[35,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:434","sourceCode":"if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n    T = T;\n} ","type":"CtIfImpl"},"failures":[37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.ObjectUtils:234","failures":[38],"status":-1,"binaryOperator":"(int * 31)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:548","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:297","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"o2"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1017","sourceCode":"final int int = 15 << int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:52","sourceCode":"final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer)","type":"CtLocalVariableImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shift":"index"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1329","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:178","sourceCode":"this.double -= double","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:932","failures":[1],"status":-1,"binaryOperator":"(int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:527","sourceCode":"return 'e'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:555","sourceCode":"return '7'","type":"CtReturnImpl"},"failures":[65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.tuple.Triple:109","failures":[67,68],"status":-1,"binaryOperator":"java.lang.Object == this","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:399","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:491","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,27,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"value","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1045","sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:964","sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"j","nBools":"max"}},{"position":"org.apache.commons.lang3.math.NumberUtils:519","failures":[8,77,78],"status":-1,"binaryOperator":"(int > (-1))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":53,"org.apache.commons.lang3.CharSetTest.testContains_Char":10,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":62,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":38,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":56,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":48,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":76,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":50,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":28,"org.apache.commons.lang3.math.FractionTest.testFactory_double":0,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":44,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":42,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":64,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":4,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":65,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":57,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":33,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":17,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":36,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":6,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":69,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":35,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":25,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":19,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":49,"org.apache.commons.lang3.math.FractionTest.testToString":7,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":47,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":39,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":73,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":71,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":24,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":78,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":5,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":77,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":58,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":30,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":34,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":40,"org.apache.commons.lang3.ObjectUtilsTest.testMin":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":46,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":70,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":15,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":16,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":22,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":60,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":23,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":29,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":11,"org.apache.commons.lang3.math.FractionTest.testToProperString":1,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":3,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":61,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":18,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":21}}]
