[{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:528","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:112","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n    final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(java.lang.Object));\n    return (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getLeft())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getMiddle()))) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getRight()));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1825","sourceCode":"break","type":"CtBreakImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:117","failures":[19,20,21,22,23,24],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1511","sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 8\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:118","sourceCode":"java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","type":"CtInvocationImpl"},"failures":[25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"codepoint","nHexs":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:62","sourceCode":"java.lang.Double.java.lang.Double.valueOf(-1.0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:118","sourceCode":"(int)++","type":"CtUnaryOperatorImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:807","failures":[39,40],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5631","sourceCode":"return java.lang.String.toLowerCase()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:511","sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","type":"CtReturnImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"input"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:171","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:154","sourceCode":"float += 1.5F","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2863","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt((int)++)","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:305","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:537","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'b';\n    } else {\n        return 'a';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '9';\n    } else {\n        return '8';\n    }\n}","type":"CtIfImpl"},"failures":[44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:647","sourceCode":"java.util.Arrays.java.util.Arrays.sort(this.java.lang.String[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:283","sourceCode":"return java.lang.String.java.lang.String.valueOf(byte)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.Token:674","sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(this.java.lang.Object.toString(), this.int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:632","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:135","sourceCode":"float float = 0.0F","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:911","sourceCode":"float float = float[][0]","type":"CtLocalVariableImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:475","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:497","sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , -(int))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:653","sourceCode":"if (boolean) {\n    break;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:760","sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"traceStarted":"substitutionInVariablesEnabled"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:148","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:946","sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","type":"CtThrowImpl"},"failures":[56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharacterIterator:294","sourceCode":"char = 0","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:81","sourceCode":"char = char","type":"CtAssignmentImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"current":"lastChar"}},{"position":"org.apache.commons.lang3.Conversion:1197","failures":[105],"status":-1,"binaryOperator":"(long >> int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:194","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(java.lang.String.charAt(0))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:196","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(java.lang.String.toCharArray())","type":"CtReturnImpl"},"failures":[106,107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"chars":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:519","sourceCode":"boolean[] = boolean[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:518","sourceCode":"java.lang.System.java.lang.System.arraycopy(boolean[], ((int + 1) - int), boolean[], (4 - int), int)","type":"CtInvocationImpl"},"failures":[44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:867","sourceCode":"if (boolean) {\n    return boolean ? 1 : 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:498","sourceCode":"return boolean ? 1 : -1","type":"CtReturnImpl"},"failures":[109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"altered":"nullGreater","top":"nullGreater"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:95","sourceCode":"if (int < 1) {\n    int = 1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:607","sourceCode":"while ((int--) > 0) {\n    java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"wrapLength":"length"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:191","sourceCode":"return org.apache.commons.lang3.BitField.((short)(clear(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:167","sourceCode":"return org.apache.commons.lang3.BitField.((short)(setValue(short, short)))","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3082","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:88","sourceCode":"return java.lang.Float.java.lang.Float.valueOf(this.float)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.WildcardTypeImpl:275","sourceCode":"int int = 73 << 8","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:263","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:72","sourceCode":"char char = ' '","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:743","sourceCode":"final char char = org.apache.commons.lang3.text.StrSubstitutor.getEscapeChar()","type":"CtLocalVariableImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:487","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1103","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:93","sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1361","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"arraySeparator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:495","sourceCode":"if (T == T) {\n    return 0;\n} else if (T == null) {\n    return boolean ? 1 : -1;\n} else if (T == null) {\n    return boolean ? -1 : 1;\n} ","type":"CtIfImpl"},"failures":[109,139,110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.CharSetUtils:225","inlineConstant":"int int = 0","failures":[140,141,142,143],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.math.Fraction:895","failures":[144,145],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2893","sourceCode":"if (long < 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:722","sourceCode":"if ((((short[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"n":"dstInit"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1062","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"suffix":"fieldNameValueSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:274","sourceCode":"java.lang.String = java.lang.String.toLowerCase()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:945","sourceCode":"java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole())","type":"CtAssignmentImpl"},"failures":[147],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"toProperString"}},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":43,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":5,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":31,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":64,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":33,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":96,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":35,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":69,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":12,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":23,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":74,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":10,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":19,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":22,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":130,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":44,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":63,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":46,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":40,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":25,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":78,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":71,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":88,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":136,"org.apache.commons.lang3.ObjectUtilsTest.testCompare":110,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":82,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":16,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":47,"org.apache.commons.lang3.math.FractionTest.testInvert":55,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":17,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":50,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":129,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":83,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":75,"org.apache.commons.lang3.ObjectUtilsTest.testMax":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":76,"org.apache.commons.lang3.math.FractionTest.testPow":144,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":106,"org.apache.commons.lang3.ObjectUtilsTest.testMode":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":127,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":53,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":141,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":121,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":52,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":29,"org.apache.commons.lang3.math.FractionTest.testCompareTo":145,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":91,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":128,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":97,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":39,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":111,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":66,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":117,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":42,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":95,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":73,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":36,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":124,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":116,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":80,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":103,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":27,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":72,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":45,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":94,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":143,"org.apache.commons.lang3.ArrayUtilsTest.testToString":104,"org.apache.commons.lang3.mutable.MutableIntTest.testIncrement":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":68,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":135,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":125,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":112,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":60,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":108,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":8,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":90,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":93,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":140,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":107,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":70,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":142,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":138,"org.apache.commons.lang3.ObjectUtilsTest.testMin":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":115,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":2,"org.apache.commons.lang3.math.FractionTest.testToProperString":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":65,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":126,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":105,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":37,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":81}}]
