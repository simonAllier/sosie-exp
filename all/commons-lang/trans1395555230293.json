[{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:434","sourceCode":"java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2067","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"formatField":"summaryObjectStartText"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:437","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1392","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"allowSigns","superEquals":"allowSigns"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:294","sourceCode":"throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:605","sourceCode":"throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int))","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:196","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(java.lang.String.toCharArray())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:194","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(java.lang.String.charAt(0))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1203","sourceCode":"if (long > long) {\n    long = long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1001","sourceCode":"java.util.Date.setTime(long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"time","a":"time"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:138","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1340","inlineConstant":"boolean boolean = false","failures":[7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:897","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:42","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:459","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'c';\n    } else {\n        return '4';\n    }\n} else {\n    if (boolean[][int]) {\n        return '8';\n    } else {\n        return '0';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:554","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '7';\n} else {\n    return '6';\n}","type":"CtIfImpl"},"failures":[8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1386","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:811","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:520","sourceCode":"throw new java.util.NoSuchElementException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:971","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:268","sourceCode":"double double = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:46","sourceCode":"double double = double[][0]","type":"CtLocalVariableImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:456","sourceCode":"T T = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:628","sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:405","sourceCode":"return byte[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1368","sourceCode":"return byte[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:137","sourceCode":"(float)++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:146","sourceCode":"(float)--","type":"CtUnaryOperatorImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:765","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:786","sourceCode":"if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n    boolean = true;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"quoting":"quoting"}},{"position":"org.apache.commons.lang3.ObjectUtils:457","failures":[65],"status":-1,"binaryOperator":"T[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:297","sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) == null) {\n    java.util.concurrent.ScheduledFuture<?> = org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:255","sourceCode":"if (!(boolean)) {\n    if (boolean) {\n        org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService().shutdownNow();\n    } \n    if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n        java.util.concurrent.ScheduledFuture<?>.cancel(false);\n    } \n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"task":"task","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:842","failures":[67],"status":-1,"binaryOperator":"(int * 8)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:575","sourceCode":"T = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:460","sourceCode":"T = T","type":"CtAssignmentImpl"},"failures":[65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1296","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:148","sourceCode":"if ((java.lang.String.charAt(5)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:648","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[68,69,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:580","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:219","sourceCode":"throw new java.lang.IllegalArgumentException(((\"The character \" + char) + \" is not in the range \\'0\\' - \\'9\\'\"))","type":"CtThrowImpl"},"failures":[76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":1,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_nullInput":59,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":58,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":21,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":77,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":4,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":74,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":10,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":76,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":55,"org.apache.commons.lang3.text.StrTokenizerTest.test1":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":13,"org.apache.commons.lang3.text.StrTokenizerTest.test3":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":14,"org.apache.commons.lang3.text.StrTokenizerTest.test2":34,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":2,"org.apache.commons.lang3.text.StrTokenizerTest.test8":39,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":73,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":20,"org.apache.commons.lang3.text.StrTokenizerTest.test5":37,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":67,"org.apache.commons.lang3.text.StrTokenizerTest.test4":36,"org.apache.commons.lang3.text.StrTokenizerTest.test7":38,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":47,"org.apache.commons.lang3.mutable.MutableFloatTest.testDecrement":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":48,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":66,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":45,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":60,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":18,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":31,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfStringArray":61,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":16,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":22,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":9,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":0,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":40,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":72,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":23,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfPrimitiveArray":62,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":50,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":6,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":71,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":7,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":32,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":70,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfCloneable":63,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":43,"org.apache.commons.lang3.ObjectUtilsTest.testMax":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":24,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":49,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":42,"org.apache.commons.lang3.ConversionTest.testIntToHexDigit":5,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":11,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":12}}]
