[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","position":"org.apache.commons.lang3.StringUtils:2953","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:547","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1158","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"tokenLen":"nBools"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:188","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1081","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\")","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:669","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, char)","position":"org.apache.commons.lang3.builder.ToStringBuilder:332","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"endMillis","b":"endMillis"},"name":"add","transplant":{"sourceCode":"if (long < long) {\n    long = long;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1099","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date(long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:286","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.math.Fraction:332","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Calendar","position":"org.apache.commons.lang3.time.DateUtils:915","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"lhs cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:99","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Cannot store \" + (java.lang.Class<?>.getName())) + \" in an array of \") + (java.lang.Class<?>.getName())) , java.lang.ArrayStoreException)","position":"org.apache.commons.lang3.ArrayUtils:3737","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\")","position":"org.apache.commons.lang3.math.Fraction:296","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:185","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"mTimeZone","timeZone":"timeZone"},"name":"add","transplant":{"sourceCode":"if (java.util.TimeZone == null) {\n    java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getDefault();\n} ","position":"org.apache.commons.lang3.time.FormatCache:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class that acts as a compound key for time zone names.<\/p>\n */\nprivate static class TimeZoneDisplayKey {\n    private final java.util.TimeZone mTimeZone;\n\n    private final int mStyle;\n\n    private final java.util.Locale mLocale;\n\n    /** \n     * Constructs an instance of {@code TimeZoneDisplayKey} with the specified properties.\n     * \n     * @param timeZone the time zone\n     * @param daylight adjust the style for daylight saving time if {@code true}\n     * @param style the timezone style\n     * @param locale the timezone locale\n     */\nTimeZoneDisplayKey(final java.util.TimeZone timeZone ,final boolean daylight ,final int style ,final java.util.Locale locale) {\n        java.util.TimeZone = java.util.TimeZone;\n        if (boolean) {\n            int = int | -2147483648;\n        } else {\n            int = int;\n        }\n        java.util.Locale = java.util.Locale;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        return ((((int) * 31) + (java.util.Locale.hashCode())) * 31) + (java.util.TimeZone.hashCode());\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (this == java.lang.Object) {\n            return true;\n        } \n        if (java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n            final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(java.lang.Object));\n            return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale));\n        } \n        return false;\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1222","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.applyRules(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:601","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:475","type":"CtReturnImpl"},"status":0},{"failures":[0],"variableMapping":{"size":"i"},"name":"replace","transplant":{"sourceCode":"int += 5","position":"org.apache.commons.lang3.text.StrBuilder:1591","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1830","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[1,2,3],"variableMapping":{"lhs":"rhs","rhs":"rhs"},"name":"replace","transplant":{"sourceCode":"if (int[] == int[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:731","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-4830728138360036487L","position":"org.apache.commons.lang3.mutable.MutableBoolean:38","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1209","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2524","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:6457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Long.java.lang.Long.parseLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) == (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: too large to negate\");\n} ","position":"org.apache.commons.lang3.math.Fraction:512","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1226","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1879","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a two digit month.<\/p>\n */\nprivate static class TwoDigitMonthField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField INSTANCE = new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField();\n\n    /** \n     * Constructs an instance of {@code TwoDigitMonthField}.\n     */\nTwoDigitMonthField() {\n        java.lang.Object.super();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 2;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(java.lang.StringBuffer, ((java.util.Calendar.get(java.util.Calendar.int)) + 1));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:960","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:714","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:793","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == (org.apache.commons.lang3.ArrayUtils.int)) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(T[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:4643","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2662","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:410","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object))","position":"org.apache.commons.lang3.builder.CompareToBuilder:322","type":"CtInvocationImpl"},"status":-2},{"failures":[4,5],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, (int - 1));\n} else {\n    int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, (int + 1));\n}","position":"org.apache.commons.lang3.StringUtils:1035","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    int = (boolean[].int) < (boolean[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:982","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case java.util.Calendar.int :\n    long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1724","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"tokenPos":"length"},"name":"add","transplant":{"sourceCode":"return int > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:716","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case '8' :\n    return new boolean[]{ true , false , false , false };","position":"org.apache.commons.lang3.Conversion:238","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int].startsWith(\"GMT\")) {\n    continue;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:739","type":"CtIfImpl"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Object>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Object getLeft() {\n        return java.lang.Object;\n    }\n\n    @java.lang.Override\n    public java.lang.Object getRight() {\n        return java.lang.Object;\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:845","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(short[], short[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Short[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(short[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Short[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(short[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:766","type":"CtIfImpl"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"variableMapping":{"consumed":"i"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence != null) {\n    java.io.Writer.write(java.lang.CharSequence.toString());\n    return int;\n} ","position":"org.apache.commons.lang3.text.translate.LookupTranslator:78","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"currentType":"length","type":"length"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3234","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1299","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"char char = ' '","position":"org.apache.commons.lang3.CharSetUtils:72","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token> = new java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>(java.lang.String.length())","position":"org.apache.commons.lang3.time.DurationFormatUtils:481","type":"CtLocalVariableImpl"},"status":-2},{"failures":[52,53,54],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.CompareToBuilder, boolean, java.lang.String[])","position":"org.apache.commons.lang3.builder.CompareToBuilder:289","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5995","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:371","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"int < 2","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:5084","type":"mutation","status":0},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:1972","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:1384","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = int > ((int - int) / 2)","position":"org.apache.commons.lang3.time.DateUtils:1086","type":"CtAssignmentImpl"},"status":-2},{"failures":[55,56,57,58],"variableMapping":{"duration":"className"},"name":"replace","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(1)","position":"org.apache.commons.lang3.time.DurationFormatUtils:194","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.ClassUtils:974","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, (java.lang.Class<?> == null ? \"null\" : java.lang.Class<?>.getName()), java.lang.Class<?>.getName()));\n} ","position":"org.apache.commons.lang3.Validate:1227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Iterable<?> != null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<?>) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object);\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1094","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:555","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) + 3","position":"org.apache.commons.lang3.time.DateUtils:1199","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"tempIndex":"count","i":"count","textIndex":"count","replaceIndex":"count"},"name":"add","transplant":{"sourceCode":"if ((int == (-1)) || (int < int)) {\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4733","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:273","type":"CtIfImpl"},"status":0},{"failures":[],"binaryOperator":"((boolean[].int) > (int + 1))","name":"conditionalBoundary","position":"org.apache.commons.lang3.Conversion:320","type":"mutation","status":0},{"failures":[],"variableMapping":{"offset":"pos"},"name":"add","transplant":{"sourceCode":"if (int >= 15) {\n    int -= 15;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1057","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:794","type":"CtIfImpl"},"status":-2},{"failures":[59,60],"variableMapping":{"date":"first"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:936","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    java.lang.StringBuilder.append(java.lang.Object);\n} ","position":"org.apache.commons.lang3.StringUtils:4050","type":"CtIfImpl"},"status":-1},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,74,75,76,77,77,78,79,80,81,81,82,82,83,84,85,86,87,88,89,89,90,90,91,92,93,94,94,95,96,97,98,98,99,100,100,101,102,102,103,103,104,104,105,106,107,107,108,108,109,109,110,111,112,112,113,113,114,115,116,117,117,118,118,119,119,120,121,121,122,123,124,125,125,126,126,127,128,128,129,130,130,131,132,133,134,134,135,136,136,137,138,139,139,140,140,141,142,142,143,143,144,145,145,146],"binaryOperator":"((java.lang.Class<?>.getSuperclass()) != null)","name":"removeConditional","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:689","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeLiteral:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1428","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.time.StopWatch:341","type":"mutation","return":"return 0","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2030","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1355","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:319","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.char[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[])","position":"org.apache.commons.lang3.text.StrTokenizer:492","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((char[][int]) == char) {\n    if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n        if (int == int) {\n            return false;\n        } \n        if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n            return false;\n        } \n    } else {\n        return false;\n    }\n} ","position":"org.apache.commons.lang3.StringUtils:1885","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n    if (int == int) {\n        return false;\n    } \n    if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n        return false;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.StringUtils:1886","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = java.lang.Integer.int","position":"org.apache.commons.lang3.StringUtils:6599","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1247","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String))","position":"org.apache.commons.lang3.ClassUtils:1043","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\")","position":"org.apache.commons.lang3.time.DateUtils:959","type":"CtThrowImpl"},"status":-2},{"failures":[89,90,94,98,102,103,107,108,109,112,113,117,119,125,126,128,130,134,139,140,145],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer(), null, java.lang.Object)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:610","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int >= (java.lang.String.length())) || (int < ((java.lang.String.length()) + 2))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6456","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>, java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:100","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.lang3.builder.ToStringStyle:412","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean boolean = (int & (java.util.FormattableFlags.int)) == (java.util.FormattableFlags.int)","position":"org.apache.commons.lang3.text.FormattableUtils:143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[147],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"continue","position":"org.apache.commons.lang3.ArrayUtils:6026","type":"CtContinueImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"quoteLen"},"name":"add","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.mutable.MutableInt:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int * 2","position":"org.apache.commons.lang3.text.StrTokenizer:759","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[148],"binaryOperator":"java.lang.String == null","name":"negateConditional","position":"org.apache.commons.lang3.StringUtils:470","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getFuture().get()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.initialize();\n} finally {\n    if ((java.util.concurrent.ExecutorService) != null) {\n        java.util.concurrent.ExecutorService.shutdown();\n    } \n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:326","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Callable must not be null!\")","position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:123","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:631","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final int int = 15 << int;\n    int = (int & (~int)) | int;\n}","position":"org.apache.commons.lang3.Conversion:946","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrTokenizer.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size());\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2820","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"timezone":"timeZone","this":"this"},"name":"add","transplant":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance(java.util.TimeZone)","position":"org.apache.commons.lang3.time.DurationFormatUtils:283","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:313","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int >= (short[].int)) {\n    int = (short[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2276","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.NotImplementedException.this(java.lang.Throwable, null)","position":"org.apache.commons.lang3.NotImplementedException:67","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.String java.lang.String = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:310","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.get(org.apache.commons.lang3.time.FormatCache.MultipartKey)","position":"org.apache.commons.lang3.time.FormatCache:193","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2595","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:409","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>.get()","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:184","type":"CtInvocationImpl"},"status":-2},{"failures":[149],"variableMapping":{"obj":"value"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeLiteral:102","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n    return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n} else if ((this.java.lang.Object) instanceof java.lang.Number) {\n    return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n} else {\n    return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:642","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, (int - 1))","position":"org.apache.commons.lang3.StringUtils:1036","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<? extends java.lang.annotation.Annotation>.equals(java.lang.Class<? extends java.lang.annotation.Annotation>))) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:133","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.ClassUtils:710","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1397","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher()","position":"org.apache.commons.lang3.text.StrTokenizer:690","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.toArray(new org.apache.commons.lang3.time.DurationFormatUtils.Token[java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.size()])","position":"org.apache.commons.lang3.time.DurationFormatUtils:550","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[], double, java.lang.Integer.int)","position":"org.apache.commons.lang3.ArrayUtils:2618","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:2835","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(long[])","position":"org.apache.commons.lang3.EnumUtils:232","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.add(new org.apache.commons.lang3.tuple.ImmutablePair<java.lang.String, java.lang.Object>(java.lang.String , java.lang.Object))","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:916","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"input":"input"},"name":"add","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:54","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((java.lang.CharSequence.length()) * 2));\n    org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, java.io.StringWriter);\n    return java.io.StringWriter.toString();\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:57","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{"array":"newArray"},"name":"replace","transplant":{"sourceCode":"return char[].clone()","position":"org.apache.commons.lang3.ArrayUtils:390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.ArrayUtils:4100","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"sizeStartText"},"name":"add","transplant":{"sourceCode":"return this.java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1987","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"numerator":"iValue","denominator":"iValue"},"name":"add","transplant":{"sourceCode":"return int / int","position":"org.apache.commons.lang3.math.Fraction:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.time.FastDateParser:685","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:2029","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrTokenizer:640","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object","position":"org.apache.commons.lang3.time.DurationFormatUtils:514","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.SerializationException(\"ClassNotFoundException while reading cloned object data\" , java.lang.ClassNotFoundException)","position":"org.apache.commons.lang3.SerializationUtils:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    int = (int) * (int);\n} else {\n    if (java.lang.Object.getClass().isArray()) {\n        if (java.lang.Object instanceof long[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof int[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof short[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof char[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof byte[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof double[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof float[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n        } else if (java.lang.Object instanceof boolean[]) {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n        }\n    } else {\n        int = ((int) * (int)) + (java.lang.Object.hashCode());\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:816","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (java.lang.Object instanceof long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof int[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof char[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof double[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof float[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof boolean[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    int = ((int) * (int)) + (java.lang.Object.hashCode());\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:820","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2704","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = java.lang.Math.java.lang.Math.max(0, (int - int)) ; (!boolean) && (int < java.lang.Math.(java.lang.Math.min((int + int), java.lang.CharSequence.length()))) ; int++) {\n    if ((java.lang.StringBuilder.charAt(int)) == char) {\n        boolean = true;\n        java.lang.StringBuilder.append(char);\n        java.lang.StringBuilder.setCharAt(int, '*');\n    } \n}","position":"org.apache.commons.lang3.StringUtils:7096","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"offset","count":"inputLineLength","srcIndex":"inputLineLength"},"name":"add","transplant":{"sourceCode":"int = int - int","position":"org.apache.commons.lang3.ArrayUtils:6077","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.WordUtils:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"useOwner"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    return java.lang.Class<?>.isArray() ? java.lang.Class<?>.getComponentType() : null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1345","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:176","type":"CtReturnImpl"},"status":-2},{"failures":[150,151],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ClassUtils:991","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[]","position":"org.apache.commons.lang3.ArrayUtils:494","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1821","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :","position":"org.apache.commons.lang3.time.DateUtils:1180","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:681","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (char[].int)) {\n    int = (char[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2383","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.lang3.ClassUtils:436","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3443","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1194","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.RuntimeException.getMessage()","position":"org.apache.commons.lang3.exception.ContextedRuntimeException:243","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:198","type":"CtAssignmentImpl"},"status":-2},{"failures":[152,153,154],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:644","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1057","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[][] java.lang.String[][] = new java.lang.String[java.lang.String[][].int][2]","position":"org.apache.commons.lang3.text.translate.EntityArrays:417","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(byte[], byte[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Byte[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Byte[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(byte[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:209","type":"CtIfImpl"},"status":-2},{"failures":[155],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"T = T","position":"org.apache.commons.lang3.ObjectUtils:446","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:7391","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean[] == null) || ((boolean[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3587","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7041","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2343","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a time zone as a number {@code +/-HHMM}\n * or {@code +/-HH:MM}.<\/p>\n */\nprivate static class TimeZoneNumberRule implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true);\n\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_NO_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false);\n\n    final boolean mColon;\n\n    /** \n     * Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.\n     * \n     * @param colon add colon between HH and MM in the output if {@code true}\n     */\nTimeZoneNumberRule(final boolean colon) {\n        boolean = boolean;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 5;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int));\n        if (int < 0) {\n            java.lang.StringBuffer.append('-');\n            int = -int;\n        } else {\n            java.lang.StringBuffer.append('+');\n        }\n        final int int = int / ((60 * 60) * 1000);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        if (boolean) {\n            java.lang.StringBuffer.append(':');\n        } \n        final int int = (int / (60 * 1000)) - (60 * int);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1167","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:41","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)","position":"org.apache.commons.lang3.Conversion:1475","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.Writer.write(java.lang.Integer.java.lang.Integer.toString(int, 10))","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:115","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return char;\n} ","position":"org.apache.commons.lang3.CharUtils:195","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":138,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":38,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":80,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":8,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":86,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":101,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":18,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":112,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":48,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":61,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":154,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":55,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":64,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":17,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":89,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":71,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":46,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":107,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":123,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":36,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":68,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":74,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":128,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":34,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":16,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":95,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToEmpty":148,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastOrdinalIndexOf":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":131,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":126,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":56,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":137,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":51,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":106,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":29,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":145,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":78,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":65,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":110,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":114,"org.apache.commons.lang3.StringUtilsTest.testJoin_IteratorChar":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":116,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":47,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":14,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":91,"org.apache.commons.lang3.ObjectUtilsTest.testMin":155,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":49,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyClassNull":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":79,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":103,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":31,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":144,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyClassEmptyArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":134,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":121,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":92,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":119,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":21,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":43,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":11,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":70,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":63,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testBasicLookup":25,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":94,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":53,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":4,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":40,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":96,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableChar":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":98,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":73,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":143}}]
