[{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6190","sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:168","sourceCode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String, null)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str","str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:264","sourceCode":"java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1048","sourceCode":"boolean ^= boolean","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1392","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"allowSigns","element":"allowSigns"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1577","sourceCode":"boolean boolean","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:741","sourceCode":"boolean boolean = int > 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1396","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:913","sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:455","failures":[1,2],"status":-1,"binaryOperator":"(char[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1425","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[][int])","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"position":"org.apache.commons.lang3.math.NumberUtils:503","failures":[6],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:132","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:882","failures":[9],"status":-1,"binaryOperator":"(short & (~int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:270","sourceCode":"if (java.lang.Class<?>.isArray()) {\n    return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(java.lang.Class<?>.getComponentType(), java.lang.Object, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"o2"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:107","sourceCode":"if ((!java.lang.Character.(java.lang.Character.isUpperCase(char))) || (!java.lang.Character.(java.lang.Character.isUpperCase(char)))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:933","sourceCode":"java.lang.String = \"0\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:814","sourceCode":"java.lang.String = java.lang.String.substring(0, int)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toProperString":"varName"}},{"position":"org.apache.commons.lang3.BitField:153","failures":[13,14],"status":-1,"binaryOperator":"(int & (~(int)))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:772","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:140","sourceCode":"return new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight()).append(')').toString()","type":"CtReturnImpl"},"failures":[62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1242","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:541","sourceCode":"return 'a'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:524","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"failures":[68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.mutable.MutableBoolean:156","failures":[70],"status":-1,"binaryOperator":"(boolean) == (((org.apache.commons.lang3.mutable.MutableBoolean)(java.lang.Object)).booleanValue())","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2098","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:961","sourceCode":"throw new java.lang.NullPointerException(\"className must not be null.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:513","sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","type":"CtThrowImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:823","sourceCode":"java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:527","sourceCode":"java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"priorVariables":"nextTrace"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:213","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"capitalizeNext"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:505","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.checkTokenized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:644","sourceCode":"while ((int >= 0) && (int < int)) {\n    int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>);\n    if (int >= int) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    } \n}","type":"CtWhileImpl"},"failures":[15,16,72,17,18,19,20,21,22,23,73,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,74,59,60,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:936","failures":[75],"status":-1,"binaryOperator":"(int) == ((-1) * (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:730","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2825","sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(float[], float)) != (org.apache.commons.lang3.ArrayUtils.int)","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:372","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(char[], char)","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1093","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":61,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":5,"org.apache.commons.lang3.mutable.MutableBooleanTest.testEquals":70,"org.apache.commons.lang3.tuple.TripleTest.testToString":65,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":4,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":74,"org.apache.commons.lang3.text.StrTokenizerTest.test1":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":17,"org.apache.commons.lang3.text.StrTokenizerTest.test3":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":18,"org.apache.commons.lang3.text.StrTokenizerTest.test2":37,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testToString":66,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":12,"org.apache.commons.lang3.text.StrTokenizerTest.test8":43,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":73,"org.apache.commons.lang3.text.StrTokenizerTest.test5":40,"org.apache.commons.lang3.text.StrTokenizerTest.test4":39,"org.apache.commons.lang3.text.StrTokenizerTest.test7":42,"org.apache.commons.lang3.text.StrTokenizerTest.test6":41,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":3,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":49,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":11,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":7,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":9,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":22,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":77,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":20,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":69,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":25,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":44,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":48,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":0,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":26,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":2,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":54,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":6,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":35,"org.apache.commons.lang3.tuple.TripleTest.testFormattable_padded":63,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":19,"org.apache.commons.lang3.tuple.MutableTripleTest.testToString":62,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":76,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":47,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":71,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":55,"org.apache.commons.lang3.BitFieldTest.testSetValue":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":27,"org.apache.commons.lang3.tuple.TripleTest.testFormattable_simple":64,"org.apache.commons.lang3.math.FractionTest.testToProperString":75,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":53,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":46,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":72,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":23,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":67}}]
