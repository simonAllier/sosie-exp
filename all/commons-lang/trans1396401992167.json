[{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:661","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], 0, char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1528","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2127","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:760","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.time.DurationFormatUtils:605","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = (65535 & (short[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:770","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:784","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{"this":"this","type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1666","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1673","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.ClassLoader java.lang.ClassLoader = java.lang.ClassLoader == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClassLoader() : java.lang.ClassLoader","position":"org.apache.commons.lang3.ClassUtils:893","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(int)","position":"org.apache.commons.lang3.StringUtils:2255","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.WordUtils:189","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:565","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"bits"},"name":"add","transplant":{"sourceCode":"int = 17","position":"org.apache.commons.lang3.Range:431","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int & (~int)) | int","position":"org.apache.commons.lang3.Conversion:1091","type":"CtAssignmentImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharSetUtils:117","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7019","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:515","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2246","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:138","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"fmtCount"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.this.append(((char)(int)))","position":"org.apache.commons.lang3.text.StrBuilder:2956","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) {\n    switch (char[][java.text.ParsePosition.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int++;\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            final int int = java.text.ParsePosition.getIndex();\n            final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n            java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(int);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            java.text.Format java.text.Format = null;\n            java.lang.String java.lang.String = null;\n            if ((char[][java.text.ParsePosition.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                java.lang.String = org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n                java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String);\n                if (java.text.Format == null) {\n                    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n                } \n            } \n            java.util.ArrayList<java.text.Format>.add(java.text.Format);\n            java.util.ArrayList<java.lang.String>.add((java.text.Format == null ? null : java.lang.String));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.lang.String>.size()) == int));\n            if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n            } \n        default :\n            java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n    }\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:158","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:260","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:157","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Object.getClass().getComponentType(), (int - int))","position":"org.apache.commons.lang3.ArrayUtils:6032","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1923","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (long >> int)) != 0;\n}","position":"org.apache.commons.lang3.Conversion:1558","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","position":"org.apache.commons.lang3.time.StopWatch:282","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mulPos\")","position":"org.apache.commons.lang3.math.Fraction:661","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4942","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:126","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:569","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? org.apache.commons.lang3.BitField.setShort(short) : org.apache.commons.lang3.BitField.clearShort(short)","position":"org.apache.commons.lang3.BitField:267","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1778","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder))","position":"org.apache.commons.lang3.time.DurationFormatUtils:531","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return boolean[];\n} ","position":"org.apache.commons.lang3.Conversion:1653","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:540","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int >= (int)) {\n    return new java.lang.String(char[] , 0 , int);\n} else {\n    return new java.lang.String(char[] , ((int) - int) , int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2202","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long)","position":"org.apache.commons.lang3.builder.ToStringStyle:649","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","position":"org.apache.commons.lang3.text.StrTokenizer:99","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(char[])","position":"org.apache.commons.lang3.text.StrTokenizer:359","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((char == 'o') || (char == 'O')) && ((char == 'n') || (char == 'N'))) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:576","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?> != null) {\n    java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","position":"org.apache.commons.lang3.ClassUtils:332","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"duration","separator":"duration"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3994","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"os.name\")","position":"org.apache.commons.lang3.SystemUtils:702","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2483","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1903","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: too large to negate\")","position":"org.apache.commons.lang3.math.Fraction:513","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:778","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:260","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.text.StrBuilder:1524","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"java.util.Calendar.SATURDAY":"index","startCutoff":"index"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    int -= 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1211","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object, 0, java.lang.Object, 0, int)","position":"org.apache.commons.lang3.ArrayUtils:5197","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","position":"org.apache.commons.lang3.Conversion:629","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","position":"org.apache.commons.lang3.Conversion:336","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:410","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.String.charAt(int);\n    final int int = java.lang.String.indexOf(char);\n    if (int >= 0) {\n        boolean = true;\n        if (int < int) {\n            java.lang.StringBuilder.append(java.lang.String.charAt(int));\n        } \n    } else {\n        java.lang.StringBuilder.append(char);\n    }\n}","position":"org.apache.commons.lang3.StringUtils:4888","type":"CtForImpl"},"status":-2},{"failures":[2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} else if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.concat(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.StringUtils:5318","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) / (int)","position":"org.apache.commons.lang3.math.Fraction:421","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Short.java.lang.Short.valueOf(((short)(0)))","position":"org.apache.commons.lang3.math.NumberUtils:46","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:701","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:542","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:2806","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    java.util.Calendar.set(int[][0], ((java.util.Calendar.get(int[][0])) - int));\n} ","position":"org.apache.commons.lang3.time.DateUtils:1089","type":"CtIfImpl"},"status":-2},{"failures":[3,4,5,6,7,8],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4002","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:201","type":"CtAssignmentImpl"},"status":-1},{"failures":[9],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = java.lang.Integer.int","position":"org.apache.commons.lang3.RandomStringUtils:239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:4949","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"array2":"o1","array1":"o1"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object).isEquals()","position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Character.java.lang.Class<java.lang.Character>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:300","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"searchChar":"startPos","this":"this","seq":"seq"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, int, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:1157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, int, int)","position":"org.apache.commons.lang3.StringUtils:899","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"t":"length"},"name":"replace","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int /= 2;\n}","position":"org.apache.commons.lang3.math.Fraction:610","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:1045","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Long[][int] = java.lang.Long.java.lang.Long.valueOf(long[][int])","position":"org.apache.commons.lang3.ArrayUtils:3077","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'e'","position":"org.apache.commons.lang3.Conversion:527","type":"CtReturnImpl"},"status":-2},{"failures":[10,11],"binaryOperator":"(int + 2)","name":"math","position":"org.apache.commons.lang3.Conversion:537","type":"mutation","status":-1},{"failures":[12,3,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,4,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,5,67,68,6,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,8,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"variableMapping":{"regex":"regex"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","position":"org.apache.commons.lang3.time.FastDateParser:370","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for ( ;  ; ) {\n    java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd());\n    if (!(java.util.regex.Matcher.lookingAt())) {\n        org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n        break;\n    } \n    final java.lang.String java.lang.String = java.util.regex.Matcher.group();\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String, java.util.Calendar);\n    if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n        java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n    } \n    java.lang.String = java.lang.String;\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n}","position":"org.apache.commons.lang3.time.FastDateParser:152","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:6073","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(java.lang.Class<?>, java.lang.String, boolean)","position":"org.apache.commons.lang3.reflect.FieldUtils:341","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:2965","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String) == null) {\n    if ((int) == 0) {\n        java.lang.String = \"0\";\n    } else if ((int) == (int)) {\n        java.lang.String = \"1\";\n    } else if ((int) == ((-1) * (int))) {\n        java.lang.String = \"-1\";\n    } else if (((int) > 0 ? -(int) : int) < (-(int))) {\n        final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n        if (int == 0) {\n            java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n        } else {\n            java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n        }\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} ","position":"org.apache.commons.lang3.math.Fraction:931","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:468","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int))","position":"org.apache.commons.lang3.text.StrBuilder:1385","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\t[\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:141","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:437","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:1659","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.get()","position":"org.apache.commons.lang3.builder.EqualsBuilder:121","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startInclusive":"java.lang.Double.NaN","endInclusive":"java.lang.Double.NaN"},"name":"add","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double[][int])) {\n    return java.lang.Double.double;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1036","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.regex.Matcher.lookingAt())) {\n    org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:154","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final E E : java.lang.Class<E>.getEnumConstants()) {\n    java.util.Map<java.lang.String, E>.put(E.name(), E);\n}","position":"org.apache.commons.lang3.EnumUtils:60","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"codepoint":"pos","below":"pos","above":"pos"},"name":"add","transplant":{"sourceCode":"if ((int < (this.int)) || (int > (this.int))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (org.apache.commons.lang3.text.StrBuilder.this.size())","position":"org.apache.commons.lang3.text.StrBuilder:2906","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6074","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n} catch (final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException) {\n    throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause());\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"java.lang.Integer.MAX_VALUE","srcPos":"java.lang.Integer.MAX_VALUE"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1587","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long > (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n} ","position":"org.apache.commons.lang3.math.Fraction:660","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:713","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.text.ParsePosition.getIndex()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:374","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:935","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:301","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float)","position":"org.apache.commons.lang3.builder.ToStringBuilder:710","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) > 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2397","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:907","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, short[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:922","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION()","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtNewClassImpl"},"status":-2},{"failures":[125,126],"binaryOperator":"((java.lang.CharSequence.length()) - 1)","name":"math","position":"org.apache.commons.lang3.CsvUnescaper:405","type":"mutation","status":-1},{"failures":[],"variableMapping":{"startCutoff":"length","java.util.Calendar.SUNDAY":"length"},"name":"add","transplant":{"sourceCode":"if (int < (this.int)) {\n    int += 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    final char char = char[][int];\n    if (java.lang.Character.java.lang.Character.isUpperCase(char)) {\n        char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n        boolean = false;\n    } else if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n        char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n        boolean = false;\n    } else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n        if (boolean) {\n            char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n            boolean = false;\n        } else {\n            char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n        }\n    } else {\n        boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n    }\n}","position":"org.apache.commons.lang3.text.WordUtils:459","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.math.Fraction:617","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][0] = int","position":"org.apache.commons.lang3.StringUtils:6799","type":"CtAssignmentImpl"},"status":-2},{"failures":[127],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:176","type":"CtIfImpl"},"status":-1},{"failures":[128,128,129,129,130,131,132,133,134,135,136,137,138,138],"variableMapping":{"fieldName":"fieldName","this":"this","detail":"detail","buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:488","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:543","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:423","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, int)","position":"org.apache.commons.lang3.StringUtils:2300","type":"CtReturnImpl"},"status":-2},{"failures":[139],"name":"returnValue","position":"org.apache.commons.lang3.time.:78","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{"value":"negate"},"name":"add","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.mutable.MutableBoolean:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:733","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(2 , 5)","position":"org.apache.commons.lang3.math.Fraction:83","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(long)--","position":"org.apache.commons.lang3.mutable.MutableLong:127","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'W' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:247","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:692","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4253","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"pattern must not be null\")","position":"org.apache.commons.lang3.time.FormatCache:71","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    final char char = char[][int];\n    if (java.lang.Character.java.lang.Character.isUpperCase(char)) {\n        char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n        boolean = false;\n    } else if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n        char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n        boolean = false;\n    } else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n        if (boolean) {\n            char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n            boolean = false;\n        } else {\n            char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n        }\n    } else {\n        boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n    }\n}","position":"org.apache.commons.lang3.text.WordUtils:459","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1157","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.text.translate.AggregateTranslator(new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE()) , new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE()) , new org.apache.commons.lang3.text.translate.NumericEntityUnescaper())","position":"org.apache.commons.lang3.StringEscapeUtils:367","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:55","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.HashSet<java.lang.Class<?>>.add(java.lang.Class<?>)) {\n    org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>, java.util.HashSet<java.lang.Class<?>>);\n} ","position":"org.apache.commons.lang3.ClassUtils:374","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:478","type":"CtReturnImpl"},"status":-2},{"failures":[140,141],"variableMapping":{"thisBuf":"searchChars","otherBuf":"searchChars","i":"csLast"},"name":"add","transplant":{"sourceCode":"if ((char[][int]) != (char[][int])) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2685","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1635","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));","position":"org.apache.commons.lang3.time.FastDatePrinter:281","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:744","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:714","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n    java.lang.StringBuilder.append(java.lang.String).append(' ');\n}","position":"org.apache.commons.lang3.time.FastDateParser:623","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"file.separator\")","position":"org.apache.commons.lang3.SystemUtils:134","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case '1' :\n    return new boolean[]{ false , false , false , true };","position":"org.apache.commons.lang3.Conversion:224","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Calendar java.util.Calendar = null","position":"org.apache.commons.lang3.time.DateUtils:1159","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:264","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(java.lang.StringBuffer, ((java.util.Calendar.get(java.util.Calendar.int)) + 1))","position":"org.apache.commons.lang3.time.FastDatePrinter:983","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:681","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])","position":"org.apache.commons.lang3.BooleanUtils:1081","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(char[], java.lang.Character.java.lang.Class<java.lang.Character>)))","position":"org.apache.commons.lang3.ArrayUtils:4098","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1081","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:2030","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class<?>, java.lang.String, boolean)","position":"org.apache.commons.lang3.reflect.FieldUtils:555","type":"CtLocalVariableImpl"},"status":-2},{"failures":[142,143],"variableMapping":{"srcPos":"startCutoff","nShorts":"startCutoff"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n    java.util.Calendar.add(java.util.Calendar.int, -1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1220","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.charAt(0)","position":"org.apache.commons.lang3.CharUtils:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'b';\n} else {\n    return 'a';\n}","position":"org.apache.commons.lang3.Conversion:538","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:574","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Object.getClass().getComponentType(), (int - int))","position":"org.apache.commons.lang3.ArrayUtils:6071","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n} ","position":"org.apache.commons.lang3.StringUtils:5782","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[] = int[]","position":"org.apache.commons.lang3.StringUtils:6808","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Short[].int) ; int++) {\n    final java.lang.Short java.lang.Short = java.lang.Short[][int];\n    short[][int] = java.lang.Short == null ? short : java.lang.Short.shortValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3190","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, ((int - int) - 1))","position":"org.apache.commons.lang3.ArrayUtils:5199","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrTokenizer:316","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Locale","position":"org.apache.commons.lang3.time.FastDateParser:200","type":"CtReturnImpl"},"status":-2},{"failures":[144],"variableMapping":{"lhs":"lhs","this":"this","rhs":"lhs"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:426","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>)","position":"org.apache.commons.lang3.builder.CompareToBuilder:436","type":"CtInvocationImpl"},"status":-1},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"binaryOperator":"(char[] == null)","name":"negateConditional","position":"org.apache.commons.lang3.text.StrTokenizer:636","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3299","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} else if (double[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":71,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":53,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":56,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":156,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":78,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":68,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":40,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":70,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":155,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":111,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":110,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":135,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":130,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":82,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":44,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":95,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":119,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":167,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":98,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":33,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":177,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":19,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":51,"org.apache.commons.lang3.StringUtilsTest.testOverlay_StringStringIntInt":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":131,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":86,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":37,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":6,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":99,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":154,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":97,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":118,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":59,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":140,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":138,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":29,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":107,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":124,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":133,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":187,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":100,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":48,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":109,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":55,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":108,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":188,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":189,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":190,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":191,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":87,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":7,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":116,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":62,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":60,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":180,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":106,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":181,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":90,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":101,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":96,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":61,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":134,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":126,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":24,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":88,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":22,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":145,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":2,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":52,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":10,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":128,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":45,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":123,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":114,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":157,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":144,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":42,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":3,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":152,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":30,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":127,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":46,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":26,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":132,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":34,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":146,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":193,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":194,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":57,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":117,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":149,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":150,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":143,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":142,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":113,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":153,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":137,"org.apache.commons.lang3.text.StrTokenizerTest.test8":176,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":91,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":18,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":25,"org.apache.commons.lang3.text.StrTokenizerTest.test5":173,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":27,"org.apache.commons.lang3.text.StrTokenizerTest.test4":172,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":80,"org.apache.commons.lang3.text.StrTokenizerTest.test7":175,"org.apache.commons.lang3.text.StrTokenizerTest.test6":174,"org.apache.commons.lang3.text.StrTokenizerTest.test1":169,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":168,"org.apache.commons.lang3.text.StrTokenizerTest.test3":171,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":112,"org.apache.commons.lang3.text.StrTokenizerTest.test2":170,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":147,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":148,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":103,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":20,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":41,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":122,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":160,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":151,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":162,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":161,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":163,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":166,"org.apache.commons.lang3.time.FastDateParserTest.testParses":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":165,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":84,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":186,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":139,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":47,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":11,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":63,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":35,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":43,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":178,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":183,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":185,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":182,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":179,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":77,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":66,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":15,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":125,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":36,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":39}}]
