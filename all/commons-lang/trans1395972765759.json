[{"failures":[],"variableMapping":{"start":"start","end":"focus"},"name":"replace","transplant":{"sourceCode":"java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","position":"org.apache.commons.lang3.time.DateUtils:1169","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:1183","type":"CtAssignmentImpl"},"status":-2},{"failures":[0,1,2,3],"variableMapping":{"tokenPos":"searchLast"},"name":"replace","transplant":{"sourceCode":"return int - 1","position":"org.apache.commons.lang3.text.StrTokenizer:564","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n        return int;\n    } \n} else {\n    return int;\n}","position":"org.apache.commons.lang3.StringUtils:1548","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ true , false , true , true }","position":"org.apache.commons.lang3.Conversion:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , false , false , true }","position":"org.apache.commons.lang3.Conversion:241","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(long[])","position":"org.apache.commons.lang3.math.NumberUtils:938","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrTokenizer:805","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[4],"variableMapping":{"str":"name","trueString":"name","falseString":"name"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharEncoding:95","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.io.PrintWriter.println(java.lang.String);\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:496","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= int ; int++) {\n    if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, int)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1481","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"toGenericArrayType","t":"type","this":"this"},"name":"add","transplant":{"sourceCode":"return (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) && (org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.GenericArrayType.getGenericComponentType(), ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1612","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:559","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Boolean.TRUE":"daemonFlag"},"name":"add","transplant":{"sourceCode":"return this.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n    java.util.Calendar.add(java.util.Calendar.int, 12);\n} else {\n    java.util.Calendar.add(java.util.Calendar.int, -12);\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1028","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:880","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy> = org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.getCache(int)","position":"org.apache.commons.lang3.time.FastDateParser:533","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","position":"org.apache.commons.lang3.text.StrTokenizer:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:765","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"dstPos":"j","nHex":"j"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1008","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    char = char[][int];\n    char[][int] = char[][int];\n    char[][int] = char;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1650","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3","position":"org.apache.commons.lang3.time.DurationFormatUtils:448","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:370","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3949","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","wild":"other"},"name":"add","transplant":{"sourceCode":"return (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)[0])) || (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)[0]))","position":"org.apache.commons.lang3.reflect.TypeUtils:1444","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds())) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType), org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1626","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Character[].int) ; int++) {\n    char[][int] = java.lang.Character[][int].charValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:2964","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler())","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:227","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:470","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.NumberUtils:1320","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch"},"name":"add","transplant":{"sourceCode":"return (char < 32) || (char == 127)","position":"org.apache.commons.lang3.CharUtils:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return java.lang.Character.java.lang.Character.isWhitespace(char);\n} ","position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtIfImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.CharSequence.charAt(int);\n    for (int int = 0 ; int < int ; int++) {\n        if ((char[][int]) == char) {\n            if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n                if (int == int) {\n                    return true;\n                } \n                if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n                    return true;\n                } \n            } else {\n                return true;\n            }\n        } \n    }\n}","position":"org.apache.commons.lang3.StringUtils:1626","type":"CtForImpl"},"status":-1},{"failures":[13,14],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    if (org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.ParameterizedType.getRawType())) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getOwnerType(), java.lang.reflect.ParameterizedType.getOwnerType()))) {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getActualTypeArguments(), java.lang.reflect.ParameterizedType.getActualTypeArguments());\n    } \n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1595","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:514","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.GenericArrayType.equals(java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:525","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"startInclusive":"java.lang.Float.NaN","endInclusive":"java.lang.Float.NaN"},"name":"replace","transplant":{"sourceCode":"if (float == float) {\n    return float;\n} ","position":"org.apache.commons.lang3.RandomUtils:168","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float.float","position":"org.apache.commons.lang3.math.NumberUtils:916","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.lang3.builder.EqualsBuilder:947","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for ( ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(java.lang.reflect.Type[], int--);\n    } else {\n        java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1409","type":"CtForImpl"},"status":-2},{"failures":[15],"name":"returnValue","position":"org.apache.commons.lang3.StringUtils:5958","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{"traceStarted":"doForceAccess"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.reflect.Field.setAccessible(true);\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:686","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(java.lang.String.length()) - (int - 3)","name":"math","position":"org.apache.commons.lang3.StringUtils:6407","type":"mutation","status":0},{"failures":[16],"variableMapping":{"startIndex":"replaceLen","endIndex":"index"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.replaceImpl(int, (int + int), int, java.lang.String, int)","position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:803","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2337","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.reflect.TypeLiteral:116","type":"CtReturnImpl"},"status":-2},{"failures":[17,18],"variableMapping":{"period":"org.apache.commons.lang3.time.StopWatch.NANO_2_MILLIS"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.time.StopWatch.long","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:373","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getSplitNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","position":"org.apache.commons.lang3.time.StopWatch:364","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher, null, 0, int, -1)","position":"org.apache.commons.lang3.text.StrBuilder:1781","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.CharSequenceUtils:215","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","numeric":"numeric"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:538","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:566","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:1075","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:594","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ true , false , false , true }","position":"org.apache.commons.lang3.Conversion:241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , true , true , true }","position":"org.apache.commons.lang3.Conversion:237","type":"CtReturnImpl"},"status":-2},{"failures":[19],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'S' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:232","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(byte[], java.util.BitSet)))","position":"org.apache.commons.lang3.ArrayUtils:5381","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 10","position":"org.apache.commons.lang3.Conversion:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Date.compareTo(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:1804","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:981","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) + 3","position":"org.apache.commons.lang3.time.DateUtils:1199","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int != 0) {\n    java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n    org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:526","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale, java.util.Locale)","position":"org.apache.commons.lang3.LocaleUtils:173","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"days":"n"},"name":"add","transplant":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:350","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:6777","type":"CtAssignmentImpl"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,5,6,53,54,55],"variableMapping":{"hours":"pos"},"name":"add","transplant":{"sourceCode":"int += 24","position":"org.apache.commons.lang3.time.DurationFormatUtils:311","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:95","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:692","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:273","type":"CtIfImpl"},"status":-2},{"failures":[56,57],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return '3'","position":"org.apache.commons.lang3.Conversion:569","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:328","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"token":"value"},"name":"add","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.String.substring(1)","position":"org.apache.commons.lang3.time.FastDatePrinter:274","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String)","position":"org.apache.commons.lang3.time.FastDatePrinter:1105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"char char = 0","position":"org.apache.commons.lang3.math.NumberUtils:467","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char char","position":"org.apache.commons.lang3.StringUtils:6789","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.lang3.builder.ToStringStyle:412","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.exception.ExceptionUtils:645","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<java.util.Locale>>()","position":"org.apache.commons.lang3.LocaleUtils:43","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return ((java.lang.Throwable)(java.lang.reflect.Method.invoke(java.lang.Throwable)));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:203","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{"value":"operand"},"name":"add","transplant":{"sourceCode":"short--","position":"org.apache.commons.lang3.mutable.MutableShort:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.short += short","position":"org.apache.commons.lang3.mutable.MutableShort:138","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} ","position":"org.apache.commons.lang3.LocaleUtils:297","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"endCutoff","count":"endCutoff","srcIndex":"endCutoff"},"name":"add","transplant":{"sourceCode":"int = int - int","position":"org.apache.commons.lang3.ArrayUtils:6077","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1215","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (short[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3400","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:1050","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"fromIndex":"idx"},"name":"add","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:391","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5819","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"arrayContentDetail":"ignoreCase"},"name":"add","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1708","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int--) > 0) {\n    char char = java.lang.CharSequence.charAt(int++);\n    char char = java.lang.CharSequence.charAt(int++);\n    if (char == char) {\n        continue;\n    } \n    if (!boolean) {\n        return false;\n    } \n    if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:196","type":"CtWhileImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (java.lang.Object[].int)) {\n    int = (java.lang.Object[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1959","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:745","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:688","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"denom2":"j","numer2":"j","fraction":"tmp"},"name":"add","transplant":{"sourceCode":"double = ((double)(int)) / ((double)(int))","position":"org.apache.commons.lang3.math.Fraction:282","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double[][int]","position":"org.apache.commons.lang3.ArrayUtils:1686","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())))","position":"org.apache.commons.lang3.time.FastDateParser:167","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.translate.LookupTranslator:57","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.LocaleUtils:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.isUseClassName()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"length"},"name":"add","transplant":{"sourceCode":"final char[] char[] = new char[this.int]","position":"org.apache.commons.lang3.text.StrBuilder:360","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[java.lang.Character[].int]","position":"org.apache.commons.lang3.ArrayUtils:2963","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((short[].int) == 0) && (int == 0)) || (0 == int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.Conversion:759","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:2031","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:6022","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.StringUtils:6637","type":"CtBreakImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * {@link WildcardType} builder.\n * @since 3.2\n */\npublic static class WildcardTypeBuilder implements org.apache.commons.lang3.builder.Builder<java.lang.reflect.WildcardType> {\n    /** \n     * Constructor\n     */\nprivate WildcardTypeBuilder() {\n    }\n\n    private java.lang.reflect.Type[] upperBounds;\n\n    private java.lang.reflect.Type[] lowerBounds;\n\n    /** \n     * Specify upper bounds of the wildcard type to build.\n     * @param bounds to set\n     * @return {@code this}\n     */\npublic org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type... bounds) {\n        this.java.lang.reflect.Type[] = java.lang.reflect.Type[];\n        return this;\n    }\n\n    /** \n     * Specify lower bounds of the wildcard type to build.\n     * @param bounds to set\n     * @return {@code this}\n     */\npublic org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type... bounds) {\n        this.java.lang.reflect.Type[] = java.lang.reflect.Type[];\n        return this;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.WildcardType build() {\n        return new org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl(java.lang.reflect.Type[] , java.lang.reflect.Type[]);\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:53","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","position":"org.apache.commons.lang3.StringEscapeUtils:396","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:232","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1075","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Pair<L, R>.getRight()).append(')')","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1366","type":"CtInvocationImpl"},"status":-2},{"failures":[58],"variableMapping":{"boundary":"max","p":"array"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = int;\n}","position":"org.apache.commons.lang3.StringUtils:6927","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:966","type":"CtIfImpl"},"status":-1},{"failures":[],"binaryOperator":"(\"Caught a SecurityException reading the system property \\'\" + java.lang.String)","name":"math","position":"org.apache.commons.lang3.SystemUtils:1348","type":"mutation","status":-2},{"failures":[],"variableMapping":{"_mask":"length","holder":"startIndex"},"name":"replace","transplant":{"sourceCode":"return int | (this.int)","position":"org.apache.commons.lang3.BitField:216","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (char[].int) ; int++) {\n    if (char == (char[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2339","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.util.List<java.util.Locale>","position":"org.apache.commons.lang3.LocaleUtils:312","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:208","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:277","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) || (int <= 0)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1026","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:697","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-2},{"failures":[59],"variableMapping":{"startCutoff":"endIndexExclusive"},"name":"replace","transplant":{"sourceCode":"int -= 7","position":"org.apache.commons.lang3.time.DateUtils:1212","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = short[].int","position":"org.apache.commons.lang3.ArrayUtils:1002","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(\"double\", \"D\")","position":"org.apache.commons.lang3.ClassUtils:126","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n    final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n    if ((java.lang.String.equals(java.util.Locale.getCountry())) && (java.util.Locale.getVariant().isEmpty())) {\n        java.util.List<java.util.Locale>.add(java.util.Locale);\n    } \n}","position":"org.apache.commons.lang3.LocaleUtils:268","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"separator","max":"max","this":"this","separator":"str"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, int, false)","position":"org.apache.commons.lang3.StringUtils:2724","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (org.apache.commons.lang3.StringUtils.java.lang.String.equals(java.lang.String))) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, null, int, boolean);\n} ","position":"org.apache.commons.lang3.StringUtils:2815","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.text.WordUtils:300","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , int , (int - int))","position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)))","position":"org.apache.commons.lang3.StringUtils:3244","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5262","type":"CtIfImpl"},"status":-2},{"failures":[60,61,62],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n        java.util.List<java.lang.Object>.add(org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue());\n    } \n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:79","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(java.lang.String.hashCode()) + (13 * ((java.util.TimeZone.hashCode()) + (13 * (java.util.Locale.hashCode()))))","name":"math","position":"org.apache.commons.lang3.time.FastDateParser:238","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], 0, char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1528","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean boolean = org.apache.commons.lang3.text.StrSubstitutor.isEnableSubstitutionInVariables()","position":"org.apache.commons.lang3.text.StrSubstitutor:755","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:478","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.lang.String.length()) - 1","position":"org.apache.commons.lang3.StringUtils:5009","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"stopTime":"startTime","startTime":"startTime"},"name":"replace","transplant":{"sourceCode":"return (this.long) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return 0;\n} else if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return java.lang.System.(java.lang.System.nanoTime()) - (this.long);\n} ","position":"org.apache.commons.lang3.time.StopWatch:340","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (boolean) == false","position":"org.apache.commons.lang3.mutable.MutableBoolean:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1687","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","position":"org.apache.commons.lang3.BooleanUtils:1019","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:303","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int)","position":"org.apache.commons.lang3.time.FastDatePrinter:263","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'A' :\n    return new boolean[]{ false , true , false , true };","position":"org.apache.commons.lang3.Conversion:183","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"fieldName","parsePattern":"fieldName","str2":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:676","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ false , true , true , false }","position":"org.apache.commons.lang3.Conversion:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true)","position":"org.apache.commons.lang3.time.FastDatePrinter:1168","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(float)--","position":"org.apache.commons.lang3.mutable.MutableFloat:146","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.text.WordUtils:300","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char[])","position":"org.apache.commons.lang3.text.StrBuilder:981","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:5589","type":"CtReturnImpl"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"variableMapping":{"buffer":"buffer","object":"object"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:344","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:379","type":"CtInvocationImpl"},"status":-1},{"failures":[186,187,188],"binaryOperator":"(int * int) + int","name":"math","position":"org.apache.commons.lang3.math.Fraction:281","type":"mutation","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.TypeVariable<?>), \"missing argument mapping for %s\", org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.TypeVariable<?>))","position":"org.apache.commons.lang3.reflect.TypeUtils:1535","type":"CtInvocationImpl"},"status":0},{"failures":[77,78,82,86,89,90,94,95,96,99,100,101,103,109,110,112,113,117,122,123,127],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append('0')","position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:925","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","position":"org.apache.commons.lang3.math.Fraction:697","type":"CtThrowImpl"},"status":-2},{"failures":[189,190],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.AnnotationUtils:152","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.concurrent.ConstantInitializer<T>.getObject(), org.apache.commons.lang3.concurrent.ConstantInitializer<?>.getObject())","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:115","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1640","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.ParameterizedType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(java.lang.Object)))))","position":"org.apache.commons.lang3.reflect.TypeUtils:200","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","t1":"t","t2":"t"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)), java.lang.reflect.Type);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1581","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds())) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType), org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1624","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","position":"org.apache.commons.lang3.StringUtils:6397","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5823","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":12,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":121,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":136,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":45,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":69,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":17,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":151,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":167,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":74,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":179,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":14,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":113,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":142,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":16,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":133,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":172,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":58,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":21,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":159,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":174,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":46,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":77,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":152,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":94,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":166,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":42,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":107,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":43,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":49,"org.apache.commons.lang3.math.FractionTest.testFactory_double":186,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":25,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":108,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":141,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":23,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":131,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":112,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":180,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":181,"org.apache.commons.lang3.ArrayUtilsTest.testToString":185,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":38,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":27,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":145,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":102,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":163,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":83,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":22,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":157,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":13,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":114,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":156,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":110,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":120,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":93,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":155,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":135,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":67,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":97,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":129,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":144,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":47,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":146,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":57,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringString":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":72,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":50,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":79,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":54,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":68,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":190,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":184,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":39,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":30,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":117,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":41,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":158,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":168,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":105,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":80,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":10,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":175,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":61,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArray":3,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":26,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":24,"org.apache.commons.lang3.math.FractionTest.testToProperString":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":103,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":29,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":20,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":132,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":176,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":116,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":65,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":28,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":85,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":188,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":122,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":98,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":154,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":6,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsFalse":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":82,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":134,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":32,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":78,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":149,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":173,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":162,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":84,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":140,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":150,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":63,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":86,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":64,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":111,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":125,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":170,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":161}}]
