[{"position":"org.apache.commons.lang3.math.Fraction:259","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:141","sourceCode":"java.lang.StringBuilder.append(\"\\t[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1443","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"sb"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:477","sourceCode":"return false","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:432","failures":[],"status":0,"binaryOperator":"(37 * int) + (T.hashCode())","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:579","sourceCode":"if ((int == int) || (int == int)) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:995","sourceCode":"if ((!boolean) && (((org.apache.commons.lang3.time.DateUtils.int) == int) || (int < 30))) {\n    long = long - (int * 60000L);\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"v":"minutes","u":"modType","java.lang.Integer.MIN_VALUE":"modType"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:159","sourceCode":"short -= short","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1128","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out","operand":"out"}},{"position":"org.apache.commons.lang3.Conversion:407","failures":[],"status":0,"binaryOperator":"((boolean[].int) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:491","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","type":"CtReturnImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:313","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:292","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o2":"o2","o1":"o2","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:599","sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:815","sourceCode":"for (int int = 1 ; int < (int[].int) ; int++) {\n    if ((int[][int]) < int) {\n        int = int[][int];\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"k":"min"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:743","sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:658","sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int) {\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        if (int < 100) {\n            int = org.apache.commons.lang3.time.FastDateParser.adjustYear(int);\n        } \n        java.util.Calendar.set(java.util.Calendar.int, int);\n    }\n}","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:561","sourceCode":"if ((((char == 'y') || (char == 'Y')) || (char == 't')) || (char == 'T')) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:588","sourceCode":"if ((((char == 'y') || (char == 'Y')) && ((char == 'e') || (char == 'E'))) && ((char == 's') || (char == 'S'))) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:227","sourceCode":"java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler())","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.WordUtils:109","failures":[62,63],"status":-1,"binaryOperator":"int >= int","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:176","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:931","sourceCode":"if ((java.lang.String) == null) {\n    if ((int) == 0) {\n        java.lang.String = \"0\";\n    } else if ((int) == (int)) {\n        java.lang.String = \"1\";\n    } else if ((int) == ((-1) * (int))) {\n        java.lang.String = \"-1\";\n    } else if (((int) > 0 ? -(int) : int) < (-(int))) {\n        final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n        if (int == 0) {\n            java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n        } else {\n            java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n        }\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:780","sourceCode":"return org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:857","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"failures":[14,15,17,65,22,23,25,26,27,28,29,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","date":"date","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:459","sourceCode":"if (java.io.PrintStream == null) {\n    throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:466","sourceCode":"java.io.PrintStream.flush()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.apache.commons.lang3.RandomStringUtils:230","failures":[58,66,67],"status":-1,"binaryOperator":"((char[].int) == 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:657","sourceCode":"return 'b'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:560","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '5';\n} else {\n    return '4';\n}","type":"CtIfImpl"},"failures":[68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1030","sourceCode":"java.util.Calendar.add(java.util.Calendar.int, -12)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1065","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int >= 12) {\n        int -= 12;\n    } \n    boolean = int >= 6;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[18,25,32,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:604","sourceCode":"int int = (int & 1) == 1 ? int : -(int / 2)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:252","sourceCode":"final int int = int - int","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"v":"start","u":"end"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2112","sourceCode":"/** \n * <p>Default <code>ToStringStyle<\/code>.<\/p>\n * \n * <p>This is an inner class rather than using\n * <code>StandardToStringStyle<\/code> to ensure its immutability.<\/p>\n */\nprivate static final class DefaultToStringStyle extends org.apache.commons.lang3.builder.ToStringStyle {\n    /** \n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     */\nprivate static final long serialVersionUID = 1L;\n\n    /** \n     * <p>Constructor.<\/p>\n     * \n     * <p>Use the static constant rather than instantiating.<\/p>\n     */\nDefaultToStringStyle() {\n        org.apache.commons.lang3.builder.ToStringStyle.super();\n    }\n\n    /** \n     * <p>Ensure <code>Singleton<\/code> after serialization.<\/p>\n     * \n     * @return the singleton\n     */\nprivate java.lang.Object readResolve() {\n        return org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle;\n    }\n}","type":"CtClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:88","sourceCode":"new org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>() {\n    @java.lang.Override\n    protected org.apache.commons.lang3.time.FastDateFormat createInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n        return new org.apache.commons.lang3.time.FastDateFormat(java.lang.String , java.util.TimeZone , java.util.Locale);\n    }\n}","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:885","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[70,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:550","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:927","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    if (java.lang.Object == null) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n    }\n}","type":"CtForImpl"},"failures":[72,73,74,75,75,76,77,78,79,79,80,80,4,81,82,83,83,84,84,85,85,5,6,86,86,87,87,88,89,90,91,91,92,93,93,94,95,96,97,7,98,98,99,99,100,101,101,102,103,103,104,105,106,107,107,108,109,110,111,112,112,113,113,114,8,9,115,116,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"arrayContentDetail","value":"array","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:289","sourceCode":"return org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(java.lang.Object)), ((java.lang.annotation.Annotation[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:142","sourceCode":"if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[56,117,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o2":"v2","o1":"v2","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:283","sourceCode":"java.util.Calendar.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:887","sourceCode":"java.util.Calendar.setTime(java.util.Date)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cal":"gval"}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:209","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:128","sourceCode":"return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.GenericArrayType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.GenericArrayType)(java.lang.Object)))))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":102,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":104,"org.apache.commons.lang3.math.FractionTest.testFactory_double":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":24,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":27,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":88,"org.apache.commons.lang3.time.DateUtilsTest.testRound":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":90,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":117,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":8,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":106,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":31,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":34,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":12,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":63,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":36,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":56,"org.apache.commons.lang3.ConversionTest.testIntToHex":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":110,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":55,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":112,"org.apache.commons.lang3.math.FractionTest.testPow":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":87,"org.apache.commons.lang3.math.FractionTest.testCompareTo":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":15,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":108,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":93,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":2,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":51,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":79,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":54,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":62,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":77,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":115,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":96,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":32,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":103,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":91,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":105,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":49,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":53,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":61,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":65,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":39,"org.apache.commons.lang3.math.FractionTest.testToProperString":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":99,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":30,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":116}}]
