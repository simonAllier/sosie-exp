[{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:326","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1076","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:622","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4167","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:297","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:911","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:163","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, int, int, boolean, boolean, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:304","failures":[4,5],"status":-1,"binaryOperator":"(int + 3)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateFormatUtils:42","sourceCode":"java.util.TimeZone.java.util.TimeZone.getTimeZone(\"GMT\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:889","sourceCode":"java.lang.System.java.lang.System.arraycopy(T[], int, T[], 0, int)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:253","sourceCode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1080","sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:279","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:278","sourceCode":"char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1136","sourceCode":"if (short < short) {\n    short = short;\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","sourceCode":"if (java.lang.Throwable == null) {\n    return \"\";\n} ","type":"CtIfImpl"},"failures":[12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:177","sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be negative\")","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.WordUtils:460","inlineConstant":"int int = 0","failures":[15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3229","sourceCode":"if (int == int) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:465","sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int++] = char;\n    boolean = false;\n} else {\n    continue;\n}","type":"CtIfImpl"},"failures":[15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"count","currentType":"count"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1080","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:185","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch already started. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:183","sourceCode":"if (org.apache.commons.lang3.CharRange == null) {\n    throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharacterIterator:306","sourceCode":"if ((char) == (java.lang.Character.char)) {\n    boolean = false;\n} else if (((char) + 1) == (org.apache.commons.lang3.CharRange.char)) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = ((char)((char) + 1));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"range":"range"}},{"position":"org.apache.commons.lang3.Conversion:1194","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:178","sourceCode":"this.double -= double","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"(double)--","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2893","sourceCode":"if (long < 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:903","sourceCode":"if (0 == int) {\n    return long;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"n":"dstInit"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:121","sourceCode":"return 9","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:894","sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, int, int)","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1973","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1491","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nullText":"str"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:742","sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getVariableSuffixMatcher()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:744","sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()","type":"CtLocalVariableImpl"},"failures":[33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:94","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","type":"CtInvocationImpl"},"failures":[42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:811","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"workArea":"workArea","trimStart":"trimStart"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:516","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:517","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"items":"items","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:416","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:332","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, char)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:927","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.7\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1043","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"NetBSD\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1852","sourceCode":"short[][int] = short[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1231","sourceCode":"short[][(int + int)] = ((short)(65535 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"j":"dstPos","array":"dst","i":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:656","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:659","sourceCode":"return java.lang.Float.java.lang.Float.valueOf(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:306","sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:236","sourceCode":"if ((java.lang.String) == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4);\n    if (org.apache.commons.lang3.CharRange.isNegated()) {\n        java.lang.StringBuilder.append('^');\n    } \n    java.lang.StringBuilder.append(char);\n    if ((char) != (char)) {\n        java.lang.StringBuilder.append('-');\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.String = java.lang.StringBuilder.toString();\n} ","type":"CtIfImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"className":"iToString"}},{"failureDictionary":{"org.apache.commons.lang3.CharSetTest.testContains_Char":54,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":2,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":42,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":11,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_nullArray":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":51,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":4,"org.apache.commons.lang3.math.FractionTest.testSubtract":31,"org.apache.commons.lang3.math.FractionTest.testAdd":30,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":10,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_nullArray":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":48,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":12,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":46,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":61,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":13,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_charInt":32,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":1,"org.apache.commons.lang3.ArrayUtilsTest.testToString":9,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":63,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":53,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":43,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_nullArray":18,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":58,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":16,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_nullArray":17,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_nullArray":20,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":6,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":8,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_nullArray":28,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":7,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":56,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":5,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":41,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":15,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":52,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_nullArray":26,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_nullArray":21,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_nullArray":25,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":34,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":60,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":44,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":57,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_nullArray":27,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_nullArray":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":33,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_nullArray":19,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":36,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":3}}]
