[{"failures":[],"variableMapping":{"arrayEnd":"text"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    java.lang.StringBuilder.append(java.lang.String.charAt(int));\n}","position":"org.apache.commons.lang3.StringUtils:4801","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1578","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.Math.java.lang.Math.min(java.lang.CharSequence[][int].length(), int)","position":"org.apache.commons.lang3.StringUtils:6611","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","position":"org.apache.commons.lang3.ObjectUtils:123","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])) {\n    final java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>(T[].int);\n    for (final T T : T[]) {\n        final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T);\n        if (org.apache.commons.lang3.mutable.MutableInt == null) {\n            java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n        } else {\n            org.apache.commons.lang3.mutable.MutableInt.increment();\n        }\n    }\n    T T = null;\n    int int = 0;\n    for (final java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n        final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue();\n        if (int == int) {\n            T = null;\n        } else if (int > int) {\n            int = int;\n            T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n        } \n    }\n    return T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:571","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","parsePatterns":"parsePatterns","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String, null, java.lang.String[], false)","position":"org.apache.commons.lang3.time.DateUtils:333","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDateStrictly(java.lang.String, null, java.lang.String[])","position":"org.apache.commons.lang3.time.DateUtils:311","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrTokenizer:640","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], int, double[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:1130","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:524","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1743","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.StrBuilder:1503","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}","position":"org.apache.commons.lang3.math.Fraction:596","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String[][int])","position":"org.apache.commons.lang3.StringUtils:4771","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.ClassUtils:647","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder) {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.(org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n    } \n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:467","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isFalse(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:141","type":"CtReturnImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6908","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int <= int ; int++) {\n    final char char = java.lang.CharSequence.charAt((int - 1));\n    int[][0] = int;\n    final int int = java.lang.Math.java.lang.Math.max(1, (int - int));\n    final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int));\n    if (int > int) {\n        return -1;\n    } \n    if (int > 1) {\n        int[][(int - 1)] = java.lang.Integer.int;\n    } \n    for (int int = int ; int <= int ; int++) {\n        if ((java.lang.CharSequence.charAt((int - 1))) == char) {\n            int[][int] = int[][(int - 1)];\n        } else {\n            int[][int] = 1 + java.lang.Math.(java.lang.Math.min(java.lang.Math.java.lang.Math.min(int[][(int - 1)], int[][int]), int[][(int - 1)]));\n        }\n    }\n    int[] = int[];\n    int[] = int[];\n    int[] = int[];\n}","position":"org.apache.commons.lang3.StringUtils:6936","type":"CtForImpl"},"status":-1},{"failures":[2],"name":"returnValue","position":"org.apache.commons.lang3.reflect.TypeUtils:526","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(false)","position":"org.apache.commons.lang3.AnnotationUtils:60","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:2462","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:533","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '0'","position":"org.apache.commons.lang3.Conversion:631","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = (255 & (byte[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:880","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (float[].int)) {\n    int = (float[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2814","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getFuture().get();\n} catch (final java.util.concurrent.ExecutionException java.util.concurrent.ExecutionException) {\n    org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(java.util.concurrent.ExecutionException);\n    return null;\n} catch (final java.lang.InterruptedException java.lang.InterruptedException) {\n    java.lang.Thread.java.lang.Thread.currentThread().interrupt();\n    throw new org.apache.commons.lang3.concurrent.ConcurrentException(java.lang.InterruptedException);\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:211","type":"CtTryImpl"},"status":-2},{"failures":[3,4,5,6,7],"variableMapping":{"value":"cost"},"name":"add","transplant":{"sourceCode":"float++","position":"org.apache.commons.lang3.mutable.MutableFloat:137","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float += 0.1F","position":"org.apache.commons.lang3.reflect.MemberUtils:177","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:632","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:165","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:343","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:148","type":"CtIfImpl"},"status":-2},{"failures":[8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character == null) {\n    return char;\n} ","position":"org.apache.commons.lang3.CharUtils:150","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"lowerBounds":"bounds","bounds":"bounds"},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type[] = java.lang.reflect.Type[]","position":"org.apache.commons.lang3.reflect.TypeUtils:79","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type[], \"null value specified for bounds array\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1126","type":"CtInvocationImpl"},"status":-2},{"failures":[9],"variableMapping":{"srcPos":"index","shift":"index","i":"index"},"name":"add","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, int)","position":"org.apache.commons.lang3.text.StrBuilder:1746","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.this.append(java.lang.String, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:2980","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.booleanValue() ? int : int","position":"org.apache.commons.lang3.BooleanUtils:469","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>.remove(org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>)","position":"org.apache.commons.lang3.builder.EqualsBuilder:199","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1443","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.StringUtils:6596","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2083","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:915","type":"CtReturnImpl"},"status":-2},{"failures":[10],"binaryOperator":"(double * int)","name":"math","position":"org.apache.commons.lang3.StringUtils:7020","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:722","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final boolean boolean : boolean[]) {\n    if (boolean) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.BooleanUtils:980","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T instanceof java.lang.Cloneable) {\n    final java.lang.Object java.lang.Object;\n    if (T.getClass().isArray()) {\n        final java.lang.Class<?> java.lang.Class<?> = T.getClass().getComponentType();\n        if (!(java.lang.Class<?>.isPrimitive())) {\n            java.lang.Object = ((java.lang.Object[])(T)).clone();\n        } else {\n            int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(T);\n            java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int);\n            while ((int--) > 0) {\n                java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n            }\n        }\n    } else {\n        try {\n            final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\");\n            java.lang.Object = java.lang.reflect.Method.invoke(T);\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Cannot clone Cloneable type \" + (T.getClass().getName())) , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause());\n        }\n    }\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(java.lang.Object));\n    return T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:609","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte byte = byte","position":"org.apache.commons.lang3.Conversion:1012","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"len":"j","size":"j"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1631","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.runtime.name\")","position":"org.apache.commons.lang3.SystemUtils:373","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\")","position":"org.apache.commons.lang3.ClassUtils:972","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:306","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","position":"org.apache.commons.lang3.math.Fraction:913","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Boolean[] java.lang.Boolean[] = new java.lang.Boolean[boolean[].int]","position":"org.apache.commons.lang3.ArrayUtils:3483","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:177","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"srcPos","src":"src","length":"length"},"name":"replace","transplant":{"sourceCode":"if (((this.int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((this.int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((this.int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (((this.int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((this.int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((this.int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (((this.int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:552","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","position":"org.apache.commons.lang3.Conversion:524","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'e' :","position":"org.apache.commons.lang3.Conversion:194","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n} ","position":"org.apache.commons.lang3.StringUtils:7014","type":"CtIfImpl"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.lang.Class<L>.isInterface(), \"Class {0} is not an interface\", java.lang.Class<L>.getName())","position":"org.apache.commons.lang3.event.EventListenerSupport:142","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.event.EventListenerSupport<L>.initializeTransientFields(java.lang.Class<L>, java.lang.ClassLoader)","position":"org.apache.commons.lang3.event.EventListenerSupport:144","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"(((int - 1) * 32) + int)","name":"math","position":"org.apache.commons.lang3.Conversion:1190","type":"mutation","status":0},{"failures":[20],"variableMapping":{"numerator":"startIndex","denominator":"startIndex"},"name":"add","transplant":{"sourceCode":"return int / int","position":"org.apache.commons.lang3.math.Fraction:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[].getClass().getComponentType().isInstance(java.lang.Object)) {\n    for (int int = int ; int >= 0 ; int--) {\n        if (java.lang.Object.equals(java.lang.Object[][int])) {\n            return int;\n        } \n    }\n} ","position":"org.apache.commons.lang3.ArrayUtils:1968","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.String.length()) != 0) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isInstance(java.lang.Object)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, java.lang.Class<?>.getName(), (java.lang.Object == null ? \"null\" : java.lang.Object.getClass().getName())));\n} ","position":"org.apache.commons.lang3.Validate:1176","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"target"},"name":"add","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Field.get(java.lang.Object)","position":"org.apache.commons.lang3.reflect.FieldUtils:387","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1591","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(int + 3)","name":"math","position":"org.apache.commons.lang3.Conversion:538","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:4109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String.replace(org.apache.commons.lang3.ClassUtils.char, org.apache.commons.lang3.ClassUtils.char)","position":"org.apache.commons.lang3.ClassUtils:222","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.StopWatch:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.WordUtils:196","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(short[], short)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2297","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.time.FastDatePrinter:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object java.lang.Object","position":"org.apache.commons.lang3.builder.DiffBuilder:807","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Object java.lang.Object = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:494","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(java.lang.String)","position":"org.apache.commons.lang3.text.StrLookup:165","type":"CtLocalVariableImpl"},"status":0},{"failures":[21,22,23,24,25,26,27],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1208","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; (int < (short[].int)) && (boolean) ; ++int) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(short[][int], short[][int]);\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:747","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (long[].int)) && (boolean) ; ++int) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(long[][int], long[][int]);\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:685","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(long[])","position":"org.apache.commons.lang3.math.NumberUtils:938","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (byte[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"u":"defaultValue","k":"defaultValue"},"name":"add","transplant":{"sourceCode":"return (-int) * (1 << int)","position":"org.apache.commons.lang3.math.Fraction:624","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:287","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:292","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1666","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:6037","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n    java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n    switch (int) {\n        case org.apache.commons.lang3.time.DateUtils.int :\n            break;\n        case org.apache.commons.lang3.time.DateUtils.int :\n            int = java.util.Calendar.int;\n            int = java.util.Calendar.int;\n            break;\n        case org.apache.commons.lang3.time.DateUtils.int :\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            int = int - 1;\n            break;\n        case org.apache.commons.lang3.time.DateUtils.int :\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n            int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n            break;\n        default :\n            break;\n    }\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1181","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2874","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.getTimeZone()","position":"org.apache.commons.lang3.time.FastDateFormat:588","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"parent":"parent","child":"child"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Class<?> == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return 0;\n} ","position":"org.apache.commons.lang3.reflect.InheritanceUtils:54","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer()","position":"org.apache.commons.lang3.text.StrBuilder:2559","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:479","type":"CtReturnImpl"},"status":-2},{"failures":[28],"variableMapping":{"comparison":"result"},"name":"replace","transplant":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:594","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.Range:435","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Character.java.lang.Character.codePointCount(java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringEscapeUtils:272","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((java.lang.CharSequence.charAt(int)) == '&') && (int < (int - 2))) && ((java.lang.CharSequence.charAt((int + 1))) == '#')) {\n    int int = int + 2;\n    boolean boolean = false;\n    final char char = java.lang.CharSequence.charAt(int);\n    if ((char == 'x') || (char == 'X')) {\n        int++;\n        boolean = true;\n        if (int == int) {\n            return 0;\n        } \n    } \n    int int = int;\n    while ((int < int) && (((((java.lang.CharSequence.charAt(int)) >= '0') && ((java.lang.CharSequence.charAt(int)) <= '9')) || (((java.lang.CharSequence.charAt(int)) >= 'a') && ((java.lang.CharSequence.charAt(int)) <= 'f'))) || (((java.lang.CharSequence.charAt(int)) >= 'A') && ((java.lang.CharSequence.charAt(int)) <= 'F')))) {\n        int++;\n    }\n    final boolean boolean = (int != int) && ((java.lang.CharSequence.charAt(int)) == ';');\n    if (!boolean) {\n        if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n            return 0;\n        } else if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n            throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n        } \n    } \n    int int;\n    try {\n        if (boolean) {\n            int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 16);\n        } else {\n            int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 10);\n        }\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        return 0;\n    }\n    if (int > 65535) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(int);\n        java.io.Writer.write(char[][0]);\n        java.io.Writer.write(char[][1]);\n    } else {\n        java.io.Writer.write(int);\n    }\n    return (((2 + int) - int) + (boolean ? 1 : 0)) + (boolean ? 1 : 0);\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:81","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:3623","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:1504","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean[][int] = boolean[][int]","position":"org.apache.commons.lang3.ArrayUtils:1582","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:478","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new boolean[]{ true , false , true , true }","position":"org.apache.commons.lang3.Conversion:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3435","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1323","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.translate.LookupTranslator:57","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:463","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"element":"result"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:981","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.BooleanUtils:1055","type":"CtReturnImpl"},"status":0},{"failures":[29,30],"binaryOperator":"((long[][int]) & (1 << ((E.ordinal()) % (java.lang.Long.int))))","name":"math","position":"org.apache.commons.lang3.EnumUtils:273","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:899","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:637","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Double.java.lang.Double.valueOf(double)))","position":"org.apache.commons.lang3.Validate:131","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5465","type":"CtBreakImpl"},"status":-2},{"failures":[31,32],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(char[][0]))) + \"\\\\u\") + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(char[][1]))","position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:111","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(\"[\")","position":"org.apache.commons.lang3.AnnotationUtils:64","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3794","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6763","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:475","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (float[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(float[][int], float[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:946","type":"CtForImpl"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"binaryOperator":"int * 2","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:236","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int == 1) || (int == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5129","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.Conversion:1428","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.io.PrintStream == null) {\n    throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:459","type":"CtIfImpl"},"status":-2},{"failures":[51,52,53],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3114","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int++) == int) {\n    int = int;\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3094","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String, java.util.regex.Pattern.int)","position":"org.apache.commons.lang3.StringUtils:4442","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final long long = 4294967295L << int","position":"org.apache.commons.lang3.Conversion:697","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) * ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:640","type":"CtLocalVariableImpl"},"status":-2},{"failures":[54],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.reflect.Method.getName(), java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:177","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.ObjectUtils:160","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(java.lang.Object, java.lang.Object)) == false","position":"org.apache.commons.lang3.ObjectUtils:186","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.ArrayUtils:6080","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (char char = 0 ; char < (org.apache.commons.lang3.CharUtils.java.lang.String[].int) ; char++) {\n    org.apache.commons.lang3.CharUtils.java.lang.String[][char] = java.lang.String.java.lang.String.valueOf(char);\n}","position":"org.apache.commons.lang3.CharUtils:54","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (boolean) == false","position":"org.apache.commons.lang3.mutable.MutableBoolean:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1666","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"numerator":"len"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (int)) {\n    org.apache.commons.lang3.text.StrBuilder.delete(int, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2052","type":"CtIfImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1879","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>))","position":"org.apache.commons.lang3.reflect.TypeUtils:1034","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long - int","position":"org.apache.commons.lang3.time.DateUtils:979","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char[][(int)++] = 's'","position":"org.apache.commons.lang3.text.StrBuilder:781","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:701","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.float[]","position":"org.apache.commons.lang3.ArrayUtils:1166","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n    throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:111","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup<java.lang.String> = new org.apache.commons.lang3.text.StrLookup.MapStrLookup<java.lang.String>(null)","position":"org.apache.commons.lang3.text.StrLookup:48","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n    java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()));\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n    java.util.Calendar.add(java.util.Calendar.int, -1);\n    if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n        int = java.util.Calendar.int;\n        int = java.util.Calendar.int;\n    } \n    break;","position":"org.apache.commons.lang3.time.DateUtils:1165","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.StringBuilder.length()","position":"org.apache.commons.lang3.Conversion:1397","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.tuple.Triple:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getFieldNameValueSeparator()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:316","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)), java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:1579","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.math.Fraction:289","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.math.NumberUtils:1379","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:764","type":"CtLocalVariableImpl"},"status":-2},{"failures":[55],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.lang3.text.StrBuilder:2874","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The style must not be null\")","position":"org.apache.commons.lang3.builder.ToStringBuilder:137","type":"CtThrowImpl"},"status":-1},{"failures":[1],"variableMapping":{"comparison":"j"},"name":"replace","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:592","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][0] = int","position":"org.apache.commons.lang3.StringUtils:6938","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:434","type":"CtIfImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testCapacity":36,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":32,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":23,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":5,"org.apache.commons.lang3.event.EventListenerSupportTest.testSubclassInvocationHandling":15,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":45,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":50,"org.apache.commons.lang3.event.EventListenerSupportTest.testGetListeners":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":37,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":41,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":18,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":25,"org.apache.commons.lang3.text.StrBuilderTest.testEnsureCapacity":35,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":29,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":4,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":34,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfWithStartIndex":20,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":19,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":38,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":39,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":10,"org.apache.commons.lang3.event.EventListenerSupportTest.testSerialization":12,"org.apache.commons.lang3.event.EventListenerSupportTest.testRemoveListenerDuringEvent":11,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character_char":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":42,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":24,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":40,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":17,"org.apache.commons.lang3.event.EventListenerSupportTest.testEventDispatchOrder":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":55,"org.apache.commons.lang3.RangeTest.testHashCode":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":47,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":3,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":1,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":52,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":26,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":54,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":9,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":31,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":6,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":53,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":48,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":22,"org.apache.commons.lang3.text.StrBuilderTest.testMinimizeCapacity":33,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":49}}]
