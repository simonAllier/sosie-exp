[{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1998","sourceCode":"int = (int - int) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:468","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"to":"count","replaceLen":"count","removeLen":"count"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1063","sourceCode":"return new java.lang.String(char[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2000","sourceCode":"if (int > 0) {\n    int--;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1115","sourceCode":"if (int < int) {\n    int = int;\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"replaceCount":"a"}},{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:54","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"java.lang.CharSequence == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:257","sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","type":"CtAssignmentImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:661","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mulPos\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:492","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[], 0)","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:792","failures":[188],"status":-1,"binaryOperator":"int < (long[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1518","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (byte >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:1100","failures":[],"status":0,"binaryOperator":"long < long","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.builder.ToStringStyle:900","failures":[44,47,49,52,55,57,60,63,65,85,87,88,88,89,90,91,92,93,94,103,108,115,132,135,137,141,143,145,145,153,156,158,161,164,166,169,172,174,178],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:168","sourceCode":"this.double += java.lang.Number.doubleValue()","type":"CtOperatorAssignmentImpl"},"failures":[190],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:360","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[191],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:496","sourceCode":"if (java.lang.reflect.Method != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:483","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n        final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n        if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[192,193,194,195,196,197,198,199,200,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:525","sourceCode":"if (java.lang.reflect.Method == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:488","sourceCode":"if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n    java.lang.reflect.Method = java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"m":"accessibleMethod"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:320","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return 'a';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '8';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:552","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[202,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1019","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"FreeBSD\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1229","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.1\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:336","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:544","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '9';\n} else {\n    return '8';\n}","type":"CtIfImpl"},"failures":[202,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1974","sourceCode":"if (int == int) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1401","sourceCode":"if ((int + int) == int) {\n    ++int;\n    java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n} else {\n    java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n}","type":"CtIfImpl"},"failures":[203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"bits","tmp":"append"}},{"position":"org.apache.commons.lang3.Conversion:107","failures":[204],"status":-1,"name":"returnValue","return":"return 4","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:563","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1011","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[205,206,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:408","sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)) == false) {\n    return java.lang.String.substring(int, (int + int));\n} ","type":"CtIfImpl"},"failures":[208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","sourceCode":"if (java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.max(double, double);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:106","sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.min(double, double);\n}","type":"CtIfImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"b","a":"a","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1112","sourceCode":"if (int > int) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:122","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startPos":"defaultValue","org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"defaultValue","endLimit":"defaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:107","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[219,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","falseString":"str","trueString":"str"}},{"position":"org.apache.commons.lang3.exception.ExceptionUtils:530","failures":[221,222,223],"status":-1,"binaryOperator":"(int - 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2834","sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int))","type":"CtInvocationImpl"},"failures":[224,225,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1431","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:556","sourceCode":"while ((int >= 0) && (int >= 0)) {\n    final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int);\n    final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int);\n    if (java.lang.String.equals(java.lang.String)) {\n        java.util.List<java.lang.String>.remove(int);\n    } \n    int--;\n    int--;\n}","type":"CtWhileImpl"},"failures":[221,222,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"wrapperFrameIndex","nHexs":"wrapperFrameIndex"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:148","sourceCode":"if ((java.lang.String.charAt(5)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:139","sourceCode":"if ((!java.lang.Character.(java.lang.Character.isUpperCase(char))) || (!java.lang.Character.(java.lang.Character.isUpperCase(char)))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[227,228],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.CopyQuotedStrategy:538","sourceCode":"char = java.lang.String.charAt(1)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:469","sourceCode":"char = java.lang.String.charAt(int)","type":"CtAssignmentImpl"},"failures":[229,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"c":"firstSigDigit","formatField":"str"}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":15,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValueObject":190,"org.apache.commons.lang3.ConversionTest.testByteToHex":189,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":62,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":114,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":58,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":27,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":139,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":80,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":144,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":46,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":125,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":228,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":71,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":64,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":116,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":74,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":14,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":196,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":173,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":77,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":1,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":163,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":86,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":175,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":230,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":147,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":225,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":220,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":60,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":32,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":191,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":170,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":17,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":171,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":219,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":40,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":56,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":121,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":50,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":118,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":164,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":128,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":204,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":79,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":216,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":137,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":84,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":151,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":31,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":105,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":229,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":142,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":138,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":93,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":130,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":110,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":85,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":91,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":132,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":224,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":205,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":148,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":212,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":106,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":38,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":153,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":199,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":154,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":103,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":134,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":21,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":73,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":13,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":16,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":214,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":202,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":94,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":159,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":20,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":34,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":108,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":141,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":112,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":155,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":194,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":129,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":145,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":169,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":217,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":146,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":223,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":158,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":122,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":53,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":59,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":136,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":176,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":210,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":200,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":172,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":143,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":82,"org.apache.commons.lang3.text.StrTokenizerTest.test1":179,"org.apache.commons.lang3.text.StrTokenizerTest.test3":181,"org.apache.commons.lang3.text.StrTokenizerTest.test2":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":109,"org.apache.commons.lang3.text.StrTokenizerTest.test8":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":104,"org.apache.commons.lang3.text.StrTokenizerTest.test5":183,"org.apache.commons.lang3.text.StrTokenizerTest.test4":182,"org.apache.commons.lang3.text.StrTokenizerTest.test7":185,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":201,"org.apache.commons.lang3.text.StrTokenizerTest.test6":184,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":160,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":195,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":131,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":55,"org.apache.commons.lang3.ArrayUtilsTest.testToString":178,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":193,"org.apache.commons.lang3.ConversionTest.testLongToHex":203,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":165,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":208,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":67,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":66,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":69,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":107,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":5,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":207,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":161,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":23,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":226,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":119,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":215,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":37,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":135,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":47,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":152}}]
