[{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:330","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:135","sourceCode":"return org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getKey(), java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getValue(), java.util.Map.Entry<?, ?>.getValue()))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:569","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1491","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:667","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n    java.lang.String = null;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"tok","nullText":"tok"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:213","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, null)","type":"CtReturnImpl"},"failures":[9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:774","sourceCode":"if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n    int++;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:283","sourceCode":"java.util.Calendar.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1037","sourceCode":"java.util.Calendar.add(int[][0], 1)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"cal":"val"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6618","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:184","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Range must not be null\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.reflect.MethodUtils:426","failures":[24,25,26],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.apache.commons.lang3.time.DateUtils:373","failures":[27],"status":-1,"binaryOperator":"((java.lang.String.length()) - 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"double--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:286","sourceCode":"double = double","type":"CtAssignmentImpl"},"failures":[28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"x2"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1076","sourceCode":"try {\n    return org.apache.commons.lang3.text.StrTokenizer.cloneReset();\n} catch (final java.lang.CloneNotSupportedException java.lang.CloneNotSupportedException) {\n    return null;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1097","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","type":"CtReturnImpl"},"failures":[30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"cloned"}},{"position":"org.apache.commons.lang3.math.Fraction:936","failures":[],"status":0,"binaryOperator":"((-1) * (int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:302","sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4688","sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","type":"CtThrowImpl"},"failures":[37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:542","sourceCode":"java.util.Collections.java.util.Collections.addAll(java.util.TreeSet<T>, T[])","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:453","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,50,51,52,52,53,53,54,55,55,56,57,58,59,59,60,60,61,62,63,64,65,66,67,67,68,68,69,70,71,72,72,73,74,75,76,76,77,78,79,80,80,81,81,82,82,83,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,99,99,100,101,102,102,103,103,104,104,105,106,106,107,108,108,109,110,111,112,112,113,114,114,115,116,117,117,118,118,119,120,120,121,121,122,123,123],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:373","sourceCode":"return short[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1256","sourceCode":"return short[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","failures":[124,125,126,127],"status":-1,"binaryOperator":"(int > (int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:200","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:730","sourceCode":"return true","type":"CtReturnImpl"},"failures":[128],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:107","sourceCode":"return double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1173","sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(double, double), double)","type":"CtReturnImpl"},"failures":[129,130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:480","sourceCode":"if ((int > 8) || ((int == 8) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[131,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:452","sourceCode":"int += 1000","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:788","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"failures":[133,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"milliseconds":"pos"}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":126,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":66,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":4,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":83,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":109,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":36,"org.apache.commons.lang3.math.FractionTest.testFactory_double":28,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":44,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":127,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":19,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":71,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":7,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":57,"org.apache.commons.lang3.time.DateUtilsTest.testRound":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":68,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":111,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":13,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":42,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":85,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":45,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":6,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":81,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":18,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":35,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":69,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":55,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":135,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":17,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian":38,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":133,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":91,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumDouble":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":96,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":9,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":105,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":67,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":90,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":97,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":29,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":125,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":59,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":106,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":122,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":74,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":131,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":56,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":110,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":60,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":70,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":75,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":65,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":25,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":104,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":61}}]
