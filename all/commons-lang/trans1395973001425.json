[{"failures":[],"variableMapping":{"srcPos":"srcPos","src":"src","length":"srcPos"},"name":"add","transplant":{"sourceCode":"if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:574","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","position":"org.apache.commons.lang3.Conversion:429","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:1688","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long += int","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:417","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2343","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.String.length()) + int","position":"org.apache.commons.lang3.StringUtils:2128","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"list":"list"},"name":"add","transplant":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2541","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.StringUtils:2544","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:340","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (this.int) ; int++) {\n    if ((char[][int]) == char) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2247","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.StringUtils:5133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:874","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final long long = ((long)(int)) - ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:694","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = 15 << int","position":"org.apache.commons.lang3.Conversion:1017","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"value":"tmp","operand":"tmp"},"name":"replace","transplant":{"sourceCode":"short -= short","position":"org.apache.commons.lang3.mutable.MutableShort:159","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short[][int] = short","position":"org.apache.commons.lang3.ArrayUtils:1863","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((float)(int)) / ((float)(int))","position":"org.apache.commons.lang3.math.Fraction:443","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float[][int])) {\n    return java.lang.Float.float;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:915","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:1097","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(\"\\'T\\'HH:mm:ss\")","position":"org.apache.commons.lang3.time.DateFormatUtils:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Double getLeft() {\n        return java.lang.Double.java.lang.Double.valueOf(double);\n    }\n\n    @java.lang.Override\n    public java.lang.Double getRight() {\n        return java.lang.Double.java.lang.Double.valueOf(double);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:389","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > int) {\n    return -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6945","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1612","type":"CtLocalVariableImpl"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:492","type":"CtAssignmentImpl"},"status":-1},{"failures":[12,13],"name":"inlineConstant","inlineConstant":"double double = 1","position":"org.apache.commons.lang3.math.Fraction:267","type":"mutation","status":-1},{"failures":[14],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readStaticField(java.lang.Class<?>, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:275","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(java.lang.Class<?>, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:319","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:229","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!boolean) && (((char >= 'A') && (char <= 'Z')) || ((char >= 'a') && (char <= 'z')))) {\n    int--;\n    break;\n} else {\n    java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:336","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((char[][int]) == char) {\n    if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n        if (int == int) {\n            return false;\n        } \n        if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n            return false;\n        } \n    } else {\n        return false;\n    }\n} ","position":"org.apache.commons.lang3.StringUtils:1885","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<org.apache.commons.lang3.CharRange>.equals(org.apache.commons.lang3.CharSet.java.util.Set<org.apache.commons.lang3.CharRange>)","position":"org.apache.commons.lang3.CharSet:254","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int++) == int) {\n    int = int;\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3135","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","position":"org.apache.commons.lang3.text.StrTokenizer:491","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte == (byte[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2491","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a time zone as a number {@code +/-HHMM}\n * or {@code +/-HH:MM}.<\/p>\n */\nprivate static class TimeZoneNumberRule implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true);\n\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_NO_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false);\n\n    final boolean mColon;\n\n    /** \n     * Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.\n     * \n     * @param colon add colon between HH and MM in the output if {@code true}\n     */\nTimeZoneNumberRule(final boolean colon) {\n        boolean = boolean;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 5;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int));\n        if (int < 0) {\n            java.lang.StringBuffer.append('-');\n            int = -int;\n        } else {\n            java.lang.StringBuffer.append('+');\n        }\n        final int int = int / ((60 * 60) * 1000);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        if (boolean) {\n            java.lang.StringBuffer.append(':');\n        } \n        final int int = (int / (60 * 1000)) - (60 * int);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1167","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:419","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.CharSequence.charAt((int - 1))) == char ? 0 : 1","position":"org.apache.commons.lang3.StringUtils:6802","type":"CtAssignmentImpl"},"status":-2},{"failures":[15,16],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    byte = byte[][int];\n    byte[][int] = byte[][int];\n    byte[][int] = byte;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1615","type":"CtWhileImpl"},"status":-1},{"failures":[17,18],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append('0')","position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:913","type":"CtInvocationImpl"},"status":-1},{"failures":[19],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5639","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; (--int) >= 2 ; ) {\n    java.lang.StringBuffer.append('0');\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:852","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (\"1.4\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.5\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.6\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.7\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.isOSNameMatch(org.apache.commons.lang3.SystemUtils.java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.SystemUtils:1327","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1223","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Double[].int) ; int++) {\n    double[][int] = java.lang.Double[][int].doubleValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3304","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long |= 1 << (E.ordinal())","position":"org.apache.commons.lang3.EnumUtils:148","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (int < 0) {\n    int += 60;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3134","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3765","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Class<java.lang.Character>.equals(java.lang.Class<?>)) {\n    return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>));\n} ","position":"org.apache.commons.lang3.ClassUtils:672","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrLookup<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:920","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","position":"org.apache.commons.lang3.ClassUtils:85","type":"CtInvocationImpl"},"status":-2},{"failures":[20,21,22,23,24],"binaryOperator":"(java.lang.Class<?>.getTypeParameters().int) > 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.reflect.TypeUtils:1750","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Long)","position":"org.apache.commons.lang3.ArrayUtils:5718","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.ArrayUtils:6029","type":"CtAssignmentImpl"},"status":-2},{"failures":[25],"variableMapping":{"hours":"shift","offset":"shift"},"name":"replace","transplant":{"sourceCode":"final int int = (int / (60 * 1000)) - (60 * int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1212","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = 15 << int","position":"org.apache.commons.lang3.Conversion:1017","type":"CtLocalVariableImpl"},"status":-1},{"failures":[26],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(boolean[]);\n} else if (boolean[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(boolean[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3763","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[]","position":"org.apache.commons.lang3.ArrayUtils:494","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[]","position":"org.apache.commons.lang3.ClassUtils:733","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.float += java.lang.Number.floatValue()","position":"org.apache.commons.lang3.mutable.MutableFloat:168","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:342","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int >= (java.lang.Throwable[].int)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:394","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5559","type":"CtReturnImpl"},"status":-2},{"failures":[27],"binaryOperator":"((java.lang.String.length()) / 2) + 1","name":"math","position":"org.apache.commons.lang3.StringUtils:7045","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeField(java.lang.reflect.Field, ((java.lang.Object)(null)), java.lang.Object, boolean)","position":"org.apache.commons.lang3.reflect.FieldUtils:512","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:51","type":"CtReturnImpl"},"status":-2},{"failures":[28,29,30,31],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6077","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:278","type":"CtReturnImpl"},"status":-1},{"failures":[32],"binaryOperator":"((((float[] == null) && (float[] != null)) && ((float[].int) > 0)) || (((float[] == null) && (float[] != null)) && ((float[].int) > 0))) || (((float[] != null) && (float[] != null)) && ((float[].int) != (float[].int)))","name":"removeConditional","position":"org.apache.commons.lang3.ArrayUtils:1354","type":"mutation","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:585","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = ((int) * (int)) + int","position":"org.apache.commons.lang3.builder.HashCodeBuilder:915","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final float float = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class<?>[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MemberUtils:102","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (boolean) == true","position":"org.apache.commons.lang3.mutable.MutableBoolean:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1369","type":"CtReturnImpl"},"status":-2},{"failures":[33],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:140","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentException(java.lang.InterruptedException)","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:219","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"array":"array","valueToFind":"valueToFind","org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","this":"this","tolerance":"valueToFind"},"name":"replace","transplant":{"sourceCode":"return (org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0, double)) != (this.org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2732","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2715","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"pos","this":"this","power":"pos","org.apache.commons.lang3.math.Fraction.ONE":"this"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.math.Fraction;\n} else if (int < 0) {\n    if (int == int) {\n        return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n    } \n    return org.apache.commons.lang3.math.Fraction.invert().pow(-int);\n} else {\n    final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction);\n    if ((int % 2) == 0) {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n    } else {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(org.apache.commons.lang3.math.Fraction);\n    }\n}","position":"org.apache.commons.lang3.math.Fraction:549","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","position":"org.apache.commons.lang3.math.Fraction:346","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1499","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 16","position":"org.apache.commons.lang3.math.NumberUtils:740","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.text.Format.parseObject(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.CompositeFormat:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])","position":"org.apache.commons.lang3.CharSetUtils:111","type":"CtLocalVariableImpl"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.ToStringStyle:994","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6072","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(java.lang.Object)), ((java.lang.annotation.Annotation[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:289","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Date java.util.Date = org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String, new java.text.ParsePosition(0))","position":"org.apache.commons.lang3.time.FastDateParser:281","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())));\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:188","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new boolean[]{ false , false , false , false }","position":"org.apache.commons.lang3.Conversion:223","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(boolean[], java.util.BitSet)))","position":"org.apache.commons.lang3.ArrayUtils:6000","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"-1\"","position":"org.apache.commons.lang3.math.Fraction:937","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:633","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle()","position":"org.apache.commons.lang3.builder.ToStringStyle:106","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:496","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"length"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2780","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Double[].int) ; int++) {\n    double[][int] = java.lang.Double[][int].doubleValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3304","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.StringUtils:4776","type":"CtAssignmentImpl"},"status":0},{"failures":[51],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:5661","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"t":"nShorts","u":"nShorts","v":"nShorts"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    int = -int;\n} else {\n    int = int;\n}","position":"org.apache.commons.lang3.math.Fraction:614","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:725","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) > 0) {\n    java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.substring(0, 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:1127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer(), null, java.lang.Object)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:610","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(org.apache.commons.lang3.time.StopWatch.getSplitTime())","position":"org.apache.commons.lang3.time.StopWatch:433","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:203","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int != 0) && java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt((int - 1))))) {\n    int--;\n}","position":"org.apache.commons.lang3.StringUtils:668","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:626","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"power","this":"this","power":"power"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    if (int == (java.lang.Integer.int)) {\n        return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n    } \n    return org.apache.commons.lang3.math.Fraction.invert().pow(-int);\n} else {\n    final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(this);\n    if ((int % 2) == 0) {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n    } else {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n    }\n}","position":"org.apache.commons.lang3.math.Fraction:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (java.lang.Integer.int)) {\n    return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n} ","position":"org.apache.commons.lang3.math.Fraction:552","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Collections.java.util.Collections.<java.lang.reflect.TypeVariable<?>,java.lang.reflect.Type>emptyMap();\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1364","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.Conversion:884","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(double)--","position":"org.apache.commons.lang3.mutable.MutableDouble:146","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case java.util.Calendar.int :","position":"org.apache.commons.lang3.time.DateUtils:1714","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float","position":"org.apache.commons.lang3.math.NumberUtils:605","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:1504","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2181","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4)","position":"org.apache.commons.lang3.LocaleUtils:195","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:264","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MAX_VALUE":"length","end":"comparison"},"name":"replace","transplant":{"sourceCode":"int = this.int","position":"org.apache.commons.lang3.RandomStringUtils:239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (double[].int) < (double[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:903","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"throwable":"ex"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.Throwable != null) && (!(java.lang.Throwable instanceof java.lang.RuntimeException))) && (!(java.lang.Throwable instanceof java.lang.Error))) {\n    return java.lang.Throwable;\n} else {\n    throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + java.lang.Throwable));\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:144","type":"CtIfImpl"},"status":-2},{"failures":[52,53,54,55],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:727","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? java.math.BigInteger.negate() : java.math.BigInteger","position":"org.apache.commons.lang3.math.NumberUtils:748","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"buffer":"regex"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.time.DurationFormatUtils:502","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.FastDateParser:368","type":"CtInvocationImpl"},"status":-2},{"failures":[56],"variableMapping":{"size":"index","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"this.char[][int++] = 'f'","position":"org.apache.commons.lang3.text.StrBuilder:778","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = 'e'","position":"org.apache.commons.lang3.text.StrBuilder:1590","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 8","position":"org.apache.commons.lang3.Conversion:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 5","position":"org.apache.commons.lang3.time.FastDatePrinter:1187","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"Array element \" + int) + \", \\'\") + java.lang.Object) + \"\\', is neither of type Map.Entry nor an Array\")","name":"math","position":"org.apache.commons.lang3.ArrayUtils:256","type":"mutation","status":-2},{"failures":[],"variableMapping":{"milliseconds":"value","days":"value","org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY":"value"},"name":"add","transplant":{"sourceCode":"long = long / (this.long)","position":"org.apache.commons.lang3.time.DurationFormatUtils:137","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long -= java.lang.Number.longValue()","position":"org.apache.commons.lang3.mutable.MutableLong:170","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:818","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(int[], java.lang.Integer.intValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5551","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String))","position":"org.apache.commons.lang3.ClassUtils:1043","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1228","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte < byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1156","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType);\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType);\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n            if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n                return false;\n            } \n        }\n    }\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:608","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils.Token[], 0, 0, long, long, long, long, long, boolean)","position":"org.apache.commons.lang3.time.DurationFormatUtils:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.concurrent.ThreadFactory","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:481","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have an accessible add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","position":"org.apache.commons.lang3.event.EventUtils:56","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer = new org.apache.commons.lang3.text.StrTokenizer()","position":"org.apache.commons.lang3.text.StrTokenizer:93","type":"CtAssignmentImpl"},"status":-2},{"failures":[57],"variableMapping":{"offset":"acquireCount"},"name":"add","transplant":{"sourceCode":"if (int >= 12) {\n    int -= 12;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1070","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"do {\n    boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()));\n    if (!boolean) {\n        java.lang.Object.wait();\n    } else {\n        (int)++;\n    }\n} while (!boolean )","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:302","type":"CtDoImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2336","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:349","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments()","position":"org.apache.commons.lang3.reflect.TypeUtils:1014","type":"CtLocalVariableImpl"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDateParser:668","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"org.apache.commons.lang3.math.Fraction.ZERO","fraction":"org.apache.commons.lang3.math.Fraction.ZERO"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, true)","position":"org.apache.commons.lang3.math.Fraction:713","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:214","type":"CtReturnImpl"},"status":-2},{"failures":[101,102,103,104,105,106],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:635","type":"CtAssignmentImpl"},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"binaryOperator":"(int < (java.lang.Object[].int))","name":"removeConditional","position":"org.apache.commons.lang3.builder.EqualsBuilder:654","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:1490","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int])","position":"org.apache.commons.lang3.reflect.TypeUtils:1382","type":"CtLocalVariableImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":2,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":126,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":72,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":96,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":21,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":116,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":14,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":71,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":121,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":69,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":97,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":38,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":119,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":81,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":106,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":124,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":95,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownOwnExecutor":29,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":5,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":19,"org.apache.commons.lang3.math.FractionTest.testFactory_double":12,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthFloat":32,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":43,"org.apache.commons.lang3.ConversionTest.testHexToByte":25,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":11,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":36,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":34,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":111,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":27,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":49,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":50,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":98,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":87,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultiplePeriods":57,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":22,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":74,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":9,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":23,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":114,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":30,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":48,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":60,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":103,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":20,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":85,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":107,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":75,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":105,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":41,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":120,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":70,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":18,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":109,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":94,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":62,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":8,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":86,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":91,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":108,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":24,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":92,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":112,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":68,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":54,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":123,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":56,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":51,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":59,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":79,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":65,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":4,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":63,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":122,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":88,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":78,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":31,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":73,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":37,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":66,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":15,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":61,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":17,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":102,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":90,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":110,"org.apache.commons.lang3.time.FastDateParserTest.testParses":77,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":33,"org.apache.commons.lang3.builder.EqualsBuilderTest.testUnrelatedClasses":117,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":35,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":13,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":16,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":42,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShortRange":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":99,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":40,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":118,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":104,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":101,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":39,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":26,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":52,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":44,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":125,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":82,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShort":1,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":46,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":100,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":53,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testPassAfterShutdown":28,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":55}}]
