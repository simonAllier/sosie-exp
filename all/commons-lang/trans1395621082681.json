[{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:165","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:183","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:911","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrLookup:53","sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = ((java.util.Map<java.lang.String, java.lang.String>)(java.util.Map<?, ?>))","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.StrTokenizer:506","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"(int) < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:1481","failures":[],"status":0,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:953","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[41,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1535","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:396","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:381","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"failures":[131,133,134,135,136,137,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:71","sourceCode":"float float = float[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4223","sourceCode":"final short[] short[] = org.apache.commons.lang3.ArrayUtils.((short[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(short[], java.lang.Short.java.lang.Class<java.lang.Short>)))","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:762","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:97","sourceCode":"this.short = short","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableObject:94","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:151","sourceCode":"if (java.lang.String != null) {\n    final java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(java.lang.Throwable, java.lang.String);\n    if (java.lang.Throwable != null) {\n        return java.lang.Throwable;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:924","sourceCode":"return this.char","type":"CtReturnImpl"},"failures":[155,156,157,158,159,160,161,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:769","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1442","sourceCode":"++int","type":"CtUnaryOperatorImpl"},"failures":[163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"append","shift":"append","i":"append"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:300","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.ext.dirs\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:504","sourceCode":"java.lang.StringBuilder = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:671","sourceCode":"java.lang.StringBuilder.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtInvocationImpl"},"failures":[156,157,164,158,165,166,167,168,169,170,160,171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"source"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1499","sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:788","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:295","sourceCode":"if (int == 25) {\n    throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:773","sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[156,174,164,175,158,165,176,166,159,177,178,167,168,179,180,181,169,182,183,170,184,160,185,171,186,187,172,188,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"i":"nestedVarCount"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:140","sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:734","sourceCode":"final long long = 65535L << int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1057","sourceCode":"int -= 15","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1522","sourceCode":"++int","type":"CtUnaryOperatorImpl"},"failures":[189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offset":"append"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:381","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:361","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","type":"CtIfImpl"},"failures":[138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:795","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(org.apache.commons.lang3.SystemUtils.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:780","sourceCode":"char[][int++] = 'l'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:385","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char)","type":"CtAssignmentImpl"},"failures":[190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6734","sourceCode":"throw new java.lang.IllegalArgumentException(\"Strings must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:302","sourceCode":"do {\n    boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()));\n    if (!boolean) {\n        java.lang.Object.wait();\n    } else {\n        (int)++;\n    }\n} while (!boolean )","type":"CtDoImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1115","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[75,103,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:387","sourceCode":"return java.lang.Object == null ? \"\" : java.lang.Object.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:412","sourceCode":"return java.lang.Object == null ? java.lang.String : java.lang.Object.toString()","type":"CtReturnImpl"},"failures":[192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:310","sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:331","sourceCode":"return java.util.List<java.lang.String>.toArray(org.apache.commons.lang3.ArrayUtils.java.lang.String[])","type":"CtReturnImpl"},"failures":[193,194,195],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:422","sourceCode":"return (char >= 32) && (char < 127)","type":"CtReturnImpl"},"failures":[196,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1609","sourceCode":"int int = int < 0 ? 0 : int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:843","sourceCode":"final int int = (255 & (byte[][(int + int)])) << int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"startIndexInclusive":"srcPos"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:792","sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) < long) {\n        long = long[][int];\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:47","sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double);\n}","type":"CtForImpl"},"failures":[198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:417","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1083","sourceCode":"boolean = int > ((int - int) / 2)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:222","sourceCode":"return ((java.util.Comparator<T>.compare(T, T)) > (-1)) && ((java.util.Comparator<T>.compare(T, T)) < 1)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:248","sourceCode":"return (java.util.Comparator<T>.compare(T, T)) == 0","type":"CtReturnImpl"},"failures":[199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testByteToHex":189,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":149,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":95,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":57,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":122,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":133,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":81,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":50,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":94,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsWhitespace":173,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":127,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":97,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":151,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":187,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":174,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":34,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":45,"org.apache.commons.lang3.ConversionTest.testIntToHex":163,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":182,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":191,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":145,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":35,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":178,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":132,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":140,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":141,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":2,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":102,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":158,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":129,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":150,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":44,"org.apache.commons.lang3.ObjectUtilsTest.testToString_ObjectString":192,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":87,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":63,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":116,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":91,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":118,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testStartTimer":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":83,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":161,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":195,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":59,"org.apache.commons.lang3.math.FractionTest.testToProperString":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":33,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":180,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":79,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":188,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":131,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":11,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":170,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":56,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":169,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":119,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":93,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":148,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":123,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":124,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":17,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":103,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":12,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":105,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":181,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":58,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":114,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":165,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":168,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":86,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":197,"org.apache.commons.lang3.text.StrTokenizerTest.test6":23,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":109,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":54,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":154,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":21,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":153,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":6,"org.apache.commons.lang3.RangeTest.testIsStartedBy":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":89,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":27,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":185,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":175,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":183,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":113,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":134,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":155,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":184,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":130}}]
