[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:814","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:368","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((long)(int)) / (int)","position":"org.apache.commons.lang3.math.Fraction:432","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1673","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:138","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(T[])","position":"org.apache.commons.lang3.Validate:629","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double[][int], double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:166","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:692","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Throwable java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(java.lang.Throwable, java.lang.String)","position":"org.apache.commons.lang3.exception.ExceptionUtils:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 4","position":"org.apache.commons.lang3.time.FastDatePrinter:835","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:936","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6142","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array2":"array","this":"this","array1":"array"},"name":"replace","transplant":{"sourceCode":"if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3939","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(float[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5770","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:1645","failures":[1,2,3,4,5,6,7,8],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrLookup<?>.lookup(java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:923","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:6942","type":"CtLocalVariableImpl"},"status":-2},{"failures":[9],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.Double[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.double[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3300","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double[] == null) {\n    return null;\n} else if ((java.lang.Double[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.double[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3298","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float[][int], float);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:190","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)((int % 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:757","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:496","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())))","position":"org.apache.commons.lang3.reflect.MethodUtils:189","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Boolean == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:466","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int[].int) != (int[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:712","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\")","position":"org.apache.commons.lang3.math.Fraction:494","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.reflect.MemberUtils.ACCESS_TEST":"i","modifiers":"i"},"name":"add","transplant":{"sourceCode":"return (int & int) == 0","position":"org.apache.commons.lang3.reflect.MemberUtils:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for ( ; int < (char[].int) ; int++) {\n    if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1369","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:435","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:533","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int <= 0) || (int >= (int))) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasNext()) {\n    return java.lang.String[][(int)++];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:409","type":"CtIfImpl"},"status":-2},{"failures":[10,10,11,11,12,13,14,15,16,17,18,19,20,20],"variableMapping":{"str":"arraySeparator","stripChars":"arraySeparator","org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"i","end":"i"},"name":"add","transplant":{"sourceCode":"while ((int != 0) && ((java.lang.String.indexOf(java.lang.String.charAt((int - 1)))) != int)) {\n    int--;\n}","position":"org.apache.commons.lang3.StringUtils:674","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiNumeric(char))","position":"org.apache.commons.lang3.CharUtils:536","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:366","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object[].getClass().getComponentType().isInstance(java.lang.Object)) {\n    for (int int = int ; int < (java.lang.Object[].int) ; int++) {\n        if (java.lang.Object.equals(java.lang.Object[][int])) {\n            return int;\n        } \n    }\n} ","position":"org.apache.commons.lang3.ArrayUtils:1915","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterString(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:349","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Double.java.lang.Double.valueOf(1.0)","position":"org.apache.commons.lang3.math.NumberUtils:60","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.text.StrBuilder:2050","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"tokenPos":"holder"},"name":"add","transplant":{"sourceCode":"return int > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int & (int)) == (int)","position":"org.apache.commons.lang3.BitField:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = java.lang.Object == null ? org.apache.commons.lang3.text.StrBuilder.getNullText() : java.lang.Object.toString()","position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>(byte[].int)","position":"org.apache.commons.lang3.ArrayUtils:5359","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for ( ; int < (char[].int) ; int++) {\n    if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1369","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1393","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>)) {\n    if (java.lang.annotation.Annotation.java.lang.annotation.Annotation.isAssignableFrom(java.lang.Class<?>)) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(java.lang.Class<?>));\n        java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<? extends java.lang.annotation.Annotation>;\n        break;\n    } \n}","position":"org.apache.commons.lang3.AnnotationUtils:74","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= 0 ; --int) {\n    if ((java.lang.CharSequence.charAt(int)) == int) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:127","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(false)","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:216","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = int >= 6","position":"org.apache.commons.lang3.time.DateUtils:1073","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Custom specialization of the standard JDK {@link java.io.ObjectInputStream}\n * that uses a custom  <code>ClassLoader<\/code> to resolve a class.\n * If the specified <code>ClassLoader<\/code> is not able to resolve the class,\n * the context classloader of the current thread will be used.\n * This way, the standard deserialization work also in web-application\n * containers and application servers, no matter in which of the\n * <code>ClassLoader<\/code> the particular class that encapsulates\n * serialization/deserialization lives. <\/p>\n * \n * <p>For more in-depth information about the problem for which this\n * class here is a workaround, see the JIRA issue LANG-626. <\/p>\n */\nstatic class ClassLoaderAwareObjectInputStream extends java.io.ObjectInputStream {\n    private static final java.util.Map<java.lang.String, java.lang.Class<?>> primitiveTypes = new java.util.HashMap<java.lang.String, java.lang.Class<?>>();\n\n    private final java.lang.ClassLoader classLoader;\n\n    /** \n     * Constructor.\n     * @param in The <code>InputStream<\/code>.\n     * @param classLoader classloader to use\n     * @throws IOException if an I/O error occurs while reading stream header.\n     * @see java.io.ObjectInputStream\n     */\npublic ClassLoaderAwareObjectInputStream(final java.io.InputStream in ,final java.lang.ClassLoader classLoader) throws java.io.IOException {\n        java.io.ObjectInputStream.super(java.io.InputStream);\n        this.java.lang.ClassLoader = java.lang.ClassLoader;\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"byte\", byte.byte);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"short\", short.short);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"int\", int.int);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"long\", long.long);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"float\", float.float);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"double\", double.double);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"boolean\", boolean.boolean);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"char\", char.char);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"void\", void.void);\n    }\n\n    /** \n     * Overriden version that uses the parametrized <code>ClassLoader<\/code> or the <code>ClassLoader<\/code>\n     * of the current <code>Thread<\/code> to resolve the class.\n     * @param desc An instance of class <code>ObjectStreamClass<\/code>.\n     * @return A <code>Class<\/code> object corresponding to <code>desc<\/code>.\n     * @throws IOException Any of the usual Input/Output exceptions.\n     * @throws ClassNotFoundException If class of a serialized object cannot be found.\n     */\n@java.lang.Override\n    protected java.lang.Class<?> resolveClass(final java.io.ObjectStreamClass desc) throws java.io.IOException, java.lang.ClassNotFoundException {\n        final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName();\n        try {\n            return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.ClassLoader);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n            try {\n                return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n            } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n                if (java.lang.Class<?> != null) {\n                    return java.lang.Class<?>;\n                } else {\n                    throw java.lang.ClassNotFoundException;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:284","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new boolean[]{ true , false , false , false }","position":"org.apache.commons.lang3.Conversion:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.toString()","position":"org.apache.commons.lang3.builder.ToStringBuilder:1078","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"prefix":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.util.Collection<?>.toArray())","position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1588","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:391","type":"CtBreakImpl"},"status":-2},{"failures":[21,22],"variableMapping":{"startCutoff":"target","java.util.Calendar.MONDAY":"target"},"name":"replace","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:340","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, -1)","position":"org.apache.commons.lang3.time.DateUtils:1221","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:480","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'd' :","position":"org.apache.commons.lang3.Conversion:191","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += 1000","position":"org.apache.commons.lang3.time.DurationFormatUtils:299","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1439","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.ExtendedMessageFormat:297","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.long += long","position":"org.apache.commons.lang3.mutable.MutableLong:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1100","type":"CtAssignmentImpl"},"status":-2},{"failures":[23],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Character.(java.lang.Character.isUpperCase(java.lang.CharSequence.charAt(int))) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character.(java.lang.Character.isLetterOrDigit(java.lang.CharSequence.charAt(int))) == false) && ((java.lang.CharSequence.charAt(int)) != ' ')) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5957","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.lang3.time.FastDateParser.Strategy[].int) ; ) {\n    final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][int++];\n    org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int));\n}","position":"org.apache.commons.lang3.time.FastDateParser:316","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int[]","position":"org.apache.commons.lang3.ArrayUtils:3119","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"duration":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.trim()","position":"org.apache.commons.lang3.time.DurationFormatUtils:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:6691","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:834","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.util.List<java.lang.String>.size()) - 1","position":"org.apache.commons.lang3.exception.ExceptionUtils:554","type":"CtLocalVariableImpl"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (java.util.Calendar.int)) {\n    return ;\n} ","position":"org.apache.commons.lang3.time.DateUtils:962","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayContentDetail(true)","position":"org.apache.commons.lang3.AnnotationUtils:57","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.lang3.math.Fraction:286","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"java.util.Calendar.SATURDAY":"java.lang.reflect.Modifier.FINAL","startCutoff":"java.lang.reflect.Modifier.FINAL"},"name":"replace","transplant":{"sourceCode":"if (int > (this.java.lang.reflect.Modifier.int)) {\n    int -= 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1211","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.setInt(java.lang.reflect.Field, ((java.lang.reflect.Field.getModifiers()) & (~(java.lang.reflect.Modifier.int))))","position":"org.apache.commons.lang3.reflect.FieldUtils:690","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1292","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    final int int = int;\n    while ((++int) < (int)) {\n        if ((char[][int]) != char) {\n            break;\n        } \n    }\n    final int int = int - int;\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n    int -= int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1702","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.String java.lang.String = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:310","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))","position":"org.apache.commons.lang3.ClassUtils:220","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Double.java.lang.Double.valueOf(org.apache.commons.lang3.mutable.MutableDouble.doubleValue())","position":"org.apache.commons.lang3.mutable.MutableDouble:241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1123","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"threshold":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","m":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return int <= int ? int : -1","position":"org.apache.commons.lang3.StringUtils:6907","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1903","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","cls":"cls"},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:641","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.Class<?>>.addAll(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllSuperclasses(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:930","type":"CtInvocationImpl"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"variableMapping":{"type2":"cls","type":"toClass"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Class<? extends java.lang.annotation.Annotation>.equals(java.lang.Class<? extends java.lang.annotation.Annotation>))) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:133","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:694","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeLiteral:103","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"twoDigitYear":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","startYear":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","trial":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return int >= (this.org.apache.commons.lang3.StringUtils.int) ? int : int + 100","position":"org.apache.commons.lang3.time.FastDateParser:393","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1193","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Throwable == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:456","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.Class<?>.getGenericInterfaces()","position":"org.apache.commons.lang3.reflect.TypeUtils:1051","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.byte -= byte","position":"org.apache.commons.lang3.mutable.MutableByte:159","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Enumeration<?> java.util.Enumeration<?> = java.util.Properties.propertyNames()","position":"org.apache.commons.lang3.text.StrSubstitutor:214","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));","position":"org.apache.commons.lang3.Conversion:260","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Short[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3186","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:1984","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Type == null), \"no owner allowed for top-level %s\", java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1492","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(\"short\", \"S\")","position":"org.apache.commons.lang3.ClassUtils:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(byte[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5325","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.time.DurationFormatUtils:294","failures":[21,89,22,90],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","position":"org.apache.commons.lang3.event.EventUtils:52","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:532","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double[] == double[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int++) == int) {\n    int = int;\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3135","type":"CtIfImpl"},"status":-2},{"failures":[91],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || ((int + int) > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:751","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.NoSuchFieldException java.lang.NoSuchFieldException","position":"org.apache.commons.lang3.reflect.FieldUtils:697","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","position":"org.apache.commons.lang3.reflect.FieldUtils:128","type":"CtLocalVariableImpl"},"status":0},{"failures":[92,93],"variableMapping":{"noMoreMatchesForReplIndex":"noMoreMatchesForReplIndex","i":"i"},"name":"add","transplant":{"sourceCode":"boolean[][int] = true","position":"org.apache.commons.lang3.StringUtils:4789","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((boolean[][int]) || ((java.lang.String[][int]) == null)) || (java.lang.String[][int].isEmpty())) || ((java.lang.String[][int]) == null)) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:4723","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"cls":"toClass"},"name":"add","transplant":{"sourceCode":"return (java.lang.Class<?> != null) && ((java.lang.Class<?>.getEnclosingClass()) != null)","position":"org.apache.commons.lang3.ClassUtils:803","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>)) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:655","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:302","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:215","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"lhs":"rhs","rhs":"rhs"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.NullPointerException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:278","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    throw new java.lang.ClassCastException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:282","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:4955","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrSubstitutor:880","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"objectToTest":"lhs","fieldName":"fieldName","lhs":"rhs","this":"this","rhs":"objectToTest"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object instanceof char[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:822","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:831","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"listeners":"listeners","listener":"listener"},"name":"add","transplant":{"sourceCode":"java.util.List<L>.remove(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:202","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<L>.add(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:180","type":"CtInvocationImpl"},"status":0},{"failures":[94,95,96],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:775","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[97,98,99,100,101,102,103,15,16,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparator(\", \")","position":"org.apache.commons.lang3.AnnotationUtils:63","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:676","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mul\")","position":"org.apache.commons.lang3.math.Fraction:643","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\")","position":"org.apache.commons.lang3.Conversion:1156","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int & (org.apache.commons.lang3.reflect.MemberUtils.int)) == 0","position":"org.apache.commons.lang3.reflect.MemberUtils:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += 24","position":"org.apache.commons.lang3.time.DurationFormatUtils:311","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.int","position":"org.apache.commons.lang3.text.StrBuilder:114","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1954","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(int[], int[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Integer[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Integer[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(int[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:598","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrBuilder:1347","failures":[126],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[127],"variableMapping":{"regex":"sb"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')')","position":"org.apache.commons.lang3.time.FastDateParser:610","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (int >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1438","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{"c":"current"},"name":"add","transplant":{"sourceCode":"char = 'Q'","position":"org.apache.commons.lang3.time.FastDateParser:362","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = 0","position":"org.apache.commons.lang3.CharRange:294","type":"CtAssignmentImpl"},"status":0},{"failures":[128,129],"variableMapping":{"index":"endIndexExclusive"},"name":"replace","transplant":{"sourceCode":"int int = int + 3","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(byte[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1613","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"newSize":"length"},"name":"replace","transplant":{"sourceCode":"final byte[] byte[] = new byte[int]","position":"org.apache.commons.lang3.ArrayUtils:1089","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final byte[] byte[] = new byte[(byte[].int) + (byte[].int)]","position":"org.apache.commons.lang3.ArrayUtils:3826","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"years","lhs":"years","rhs":"years"},"name":"add","transplant":{"sourceCode":"int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:330","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:107","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Package, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:81","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"formatter":"this","timeStyle":"dateStyle","dateStyle":"dateStyle","this":"this","locale":"locale"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Integer == null) {\n    java.text.DateFormat = java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n} else {\n    java.text.DateFormat = java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n}","position":"org.apache.commons.lang3.time.FormatCache:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n} else if (java.lang.Integer == null) {\n    java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n} else {\n    java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n}","position":"org.apache.commons.lang3.time.FormatCache:197","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")","position":"org.apache.commons.lang3.math.Fraction:253","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\")","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:112","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:486","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.ClassPathUtils:83","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:1194","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.SystemUtils:1429","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.util.regex.Matcher.group()","position":"org.apache.commons.lang3.time.FastDateParser:158","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:840","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","falseString":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.length()) > 0","position":"org.apache.commons.lang3.math.NumberUtils:642","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"status":-2},{"failures":[130],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:639","type":"CtReturnImpl"},"status":-1},{"failures":[131,132],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:574","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'c';\n    } else {\n        return '4';\n    }\n} else {\n    if (boolean[][int]) {\n        return '8';\n    } else {\n        return '0';\n    }\n}","position":"org.apache.commons.lang3.Conversion:459","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 'z' + 1","position":"org.apache.commons.lang3.RandomStringUtils:241","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this)","position":"org.apache.commons.lang3.reflect.TypeUtils:260","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch","this":"this","i":"i","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char)","position":"org.apache.commons.lang3.text.WordUtils:469","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n} ","position":"org.apache.commons.lang3.StringUtils:5782","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:725","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:136","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"shift":"y"},"name":"add","transplant":{"sourceCode":"final long long = 65535L << int","position":"org.apache.commons.lang3.Conversion:734","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) - ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:694","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":6,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":113,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":47,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":74,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":108,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":94,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":44,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":106,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":31,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":89,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":110,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":59,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":70,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":122,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":23,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":64,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":90,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":103,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":17,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":96,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":115,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":55,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":65,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":26,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":62,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":12,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":118,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":76,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":45,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":116,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":27,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":68,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":56,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":104,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":121,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":67,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":13,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":71,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":126,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":54,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":86,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":117,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":100,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":34,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":69,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":32,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":40,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":38,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":77,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":1,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":11,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":20,"org.apache.commons.lang3.builder.DiffTest.testGetType":43,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":53,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":19,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":78,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":91,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":52,"org.apache.commons.lang3.builder.DiffTest.testToString":41,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":123,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":114,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":131,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":28,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":73,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":120,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":87,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":119,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":98,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":4,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":42,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":111,"org.apache.commons.lang3.ConversionTest.testIntToHex":127,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":60,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":93,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":58,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":49,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":29,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":112,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":128,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":81,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_NoAutoboxing":35,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":83,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":97,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":5,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":102,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":16,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":8,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":24,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":124,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":82,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":75,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":36,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":33,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":101,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":109,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":63,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":72,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":51,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":66,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":105,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":3,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":30,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":25}}]
