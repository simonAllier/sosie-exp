[{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:816","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1173","sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(double, double), double)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:208","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double, double), double)","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateFormatUtils:42","sourceCode":"java.util.TimeZone.java.util.TimeZone.getTimeZone(\"GMT\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:74","sourceCode":"java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getDefault()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:115","sourceCode":"return 6","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:894","sourceCode":"if (long == long) {\n    return 0;\n} else if (long < long) {\n    return -1;\n} else {\n    return 1;\n}","type":"CtIfImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:268","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterChar(char)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:146","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:149","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:264","sourceCode":"java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:311","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:340","sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(T, java.lang.Class<?>, org.apache.commons.lang3.builder.HashCodeBuilder, boolean, java.lang.String[])","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:772","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"on\", \"off\", null)","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1364","failures":[16],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.apache.commons.lang3.LocaleUtils:125","failures":[17,18,19,20,6],"status":-1,"binaryOperator":"int == 2","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:889","sourceCode":"if ((double[][int]) < double) {\n    double = double[][int];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:48","sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"min":"min","array":"array","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:913","sourceCode":"return true","type":"CtReturnImpl"},"failures":[21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:741","sourceCode":"int = 8","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:124","sourceCode":"int = java.lang.String.indexOf(' ', (int + int))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"radix":"spaceToWrapAt"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:459","sourceCode":"final char[] char[] = new char[(int / 2) + 1]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:251","sourceCode":"final char[] char[] = new char[int]","type":"CtLocalVariableImpl"},"failures":[25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"strLen":"count"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:108","sourceCode":"this.short = java.lang.Number.shortValue()","type":"CtAssignmentImpl"},"failures":[33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:584","sourceCode":"if ((java.lang.String == null) && (java.lang.String == null)) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:527","sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","type":"CtSwitchImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exp":"numeric","dec":"exp","str":"dec","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:879","failures":[34],"status":-1,"binaryOperator":"(int * 8) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:208","sourceCode":"int int = 71 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:926","sourceCode":"final int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object)","type":"CtLocalVariableImpl"},"failures":[35,35,36,36,37,0,38,39,39,40,41,42,43,43,44,45,46,47,47,48,48,49,50,51,52,52,53,53,54,54,55,56,57,57,58,58,59,60,61,62,62,63,64,64,65,66,67,68,69,70,70,71,71,72,73,73,74,75,75,76,77,78,79,79,80,81,82,83,84,84,85,85,86,87,88,89,90,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:444","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, long)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:332","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, char)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:135","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = this.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:126","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nextStrategy":"nextStrategy","currentStrategy":"nextStrategy"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1154","sourceCode":"if (byte < byte) {\n    byte = byte;\n} ","type":"CtIfImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","sourceCode":"if ((java.lang.Class<?> == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","type":"CtIfImpl"},"failures":[92,93,94,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","sourceCode":"int int = int + 2","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:740","sourceCode":"int int = int","type":"CtLocalVariableImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"start"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:555","sourceCode":"return '7'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:641","sourceCode":"return 'a'","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:861","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:914","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delimMatcher":"quoteMatcher","this":"quote"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:834","sourceCode":"return 4","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1079","sourceCode":"return int","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:370","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:942","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[149,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:291","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[150,151,152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2421","sourceCode":"if (int < 0) {\n    return -1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:95","sourceCode":"return int & (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"_mask"}},{"transplant":{"position":"org.apache.commons.lang3.Range:290","sourceCode":"throw new java.lang.NullPointerException(\"Element is null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:411","sourceCode":"throw new java.lang.IllegalStateException((\"found an unhandled type: \" + java.lang.reflect.Type))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:394","sourceCode":"return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:339","sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]))","type":"CtReturnImpl"},"failures":[153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"parentClass":"cls","methodName":"methodName","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:444","sourceCode":"if (boolean[][(int + 2)]) {\n    if (boolean[][(int + 1)]) {\n        if (boolean[][int]) {\n            return 'e';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'a';\n        } else {\n            return '2';\n        }\n    }\n} else {\n    if (boolean[][(int + 1)]) {\n        if (boolean[][int]) {\n            return 'c';\n        } else {\n            return '4';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '8';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:524","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"failures":[155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":39,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":108,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceDisjoint":96,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":50,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderReset":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":76,"org.apache.commons.lang3.math.FractionTest.testFactory_double":150,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":143,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":100,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":101,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":81,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":61,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":44,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":20,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":87,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":78,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":105,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":52,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":48,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":154,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":128,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":132,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":82,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":37,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":2,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":12,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":140,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":139,"org.apache.commons.lang3.math.FractionTest.testPow":3,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":7,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumByte":91,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":117,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":113,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":112,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":115,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":58,"org.apache.commons.lang3.math.FractionTest.testCompareTo":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":111,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParentNullChild":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":72,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullChild":92,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":54,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":146,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":16,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoNamingPattern":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":64,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":152,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":32,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceReverseParentChild":93,"org.apache.commons.lang3.text.StrTokenizerTest.test1":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":144,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":145,"org.apache.commons.lang3.text.StrTokenizerTest.test3":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":47,"org.apache.commons.lang3.text.StrTokenizerTest.test2":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":45,"org.apache.commons.lang3.text.StrTokenizerTest.test8":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":40,"org.apache.commons.lang3.text.StrTokenizerTest.test5":124,"org.apache.commons.lang3.text.StrTokenizerTest.test4":123,"org.apache.commons.lang3.text.StrTokenizerTest.test7":126,"org.apache.commons.lang3.text.StrTokenizerTest.test6":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":89,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":129,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":41,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":34,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":79,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":155,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":75,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":110,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":46,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":5,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":119,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":77,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":43,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":30,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":131,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":68,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuildDefaults":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":0,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParent":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":85,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuilderResetAfterBuild":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":42,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":31,"org.apache.commons.lang3.mutable.MutableShortTest.testGetSet":33,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":153,"org.apache.commons.lang3.math.FractionTest.testToProperString":151,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":6,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":137,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":71,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":104,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":17,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":18,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":148,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":90,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":147,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":21}}]
