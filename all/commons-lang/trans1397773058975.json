[{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((((\"FastDateFormat[\" + (org.apache.commons.lang3.time.FastDatePrinter.getPattern())) + \",\") + (org.apache.commons.lang3.time.FastDatePrinter.getLocale())) + \",\") + (org.apache.commons.lang3.time.FastDatePrinter.getTimeZone().getID())) + \"]\"","position":"org.apache.commons.lang3.time.FastDateFormat:588","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:924","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Integer[].int) ; int++) {\n    int[][int] = java.lang.Integer[][int].intValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3100","type":"CtForImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.AccessibleObject == null) || (java.lang.reflect.AccessibleObject.isAccessible())) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:55","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:1979","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:515","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:456","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:586","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:888","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"quoteLen"},"name":"add","transplant":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.CharSet:197","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int * 2;\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n        continue;\n    } \n    boolean = false;\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:755","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.reflect.MethodUtils:341","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int])","position":"org.apache.commons.lang3.reflect.TypeUtils:1382","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:1399","failures":[],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringBuilder:1009","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"arrayEnd":"duration"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1767","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:200","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"end":"beg"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:2535","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int))","position":"org.apache.commons.lang3.StringUtils:2839","type":"CtInvocationImpl"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:551","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:6696","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:323","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:482","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.toString(), 16)","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:53","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'h' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:491","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1372","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:208","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(3)","position":"org.apache.commons.lang3.BooleanUtils:619","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.text.StrBuilder:2230","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch"},"name":"add","transplant":{"sourceCode":"return (char >= '0') && (char <= '3')","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return java.lang.Character.java.lang.Character.isWhitespace(char);\n} ","position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte == (byte[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2446","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int[].int","position":"org.apache.commons.lang3.ArrayUtils:962","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6503","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5551","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((boolean[].int) - int) < 4) {\n    throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (boolean[].int)) + \", srcPos=\") + int));\n} ","position":"org.apache.commons.lang3.Conversion:407","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1411","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (byte[].int) ; int++) {\n    if ((byte[][int]) > byte) {\n        byte = byte[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1011","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:702","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.String[])","position":"org.apache.commons.lang3.StringUtils:6687","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int ^ (java.lang.Object.hashCode())","position":"org.apache.commons.lang3.AnnotationUtils:250","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"i","nHexs":"lastHold"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1431","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean && (java.lang.String.substring(int).startsWith(org.apache.commons.lang3.text.ExtendedMessageFormat.java.lang.String))) {\n    java.lang.StringBuilder.append(char[], int, ((java.text.ParsePosition.getIndex()) - int)).append(org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n    java.text.ParsePosition.setIndex((int + (org.apache.commons.lang3.text.ExtendedMessageFormat.java.lang.String.length())));\n    int = java.text.ParsePosition.getIndex();\n    continue;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:490","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:633","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 31) + int","position":"org.apache.commons.lang3.ObjectUtils:243","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:487","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)","position":"org.apache.commons.lang3.builder.ToStringBuilder:416","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","position":"org.apache.commons.lang3.text.StrSubstitutor:895","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Byte.java.lang.Byte.parseByte(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return byte;\n}","position":"org.apache.commons.lang3.math.NumberUtils:327","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.String.length()) ; ++int) {\n    char char = java.lang.String.charAt(int);\n    switch (char) {\n        case '\\'' :\n            if (boolean) {\n                if ((++int) == (java.lang.String.length())) {\n                    return java.lang.StringBuilder;\n                } \n                char = java.lang.String.charAt(int);\n            } \n            break;\n        case '\\\\' :\n            if ((++int) == (java.lang.String.length())) {\n                break;\n            } \n            java.lang.StringBuilder.append(char);\n            char = java.lang.String.charAt(int);\n            if (char == 'E') {\n                java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n                char = 'Q';\n            } \n            break;\n        default :\n            break;\n    }\n    java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.FastDateParser:336","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:3147","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.ConstructorUtils:290","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","position":"org.apache.commons.lang3.math.NumberUtils:541","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext = new org.apache.commons.lang3.exception.DefaultExceptionContext()","position":"org.apache.commons.lang3.exception.ContextedException:148","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"toProperString":"toProperString","this":"this","numerator":"numerator","denominator":"numerator"},"name":"add","transplant":{"sourceCode":"if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:934","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:936","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"tokenPos":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return (this.org.apache.commons.lang3.StringUtils.int) - 1","position":"org.apache.commons.lang3.text.StrTokenizer:564","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.Character.(java.lang.Character.isLetter(java.lang.CharSequence.charAt(int))) == false) && ((java.lang.CharSequence.charAt(int)) != ' ')) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5886","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLowerCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6140","type":"CtForImpl"},"status":0},{"failures":[38,39],"variableMapping":{"lhs":"other"},"name":"replace","transplant":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(java.lang.Object))","position":"org.apache.commons.lang3.builder.IDKey:67","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n        boolean = false;\n        break;\n    } \n}","position":"org.apache.commons.lang3.builder.ToStringStyle:413","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n    boolean = false;\n    break;\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:414","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(1)","position":"org.apache.commons.lang3.BooleanUtils:604","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrTokenizer:1061","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:943","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Integer, new org.apache.commons.lang3.mutable.MutableInt(1))","position":"org.apache.commons.lang3.ArrayUtils:5542","type":"CtInvocationImpl"},"status":-2},{"failures":[40],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:567","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:544","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:240","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int)","position":"org.apache.commons.lang3.text.StrBuilder:2883","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.Conversion:520","type":"CtAssignmentImpl"},"status":-2},{"failures":[41,42],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:6404","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.String.length()) - int) < (int - 3)) {\n    int = (java.lang.String.length()) - (int - 3);\n} ","position":"org.apache.commons.lang3.StringUtils:6406","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Long.java.lang.Long.valueOf(long)))","position":"org.apache.commons.lang3.Validate:106","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.concurrent.ConcurrentRuntimeException org.apache.commons.lang3.concurrent.ConcurrentRuntimeException = org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:127","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(char[]))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1537","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\")","position":"org.apache.commons.lang3.Conversion:1688","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:584","type":"CtThrowImpl"},"status":-2},{"failures":[43,44,45,46,47],"variableMapping":{"nBytes":"days","srcPos":"hours"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1292","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int += 24 * int;\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:380","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:935","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String","position":"org.apache.commons.lang3.exception.ExceptionUtils:619","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"in":"in"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream != null) {\n    org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close();\n} ","position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream != null) {\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close();\n    } \n} catch (final java.io.IOException java.io.IOException) {\n    throw new org.apache.commons.lang3.SerializationException(\"IOException on closing cloned object data InputStream.\" , java.io.IOException);\n}","position":"org.apache.commons.lang3.SerializationUtils:104","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:709","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object).isEquals()","position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"mMaxLengthEstimate","length":"mMaxLengthEstimate","index":"mMaxLengthEstimate"},"name":"replace","transplant":{"sourceCode":"if ((int <= 0) || (int >= (this.int))) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.applyRules(java.util.Calendar, new java.lang.StringBuffer(int)).toString()","position":"org.apache.commons.lang3.time.FastDatePrinter:409","type":"CtReturnImpl"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(char[])","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:88","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.ExceptionUtils:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:452","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.center(java.lang.String, int, ' ')","position":"org.apache.commons.lang3.StringUtils:5482","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:398","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrBuilder:2086","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","position":"org.apache.commons.lang3.text.StrTokenizer:816","type":"CtInvocationImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.time.DurationFormatUtils:183","failures":[79],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"HP-UX\")","position":"org.apache.commons.lang3.SystemUtils:971","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"4.9\")","position":"org.apache.commons.lang3.SystemUtils:1202","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.AnnotationUtils:265","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class that acts as a compound key for time zone names.<\/p>\n */\nprivate static class TimeZoneDisplayKey {\n    private final java.util.TimeZone mTimeZone;\n\n    private final int mStyle;\n\n    private final java.util.Locale mLocale;\n\n    /** \n     * Constructs an instance of {@code TimeZoneDisplayKey} with the specified properties.\n     * \n     * @param timeZone the time zone\n     * @param daylight adjust the style for daylight saving time if {@code true}\n     * @param style the timezone style\n     * @param locale the timezone locale\n     */\nTimeZoneDisplayKey(final java.util.TimeZone timeZone ,final boolean daylight ,final int style ,final java.util.Locale locale) {\n        java.util.TimeZone = java.util.TimeZone;\n        if (boolean) {\n            int = int | -2147483648;\n        } else {\n            int = int;\n        }\n        java.util.Locale = java.util.Locale;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        return ((((int) * 31) + (java.util.Locale.hashCode())) * 31) + (java.util.TimeZone.hashCode());\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (this == java.lang.Object) {\n            return true;\n        } \n        if (java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n            final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(java.lang.Object));\n            return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale));\n        } \n        return false;\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1222","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((T = java.util.concurrent.atomic.AtomicReference<T>.get()) == null) {\n    if (java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>>.compareAndSet(null, this)) {\n        java.util.concurrent.atomic.AtomicReference<T>.set(org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>.initialize());\n    } \n}","position":"org.apache.commons.lang3.concurrent.AtomicSafeInitializer:76","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5997","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n    if (java.lang.Class<?> != null) {\n        return java.lang.Class<?>;\n    } else {\n        throw java.lang.ClassNotFoundException;\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:325","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ObjectUtils:129","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-6582182735562919670L","position":"org.apache.commons.lang3.concurrent.ConcurrentRuntimeException:40","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long = java.lang.System.java.lang.System.currentTimeMillis()","position":"org.apache.commons.lang3.time.StopWatch:185","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"found":"found"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5909","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(T[], T, int)","position":"org.apache.commons.lang3.ArrayUtils:5282","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1633","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:735","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array"},"name":"add","transplant":{"sourceCode":"return long[].clone()","position":"org.apache.commons.lang3.ArrayUtils:342","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(long[])","position":"org.apache.commons.lang3.ArrayUtils:5713","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1825","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2079","type":"CtReturnImpl"},"status":-2},{"failures":[80],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"true\", \"false\")","position":"org.apache.commons.lang3.BooleanUtils:833","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"yes\", \"no\", null)","position":"org.apache.commons.lang3.BooleanUtils:793","type":"CtReturnImpl"},"status":-1},{"failures":[81],"variableMapping":{"iTotal":"index","value":"index","iConstant":"index"},"name":"replace","transplant":{"sourceCode":"int = (int * int) + int","position":"org.apache.commons.lang3.builder.HashCodeBuilder:744","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1588","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.EnumUtils.org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class<E>, java.util.Arrays.java.util.Arrays.<E>asList(E[]))","position":"org.apache.commons.lang3.EnumUtils:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:1560","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int >= int) {\n    int = int - 1;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} ","position":"org.apache.commons.lang3.text.WordUtils:295","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.short -= short","position":"org.apache.commons.lang3.mutable.MutableShort:159","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = ((short)((short & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:984","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:478","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2337","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startInclusive":"java.lang.Float.NaN","endInclusive":"java.lang.Float.NaN"},"name":"replace","transplant":{"sourceCode":"if (float == float) {\n    return float;\n} ","position":"org.apache.commons.lang3.RandomUtils:168","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float.float","position":"org.apache.commons.lang3.math.NumberUtils:916","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return this.java.lang.String","position":"org.apache.commons.lang3.NotImplementedException:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.charAt(0))","position":"org.apache.commons.lang3.StringUtils:5312","type":"CtReturnImpl"},"status":-2},{"failures":[82,83,84,85],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return double[].clone()","position":"org.apache.commons.lang3.ArrayUtils:422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(double[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5859","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"message"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","position":"org.apache.commons.lang3.math.Fraction:320","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:154","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.event.EventUtils:51","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[], double, java.lang.Integer.int, double)","position":"org.apache.commons.lang3.ArrayUtils:2635","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char == char) {\n    continue;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.lang3.ArrayUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(false)","position":"org.apache.commons.lang3.AnnotationUtils:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(int[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1753","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService.shutdown()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:330","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int < int) || (((int < (int + 1)) && boolean) && (!boolean))) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        boolean = true;\n        boolean = false;\n    } else if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        boolean = true;\n    } else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        if (boolean) {\n            return false;\n        } \n        if (!boolean) {\n            return false;\n        } \n        boolean = true;\n        boolean = true;\n    } else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n        if (!boolean) {\n            return false;\n        } \n        boolean = false;\n        boolean = false;\n    } else {\n        return false;\n    }\n    int++;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1382","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:435","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((long[].int) != (long[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:681","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Byte[].int) ; int++) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte[][int];\n    byte[][int] = java.lang.Byte == null ? byte : java.lang.Byte.byteValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3258","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:588","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || ((int + int) > (java.lang.String.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:540","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"rangeStyle":"max","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"max","endCutoff":"max","startCutoff":"max","java.util.Calendar.MONDAY":"len","java.util.Calendar.SUNDAY":"max"},"name":"add","transplant":{"sourceCode":"if (int == int) {\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:701","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"startIndexInclusive":"newSize"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:874","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(long[], int, long[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:930","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:201","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:349","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Class<?>.isArray()) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>.getComponentType(), java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))","position":"org.apache.commons.lang3.reflect.TypeUtils:535","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","position":"org.apache.commons.lang3.math.Fraction:173","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5906","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(org.apache.commons.lang3.text.StrBuilder.length()).append(org.apache.commons.lang3.text.StrBuilder)","position":"org.apache.commons.lang3.text.StrSubstitutor:556","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"value"},"name":"add","transplant":{"sourceCode":"this.long = long","position":"org.apache.commons.lang3.mutable.MutableLong:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long += long","position":"org.apache.commons.lang3.mutable.MutableLong:138","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"fieldName":"fieldName","lhs":"rhs","this":"this","rhs":"rhs"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:841","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:835","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:4082","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, (int - 1))","position":"org.apache.commons.lang3.StringUtils:5091","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"out":"out"},"name":"add","transplant":{"sourceCode":"if (java.io.ObjectOutputStream != null) {\n    java.io.ObjectOutputStream.close();\n} ","position":"org.apache.commons.lang3.SerializationUtils:160","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.io.ObjectOutputStream = new java.io.ObjectOutputStream(java.io.OutputStream);\n    java.io.ObjectOutputStream.writeObject(java.io.Serializable);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new org.apache.commons.lang3.SerializationException(java.io.IOException);\n} finally {\n    try {\n        if (java.io.ObjectOutputStream != null) {\n            java.io.ObjectOutputStream.close();\n        } \n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:151","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 5) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy that handles a text field in the parsing pattern\n */\nprivate static class TextStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final int field;\n\n    private final java.util.Map<java.lang.String, java.lang.Integer> keyValues;\n\n    /** \n     * Construct a Strategy that parses a Text field\n     * @param field  The Calendar field\n     * @param definingCalendar  The Calendar to use\n     * @param locale  The Locale to use\n     */\nTextStrategy(final int field ,final java.util.Calendar definingCalendar ,final java.util.Locale locale) {\n        this.int = int;\n        this.java.util.Map<java.lang.String, java.lang.Integer> = org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int, java.util.Calendar, java.util.Locale);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        java.lang.StringBuilder.append('(');\n        for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n            org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|');\n        }\n        java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        final java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer == null) {\n            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String);\n            java.lang.StringBuilder.append(\" not in (\");\n            for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n                java.lang.StringBuilder.append(java.lang.String).append(' ');\n            }\n            java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n            throw new java.lang.IllegalArgumentException(java.lang.StringBuilder.toString());\n        } \n        java.util.Calendar.set(int, java.lang.Integer.intValue());\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:586","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:864","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":17,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":35,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":43,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":65,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":69,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":71,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":67,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":25,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayNegativeIndex":85,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":13,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":81,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArray":84,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringIntInt":42,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":3,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":66,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":22,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":46,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":27,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":58,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":60,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":48,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullDoubleArray":82,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":75,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":16,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":57,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringInt":41,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":39,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":78,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":63,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":19,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":73,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":12,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":33,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":9,"org.apache.commons.lang3.ArrayUtilsTest.testToString":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":51,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":62,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":77,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":55,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":10,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":28,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":38,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":72,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":68,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":11,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":47,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":61,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":7,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":21,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":53,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":50,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllDoubleArrayOutOfBoundsIndex":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":49,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":1,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":45,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":14}}]
