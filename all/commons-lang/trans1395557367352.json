[{"position":"org.apache.commons.lang3.text.StrTokenizer:833","failures":[],"status":0,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:940","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:929","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nHex":"i","dstPos":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:835","sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1160","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    byte = ((byte)((byte & (~int)) | int));\n}","type":"CtForImpl"},"failures":[18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"srcPos","nBytes":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1078","sourceCode":"final int int = java.util.Calendar.getActualMinimum(int[][0])","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1079","sourceCode":"final int int = java.util.Calendar.getActualMaximum(int[][0])","type":"CtLocalVariableImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"val":"val","aField":"aField"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:265","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2783","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"endMatchLen","endIndex":"offset"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:44","sourceCode":"java.lang.Integer.java.lang.Integer.valueOf(-1)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3271","sourceCode":"java.lang.Byte[][int] = java.lang.Byte.java.lang.Byte.valueOf(byte[][int])","type":"CtAssignmentImpl"},"failures":[63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:260","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:769","sourceCode":"final int int = int","type":"CtLocalVariableImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:285","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:203","sourceCode":"throw new java.lang.IllegalArgumentException(\"Time period must be greater 0!\")","type":"CtThrowImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1522","sourceCode":"if ((this.boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:909","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","type":"CtInvocationImpl"},"failures":[65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldNameValueSeparator":"fieldName","fieldName":"fieldName","useFieldNames":"arrayContentDetail"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:976","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSuper(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1399","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"srcPos","shift":"i","i":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:133","sourceCode":"return 11","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:101","sourceCode":"switch (char) {\n    case '0' :\n        return 0;\n    case '1' :\n        return 8;\n    case '2' :\n        return 4;\n    case '3' :\n        return 12;\n    case '4' :\n        return 2;\n    case '5' :\n        return 10;\n    case '6' :\n        return 6;\n    case '7' :\n        return 14;\n    case '8' :\n        return 1;\n    case '9' :\n        return 9;\n    case 'a' :\n    case 'A' :\n        return 5;\n    case 'b' :\n    case 'B' :\n        return 13;\n    case 'c' :\n    case 'C' :\n        return 3;\n    case 'd' :\n    case 'D' :\n        return 11;\n    case 'e' :\n    case 'E' :\n        return 7;\n    case 'f' :\n    case 'F' :\n        return 15;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}","type":"CtSwitchImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:885","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:773","sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"priorVariables":"priorVariables","buf":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1192","sourceCode":"int = int - 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:760","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startCutoff":"trimStart","endCutoff":"trimStart"}},{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:301","inlineConstant":"boolean boolean = false","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.text.WordUtils:332","failures":[74,75],"status":-1,"binaryOperator":"int < (char[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:857","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:941","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:459","failures":[77,78],"status":-1,"binaryOperator":"(int / 2) + 1","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1613","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[79,80,81,82,83,84,85,72,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:131","sourceCode":"if ((java.lang.String.charAt(2)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1748","sourceCode":"while (int > int) {\n    int = int[][int];\n    int[][int] = int[][int];\n    int[][int] = int;\n    int--;\n    int++;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:816","sourceCode":"if ((int[][int]) < int) {\n    int = int[][int];\n} ","type":"CtIfImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"tmp":"j","j":"j","i":"min","array":"array"}},{"position":"org.apache.commons.lang3.ObjectUtils:774","failures":[],"status":0,"binaryOperator":"(int < (java.lang.Byte.byte))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.MapStrLookup:166","sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:180","sourceCode":"return new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V>).replace(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"source"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:131","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n    java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n} ","type":"CtIfImpl"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":1,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":12,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":60,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":20,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_byte":63,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":52,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":0,"org.apache.commons.lang3.time.DateUtilsTest.testRound":23,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":21,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":87,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":28,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":5,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":4,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":19,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":78,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":25,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":59,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":69,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":15,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":47,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":105,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":41,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":92,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":48,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testInitInvalidPeriod":64,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":67,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":75,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":90,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":11,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":73,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":18,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":44,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":56,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":34,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":82,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":68,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":91,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":94,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":100,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":14,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":102,"org.apache.commons.lang3.ArrayUtilsTest.testToString":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":13,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":57,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":32,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":97,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":72,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":89,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":85,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":2,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":61,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":38,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":95,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":55,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":17,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":106}}]
