[{"position":"org.apache.commons.lang3.math.NumberUtils:728","inlineConstant":"int int = 10","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:158","sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(java.lang.Object, java.lang.String, java.lang.Object[], java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:152","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:183","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:287","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1055","inlineConstant":"int int = 0","failures":[44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.time.StopWatch:388","failures":[55],"status":-1,"binaryOperator":"(this.long) - (this.long)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:558","sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:601","sourceCode":"try {\n    if (int <= 7) {\n        final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n        if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n            return java.lang.Float;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[0,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","numeric":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:807","sourceCode":"return org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.mulAndCheck((int / int), (int / int)), org.apache.commons.lang3.math.Fraction.mulPosAndCheck((int / int), (int / int)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:346","sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","type":"CtIfImpl"},"failures":[58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"d1":"pos","fraction":"this","d2":"pos","numerator":"pos","denominator":"pos","this":"this"}},{"position":"org.apache.commons.lang3.Range:233","failures":[61],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:178","sourceCode":"this.float -= float","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:168","sourceCode":"this.float += java.lang.Number.floatValue()","type":"CtOperatorAssignmentImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:243","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Range:297","failures":[73],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:632","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[74,75,76,77,78,79,80,81],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1239","sourceCode":"if (short > short) {\n    short = short;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1115","sourceCode":"if (int < int) {\n    int = int;\n} ","type":"CtIfImpl"},"failures":[82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:79","sourceCode":"if (T == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:523","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"result"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:367","sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[83,84,85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:986","inlineConstant":"int int = 1","failures":[86],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:531","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:516","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[87,87,88,89,90,90,91,92,93,94,95,49,96,97,97,98,99,100,76,101,102,103,104,105,106,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1422","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[109,110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2037","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1844","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1035","sourceCode":"if (int < 0) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1078","sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return int;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"index":"srcPos"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:52","sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","type":"CtEnumImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:82","sourceCode":"private static class EventBindingInvocationHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.Object target;\n\n    private final java.lang.String methodName;\n\n    private final java.util.Set<java.lang.String> eventTypes;\n\n    /** \n     * Creates a new instance of {@code EventBindingInvocationHandler}.\n     * \n     * @param target the target object for method invocations\n     * @param methodName the name of the method to be invoked\n     * @param eventTypes the names of the supported event types\n     */\nEventBindingInvocationHandler(final java.lang.Object target ,final java.lang.String methodName ,final java.lang.String[] eventTypes) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.lang.String = java.lang.String;\n        this.java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n    }\n\n    /** \n     * Handles a method invocation on the proxy object.\n     * \n     * @param proxy the proxy instance\n     * @param method the method to be invoked\n     * @param parameters the parameters for the method invocation\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n            if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n            } else {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n            }\n        } \n        return null;\n    }\n\n    /** \n     * Checks whether a method for the passed in parameters can be found.\n     * \n     * @param method the listener method invoked\n     * @return a flag whether the parameters could be matched\n     */\nprivate boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n        return org.apache.commons.lang3.reflect.MethodUtils.(org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.reflect.Method.getParameterTypes())) != null;\n    }\n}","type":"CtClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:139","sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle = org.apache.commons.lang3.builder.ToStringStyle","type":"CtAssignmentImpl"},"failures":[44,112,113,114,115,74,116,117,104,51,118,119,120,121,78,122,123,52,124,125,126,127,79,128,129,53,130,131,132,133,80,134,135,136,81,137,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:277","sourceCode":"int = ((int)(double / double))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"a2","shift":"a2","i":"a2"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:966","sourceCode":"java.lang.StringBuilder.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:80","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"failures":[63,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"classNameBuffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:846","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1120","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int])","type":"CtInvocationImpl"},"failures":[139,140,141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:112","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:218","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:620","failures":[],"status":-2,"binaryOperator":"(int - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:97","sourceCode":"this.short = short","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:159","sourceCode":"this.short -= short","type":"CtOperatorAssignmentImpl"},"failures":[142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:382","sourceCode":"if (!org.apache.commons.lang3.Range<T>.(isOverlappedBy(org.apache.commons.lang3.Range<T>))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>));\n} ","type":"CtIfImpl"},"failures":[143,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:292","sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on class: \") + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:881","sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(double[])","type":"CtInvocationImpl"},"failures":[146,147],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:304","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.format(java.util.Date)","type":"CtReturnImpl"},"failures":[148,149,150,151,152,153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":83,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":87,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":131,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":19,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":110,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":49,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":100,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":155,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":52,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":125,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":120,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":11,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":154,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":77,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":109,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":75,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":89,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":82,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":97,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":127,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":144,"org.apache.commons.lang3.mutable.MutableFloatTest.testAddValueObject":62,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":133,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":15,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":130,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":60,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":85,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":119,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":76,"org.apache.commons.lang3.RangeTest.testElementCompareTo":73,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":23,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":54,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":34,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":16,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":102,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":3,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":8,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":71,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":78,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":1,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":40,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":53,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":65,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":27,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":74,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":124,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":140,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":50,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":149,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":136,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":92,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":138,"org.apache.commons.lang3.mutable.MutableShortTest.testSubtractValuePrimitive":142,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":17,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":46,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":18,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":111,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":59,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":43,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":151,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":143,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":12,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":152,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":148,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":93,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":57,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":150,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":107,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":123,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":112,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":29,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":26,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":86,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":56,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":121,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":35,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":45,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":37,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":69,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":95,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":39,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":58,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":139,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":14,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":32,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":81,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":135,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":24,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":55,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_emptyArray":146,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":64,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":96,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":66,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":48,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":36,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":70,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":42,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":103,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":67,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":106,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":7,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_nullArray":147,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":9,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":51,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":84,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":91,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":126,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":63,"org.apache.commons.lang3.RangeTest.testIsAfter":61,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":108,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":72,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":41}}]
