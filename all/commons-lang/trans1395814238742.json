[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:939","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2,3],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1795","type":"CtAssignmentImpl"},"status":-1},{"failures":[4],"binaryOperator":"int + 2","name":"math","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:44","type":"mutation","status":-1},{"failures":[5],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (float[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:182","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Integer[].int) ; int++) {\n    final java.lang.Integer java.lang.Integer = java.lang.Integer[][int];\n    int[][int] = java.lang.Integer == null ? int : java.lang.Integer.intValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3122","type":"CtForImpl"},"status":-1},{"failures":[4],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n} ","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:52","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLowerCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6140","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:489","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:762","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2252","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T = org.apache.commons.lang3.concurrent.AtomicInitializer<T>.initialize()","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:85","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character.charValue())","position":"org.apache.commons.lang3.CharUtils:266","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"No such accessible method: \" + java.lang.String) + \"() on object: \")","name":"math","position":"org.apache.commons.lang3.reflect.MethodUtils:128","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A data class for storing the results of the background initialization\n * performed by {@code MultiBackgroundInitializer}. Objects of this inner\n * class are returned by {@link MultiBackgroundInitializer#initialize()}.\n * They allow access to all result objects produced by the\n * {@link BackgroundInitializer} objects managed by the owning instance. It\n * is also possible to retrieve status information about single\n * {@link BackgroundInitializer}s, i.e. whether they completed normally or\n * caused an exception.\n */\npublic static class MultiBackgroundInitializerResults {\n    /** \n     * A map with the child initializers.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> initializers;\n\n    /** \n     * A map with the result objects.\n     */\nprivate final java.util.Map<java.lang.String, java.lang.Object> resultObjects;\n\n    /** \n     * A map with the exceptions.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> exceptions;\n\n    /** \n     * Creates a new instance of {@code MultiBackgroundInitializerResults}\n     * and initializes it with maps for the {@code BackgroundInitializer}\n     * objects, their result objects and the exceptions thrown by them.\n     * \n     * @param inits the {@code BackgroundInitializer} objects\n     * @param results the result objects\n     * @param excepts the exceptions\n     */\nprivate MultiBackgroundInitializerResults(final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> inits ,final java.util.Map<java.lang.String, java.lang.Object> results ,final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> excepts) {\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>;\n        java.util.Map<java.lang.String, java.lang.Object> = java.util.Map<java.lang.String, java.lang.Object>;\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>;\n    }\n\n    /** \n     * Returns the {@code BackgroundInitializer} with the given name. If the\n     * name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the {@code BackgroundInitializer} with this name\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(final java.lang.String name) {\n        return org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n    }\n\n    /** \n     * Returns the result object produced by the {@code\n     * BackgroundInitializer} with the given name. This is the object\n     * returned by the initializer's {@code initialize()} method. If this\n     * {@code BackgroundInitializer} caused an exception, <b>null<\/b> is\n     * returned. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the result object produced by this {@code\n     * BackgroundInitializer}\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic java.lang.Object getResultObject(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a flag whether the {@code BackgroundInitializer} with the\n     * given name caused an exception.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return a flag whether this initializer caused an exception\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic boolean isException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(java.lang.String);\n    }\n\n    /** \n     * Returns the {@code ConcurrentException} object that was thrown by the\n     * {@code BackgroundInitializer} with the given name. If this\n     * initializer did not throw an exception, the return value is\n     * <b>null<\/b>. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the exception thrown by this initializer\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.ConcurrentException getException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a set with the names of all {@code BackgroundInitializer}\n     * objects managed by the {@code MultiBackgroundInitializer}.\n     * \n     * @return an (unmodifiable) set with the names of the managed {@code\n     * BackgroundInitializer} objects\n     */\npublic java.util.Set<java.lang.String> initializerNames() {\n        return java.util.Collections.java.util.Collections.unmodifiableSet(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.keySet());\n    }\n\n    /** \n     * Returns a flag whether the whole initialization was successful. This\n     * is the case if no child initializer has thrown an exception.\n     * \n     * @return a flag whether the initialization was successful\n     */\npublic boolean isSuccessful() {\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.isEmpty();\n    }\n\n    /** \n     * Checks whether an initializer with the given name exists. If not,\n     * throws an exception. If it exists, the associated child initializer\n     * is returned.\n     * \n     * @param name the name to check\n     * @return the initializer with this name\n     * @throws NoSuchElementException if the name is unknown\n     */\nprivate org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n        final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(java.lang.String);\n        if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n            throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String));\n        } \n        return org.apache.commons.lang3.concurrent.BackgroundInitializer<?>;\n    }\n}","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:227","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    if (java.lang.Object == null) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:900","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:877","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.min(double, double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:109","type":"CtReturnImpl"},"status":0},{"failures":[6,6,7,8,9,10,11,11,12,13,14,15,16,17,18],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:537","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:488","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final L L : java.util.List<L>) {\n    java.lang.reflect.Method.invoke(L, java.lang.Object[]);\n}","position":"org.apache.commons.lang3.event.ProxyInvocationHandler:312","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1117","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Short.java.lang.Class<java.lang.Short>.equals(java.lang.Class<?>)) {\n    return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>));\n} ","position":"org.apache.commons.lang3.ClassUtils:678","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Class<?>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.reflect.InheritanceUtils:59","type":"CtLocalVariableImpl"},"status":-2},{"failures":[34,34,35],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:823","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, short)","position":"org.apache.commons.lang3.builder.ToStringBuilder:500","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = \"1\"","position":"org.apache.commons.lang3.math.Fraction:935","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1871","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int < 0) || (int >= (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:343","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)","position":"org.apache.commons.lang3.builder.ToStringBuilder:416","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n    int++;\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:784","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 4","position":"org.apache.commons.lang3.time.PaddedNumberField:835","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?> == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"float += 0.1F","position":"org.apache.commons.lang3.reflect.MemberUtils:172","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:73","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Object.toString()","position":"org.apache.commons.lang3.text.MapStrLookup:169","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringBuilder:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (long[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:339","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.lang.String.substring(int, int)","position":"org.apache.commons.lang3.builder.ToStringStyle:360","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"T T = null","position":"org.apache.commons.lang3.ObjectUtils:581","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(int)","position":"org.apache.commons.lang3.builder.ToStringStyle:690","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1395","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.lang3.time.FastDatePrinter:334","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1655","type":"CtAssignmentImpl"},"status":-2},{"failures":[36,37,37,23,24,38,39,40,41,42,43,43,44,45,46,47,48,49,49,25,50,51,26,52,53,54,55,55,27,56,57,58,59,11,28,60,61,62,63,64,65,66,67,68,69,70,1,71,72],"variableMapping":{"fieldName":"fieldName","this":"this","buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:498","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:502","type":"CtIfImpl"},"status":-1},{"failures":[0,1,2,3],"variableMapping":{"namingPattern":"arraySeparator"},"name":"replace","transplant":{"sourceCode":"this.java.lang.String = null","position":"org.apache.commons.lang3.concurrent.Builder:364","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1795","type":"CtAssignmentImpl"},"status":-1},{"failures":[73,74,75,36,6,7,8,9,76,77,78,79,80,81,34,19,20,21,82,22,83,84,85,23,24,44,46,47,48,49,25,26,52,55,27,56,58,59,11,28,63,64,65,67,29,86,87,12,88,30,89,68,90,91,92,13,93,94,95,14,96,70,97,98,99,15,100,101,1,102,2,3,16,103,104,71,105,106,107,17,108,109,72,31,110,111,18,32,33,112],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:380","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:1535","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"val":"result"},"name":"replace","transplant":{"sourceCode":"if (T != null) {\n    return T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.concurrent.LazyInitializer:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.text.StrMatcher.NoMatcher()","position":"org.apache.commons.lang3.text.StrMatcher:71","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vm.name\")","position":"org.apache.commons.lang3.SystemUtils:558","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.<T>wrap(((java.lang.reflect.Type)(java.lang.Class<T>)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short)","position":"org.apache.commons.lang3.builder.ToStringStyle:705","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char != (org.apache.commons.lang3.CharUtils.char)) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:5016","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:67","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1417","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:711","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","position":"org.apache.commons.lang3.time.DateUtils:1169","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:277","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(0, int)","position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:665","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.StrBuilderTokenizer:2833","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.CharUtils:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:589","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1278","type":"CtIfImpl"},"status":-2},{"failures":[113],"binaryOperator":"((double)(long)) / ((double)(long))","name":"math","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:361","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1575","type":"CtReturnImpl"},"status":-2},{"failures":[1,114,102,2,3,16,103,104],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setUseShortClassName(boolean)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:90","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(byte[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5325","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:361","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"maxWidth":"length"},"name":"add","transplant":{"sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","position":"org.apache.commons.lang3.StringUtils:6397","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:184","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n} ","position":"org.apache.commons.lang3.concurrent.LazyInitializer:100","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte)","position":"org.apache.commons.lang3.builder.ToStringBuilder:573","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.String.length()) != 0) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1340","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5850","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.tuple.MutablePair<L, R>(L , R)","position":"org.apache.commons.lang3.tuple.MutablePair:53","type":"CtReturnImpl"},"status":-2},{"failures":[74,115,65],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1305","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1061","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int & (~(int))","position":"org.apache.commons.lang3.BitField:179","type":"CtReturnImpl"},"status":-2},{"failures":[116,117],"variableMapping":{"lhs":"other"},"name":"replace","transplant":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(java.lang.Object))","position":"org.apache.commons.lang3.builder.IDKey:67","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"short short = short","position":"org.apache.commons.lang3.Conversion:876","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:430","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, ((int) - int))","position":"org.apache.commons.lang3.text.StrBuilder:1671","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:81","type":"CtReturnImpl"},"status":-2},{"failures":[76,34,39,48],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(short)","position":"org.apache.commons.lang3.builder.ToStringStyle:718","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 5","position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1187","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:60","type":"CtReturnImpl"},"status":-2},{"failures":[19],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:734","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:222","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"a","b":"b","c":"b","this":"this"},"name":"add","transplant":{"sourceCode":"return java.lang.Math.min(java.lang.Math.min(double, double), double)","position":"org.apache.commons.lang3.math.NumberUtils:1175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.min(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.nio.charset.Charset.java.nio.charset.Charset.isSupported(java.lang.String);\n} catch (final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException) {\n    return false;\n}","position":"org.apache.commons.lang3.CharEncoding:98","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return '7'","position":"org.apache.commons.lang3.Conversion:659","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:595","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"length","srcPos":"length"},"name":"replace","transplant":{"sourceCode":"assert ((int - 1) * 1) < (16 - int)","position":"org.apache.commons.lang3.Conversion:1626","type":"CtAssertImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:41","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.BooleanUtils:603","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object, java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:863","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"b","b":"a","c":"b","this":"this"},"name":"add","transplant":{"sourceCode":"return java.lang.Math.min(java.lang.Math.min(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1191","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(float, float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:261","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((byte[].int) != (byte[].int)) {\n    int = (byte[].int) < (byte[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:862","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.InterruptedException java.lang.InterruptedException","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:216","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"toAppendTo"},"name":"add","transplant":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.builder.ToStringBuilder:1031","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.text.Format.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)","position":"org.apache.commons.lang3.text.CompositeFormat:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.4\")","position":"org.apache.commons.lang3.SystemUtils:895","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:803","type":"CtReturnImpl"},"status":-2},{"failures":[118,119],"binaryOperator":"(float[].int) == 0","name":"negateConditional","position":"org.apache.commons.lang3.math.IEEE754rUtils:184","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(T[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5233","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.CharSequence.toString().lastIndexOf(java.lang.CharSequence.toString(), int)","position":"org.apache.commons.lang3.CharSequenceUtils:145","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((java.lang.CharSequence.charAt(int)) == '\\\\') && (int > 0)) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt((int + 1))))) {\n    int int = int + 1;\n    int int = int + 2;\n    int int = int + 3;\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n    if ((int > 1) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n        java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n        if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n            java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n        } \n    } \n    java.io.Writer.write(java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString(), 8));\n    return 1 + (java.lang.StringBuilder.length());\n} ","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:42","type":"CtIfImpl"},"status":-2},{"failures":[120,73,74,36,6,7,76,77,78,80,82,84,85,46,48,49,55,56,58,11,65,67,86,87,12,68,91,92,13,69,121,122,14,70,98,99,15,1,2,3,16,71,106,107,17,72,110,111,18],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:1453","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, java.lang.Object, null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:472","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"(((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \")","name":"math","position":"org.apache.commons.lang3.time.FastDateParser:286","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSuper(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringBuilder:976","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '3'","position":"org.apache.commons.lang3.Conversion:569","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.charValue()","position":"org.apache.commons.lang3.CharUtils:133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.String(char[]).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5437","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:1453","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.validateIndex(int)","position":"org.apache.commons.lang3.text.StrBuilder:1574","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:760","type":"CtInvocationImpl"},"status":-2},{"failures":[123,124],"name":"returnValue","position":"org.apache.commons.lang3.reflect.InheritanceUtils:55","type":"mutation","return":"return 0","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new java.util.concurrent.atomic.AtomicReference<T>()","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:69","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = (java.lang.String.length()) - 1 ; int >= 0 ; int--) {\n    if ((java.lang.String.charAt(int)) != '0') {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:637","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.nio.charset.Charset.java.nio.charset.Charset.isSupported(java.lang.String);\n} catch (final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException) {\n    return false;\n}","position":"org.apache.commons.lang3.CharEncoding:98","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:930","type":"CtInvocationImpl"},"status":-2},{"failures":[118],"variableMapping":{"startInclusive":"a","endInclusive":"a"},"name":"add","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(double, double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:227","type":"CtReturnImpl"},"status":-1},{"failures":[77,22,84,45,125,93,96,100,103,108,32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:858","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:3096","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.StrMatcher.TrimMatcher()","position":"org.apache.commons.lang3.text.StrMatcher:55","type":"CtNewClassImpl"},"status":-2},{"failures":[80,50,56],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1179","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrTokenizer:848","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nBytes":"length","srcPos":"length"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1238","type":"CtForImpl"},"status":-2},{"failures":[77,84,45],"variableMapping":{"fieldName":"fieldName","this":"this","detail":"detail","buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:543","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:550","type":"CtIfImpl"},"status":-1},{"failures":[120,126,127,128,129,130,131,132,133,134,134,73,73,135,135,136,74,74,75,75,36,36,6,6,7,7,8,8,9,9,10,10,76,76,77,77,78,78,79,79,80,80,137,137,138,138,139,139,81,81,34,34,35,35,19,19,20,20,21,21,140,140,82,82,141,141,22,22,115,115,142,142,83,83,84,84,85,85,143,143,144,144,37,37,23,23,24,24,38,38,39,39,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,25,25,50,50,51,51,26,26,52,52,53,54,54,55,55,27,27,56,56,57,57,58,58,59,59,11,11,28,28,60,60,61,61,62,63,63,64,64,65,65,66,66,67,145,29,86,87,12,88,30,146,147,148,149,150,151,152,153,154,155,156,157,158,159,89,125,68,160,90,91,92,13,93,94,69,161,95,121,122,14,96,162,70,163,97,98,99,15,100,101,1,114,102,2,3,16,103,104,71,164,105,106,107,17,108,109,72,165,31,110,111,18,32,33,112],"variableMapping":{"this":"object"},"name":"replace","transplant":{"sourceCode":"java.lang.Object.notifyAll()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.(isUseIdentityHashCode()) && (java.lang.Object != null)) {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object);\n    java.lang.StringBuffer.append('@');\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1469","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int))","position":"org.apache.commons.lang3.text.StrBuilder:1557","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutorService) == null) {\n    java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor();\n} else {\n    java.util.concurrent.ExecutorService = null;\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:181","type":"CtIfImpl"},"status":-2},{"failures":[120,75,36,6,7,8,9,140,142,83,143,144,23,24,38,43,44,25,26,52,57,11,28,60,61,63,64,67,12,88,30,146,147,148,149,150,151,152,153,154,155,156,89,125,68,13,93,94,69,14,96,162,70,15,100,101,1,16,103,104,71,17,108,109,72,18,32,33,112],"variableMapping":{"buffer":"buffer","object":"value"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:344","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:595","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, char)","position":"org.apache.commons.lang3.builder.ToStringBuilder:332","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup<java.lang.String> = org.apache.commons.lang3.text.StrLookup<java.lang.String>","position":"org.apache.commons.lang3.text.StrLookup:58","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup<java.lang.String> = new org.apache.commons.lang3.text.StrLookup.MapStrLookup<java.lang.String>(null)","position":"org.apache.commons.lang3.text.StrLookup:48","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1794","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove()","position":"org.apache.commons.lang3.builder.ToStringStyle:213","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 16) + int","position":"org.apache.commons.lang3.Conversion:1230","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.reflect.InheritanceUtils:62","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":59,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":28,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":84,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":94,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":78,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":95,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":105,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":80,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":17,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":22,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":38,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":103,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":146,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":149,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":137,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":89,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":156,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":151,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":143,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":49,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":153,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":116,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":61,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":158,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":37,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int_int":5,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":135,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":52,"org.apache.commons.lang3.ArrayUtilsTest.testToString":120,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":121,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":122,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":136,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":29,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":1,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":19,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqualObject":124,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":3,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":55,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":51,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAverageCallsPerPeriod":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":85,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":102,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":0,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":134,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":36,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":23,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":164,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":40,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":90,"org.apache.commons.lang3.text.StrTokenizerTest.test8":133,"org.apache.commons.lang3.text.StrTokenizerTest.test5":130,"org.apache.commons.lang3.text.StrTokenizerTest.test4":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":76,"org.apache.commons.lang3.text.StrTokenizerTest.test7":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":42,"org.apache.commons.lang3.text.StrTokenizerTest.test6":131,"org.apache.commons.lang3.text.StrTokenizerTest.test1":126,"org.apache.commons.lang3.text.StrTokenizerTest.test3":128,"org.apache.commons.lang3.text.StrTokenizerTest.test2":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":139,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":159,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":6,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":162,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":142,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":16,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":81,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":45,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":4,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":155,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":107,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":148,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":74,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":21,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":70,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":83,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":62,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":35,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":117,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":138,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":13,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":99,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":145,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":20,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":93,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":111,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":125,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":9,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqual":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":73,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":64,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":163,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":67}}]
