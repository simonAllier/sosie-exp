[{"position":"org.apache.commons.lang3.text.StrTokenizer:644","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"(int < int)","name":"negateConditional","type":"mutation"},{"position":"org.apache.commons.lang3.math.NumberUtils:1221","failures":[],"status":0,"binaryOperator":"int > int","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.Range:246","failures":[50],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1441","sourceCode":"return false","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:305","sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:206","sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","type":"CtIfImpl"},"failures":[52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1186","sourceCode":"return 5","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","sourceCode":"java.lang.String java.lang.String = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:215","sourceCode":"final java.lang.String java.lang.String = ((java.lang.String)(java.util.Enumeration<?>.nextElement()))","type":"CtLocalVariableImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:269","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:584","sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:212","sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:54","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return 0;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return java.lang.Float.float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1295","sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:333","sourceCode":"boolean = !boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:469","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inLiteral":"lastWasGap"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:811","sourceCode":"break","type":"CtBreakImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:256","sourceCode":"char[] = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:531","sourceCode":"return org.apache.commons.lang3.math.Fraction.negate()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:558","sourceCode":"if ((int % 2) == 0) {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n} else {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n}","type":"CtIfImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:942","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1076","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[62,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1393","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1368","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:310","sourceCode":"if ((++int) == (java.lang.String.length())) {\n    return java.lang.StringBuilder;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:309","sourceCode":"if (boolean) {\n    if ((++int) == (java.lang.String.length())) {\n        return java.lang.StringBuilder;\n    } \n    char = java.lang.String.charAt(int);\n} ","type":"CtIfImpl"},"failures":[65,66,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"regex","value":"value","i":"i"}},{"position":"org.apache.commons.lang3.BitField:39","inlineConstant":"int int = 0","failures":[69,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5678","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:207","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:577","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:256","sourceCode":"if (char[] == null) {\n    char = ((char)((java.util.Random.nextInt(int)) + int));\n} else {\n    char = char[][((java.util.Random.nextInt(int)) + int)];\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:259","sourceCode":"char = char[][((java.util.Random.nextInt(int)) + int)]","type":"CtAssignmentImpl"},"failures":[74,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"start":"gap","random":"random","chars":"chars","ch":"ch","gap":"start"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:558","sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:544","sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","numeric":"numeric","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":49,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":11,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":56,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":76,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":0,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":66,"org.apache.commons.lang3.text.StrTokenizerTest.test1":23,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":3,"org.apache.commons.lang3.text.StrTokenizerTest.test3":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":4,"org.apache.commons.lang3.text.StrTokenizerTest.test2":24,"org.apache.commons.lang3.text.StrTokenizerTest.test8":30,"org.apache.commons.lang3.BitFieldTest.testGetValue":69,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":10,"org.apache.commons.lang3.text.StrTokenizerTest.test5":27,"org.apache.commons.lang3.text.StrTokenizerTest.test4":26,"org.apache.commons.lang3.text.StrTokenizerTest.test7":29,"org.apache.commons.lang3.text.StrTokenizerTest.test6":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":37,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":39,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":67,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumFloat":58,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":8,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":21,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":63,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":6,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":57,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":31,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":35,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":13,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":41,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":65,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":54,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":64,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":22,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":68,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":51,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":5,"org.apache.commons.lang3.RangeTest.testIsStartedBy":50,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":42,"org.apache.commons.lang3.ObjectUtilsTest.testMode":73,"org.apache.commons.lang3.math.FractionTest.testPow":60,"org.apache.commons.lang3.BitFieldTest.testSetValue":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":19,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":14,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":71,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":40,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":77,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":55,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":7,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":75,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":61,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":2,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":9}}]
