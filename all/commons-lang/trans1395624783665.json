[{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:355","sourceCode":"return java.util.Arrays.hashCode(((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:361","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"o","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:706","sourceCode":"return org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)) == (java.lang.Boolean.java.lang.Boolean)","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:487","sourceCode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n    }\n} else if (java.lang.Object instanceof long[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,8,9,10,11,12,13,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1408","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:421","sourceCode":"java.util.regex.Pattern.compile(\"D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|\\'\\'|\\'[^\\']++(\\'\\'[^\\']*+)*+\\'|[^\\'A-Za-z]++\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:145","sourceCode":"java.util.regex.Pattern = java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.StringBuilder.toString())","type":"CtAssignmentImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"parsePattern"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:511","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:440","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.DAY_OF_YEAR_STRATEGY"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:114","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1197","sourceCode":"int[][(int + int)] = ((int)(-1 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"initialCapacity":"shift","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"i"}},{"position":"org.apache.commons.lang3.math.Fraction:281","failures":[62,63,64],"status":-1,"binaryOperator":"(int * int) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1093","sourceCode":"if ((org.apache.commons.lang3.text.StrTokenizer.char[]) != null) {\n    org.apache.commons.lang3.text.StrTokenizer.char[] = org.apache.commons.lang3.text.StrTokenizer.char[].clone();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cloned":"cloned"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:793","sourceCode":"if (boolean) {\n    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n} ","type":"CtIfImpl"},"failures":[65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"varNameExpr"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1421","failures":[67,67,68,68,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,13,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"int < (boolean[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1553","sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:220","sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","type":"CtIfImpl"},"failures":[95,96,62,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"denominator","nBools":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1069","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Float.NaN":"max"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:274","sourceCode":"if (org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.Object.getClass(), java.lang.Object.getClass())) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:236","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableLong) {\n    return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue());\n} ","type":"CtIfImpl"},"failures":[98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:620","sourceCode":"int = (int - int) / 2","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1052","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"v":"dstPos","u":"i","t":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:1121","sourceCode":"java.lang.String = java.lang.String.substring(1, (java.lang.String.endsWith(\";\") ? (java.lang.String.length()) - 1 : java.lang.String.length()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2003","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"className":"sizeStartText"}},{"position":"org.apache.commons.lang3.BooleanUtils:725","failures":[101],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:118","sourceCode":"return false","type":"CtReturnImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1687","sourceCode":"if (int > 16) {\n    throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:289","sourceCode":"java.text.ParsePosition.setIndex((int + (java.util.regex.Matcher.end())))","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nBytes":"offset"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1396","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.StopWatch:367","failures":[104],"status":-1,"binaryOperator":"org.apache.commons.lang3.time.StopWatch.(getSplitNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:387","sourceCode":"return java.util.Date","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:538","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2127","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,65,121,122,123,124,125,126,66,127,128,129,130,131,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndex":"lengthChange","endIndex":"length"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1337","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:561","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,8,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:138","sourceCode":"return false","type":"CtReturnImpl"},"failures":[133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:931","sourceCode":"if ((java.lang.String) == null) {\n    if ((int) == 0) {\n        java.lang.String = \"0\";\n    } else if ((int) == (int)) {\n        java.lang.String = \"1\";\n    } else if ((int) == ((-1) * (int))) {\n        java.lang.String = \"-1\";\n    } else if (((int) > 0 ? -(int) : int) < (-(int))) {\n        final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n        if (int == 0) {\n            java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n        } else {\n            java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n        }\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numerator":"numerator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:462","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.String.charAt(int);\n    if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n        boolean = true;\n    } else if (boolean) {\n        char[][int++] = char;\n        boolean = false;\n    } else {\n        continue;\n    }\n}","type":"CtForImpl"},"failures":[135,136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:67","sourceCode":"new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(\"\\'\\\"\".toCharArray())","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1244","sourceCode":"if (java.lang.String != null) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1408","sourceCode":"if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    return boolean;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1557","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:134","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"${\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1099","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[110,114,118,65,124,125,126,66,137,132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:430","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int[], null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:677","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double[], null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":56,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":41,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":81,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":133,"org.apache.commons.lang3.math.FractionTest.testFactory_double":62,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":6,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":86,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":124,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":3,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":8,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":83,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":100,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":129,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":108,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":136,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":4,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":130,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":87,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":88,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":99,"org.apache.commons.lang3.math.FractionTest.testPow":96,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":39,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":14,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":15,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":58,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":121,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":19,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":50,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":112,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":107,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":69,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":64,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":101,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":38,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":10,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":111,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":102,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":127,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":105,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":9,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":93,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":20,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":23,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":30,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":84,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":32,"org.apache.commons.lang3.ConversionTest.testLongToHex":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":80,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":128,"org.apache.commons.lang3.math.FractionTest.testMultiply":97,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":106,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":90,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":26,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":71,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":104,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":132,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":31,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":37,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":113,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":92,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":118,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":110,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":115,"org.apache.commons.lang3.math.FractionTest.testToProperString":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":65,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":94,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":36}}]
