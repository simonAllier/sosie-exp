[{"transplant":{"position":"org.apache.commons.lang3.Conversion:695","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1332","sourceCode":"byte[][(int + int)] = ((byte)(255 & (int >> int)))","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:347","sourceCode":"throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:219","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:156","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Float.NaN":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:490","sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:450","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32)","type":"CtLocalVariableImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1555","sourceCode":"java.lang.StringBuffer.append(int)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:614","sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:560","sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"allZeros":"allZeros","d":"d"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:760","sourceCode":"final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\")","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:460","sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:695","failures":[63],"status":-1,"binaryOperator":"(int * 32)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:266","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:230","sourceCode":"if ((char[] != null) && ((char[].int) == 0)) {\n    throw new java.lang.IllegalArgumentException(\"The chars array must not be empty\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:559","sourceCode":"return org.apache.commons.lang3.math.Fraction.pow((int / 2))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:561","sourceCode":"return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this)","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:912","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final long long = (15L & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final long long = 15L << int;\n    long = (long & (~long)) | long;\n}","type":"CtForImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:551","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:516","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[12,12,13,14,45,45,46,47,48,66,49,50,51,52,52,53,54,55,8,56,57,58,67,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:495","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:558","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n}","type":"CtIfImpl"},"failures":[68,4,69,70,71,5,72,73,74,6,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,7,7,91,91,92,92,93,93,94,94,95,96,97,98,12,13,14,15,16,17,18,19,20,21,22,22,23,99,99,24,25,26,26,27,27,28,29,30,30,31,31,32,33,33,34,34,35,35,36,100,101,102,37,37,38,38,39,40,41,42,43,44,44,45,46,47,47,48,48,66,49,50,51,52,53,53,54,55,8,8,56,56,57,57,58,58,67,59,59,60,60,61,62,103,9,104,105,106,10,107,108,109,11,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:649","sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:646","sourceCode":"int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>)","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:518","sourceCode":"java.lang.Class<?>[] = java.lang.Class<?>[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:123","sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"classArray":"parameterTypes","org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:528","sourceCode":"if ((int) >= 0) {\n    return this;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:515","sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , int)","type":"CtReturnImpl"},"failures":[122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numerator":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:166","sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double[][int], double)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:191","sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float[][int], float)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:382","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:391","sourceCode":"boolean = java.lang.Character.java.lang.Character.isWhitespace(char)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1196","failures":[124],"status":-1,"binaryOperator":"(int * 32)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1967","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:265","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:927","inlineConstant":"int int = 0","failures":[13,14,18,22,25,26,30,31,32,35,36,37,39,45,46,48,49,53,57,58,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:702","sourceCode":"if ((int < 0) || ((int + int) > (org.apache.commons.lang3.text.StrBuilder.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:838","sourceCode":"if (java.lang.String != null) {\n    final int int = java.lang.String.length();\n    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n    boolean = true;\n    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n    int = (int + int) - (int - int);\n    int += int;\n    int += int;\n    int += int;\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n} ","type":"CtIfImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndex":"lengthChange","str":"buf","length":"startPos"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:730","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:770","failures":[153],"status":-1,"binaryOperator":"(65535 & (short[][(int + int)])) << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:43","sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"count":"nestedVarCount","bit_pattern":"nestedVarCount"}},{"position":"org.apache.commons.lang3.math.NumberUtils:728","inlineConstant":"int int = 10","failures":[154,155],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1389","sourceCode":"if (!boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1399","sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","type":"CtIfImpl"},"failures":[156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5453","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:510","sourceCode":"org.apache.commons.lang3.builder.ReflectionToStringBuilder.reflectionAppendArray(org.apache.commons.lang3.builder.ToStringBuilder.getObject())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:490","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:889","sourceCode":"if ((double[][int]) < double) {\n    double = double[][int];\n} ","type":"CtIfImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numerator":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:352","sourceCode":"return org.apache.commons.lang3.math.Fraction.getFraction(int, int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:558","sourceCode":"if ((int % 2) == 0) {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n} else {\n    return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n}","type":"CtIfImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"denom":"power","numer":"power","this":"f"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:975","sourceCode":"if (java.lang.String != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSuper(java.lang.StringBuffer, java.lang.String);\n} ","type":"CtIfImpl"},"failures":[70,73,76,56,105,108,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:452","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[158,159],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToLong":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":28,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":55,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":82,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":17,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":143,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":5,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":96,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":7,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":27,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":52,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":3,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":30,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":126,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":159,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":8,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":6,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":150,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":89,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":56,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":57,"org.apache.commons.lang3.math.FractionTest.testPow":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":9,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":157,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":155,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":0,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":134,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":36,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":71,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":140,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":73,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":13,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":35,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":88,"org.apache.commons.lang3.text.StrTokenizerTest.test1":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":129,"org.apache.commons.lang3.text.StrTokenizerTest.test3":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":25,"org.apache.commons.lang3.text.StrTokenizerTest.test2":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":99,"org.apache.commons.lang3.RangeTest.testToString":2,"org.apache.commons.lang3.math.FractionTest.testSubtract":122,"org.apache.commons.lang3.text.StrTokenizerTest.test8":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":19,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":127,"org.apache.commons.lang3.text.StrTokenizerTest.test5":118,"org.apache.commons.lang3.text.StrTokenizerTest.test4":117,"org.apache.commons.lang3.text.StrTokenizerTest.test7":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":91,"org.apache.commons.lang3.text.StrTokenizerTest.test6":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":105,"org.apache.commons.lang3.math.FractionTest.testNegate":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":20,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":90,"org.apache.commons.lang3.ArrayUtilsTest.testToString":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":148,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":95,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":41,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":24,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":76,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":51,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":97,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":145,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":21,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":133,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":46,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":154,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":139,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":94}}]
