[{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:217","sourceCode":"return java.util.List<java.util.Locale>","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:203","sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.LocaleUtils.SyncAvoid.AVAILABLE_LOCALE_LIST":"list"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.WildcardTypeImpl:275","sourceCode":"int int = 73 << 8","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:99","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:470","sourceCode":"if (char == '0') {\n    int++;\n} else {\n    break;\n}","type":"CtIfImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:322","sourceCode":"int += 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1204","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"months":"startCutoff"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:174","sourceCode":"throw new java.lang.IllegalArgumentException(\"The String must not be empty\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.time.StopWatch:243","failures":[7,8],"status":-1,"binaryOperator":"(this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:609","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:217","sourceCode":"return int == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:419","sourceCode":"return '7'","type":"CtReturnImpl"},"failures":[10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:676","sourceCode":"final long long = ((long)(int)) + ((long)(int))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1054","sourceCode":"final long long = 1L << int","type":"CtLocalVariableImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"y":"shift","x":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:321","sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return 'a';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:445","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'e';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'a';\n    } else {\n        return '2';\n    }\n}","type":"CtIfImpl"},"failures":[10,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:835","sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","type":"CtWhileImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"pos","nBytes":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:306","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:775","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:688","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:246","sourceCode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} ","type":"CtIfImpl"},"failures":[56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"end","nInts":"start"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharEncoding:95","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.ObjectUtils:434","failures":[60],"status":-1,"binaryOperator":"org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1577","sourceCode":"boolean boolean","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:747","sourceCode":"final boolean boolean = java.util.List<java.lang.String> == null","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:386","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:333","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:136","sourceCode":"while ((java.lang.Class<?> != null) && (!(java.lang.Class<?>.equals(java.lang.Class<?>)))) {\n    if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n        float += 0.25F;\n        break;\n    } \n    float++;\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:137","sourceCode":"if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    float += 0.25F;\n    break;\n} ","type":"CtIfImpl"},"failures":[62,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:552","sourceCode":"throw new java.lang.IllegalArgumentException(\"The List must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:499","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"failures":[64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:42","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:6806","sourceCode":"return int[][int]","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:143","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1391","sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:274","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[67,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"count","nHexs":"count"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:357","sourceCode":"if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:356","sourceCode":"return \"\\\\u00\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","type":"CtReturnImpl"},"failures":[68,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:387","sourceCode":"return java.lang.Object == null ? \"\" : java.lang.Object.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:179","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, null)","type":"CtReturnImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"object"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:97","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.random(int, true, false)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:83","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 32, 127, false, false)","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:127","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:96","sourceCode":"int = 1","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"wrapLength"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:386","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:171","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:137","sourceCode":"(float)++","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:284","sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:491","sourceCode":"throw new java.lang.ArithmeticException(\"Unable to invert zero.\")","type":"CtThrowImpl"},"failures":[71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:573","sourceCode":"final char char = java.lang.String.charAt(1)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:587","sourceCode":"final char char = java.lang.String.charAt(2)","type":"CtLocalVariableImpl"},"failures":[73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:536","sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiNumeric(char))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:460","sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char))","type":"CtReturnImpl"},"failures":[75,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:539","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:516","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"items":"items","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:958","sourceCode":"throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:854","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1191","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" NT\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1229","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.1\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":49,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":38,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":6,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":104,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":16,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":15,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":57,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":47,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":40,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":96,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":94,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":51,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":53,"org.apache.commons.lang3.time.DateUtilsTest.testRound":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":17,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":29,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":46,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":43,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":48,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":79,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":3,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":19,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":42,"org.apache.commons.lang3.math.FractionTest.testInvert":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":95,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":7,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":5,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":67,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":12,"org.apache.commons.lang3.math.FractionTest.testPow":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":27,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":66,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":93,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":31,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG807":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":30,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":78,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":20,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":90,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":100,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":2,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":45,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":26,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_Character":68,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":4,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":63,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":0,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":62,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":106,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":101,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":23,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":91,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_2":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":77,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":8,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":64,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":76,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":35,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":10,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":105,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":18,"org.apache.commons.lang3.ObjectUtilsTest.testMin":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":99,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":69,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":98,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":33,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuffer":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":89,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":81,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":86,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":92,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":59}}]
