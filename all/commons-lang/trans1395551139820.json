[{"transplant":{"position":"org.apache.commons.lang3.reflect.WildcardTypeImpl:275","sourceCode":"int int = 73 << 8","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:489","sourceCode":"final int int = java.lang.String.indexOf('.')","type":"CtLocalVariableImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:179","sourceCode":"if ((java.util.Calendar == null) || (java.util.Calendar == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1002","sourceCode":"java.util.Calendar.setTime(java.util.Date)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cal1":"val","cal2":"val"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:221","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:431","sourceCode":"int = (37 * int) + (java.lang.Object.getClass().hashCode())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:352","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toShort(java.lang.String, ((short)(0)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:377","sourceCode":"return java.lang.Short.java.lang.Short.parseShort(java.lang.String)","type":"CtReturnImpl"},"failures":[42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:89","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"awt.toolkit\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1580","sourceCode":"boolean[][int] = boolean[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1629","sourceCode":"boolean[][(int + int)] = (1 & (short >> int)) != 0","type":"CtAssignmentImpl"},"failures":[44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"j":"dstPos","array":"dst","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","sourceCode":"java.util.concurrent.ExecutorService = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","type":"CtAssignmentImpl"},"failures":[45,46,47,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"tempExec":"tempExec"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:913","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arrayEnd":"toString"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:667","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:660","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nullString":"nullString","str":"nullString"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1097","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1076","sourceCode":"try {\n    return org.apache.commons.lang3.text.StrTokenizer.cloneReset();\n} catch (final java.lang.CloneNotSupportedException java.lang.CloneNotSupportedException) {\n    return null;\n}","type":"CtTryImpl"},"failures":[53,54,55,56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cloned":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:890","sourceCode":"double = double[][int]","type":"CtAssignmentImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:419","sourceCode":"return '7'","type":"CtReturnImpl"},"failures":[61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Validate:804","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:129","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.Validate.DEFAULT_VALID_STATE_EX_MESSAGE":"str"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1176","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[65,66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:367","sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1007","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Mac OS X\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:885","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.3\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1818","sourceCode":"long = org.apache.commons.lang3.time.DateUtils.long","type":"CtAssignmentImpl"},"failures":[71,72,73,74,75,76,77,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1208","sourceCode":"java.lang.StringBuffer.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:746","sourceCode":"java.lang.StringBuffer.append(byte)","type":"CtInvocationImpl"},"failures":[65,79,66,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1687","sourceCode":"if (int > 16) {\n    throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1115","sourceCode":"if (int < int) {\n    int = int;\n} ","type":"CtIfImpl"},"failures":[80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nBytes":"b"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:630","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:67","sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:330","sourceCode":"java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:80","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"failures":[82,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:544","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '9';\n} else {\n    return '8';\n}","type":"CtIfImpl"},"failures":[84,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:401","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been started\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:160","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1361","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.mutable.MutableShort:247","failures":[87],"status":-1,"binaryOperator":"(short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue())","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:219","sourceCode":"if (T == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[88,89,90],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1439","failures":[91],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:947","failures":[92],"status":-1,"binaryOperator":"(int * 4) + int","name":"math","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":14,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":68,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":65,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":77,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNotSupportedException":55,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":47,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":66,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":26,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":75,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":57,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":40,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":36,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":16,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":4,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":32,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":84,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":30,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":80,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":1,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":9,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":86,"org.apache.commons.lang3.BooleanUtilsTest.test_negate_Boolean":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":67,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":64,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":54,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":38,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":15,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":58,"org.apache.commons.lang3.math.FractionTest.testToString":49,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":13,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":73,"org.apache.commons.lang3.ConversionTest.testIntToHex":91,"org.apache.commons.lang3.RangeTest.testIsWithCompare":88,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":50,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":3,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":39,"org.apache.commons.lang3.ConversionTest.testShortToBinary":44,"org.apache.commons.lang3.RangeTest.testContains":90,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":2,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":31,"org.apache.commons.lang3.mutable.MutableShortTest.testEquals":87,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":61,"org.apache.commons.lang3.ConversionTest.testHexToInt":92,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":89,"org.apache.commons.lang3.math.NumberUtilsTest.testToShortStringI":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":41,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":20,"org.apache.commons.lang3.math.NumberUtilsTest.testToShortString":43,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":24,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":34,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":17,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":56,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":45,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":22,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":8,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":82,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":74,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":0,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":28,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":83,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":62}}]
