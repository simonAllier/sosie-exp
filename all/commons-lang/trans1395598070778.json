[{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6845","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:816","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"threshold":"trimStart"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:122","sourceCode":"org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:134","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"${\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1056","sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:359","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass()","type":"CtLocalVariableImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4062","sourceCode":"byte[][(int - 1)] = byte","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1011","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"element":"max","newArray":"array","length":"i"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:359","sourceCode":"if (java.util.Locale == null) {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat();\n} else {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:362","sourceCode":"java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"locale":"locale","parser":"parser"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:510","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:468","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.SECOND_STRATEGY"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:321","sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return 'a';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:560","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '5';\n} else {\n    return '4';\n}","type":"CtIfImpl"},"failures":[52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:536","sourceCode":"if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:523","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:203","sourceCode":"return (java.util.Date.getTime()) == (java.util.Date.getTime())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1755","sourceCode":"return org.apache.commons.lang3.time.DateUtils.(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date, java.util.Date, int)) == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:910","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:174","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:308","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:837","sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:392","sourceCode":"int += 1000 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:879","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"seconds":"dstPos","milliseconds":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:433","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:415","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return '7';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return '3';\n    }\n}","type":"CtIfImpl"},"failures":[55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1159","sourceCode":"int int = java.util.Calendar.int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:294","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[57,58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:552","sourceCode":"return this.java.lang.String[][--(this.int)]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:410","sourceCode":"return java.lang.String[][(int)++]","type":"CtReturnImpl"},"failures":[0,6,26,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"tokens":"tokens","tokenPos":"tokenPos"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:413","inlineConstant":"int int = 0","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.builder.ToStringStyle:414","failures":[92,93,94,95,96,97,98,99,100,100,101,102,103,104,105,61,62,63,106,107,64,108,109,110,65,111,112,113,66,67,114,115,116,68,69,70,117,118,71,72,119,120,121,73,122,74,123,124,125,126,127,75,76,77,78,128,79,129,130,131,80,132,133,134,81,82,83,135,84,136,137,85,138],"status":-1,"binaryOperator":"((int - 1) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:777","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not round \" + java.lang.Object));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:938","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())));\n}","type":"CtIfImpl"},"failures":[139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:232","sourceCode":"if (java.lang.Object[] != null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        int = (int * 31) + org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object));\n    }\n} ","type":"CtIfImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:958","sourceCode":"throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:910","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","sourceCode":"if ((java.lang.String[]) == null) {\n    if ((char[]) == null) {\n        final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(null, 0, 0);\n        java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]);\n    } else {\n        final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], 0, char[].int);\n        java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:604","sourceCode":"if ((char[]) == null) {\n    final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(null, 0, 0);\n    java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]);\n} else {\n    final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], 0, char[].int);\n    java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:111","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, true)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:332","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, char[].int, false, false, char[], org.apache.commons.lang3.RandomStringUtils.java.util.Random)","type":"CtReturnImpl"},"failures":[141,142,143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1192","sourceCode":"int = int - 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startCutoff":"srcPos","endCutoff":"shift"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:199","sourceCode":"if ((java.util.List<java.util.Locale>.contains(java.util.Locale)) == false) {\n    java.util.List<java.util.Locale>.add(java.util.Locale);\n} ","type":"CtIfImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:173","sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:835","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"failures":[146,147,148,149,150,151,152,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nullText":"varValue"}},{"position":"org.apache.commons.lang3.time.DateUtils:977","failures":[154,155,156,157,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"(int < 500)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:340","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:685","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lhsClass":"clazz","testClass":"clazz"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:738","sourceCode":"int = 16","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:741","sourceCode":"int = 8","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"radix":"radix"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:140","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[166,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":116,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":64,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":11,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":140,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":118,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":0,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":75,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":115,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":129,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":4,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":92,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":10,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":149,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":102,"org.apache.commons.lang3.time.DateUtilsTest.testRound":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":62,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":121,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":84,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":131,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":8,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":155,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":68,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":67,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":154,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":40,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":22,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":26,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":167,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":39,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":158,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":134,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":63,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":58,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":29,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":144,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":15,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":14,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":122,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":77,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":91,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":71,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":98,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":74,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":143,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":66,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":166,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":108,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":137,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":87,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":23,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":109,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":41,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":54,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":145,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":80,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":12,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":53,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":79,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":13,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":142,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":73,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethodFromDescription":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":113,"org.apache.commons.lang3.ConversionTest.testByteToBinary":165,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":130,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":5,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":65,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethod":38,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":103,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":106,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":83,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":44,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":163,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":136,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":151,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":104,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":160,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":35,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":95,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":141,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":148,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":7,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":100,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":85}}]
