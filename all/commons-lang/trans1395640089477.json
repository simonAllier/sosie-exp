[{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:724","sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:107","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","falseString":"str","trueString":"str"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:283","sourceCode":"java.util.Calendar.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1037","sourceCode":"java.util.Calendar.add(int[][0], 1)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cal":"val"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:599","sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:80","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n} ","type":"CtIfImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"k":"digit"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:744","sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:741","sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getVariablePrefixMatcher()","type":"CtLocalVariableImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:130","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:133","sourceCode":"if (java.lang.Object instanceof java.util.Map.Entry<?, ?>) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    return org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getKey(), java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getValue(), java.util.Map.Entry<?, ?>.getValue()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:127","sourceCode":"byte--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1152","sourceCode":"byte = byte","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"a"}},{"transplant":{"position":"org.apache.commons.lang3.SyncAvoid:319","sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(java.util.Arrays.java.util.Arrays.asList(java.util.Locale.java.util.Locale.getAvailableLocales()))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:582","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:190","sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:291","sourceCode":"java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:478","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1365","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[43],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:280","sourceCode":"return double","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Double.NaN":"defaultValue"}},{"position":"org.apache.commons.lang3.Conversion:1013","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1577","sourceCode":"return java.lang.Boolean.booleanValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:159","sourceCode":"return (java.lang.Boolean != null) && (java.lang.Boolean.booleanValue())","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"fullDetailRequest":"bool"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1166","sourceCode":"java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1180","sourceCode":"java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int)","type":"CtAssignmentImpl"},"failures":[45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1081","failures":[46,3,4,8,11,47,48],"status":-1,"binaryOperator":"(java.util.Calendar.get(int[][0])) - int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1067","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Solaris\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1128","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:879","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:633","sourceCode":"java.lang.StringBuffer.append(org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(java.lang.Object.getClass()))","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:810","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char[][int++])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:755","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int * 2;\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n        continue;\n    } \n    boolean = false;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:912","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[75,76,50,77,78,79,80,81,82,83,84,85,86,51,87,88,52,89,90,53,91,92,54,93,94,55,95,96,56,97,98,57,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:238","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1172","sourceCode":"int = java.util.Calendar.int","type":"CtAssignmentImpl"},"failures":[100],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:165","sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double[][int], double);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:190","sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float[][int], float);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:629","sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","type":"CtSwitchImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:295","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:95","sourceCode":"return int & (int)","type":"CtReturnImpl"},"failures":[102,103,104,105,106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:154","sourceCode":"float += 1.5F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1065","sourceCode":"float = float[][int]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"max"}},{"position":"org.apache.commons.lang3.BooleanUtils:725","failures":[108],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1061","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendEnd(org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer(), org.apache.commons.lang3.builder.ToStringBuilder.getObject())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:942","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, short[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:763","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)) {\n    throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pattern":"str"}},{"position":"org.apache.commons.lang3.Conversion:947","failures":[109],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:596","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:67","sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:128","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:450","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:277","sourceCode":"int = ((int)(double / double))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:279","sourceCode":"double = double - (int * double)","type":"CtAssignmentImpl"},"failures":[111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"y1":"x1","a2":"a2","x1":"x1"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1741","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:1313","failures":[114,115,116,117],"status":-1,"binaryOperator":"int < (java.lang.String.length())","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":79,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":41,"org.apache.commons.lang3.math.FractionTest.testFactory_double":111,"org.apache.commons.lang3.BitFieldTest.testGetShortRawValue":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":12,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":95,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":8,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":33,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":54,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":50,"org.apache.commons.lang3.time.DateUtilsTest.testRound":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":85,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":2,"org.apache.commons.lang3.BitFieldTest.testGetRawValue":106,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":4,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":16,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":51,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":53,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":32,"org.apache.commons.lang3.ConversionTest.testHexToInt":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":48,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":1,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":57,"org.apache.commons.lang3.BitFieldTest.testSetValue":107,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":63,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":24,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":61,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":91,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":30,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":20,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":0,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":15,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":43,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":11,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":112,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":27,"org.apache.commons.lang3.text.StrTokenizerTest.test1":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":19,"org.apache.commons.lang3.text.StrTokenizerTest.test3":67,"org.apache.commons.lang3.text.StrTokenizerTest.test2":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":37,"org.apache.commons.lang3.text.StrTokenizerTest.test8":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":84,"org.apache.commons.lang3.BitFieldTest.testGetValue":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":17,"org.apache.commons.lang3.text.StrTokenizerTest.test5":69,"org.apache.commons.lang3.text.StrTokenizerTest.test4":68,"org.apache.commons.lang3.text.StrTokenizerTest.test7":71,"org.apache.commons.lang3.text.StrTokenizerTest.test6":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":73,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":90,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":10,"org.apache.commons.lang3.BooleanUtilsTest.test_negate_Boolean":110,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":47,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":76,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":46,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":92,"org.apache.commons.lang3.ArrayUtilsTest.testToString":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":14,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":52,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":75,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":82,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":42,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Boolean":44,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":96,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":100,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":29,"org.apache.commons.lang3.ConversionTest.testHexDigitToInt":13,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":101}}]
