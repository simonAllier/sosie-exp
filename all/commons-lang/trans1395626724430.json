[{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:182","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be reset before being restarted. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:513","sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:909","sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:238","sourceCode":"if ((java.util.Calendar == null) || (java.util.Calendar == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"date":"cal1"}},{"position":"org.apache.commons.lang3.time.DateUtils:1072","failures":[1,2],"status":-1,"binaryOperator":"int >= 6","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:564","sourceCode":"return (int) - 1","type":"CtReturnImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:459","sourceCode":"final char[] char[] = new char[(int / 2) + 1]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:251","sourceCode":"final char[] char[] = new char[int]","type":"CtLocalVariableImpl"},"failures":[6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"strLen":"count"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:145","sourceCode":"for (final char char : java.lang.String.toCharArray()) {\n    if (org.apache.commons.lang3.CharSet.contains(char)) {\n        int++;\n    } \n}","type":"CtForEachImpl"},"failures":[14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:787","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"quoting"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:112","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n    final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(java.lang.Object));\n    return (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getLeft())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getMiddle()))) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getRight()));\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.BooleanUtils:902","failures":[22,23,24,25,26],"status":-1,"binaryOperator":"boolean[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:912","sourceCode":"final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:520","sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","type":"CtLocalVariableImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,2,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:261","failures":[],"status":0,"binaryOperator":"(\"Cannot interpret \\'\" + char)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:208","sourceCode":"int int = 71 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:749","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:294","sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:809","sourceCode":"return java.util.Calendar.getTime()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:194","sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:195","sourceCode":"try {\n    java.text.DateFormat java.text.DateFormat;\n    if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n    }\n    java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String = java.lang.String;\n    } \n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:541","sourceCode":"return 'a'","type":"CtReturnImpl"},"failures":[56,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:93","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1897","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"fieldSeparator","newLineStr":"fieldSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:230","sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup())","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:596","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:477","sourceCode":"this.char[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:475","sourceCode":"this.char[] = java.lang.String.toCharArray()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:173","sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:667","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n    java.lang.String = null;\n} ","type":"CtIfImpl"},"failures":[59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nullText":"tok"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2297","sourceCode":"if (int >= int) {\n    return -1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:774","sourceCode":"return int","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"out","size":"out"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:697","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.TwoDigitMonthField:974","sourceCode":"return 2","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:201","sourceCode":"return ((int)(float))","type":"CtReturnImpl"},"failures":[66,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1575","sourceCode":"char[][int++] = 't'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:259","sourceCode":"char = char[][((java.util.Random.nextInt(int)) + int)]","type":"CtAssignmentImpl"},"failures":[6,7,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"chars","index":"start"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:543","failures":[68,69,69,70,70,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,80,81,82,83,84,85,86,87,87,88,89,90,91,91,92,92,93,93,94,95,96,96,97,97,98,99,99,100,100,101,101,102,103,103,104,104,105,105,106,107,108,109,110,110,111,111,112,113,114,115,116,116,117,117,118,119,119,120,120,121,121,122,123,124,125,126,126,127,127,128,128,129,130,130,131,131,132,132,133,133,134,135,135,136,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,60,61,62,182,183,184,63,185],"status":-1,"binaryOperator":"java.lang.Object instanceof boolean[]","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6064","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:479","sourceCode":"try {\n    if (java.lang.Object instanceof java.util.Collection<?>) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n        }\n    } else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n        }\n    } else if (java.lang.Object instanceof long[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof int[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof short[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof byte[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof char[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof double[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof float[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof boolean[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object.getClass().isArray()) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n        }\n    } else {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n        }\n    }\n} finally {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object);\n}","type":"CtTryImpl"},"failures":[186,186,187,187,188,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,77,77,78,78,79,79,80,81,81,82,83,83,84,85,86,87,87,88,89,90,91,91,92,92,93,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,108,109,110,110,111,111,112,112,113,113,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,123,123,124,124,125,126,126,127,127,128,128,129,130,130,131,131,132,132,133,133,134,135,135,136,136,137,137,138,138,139,140,189,141,142,143,144,145,190,146,147,148,149,150,191,151,152,153,154,155,192,156,157,158,159,160,193,161,162,163,164,165,194,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:966","sourceCode":"java.lang.StringBuilder.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:454","sourceCode":"java.lang.StringBuilder.append(T)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"classNameBuffer":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:619","sourceCode":"java.lang.StringBuffer.append(java.util.Map<?, ?>)","type":"CtInvocationImpl"},"failures":[72,130,141,146,151,156,161,166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1164","failures":[196],"status":-1,"binaryOperator":"(byte & (~int))","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:809","sourceCode":"if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n    break;\n} ","type":"CtIfImpl"},"failures":[197],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:126","failures":[198,199,200,201,202,203],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":98,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":124,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":198,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":59,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":129,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":165,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":107,"org.apache.commons.lang3.mutable.MutableFloatTest.testDecrement":67,"org.apache.commons.lang3.time.DateUtilsTest.testAddMinutes":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":83,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":108,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":109,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_nullInput":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":172,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":100,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":190,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":175,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":197,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":189,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":38,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":5,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":178,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":146,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":84,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":70,"org.apache.commons.lang3.time.DateUtilsTest.testAddSeconds":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":43,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":142,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":37,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":144,"org.apache.commons.lang3.time.DateUtilsTest.testAddHours":30,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":41,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":105,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":112,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":13,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":95,"org.apache.commons.lang3.RangeTest.testToString":195,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":121,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":137,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":145,"org.apache.commons.lang3.time.DateUtilsTest.testAddDays":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":45,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":127,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":123,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":114,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":69,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":75,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":85,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":90,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":176,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":12,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":164,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":51,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":50,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":187,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":174,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":48,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":171,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":56,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":78,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":167,"org.apache.commons.lang3.time.DateUtilsTest.testRound":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":92,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":35,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":126,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":113,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":130,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":42,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":139,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":181,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":131,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":166,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":16,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":106,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":111,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":143,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":101,"org.apache.commons.lang3.time.DateUtilsTest.testAddYears":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":128,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":46,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":200,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":68,"org.apache.commons.lang3.text.StrTokenizerTest.test1":60,"org.apache.commons.lang3.text.StrTokenizerTest.test3":62,"org.apache.commons.lang3.text.StrTokenizerTest.test2":61,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":93,"org.apache.commons.lang3.math.FractionTest.testSubtract":65,"org.apache.commons.lang3.text.StrTokenizerTest.test8":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":88,"org.apache.commons.lang3.text.StrTokenizerTest.test5":183,"org.apache.commons.lang3.text.StrTokenizerTest.test4":182,"org.apache.commons.lang3.text.StrTokenizerTest.test7":63,"org.apache.commons.lang3.text.StrTokenizerTest.test6":184,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":168,"org.apache.commons.lang3.time.DateUtilsTest.testAddWeeks":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":52,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":150,"org.apache.commons.lang3.ArrayUtilsTest.testToString":180,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":199,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":6,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":192,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":157,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":148,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":147,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":170,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":10,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":91,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":17,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":154,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":15,"org.apache.commons.lang3.mutable.MutableFloatTest.testPrimitiveValues":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":186,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":201,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":80,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":119,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":138}}]
