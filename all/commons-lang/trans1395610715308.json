[{"transplant":{"position":"org.apache.commons.lang3.Range:274","sourceCode":"return (java.util.Comparator<T>.compare(T, T)) > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:222","sourceCode":"return ((java.util.Comparator<T>.compare(T, T)) > (-1)) && ((java.util.Comparator<T>.compare(T, T)) < 1)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:543","sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:491","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:732","sourceCode":"return false","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:231","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:355","sourceCode":"throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1422","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:104","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cloned":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"}},{"position":"org.apache.commons.lang3.time.DateUtils:989","failures":[12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"int == (java.util.Calendar.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:800","sourceCode":"if (((this.int) == 0) || ((this.int) == 0)) {\n    return org.apache.commons.lang3.math.Fraction;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:477","sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(((int) / int), ((int) / int))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"fraction":"this","numerator":"numerator","org.apache.commons.lang3.math.Fraction.ZERO":"this"}},{"position":"org.apache.commons.lang3.ObjectUtils:576","failures":[],"status":0,"binaryOperator":"int > int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:115","sourceCode":"return 6","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:888","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:679","sourceCode":"if ((org.apache.commons.lang3.builder.ToStringBuilder.getObject()) == null) {\n    return org.apache.commons.lang3.builder.ToStringBuilder.getStyle().getNullText();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1063","sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer().toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1241","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.AnnotationUtils:334","failures":[21],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:293","sourceCode":"java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:271","sourceCode":"org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"countries":"langs"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:360","sourceCode":"java.text.SimpleDateFormat = new java.text.SimpleDateFormat()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:362","sourceCode":"java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"parser":"parser"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1015","sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","type":"CtThrowImpl"},"failures":[23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharSetUtils:244","failures":[24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:99","sourceCode":"this.boolean = java.lang.Boolean.booleanValue()","type":"CtAssignmentImpl"},"failures":[34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1478","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (short >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:274","sourceCode":"return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:289","sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(java.lang.Object)), ((java.lang.annotation.Annotation[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o2":"o2","o1":"o1","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1437","sourceCode":"int int = java.lang.StringBuilder.length()","type":"CtLocalVariableImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:437","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1376","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"isEquals":"hasDecPoint","superEquals":"hasDecPoint"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1690","sourceCode":"org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getMostSignificantBits(), 0, byte[], int, (int > 8 ? 8 : int))","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1438","inlineConstant":"int int = 0","failures":[38],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CsvUnescaper:311","sourceCode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:839","sourceCode":"if ((short[][int]) < short) {\n    short = short[][int];\n} ","type":"CtIfImpl"},"failures":[41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"i"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:715","sourceCode":"if (int > 0) {\n    return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:748","sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcChars":"srcChars","workArea":"workArea","start":"quoteStart","tokenList":"tokenList","len":"quoteStart","quoteLen":"start","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:584","sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:837","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + int) + \"]\"))","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:386","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1242","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":88,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":11,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":89,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":42,"org.apache.commons.lang3.RangeTest.testRangeOfChars":2,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":8,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":10,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":17,"org.apache.commons.lang3.text.StrTokenizerTest.test1":63,"org.apache.commons.lang3.ConversionTest.testShortToHex":36,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":87,"org.apache.commons.lang3.text.StrTokenizerTest.test3":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":44,"org.apache.commons.lang3.text.StrTokenizerTest.test2":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":45,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":19,"org.apache.commons.lang3.text.StrTokenizerTest.test8":70,"org.apache.commons.lang3.text.StrTokenizerTest.test5":67,"org.apache.commons.lang3.text.StrTokenizerTest.test4":66,"org.apache.commons.lang3.text.StrTokenizerTest.test7":69,"org.apache.commons.lang3.text.StrTokenizerTest.test6":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":77,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":78,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":9,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":72,"org.apache.commons.lang3.RangeTest.testContainsRange":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":76,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":16,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":49,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":7,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":61,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":47,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":22,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":52,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":30,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":71,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":75,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":53,"org.apache.commons.lang3.mutable.MutableBooleanTest.testSetNull":35,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":13,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":81,"org.apache.commons.lang3.RangeTest.testIsWithCompare":0,"org.apache.commons.lang3.ConversionTest.testIntToHex":38,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":62,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":25,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":39,"org.apache.commons.lang3.RangeTest.testIntersectionWith":3,"org.apache.commons.lang3.RangeTest.testContains":6,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":34,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":37,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":46,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":14,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":74,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":23,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":4,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":82,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":60,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":59,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":26,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":57,"org.apache.commons.lang3.math.FractionTest.testCompareTo":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":54,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":1,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":80,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":73,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":24,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":48,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":43,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":50,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":33,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":90}}]
