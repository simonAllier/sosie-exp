[{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:575","sourceCode":"T = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:101","sourceCode":"T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:183","sourceCode":"if (org.apache.commons.lang3.CharRange == null) {\n    throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:445","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'e';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'a';\n    } else {\n        return '2';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:307","sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1070","sourceCode":"int -= 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:64","sourceCode":"int += org.apache.commons.lang3.reflect.InheritanceUtils.org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class<?>, java.lang.Class<?>)","type":"CtOperatorAssignmentImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offset":"d"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:396","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:646","sourceCode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    final java.lang.String java.lang.String = java.util.StringTokenizer.nextToken();\n    final int int = java.lang.String.indexOf(\"at\");\n    if ((int != (-1)) && (java.lang.String.substring(0, int).trim().isEmpty())) {\n        boolean = true;\n        java.util.List<java.lang.String>.add(java.lang.String);\n    } else if (boolean) {\n        break;\n    } \n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:190","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n} ","type":"CtIfImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:97","sourceCode":"long = long","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1692","sourceCode":"long += ((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long)) / long","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"result"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1522","sourceCode":"if ((this.boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:909","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldNameValueSeparator":"fieldName","fieldName":"fieldName","useFieldNames":"arrayContentDetail"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:451","sourceCode":"java.lang.StringBuilder.append('[')","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1298","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:193","sourceCode":"java.lang.String = java.lang.String.substring(1)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:815","sourceCode":"java.lang.String = java.lang.String.substring((int + int))","type":"CtAssignmentImpl"},"failures":[93,94,95,96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"duration":"varDefaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:467","sourceCode":"char char = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:70","sourceCode":"final char char = char","type":"CtLocalVariableImpl"},"failures":[102,103,104,105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:731","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"negate"}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:809","failures":[93,94,95,96,97,98,99,100,101],"status":-1,"binaryOperator":"(!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:998","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[][int])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1303","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[][int])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:724","sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:729","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1035","sourceCode":"if (int < 0) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:467","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"index":"nullValue"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1388","sourceCode":"if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1399","sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","type":"CtIfImpl"},"failures":[107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:326","sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1201","sourceCode":"throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"))","type":"CtThrowImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:187","sourceCode":"if (int == 0) {\n    break;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:86","sourceCode":"if (int == 0) {\n    final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    java.io.Writer.write(char[]);\n    int += char[].int;\n    continue;\n} ","type":"CtIfImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"tokenLen":"consumed"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:130","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","type":"CtInvocationImpl"},"failures":[137,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:506","sourceCode":"return (int) < (java.lang.String[].int)","type":"CtReturnImpl"},"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1208","sourceCode":"java.lang.StringBuffer.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:903","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[4,6,11,12,181,21,25,32,38,39,46,48,53,55,60,62,67,69,74,77,82,84,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:521","sourceCode":"if (boolean[][int]) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:446","sourceCode":"if (boolean[][int]) {\n    return 'e';\n} else {\n    return '6';\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.FastDateParser:359","failures":[182,183,184,185,186,187,188,189,190,191],"status":-1,"binaryOperator":"(int + (int)) - ((int) % 100)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:579","sourceCode":"if ((int == int) || (int == int)) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1051","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final long long = (boolean[][(int + int)] ? 1L : 0) << int;\n    final long long = 1L << int;\n    long = (long & (~long)) | long;\n}","type":"CtForImpl"},"failures":[192],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"v":"dstPos","u":"shift","java.lang.Integer.MIN_VALUE":"srcPos"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:146","sourceCode":"if ((int == int) || (int == int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:80","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n} ","type":"CtIfImpl"},"failures":[193,194,195,196,197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"digit","numerator":"digit","denominator":"digit"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:405","sourceCode":"return null","type":"CtReturnImpl"},"failures":[198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1440","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1423","sourceCode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"osName":"osVersion"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1237","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[3,199,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1167","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[200,201,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":133,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":54,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":65,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":144,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":76,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":7,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":43,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":148,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":56,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":129,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":132,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":202,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":49,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":106,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":163,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":167,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":138,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":173,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":189,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":177,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":176,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":175,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":174,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":200,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":183,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":121,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":2,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":136,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":47,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":182,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":63,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":142,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":119,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":190,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":69,"org.apache.commons.lang3.CharSetTest.testContains_Char":102,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":201,"org.apache.commons.lang3.RangeTest.testToString":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":169,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":170,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":171,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":164,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":85,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":185,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":199,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":81,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":11,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":22,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":61,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":101,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":16,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":20,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":188,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":82,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":134,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":172,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":96,"org.apache.commons.lang3.ConversionTest.testHexDigitToInt":196,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":149,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":108,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":186,"org.apache.commons.lang3.ConversionTest.testHexToLong":194,"org.apache.commons.lang3.ConversionTest.testHexToByte":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":181,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":151,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":27,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":140,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":187,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":178,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":111,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":131,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":126,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":12,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":87,"org.apache.commons.lang3.CharRangeTest.testContainsNullArg":0,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds":135,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":21,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":38,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":78,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":41,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":128,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":46,"org.apache.commons.lang3.ConversionTest.testHexToInt":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":42,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":192,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":86,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":103,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":159,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":158,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":71,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":155,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":154,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":157,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":191,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":156,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":28,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":34,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":52,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":39,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":9,"org.apache.commons.lang3.CharRangeTest.testContains_Char":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":179,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":180,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":1,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":18,"org.apache.commons.lang3.text.StrTokenizerTest.test6":162,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":88,"org.apache.commons.lang3.ConversionTest.testHexToShort":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":31,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":62,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":152,"org.apache.commons.lang3.ArrayUtilsTest.testToString":89,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":70,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":90,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":59,"org.apache.commons.lang3.ConversionTest.testByteToBinary":92,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":161,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":58,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":145,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":104,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":123,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":110,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":166,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":100,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":99,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":127,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":14,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":165,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":98,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":198}}]
