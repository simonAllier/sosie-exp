[{"transplant":{"position":"org.apache.commons.lang3.text.StringMatcher:368","sourceCode":"if ((int + int) > int) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:244","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    return int ^ org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Object.getClass().getComponentType(), java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bufferEnd":"part1","len":"part1","pos":"part1"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1427","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:352","sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:340","sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int)","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:222","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Comparator<T>.compare(T, T)) < 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:262","sourceCode":"return long < long ? -1 : long == long ? 0 : 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:699","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"anotherVal":"s","value":"s"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:263","sourceCode":"java.util.concurrent.ScheduledFuture<?>.cancel(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:297","sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) == null) {\n    java.util.concurrent.ScheduledFuture<?> = org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer();\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"task":"task"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:516","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"items":"items","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1035","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[])","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:273","sourceCode":"if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:265","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = char;\n    int--;\n    char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n}","type":"CtIfImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1337","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:560","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, boolean[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"style"}},{"position":"org.apache.commons.lang3.Conversion:696","failures":[61],"status":-1,"binaryOperator":"(4294967295L & (int[][(int + int)]))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6400","sourceCode":"final java.lang.String java.lang.String = \"...\"","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:560","sourceCode":"final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1365","failures":[62],"status":-1,"binaryOperator":"(int * 8) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:1121","sourceCode":"java.lang.String = java.lang.String.substring(1, (java.lang.String.endsWith(\";\") ? (java.lang.String.length()) - 1 : java.lang.String.length()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:815","sourceCode":"java.lang.String = java.lang.String.substring((int + int))","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"className":"varNameExpr"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1258","sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:805","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    final long long = (255L & (byte[][(int + int)])) << int;\n    final long long = 255L << int;\n    long = (long & (~long)) | long;\n}","type":"CtForImpl"},"failures":[71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"nBytes","srcPos":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:972","sourceCode":"long long = java.util.Date.getTime()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:449","sourceCode":"return '6'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:416","sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return '7';\n}","type":"CtIfImpl"},"failures":[73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:120","sourceCode":"java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:848","sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1082","sourceCode":"return org.apache.commons.lang3.text.StrMatcher","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delimMatcher":"valueDelimiterMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"this.org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:664","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:66","sourceCode":"return T","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:546","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"result"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1557","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:217","failures":[78],"status":-1,"binaryOperator":"((int & 1) == 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:497","sourceCode":"if (int > (-1)) {\n    if ((int < int) || (int > (java.lang.String.length()))) {\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    } \n    java.lang.String = java.lang.String.substring((int + 1), int);\n} else {\n    java.lang.String = java.lang.String.substring((int + 1));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"decPos"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:925","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,39,40,41,44,45,46,3,50,51,52,53,54,56,57,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.apache.commons.lang3.LocaleUtils:113","failures":[80],"status":-1,"binaryOperator":"int < 5","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:1013","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1116","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:485","failures":[82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"((java.lang.String.length()) - 1)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.CharUtils:517","failures":[91,92,93],"status":-1,"binaryOperator":"(char <= '9')","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:248","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:107","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cloned":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:333","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:222","sourceCode":"return short","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1231","sourceCode":"short[][(int + int)] = ((short)(65535 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":41,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":34,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":3,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":30,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":12,"org.apache.commons.lang3.mutable.MutableShortTest.testPrimitiveValues":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":36,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":55,"org.apache.commons.lang3.math.FractionTest.testSubtract":11,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":52,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiNumeric_char":92,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":66,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":1,"org.apache.commons.lang3.RangeTest.testContainsRange":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":33,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":38,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":81,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":83,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":58,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":37,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":19,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":4,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":53,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":46,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_3":88,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethodFromDescription":23,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":17,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":89,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":86,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_2":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":48,"org.apache.commons.lang3.RangeTest.testIsWithCompare":5,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":85,"org.apache.commons.lang3.RangeTest.testContains":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":77,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":35,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":22,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":73,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethod":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":31,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":70,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":13,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":56,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":42,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":59,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":45,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":0,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":47,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":61,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":71,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":32,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":82,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":67,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":44,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":74}}]
