[{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:322","sourceCode":"return 'b'","type":"CtReturnImpl"},"failures":[52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:335","sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:378","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,44,45,46,47,48,49,50,51,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:143","sourceCode":"return java.lang.Math.java.lang.Math.min(float, float)","type":"CtReturnImpl"},"failures":[115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:516","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:506","sourceCode":"int = java.lang.String.length()","type":"CtAssignmentImpl"},"failures":[116,117,118,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dec":"dec"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:411","sourceCode":"return false","type":"CtReturnImpl"},"failures":[121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:477","failures":[116,117,122],"status":-1,"binaryOperator":"(int > 16)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:104","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:288","sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(\"Element is null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:97","sourceCode":"if (T == null) {\n    synchronized(this) {\n        T = T;\n        if (T == null) {\n            T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"element":"result"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:460","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:499","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"failures":[118,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:169","sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[127,128,129,130,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1611","sourceCode":"byte byte","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1008","sourceCode":"byte byte = byte[][0]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:220","sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:146","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"failures":[133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"denominator","denominator":"numerator","numerator":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1431","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1525","sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:774","failures":[136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1151","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.StrTokenizer:716","failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:216","sourceCode":"java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:217","sourceCode":"java.util.concurrent.ScheduledExecutorService = java.util.concurrent.ScheduledThreadPoolExecutor","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"s":"s"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:166","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","type":"CtInvocationImpl"},"failures":[165,166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1042","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","type":"CtThrowImpl"},"failures":[167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1659","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.math.IEEE754rUtils:165","inlineConstant":"int int = 1","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6632","sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:467","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"firstDiff":"nullValue","shortestStrLen":"nullValue","longestStrLen":"nullValue"}},{"transplant":{"position":"org.apache.commons.lang3.time.TextStrategy:591","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:222","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())","type":"CtLocalVariableImpl"},"failures":[168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"str"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:834","sourceCode":"return 4","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:58","sourceCode":"return 1 + (java.lang.StringBuilder.length())","type":"CtReturnImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:489","sourceCode":"for (final char char : char[]) {\n    if (char == char) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:486","sourceCode":"if (char[] == null) {\n    return java.lang.Character.java.lang.Character.isWhitespace(char);\n} ","type":"CtIfImpl"},"failures":[173,174,175,176,177,178,179,180],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delimiters":"delimiters","ch":"ch"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:127","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:276","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[181,182],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:135","sourceCode":"java.lang.StringBuilder.append('\\n')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:359","sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName())","type":"CtInvocationImpl"},"failures":[183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"builder"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:210","sourceCode":"if (java.util.Map<java.lang.Object, java.lang.Object> != null) {\n    java.util.Map<java.lang.Object, java.lang.Object>.remove(java.lang.Object);\n    if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n        org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n    } \n} ","type":"CtIfImpl"},"failures":[184,53,185,185,186,54,54,55,56,56,57,57,58,59,60,187,61,61,62,62,63,64,65,66,67,68,69,70,71,72,0,1,2,3,3,188,4,5,6,7,8,9,9,10,11,12,13,13,14,14,15,16,189,190,191,17,18,19,19,20,21,22,23,23,24,24,25,26,26,27,27,28,28,192,29,30,31,32,32,33,34,34,35,36,36,37,37,38,39,193,40,41,42,43,73,76,78,80,81,84,86,88,44,47,49,51,89,92,94,96,97,100,102,104,105,108,110,112,194,195,196,197,198,199,200,201,202,203,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:225","sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:311","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count"}},{"position":"org.apache.commons.lang3.time.FastDateParser:472","failures":[204,205,206,207,208,209,210,211],"status":-1,"binaryOperator":"(java.lang.String.length()) > 2","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:563","sourceCode":"return '4'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:629","sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","type":"CtSwitchImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:643","sourceCode":"this.java.lang.String[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:646","sourceCode":"this.java.lang.String[] = org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.lang.String[])","type":"CtAssignmentImpl"},"failures":[213,194,195,196,197,199,200,201,202,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1518","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (byte >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":173,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":132,"org.apache.commons.lang3.ConversionTest.testByteToHex":135,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":8,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":35,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":99,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":108,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":67,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":96,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":191,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":40,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":115,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":196,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":10,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":199,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":140,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":166,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":202,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":179,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":91,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":68,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":176,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":55,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":79,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":122,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":38,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":139,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":169,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":205,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":98,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":74,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":172,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":75,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":178,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":204,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":15,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":12,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":19,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextEntries":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":28,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":203,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":186,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":163,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":145,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":109,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":29,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":193,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":21,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextLabels":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":4,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":46,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":69,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":39,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":1,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":209,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":200,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":105,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":180,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":164,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":65,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGet":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":14,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":208,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":185,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":198,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":183,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":141,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetConcurrent":124,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":70,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":62,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":111,"org.apache.commons.lang3.time.DateUtilsTest.testRound":136,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":137,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":32,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":6,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":138,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":107,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":20,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":36,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetMultipleTimes":125,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":142,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":114,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":37,"org.apache.commons.lang3.RangeTest.testEqualsObject":121,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":154,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":153,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":94,"org.apache.commons.lang3.math.FractionTest.testReduce":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":152,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":16,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":18,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":45,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":27,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":80,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":59,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":184,"org.apache.commons.lang3.text.StrTokenizerTest.test1":155,"org.apache.commons.lang3.text.StrTokenizerTest.test3":157,"org.apache.commons.lang3.text.StrTokenizerTest.test2":156,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":188,"org.apache.commons.lang3.text.StrTokenizerTest.test8":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":72,"org.apache.commons.lang3.text.StrTokenizerTest.test5":159,"org.apache.commons.lang3.text.StrTokenizerTest.test4":158,"org.apache.commons.lang3.text.StrTokenizerTest.test7":161,"org.apache.commons.lang3.text.StrTokenizerTest.test6":160,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":112,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":22,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":47,"org.apache.commons.lang3.ArrayUtilsTest.testToString":113,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":171,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":175,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":95,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":93,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":119,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_2":126,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":88,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":168,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":87,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":134,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":194,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":2,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":13,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":26,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":100,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":187,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":212}}]
