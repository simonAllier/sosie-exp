[{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:650","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:537","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:246","sourceCode":"java.lang.String = java.lang.StringBuilder.toString()","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.BooleanUtils:505","failures":[14],"status":-1,"binaryOperator":"java.lang.Boolean == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1416","sourceCode":"if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n    return boolean;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1377","sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"foundDigit":"hasExp","chars":"chars","allowSigns":"allowSigns","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5720","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:387","sourceCode":"return this","type":"CtReturnImpl"},"failures":[15,16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:419","sourceCode":"if (boolean) {\n    java.lang.StringBuffer.setLength((int - int));\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,0,27,28,29,30,31,32,33,34,35,36,37,1,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"sepLen"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1057","sourceCode":"int -= 15","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:817","sourceCode":"int = int[][int]","type":"CtAssignmentImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"offset":"j"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:155","sourceCode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:885","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:226","sourceCode":"return ((83 + (char)) + (7 * (char))) + (boolean ? 1 : 0)","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2883","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1125","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"len":"dstPos","pos":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1391","sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:210","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"denominator","nHexs":"denominator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1361","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1125","failures":[105],"status":-1,"binaryOperator":"(int * 1) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:625","sourceCode":"this.boolean = boolean == boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:619","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"appendStatics","rhs":"appendStatics","lhs":"appendStatics"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:885","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"priorVariables":"priorVariables","buf":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:127","sourceCode":"return 13","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:895","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[107,145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.mutable.MutableBoolean:110","failures":[146],"status":-1,"binaryOperator":"(boolean) == true","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:45","sourceCode":"int >>= 1","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:288","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[108,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bit_pattern":"numer0"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:274","sourceCode":"java.lang.String = java.lang.String.toLowerCase()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2067","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"summaryObjectStartText"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:488","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parseObject(java.lang.String, java.text.ParsePosition)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.CompositeFormat:84","sourceCode":"return java.text.Format.parseObject(java.lang.String, java.text.ParsePosition)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:184","sourceCode":"return int","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:815","failures":[102],"status":-1,"binaryOperator":"int < (int[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.TwoDigitMonthField:974","sourceCode":"return 2","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:220","failures":[],"status":0,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:491","sourceCode":"throw new java.lang.ArithmeticException(\"Unable to invert zero.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:285","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","type":"CtThrowImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1401","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[])","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:522","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:609","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], 0, char[].int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2296","sourceCode":"int = int < 0 ? 0 : int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:113","sourceCode":"int = int + 1","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"spaceToWrapAt"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:157","sourceCode":"if (double[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if ((double[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1177","sourceCode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[][int]);\n}","type":"CtForImpl"},"failures":[28,152,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:242","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1369","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1061","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"allowSigns":"offsetSet"}},{"position":"org.apache.commons.lang3.ObjectUtils:545","failures":[153],"status":-1,"binaryOperator":"((java.util.TreeSet<T>.size()) - 1)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:1478","inlineConstant":"int int = 0","failures":[154],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:331","sourceCode":"if (int == int) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[155],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":39,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":152,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":144,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":48,"org.apache.commons.lang3.math.FractionTest.testFactory_double":108,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":52,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":65,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":67,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":132,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":26,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":21,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":50,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":69,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean_Integer_Integer_Integer":14,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":139,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":113,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":13,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":95,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":8,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":53,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":77,"org.apache.commons.lang3.RangeTest.testIntersectionWith":15,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":140,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":19,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":151,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":54,"org.apache.commons.lang3.math.FractionTest.testPow":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":127,"org.apache.commons.lang3.CharRangeTest.testHashCode":104,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":98,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":121,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":91,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":66,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian":153,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":102,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":149,"org.apache.commons.lang3.math.FractionTest.testCompareTo":145,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":128,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":46,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":117,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":60,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":112,"org.apache.commons.lang3.CharSetTest.testContains_Char":4,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":51,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":150,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":23,"org.apache.commons.lang3.ConversionTest.testShortToHex":154,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":116,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":106,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":57,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":75,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":32,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":97,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":20,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":82,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":148,"org.apache.commons.lang3.ArrayUtilsTest.testToString":101,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":3,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":16,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int_int_int":155,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":138,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":72,"org.apache.commons.lang3.math.FractionTest.testMultiply":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":25,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":90,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":42,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":35,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":81,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":110,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":49,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":44,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":38,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":118,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":33,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":27,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":120,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":131,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":126,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":2}}]
