[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.TypeVariable<?>[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>[][int], (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.Type) ? java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type) : java.lang.reflect.Type));\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:874","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"tokenLen":"length"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:188","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) < long) {\n        long = long[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:794","type":"CtForImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6],"binaryOperator":"(int & 1)","name":"math","position":"org.apache.commons.lang3.math.Fraction:596","type":"mutation","status":-1},{"failures":[],"variableMapping":{"duration":"quoteless","tmp":"quoteless","this":"this"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = java.lang.String;\n        java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\");\n        java.lang.String = java.lang.String;\n        if ((java.lang.String.length()) != (java.lang.String.length())) {\n            java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 seconds\", \"\");\n        } \n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.containsAny(java.lang.String, org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.char[])) {\n    java.io.Writer.write(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, ((org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String)), org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String));\n} else {\n    java.io.Writer.write(java.lang.CharSequence.toString());\n}","position":"org.apache.commons.lang3.StringEscapeUtils:407","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule : org.apache.commons.lang3.time.FastDatePrinter.Rule[]) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(java.lang.StringBuffer, java.util.Calendar);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:474","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(double[][int])","position":"org.apache.commons.lang3.StringUtils:3870","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output an unpadded number.<\/p>\n */\nprivate static class UnpaddedNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    /** \n     * Constructs an instance of {@code UnpadedNumberField} with the specified field.\n     * \n     * @param field the field\n     */\nUnpaddedNumberField(final int field) {\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 4;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 10) {\n            java.lang.StringBuffer.append(((char)(int + '0')));\n        } else if (int < 100) {\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:720","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"_mask":"out","holder":"out"},"name":"add","transplant":{"sourceCode":"return int | int","position":"org.apache.commons.lang3.BitField:216","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:774","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return (java.lang.CharSequence == null) && (java.lang.CharSequence == null);\n} ","position":"org.apache.commons.lang3.StringUtils:7313","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isDigit(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6038","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-1","position":"org.apache.commons.lang3.ArrayUtils:128","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Boolean.java.lang.Boolean.hashCode()","position":"org.apache.commons.lang3.mutable.MutableBoolean:186","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","parsePattern":"str","str2":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.startsWith(java.lang.String)) {\n        int += java.lang.String.length();\n        break;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:460","type":"CtForEachImpl"},"status":-2},{"failures":[7],"binaryOperator":"(int * 4)","name":"math","position":"org.apache.commons.lang3.Conversion:947","type":"mutation","status":-1},{"failures":[8],"variableMapping":{"wrapLength":"entityValue"},"name":"add","transplant":{"sourceCode":"if (int < 1) {\n    int = 1;\n} ","position":"org.apache.commons.lang3.text.WordUtils:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(int)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:132","type":"CtInvocationImpl"},"status":-1},{"failures":[9,10,11],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.EqualsBuilder:778","type":"mutation","status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        break;\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.DateUtils:1697","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder.(size()) > 0) {\n    org.apache.commons.lang3.text.StrBuilder.append(char);\n} else {\n    org.apache.commons.lang3.text.StrBuilder.append(char);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1291","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = java.lang.Character.java.lang.Character.isWhitespace(char)","position":"org.apache.commons.lang3.text.WordUtils:475","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.BackgroundInitializer<?>.start()","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:200","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"lhs":"rhs","this":"this","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object[] == null) || (java.lang.Object[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return org.apache.commons.lang3.builder.EqualsBuilder;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:646","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Object[].int) != (java.lang.Object[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:650","type":"CtIfImpl"},"status":0},{"failures":[32],"variableMapping":{"appendable":"appendable","object":"object"},"name":"add","transplant":{"sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:296","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:296","type":"CtInvocationImpl"},"status":-1},{"failures":[33],"variableMapping":{"limit":"hashCode"},"name":"replace","transplant":{"sourceCode":"this.int = int","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:246","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator())","position":"org.apache.commons.lang3.math.Fraction:865","type":"CtAssignmentImpl"},"status":-1},{"failures":[34],"binaryOperator":"(char[].int) == 1","name":"negateConditional","position":"org.apache.commons.lang3.text.StrMatcher:177","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.Object java.lang.Object = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:494","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Object.getClass().getComponentType(), (int - int))","position":"org.apache.commons.lang3.ArrayUtils:6071","type":"CtLocalVariableImpl"},"status":-2},{"failures":[35,36,37,38],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:204","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String, 0.0)","position":"org.apache.commons.lang3.math.NumberUtils:251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:679","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((T[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:250","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T, org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.Long.java.lang.Long.toString(long)","position":"org.apache.commons.lang3.time.DurationFormatUtils:462","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateFormat:564","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"strsLen","srcPos":"strsLen"},"name":"add","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.lang.String[][int] = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.strip(java.lang.String[][int], java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:737","type":"CtForImpl"},"status":0},{"failures":[39,40,41],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (double[].int) ; int++) {\n    if (((double[][int]) >= double) && ((double[][int]) <= double)) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2599","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:255","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Class<?>.isPrimitive()) {\n        return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>();\n    } \n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:905","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String)","position":"org.apache.commons.lang3.time.FormatCache:207","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4353","type":"CtIfImpl"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"variableMapping":{"buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append(int)","position":"org.apache.commons.lang3.builder.ToStringStyle:690","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:991","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"((\"No such accessible method: \" + java.lang.String) + \"() on object: \")","name":"removeConditional","position":"org.apache.commons.lang3.reflect.MethodUtils:128","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","position":"org.apache.commons.lang3.math.Fraction:173","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Character)","position":"org.apache.commons.lang3.ArrayUtils:5629","type":"CtLocalVariableImpl"},"status":-2},{"failures":[60],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, false)","position":"org.apache.commons.lang3.StringUtils:3176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, int, true)","position":"org.apache.commons.lang3.StringUtils:2786","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1588","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int));\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(char[], 0, char[], int, int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1525","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"u":"java.lang.Integer.MAX_VALUE","java.lang.Integer.MIN_VALUE":"java.lang.Integer.MAX_VALUE","v":"java.lang.Integer.MAX_VALUE"},"name":"replace","transplant":{"sourceCode":"if ((int == (this.java.lang.Integer.int)) || (int == (this.java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:579","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(int[], java.lang.Integer.int)","position":"org.apache.commons.lang3.StringUtils:6933","type":"CtInvocationImpl"},"status":-2},{"failures":[61],"variableMapping":{"lhs":"allowSigns","isEquals":"allowSigns","rhs":"allowSigns"},"name":"replace","transplant":{"sourceCode":"boolean = boolean == boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:625","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.math.NumberUtils:1408","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"binaryOperator":"(int + int)","name":"removeConditional","position":"org.apache.commons.lang3.text.StrBuilder:546","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n    try {\n        org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n    }\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:406","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1208","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ true , true , true , true }","position":"org.apache.commons.lang3.Conversion:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3411","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:276","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return int;\n} ","position":"org.apache.commons.lang3.Conversion:937","type":"CtIfImpl"},"status":-2},{"failures":[62],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:634","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.text.StrBuilder.toString())","position":"org.apache.commons.lang3.text.StrSubstitutor:898","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"T T = null","position":"org.apache.commons.lang3.ObjectUtils:442","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[63],"variableMapping":{"dstPos":"dstPos","nBytes":"srcPos"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:835","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (short >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1364","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:864","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence[] == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1964","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"float float = 0.0F","position":"org.apache.commons.lang3.reflect.MemberUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final float float = org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class<?>[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MemberUtils:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((int)((long) ^ ((long) >>> 32)))","position":"org.apache.commons.lang3.mutable.MutableLong:249","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:805","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.endorsed.dirs\")","position":"org.apache.commons.lang3.SystemUtils:282","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int]) == null) {\n    org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:519","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"months":"idx","years":"idx"},"name":"replace","transplant":{"sourceCode":"int += 12 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:329","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5819","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == int) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:371","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a two digit number.<\/p>\n */\nprivate static class TwoDigitNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    /** \n     * Constructs an instance of {@code TwoDigitNumberField} with the specified field.\n     * \n     * @param field the field\n     */\nTwoDigitNumberField(final int field) {\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 2;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 100) {\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:876","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.R = R","position":"org.apache.commons.lang3.tuple.MutableTriple:131","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1562","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1382","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(boolean)","position":"org.apache.commons.lang3.text.StrBuilder:1006","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","position":"org.apache.commons.lang3.text.WordUtils:214","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.charAt(int))","position":"org.apache.commons.lang3.StringUtils:4802","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.checkTokenized()","position":"org.apache.commons.lang3.text.StrTokenizer:505","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.lang3.time.FastDateParser.java.util.regex.Pattern.matcher(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:144","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"_mask":"v","holder":"v","value":"u","_shift_count":"java.lang.Integer.MIN_VALUE"},"name":"replace","transplant":{"sourceCode":"return (int & (~int)) | ((int << (this.java.lang.Integer.int)) & int)","position":"org.apache.commons.lang3.BitField:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == 0) || (int == 0)) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n    } \n    return java.lang.Math.(java.lang.Math.abs(int)) + java.lang.Math.(java.lang.Math.abs(int));\n} ","position":"org.apache.commons.lang3.math.Fraction:578","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.EqualsBuilder:336","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:569","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.reflect.MethodUtils:429","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5639","type":"CtLocalVariableImpl"},"status":-2},{"failures":[64,65],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < (char[].int) ; int++) {\n    final int int = java.lang.Character.java.lang.Character.getType(char[][int]);\n    if (int == int) {\n        continue;\n    } \n    if ((boolean && (int == (java.lang.Character.byte))) && (int == (java.lang.Character.byte))) {\n        final int int = int - 1;\n        if (int != int) {\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n            int = int;\n        } \n    } else {\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n        int = int;\n    }\n    int = int;\n}","position":"org.apache.commons.lang3.StringUtils:3232","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.SplitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.org.apache.commons.lang3.time.StopWatch.SplitState)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:382","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.StringUtils:7092","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:183","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.CompareToBuilder:326","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.FormattableUtils.org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence, java.util.Formatter, int, int, int, ' ', null)","position":"org.apache.commons.lang3.text.FormattableUtils:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(1 , 2)","position":"org.apache.commons.lang3.math.Fraction:55","type":"CtNewClassImpl"},"status":-2},{"failures":[66],"variableMapping":{"searchSeq":"cs","seq":"cs"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1445","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5917","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"spot":"c"},"name":"add","transplant":{"sourceCode":"return ((java.util.Calendar)(java.util.Calendar.clone()))","position":"org.apache.commons.lang3.time.DateUtils:1850","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Calendar","position":"org.apache.commons.lang3.time.DateUtils:670","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(this.int)","position":"org.apache.commons.lang3.mutable.MutableInt:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","position":"org.apache.commons.lang3.math.Fraction:953","type":"CtAssignmentImpl"},"status":-2},{"failures":[42,67,68,44,69,46,70,51,52,71,57,58,59],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:228","type":"CtBreakImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String[][][int][0] = java.lang.String[][][int][1]","position":"org.apache.commons.lang3.text.translate.EntityArrays:419","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.byte += java.lang.Number.byteValue()","position":"org.apache.commons.lang3.mutable.MutableByte:149","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:150","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey, java.lang.String>.get(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)","position":"org.apache.commons.lang3.time.FastDatePrinter:1101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[72],"variableMapping":{"seconds":"comparison"},"name":"replace","transplant":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:300","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:779","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((double > (java.lang.Integer.int)) || java.lang.Double.(java.lang.Double.isNaN(double))) {\n    throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\");\n} ","position":"org.apache.commons.lang3.math.Fraction:252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] != null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        int int = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object);\n        int = (int * 31) + int;\n    }\n} ","position":"org.apache.commons.lang3.ObjectUtils:240","type":"CtIfImpl"},"status":-2},{"failures":[73],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Float.(java.lang.Float.floatToIntBits(float)) != java.lang.Float.(java.lang.Float.floatToIntBits(float))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Float getLeft() {\n            return java.lang.Float.java.lang.Float.valueOf(float);\n        }\n\n        @java.lang.Override\n        public java.lang.Float getRight() {\n            return java.lang.Float.java.lang.Float.valueOf(float);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.CharSetUtils:78","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.isUseIdentityHashCode()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String, java.lang.String[], java.lang.String[], true, int)","position":"org.apache.commons.lang3.StringUtils:4633","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:672","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","this":"this","index":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.remove(int[], int)","position":"org.apache.commons.lang3.ArrayUtils:5036","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.ArrayUtils.int)) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5033","type":"CtIfImpl"},"status":-2},{"failures":[74],"variableMapping":{"str":"buf","startIndex":"endIndex"},"name":"add","transplant":{"sourceCode":"if ((int < 0) || (int > (java.lang.StringBuilder.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:650","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.StringBuilder.append(byte[][int]);\n}","position":"org.apache.commons.lang3.StringUtils:3719","type":"CtForImpl"},"status":-1},{"failures":[75,76,77,78,79,80],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] != null) {\n    int = char[].int;\n} else {\n    if ((!boolean) && (!boolean)) {\n        int = java.lang.Integer.int;\n    } else {\n        int = 'z' + 1;\n        int = ' ';\n    }\n}","position":"org.apache.commons.lang3.RandomStringUtils:235","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.reflect.TypeUtils:1533","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:339","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.byte = byte","position":"org.apache.commons.lang3.mutable.MutableByte:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(null, 0, 0)","position":"org.apache.commons.lang3.text.StrTokenizer:606","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.text.StrBuilder:2201","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:741","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAnyEmpty(java.lang.CharSequence[]))","position":"org.apache.commons.lang3.StringUtils:288","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a time zone as a number {@code +/-HHMM}\n * or {@code +/-HH:MM}.<\/p>\n */\nprivate static class TimeZoneNumberRule implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true);\n\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_NO_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false);\n\n    final boolean mColon;\n\n    /** \n     * Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.\n     * \n     * @param colon add colon between HH and MM in the output if {@code true}\n     */\nTimeZoneNumberRule(final boolean colon) {\n        boolean = boolean;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 5;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int));\n        if (int < 0) {\n            java.lang.StringBuffer.append('-');\n            int = -int;\n        } else {\n            java.lang.StringBuffer.append('+');\n        }\n        final int int = int / ((60 * 60) * 1000);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        if (boolean) {\n            java.lang.StringBuffer.append(':');\n        } \n        final int int = (int / (60 * 1000)) - (60 * int);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1167","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'D' :\n    return new boolean[]{ true , true , false , true };","position":"org.apache.commons.lang3.Conversion:252","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double -= java.lang.Number.doubleValue()","position":"org.apache.commons.lang3.mutable.MutableDouble:189","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Integer[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3096","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.0\")","position":"org.apache.commons.lang3.SystemUtils:1241","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:675","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DateUtils:1727","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.get(org.apache.commons.lang3.time.FormatCache.MultipartKey)","position":"org.apache.commons.lang3.time.FormatCache:193","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch"},"name":"add","transplant":{"sourceCode":"return (char >= 'A') && (char <= 'Z')","position":"org.apache.commons.lang3.CharUtils:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char >= '0') && (char <= '7')","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output a time zone as a number {@code +/-HHMM}\n * or {@code +/-HH:MM}.<\/p>\n */\nprivate static class TimeZoneNumberRule implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(true);\n\n    static final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule INSTANCE_NO_COLON = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false);\n\n    final boolean mColon;\n\n    /** \n     * Constructs an instance of {@code TimeZoneNumberRule} with the specified properties.\n     * \n     * @param colon add colon between HH and MM in the output if {@code true}\n     */\nTimeZoneNumberRule(final boolean colon) {\n        boolean = boolean;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 5;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int));\n        if (int < 0) {\n            java.lang.StringBuffer.append('-');\n            int = -int;\n        } else {\n            java.lang.StringBuffer.append('+');\n        }\n        final int int = int / ((60 * 60) * 1000);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        if (boolean) {\n            java.lang.StringBuffer.append(':');\n        } \n        final int int = (int / (60 * 1000)) - (60 * int);\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:1167","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:1918","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"status":-2},{"failures":[81,82],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int + int) > int) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:368","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:409","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append('-')","position":"org.apache.commons.lang3.time.FastDatePrinter:1198","type":"CtInvocationImpl"},"status":-2},{"failures":[83,84],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"L\")","position":"org.apache.commons.lang3.ClassUtils:972","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    int = java.util.Calendar.get(java.util.Calendar.int);\n    int = int - 1;\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1193","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char","position":"org.apache.commons.lang3.RandomStringUtils:286","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.java.lang.String.valueOf(char))","position":"org.apache.commons.lang3.StringUtils:5270","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (org.apache.commons.lang3.StringUtils.int)) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.String, int, java.lang.String.java.lang.String.valueOf(char));\n} ","position":"org.apache.commons.lang3.StringUtils:5381","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"code":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.NotImplementedException:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.util.regex.Pattern.matcher(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.trim(java.lang.String)).replaceAll(org.apache.commons.lang3.StringUtils.java.lang.String)","position":"org.apache.commons.lang3.StringUtils:7368","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"found":"nBytes"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5283","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (int >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1330","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long[][int] = java.lang.Long[][int].longValue()","position":"org.apache.commons.lang3.ArrayUtils:3033","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return int;\n}","position":"org.apache.commons.lang3.math.NumberUtils:124","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"newArray":"array"},"name":"add","transplant":{"sourceCode":"return double[]","position":"org.apache.commons.lang3.ArrayUtils:4127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":22,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":29,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":39,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":67,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":24,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":26,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":18,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":41,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":25,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":17,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":34,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":43,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":68,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":12,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":55,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfBytes":74,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":47,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":59,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":75,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":11,"org.apache.commons.lang3.ConversionTest.testHexToInt":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":16,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":69,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":19,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":20,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":38,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":57,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":64,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":83,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":49,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":13,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":61,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":51,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":78,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":54,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":70,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":30,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithCalendar":27,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":42,"org.apache.commons.lang3.math.FractionTest.testFactory_double":3,"org.apache.commons.lang3.math.FractionTest.testPow":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":73,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":76,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":77,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":58,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":62,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":21,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":60,"org.apache.commons.lang3.math.FractionTest.testMultiply":4,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithCalendar":28,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":44,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":82,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":35,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":63,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":50,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":10,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":37,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":0,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":72,"org.apache.commons.lang3.math.FractionTest.testAdd":1,"org.apache.commons.lang3.math.FractionTest.testReduce":5,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":66,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":56,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":71,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":14,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":36,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":45,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":79,"org.apache.commons.lang3.text.StrMatcherTest.testMatcherIndices":81,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":84,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":15,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":65,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":31,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":8,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":80,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringAppendable":32,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":52,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":48,"org.apache.commons.lang3.math.FractionTest.testHashCode":33,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":40,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":46}}]
