[{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:528","sourceCode":"if ((int) >= 0) {\n    return this;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:515","sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , int)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numerator":"numerator"}},{"position":"org.apache.commons.lang3.RandomStringUtils:282","failures":[],"status":0,"binaryOperator":"(char <= 56319)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:2953","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:661","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mulPos\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:906","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:807","failures":[3,4],"status":-1,"binaryOperator":"(255L & (byte[][(int + int)])) << int","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:40","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:176","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:863","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:340","sourceCode":"return org.apache.commons.lang3.math.Fraction.getFraction(int, int, int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:555","sourceCode":"return org.apache.commons.lang3.math.Fraction.invert().pow(-int)","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"denom":"power","numer":"power","whole":"power","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.JavaVersion:151","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.JavaVersion:133","sourceCode":"return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:244","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:663","sourceCode":"throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.reflect.MethodUtils:292","failures":[],"status":0,"binaryOperator":"(\"No such accessible method: \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:597","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1052","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"u":"shift"}},{"position":"org.apache.commons.lang3.Conversion:950","failures":[12],"status":-1,"binaryOperator":"(int & (~int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:208","sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:449","sourceCode":"if (java.lang.String == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32);\n    java.lang.StringBuilder.append('[');\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(\"..\");\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(']');\n    java.lang.String = java.lang.StringBuilder.toString();\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"failures":[13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"className":"toString"}},{"position":"org.apache.commons.lang3.math.Fraction:912","failures":[15],"status":-1,"binaryOperator":"(java.lang.String) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:775","sourceCode":"char[][int++] = 'e'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:388","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char)","type":"CtAssignmentImpl"},"failures":[16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:159","sourceCode":"int -= int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:104","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[18],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"value":"offset","operand":"offset"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:77","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Writer must not be null\")","type":"CtThrowImpl"},"failures":[19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:226","sourceCode":"return java.lang.Float.parseFloat(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:225","sourceCode":"try {\n    return java.lang.Float.java.lang.Float.parseFloat(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return float;\n}","type":"CtTryImpl"},"failures":[23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"position":"org.apache.commons.lang3.CharEncoding:96","failures":[25],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:248","sourceCode":"return true","type":"CtReturnImpl"},"failures":[26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:334","sourceCode":"return true","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:183","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:667","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:663","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nullString":"falseString","str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:284","sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:206","sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.time.StopWatch.State.RUNNING":"runningState","runningState":"runningState"}},{"position":"org.apache.commons.lang3.Conversion:1441","failures":[33],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":31,"org.apache.commons.lang3.ConversionTest.testIntToHex":33,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":18,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":21,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatStringF":23,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":26,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":6,"org.apache.commons.lang3.ConversionTest.testHexToInt":12,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":17,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte":7,"org.apache.commons.lang3.RangeTest.testToString":13,"org.apache.commons.lang3.math.FractionTest.testSubtract":0,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":11,"org.apache.commons.lang3.math.FractionTest.testPow":8,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":29,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":27,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":4,"org.apache.commons.lang3.math.FractionTest.testNegate":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":19,"org.apache.commons.lang3.JavaVersionTest.testGetJavaVersion":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":22,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":16,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":5,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":14,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":3,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":28,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":32,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":20,"org.apache.commons.lang3.math.FractionTest.testToString":15,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":30,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":25,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":24,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":10}}]
