[{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:326","sourceCode":"if (java.lang.Object == java.lang.Object) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:159","sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"rhs":"object1","lhs":"object1"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:76","sourceCode":"if (java.util.Locale == null) {\n    java.util.Locale = java.util.Locale.java.util.Locale.getDefault();\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,1,2,41,3,4,5,6,42,43,44,45,46,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:521","sourceCode":"if (boolean[][int]) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:306","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","type":"CtIfImpl"},"failures":[49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:302","sourceCode":"return java.lang.Float.java.lang.Float.compare(float, float)","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2127","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1300","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"i","endIndex":"i"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1368","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"foundDigit"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:127","sourceCode":"return java.lang.Double.java.lang.Double.isInfinite(double)","type":"CtReturnImpl"},"failures":[52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:769","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:965","sourceCode":"int = int[][int]","type":"CtAssignmentImpl"},"failures":[53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"max","shift":"max","i":"max"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:115","sourceCode":"return 6","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:276","sourceCode":"double = double","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:189","sourceCode":"this.double -= java.lang.Number.doubleValue()","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delta1":"value","delta2":"value"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:174","sourceCode":"for (int int = 0 ; (java.lang.Class<?> != java.lang.Class<?>) && (int < (org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int)) ; int++) {\n    if (java.lang.Class<?> == (org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][int])) {\n        float += 0.1F;\n        if (int < ((org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n            java.lang.Class<?> = org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(int + 1)];\n        } \n    } \n}","type":"CtForImpl"},"failures":[58,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1372","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:534","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharRange:226","failures":[],"status":0,"binaryOperator":"(83 + (char))","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:732","failures":[62],"status":-1,"binaryOperator":"(int * 16)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:183","sourceCode":"if (int < 0) {\n    long = (int * ((long)(int))) - int;\n} else {\n    long = (int * ((long)(int))) + int;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:186","sourceCode":"long = (int * ((long)(int))) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:538","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'b';\n} else {\n    return 'a';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:552","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2226","sourceCode":"if ((int <= 0) || (int >= int)) {\n    return \"\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:125","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, false, true)","type":"CtReturnImpl"},"failures":[65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"count","length":"count","size":"count"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:808","sourceCode":"final long long = 255L << int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1686","sourceCode":"final long long = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.getMillisPerUnit(int)","type":"CtLocalVariableImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shift":"unit"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:732","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1360","sourceCode":"for (int int = 0 ; int < (float[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[][int]);\n}","type":"CtForImpl"},"failures":[111,112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:1132","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.lang.StringBuilder.append(\"[]\");\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1438","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (int >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dim":"nHexs","canonicalClassNameBuffer":"sb"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:492","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[115,116,117,118,119,120,121,58,122,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1971","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1491","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"failures":[123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nullText":"nullText"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2893","sourceCode":"if (long < 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:904","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"n":"dstInit"}},{"position":"org.apache.commons.lang3.time.StopWatch:346","failures":[124],"status":-1,"binaryOperator":"java.lang.System.(java.lang.System.nanoTime()) - (this.long)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:615","sourceCode":"int = -int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:620","sourceCode":"int = (int - int) / 2","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"u":"v","t":"t"}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:139","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:555","sourceCode":"int int = (java.util.List<java.lang.String>.size()) - 1","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:114","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[125],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.StrTokenizer:603","failures":[126],"status":-1,"binaryOperator":"(java.lang.String[]) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":112,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":76,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":103,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":35,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":72,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":8,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":89,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":97,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":119,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":87,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":10,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":34,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":77,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":88,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":6,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":22,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":37,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":5,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":93,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":28,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":18,"org.apache.commons.lang3.mutable.MutableDoubleTest.testNanInfinite":52,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":122,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":79,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":104,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":96,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":121,"org.apache.commons.lang3.ConversionTest.testIntToHex":114,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":108,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":25,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":12,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":71,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":91,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":102,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":26,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsFalse":15,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":110,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":38,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":20,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":82,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":75,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":16,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":1,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":81,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":7,"org.apache.commons.lang3.mutable.MutableFloatTest.testCompareTo":51,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":13,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":95,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":117,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":24,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":48,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":126,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":30,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":67,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":66,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":73,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":101,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":99,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":85,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":106,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":11,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":0,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":74,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":60,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":49,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":57,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":78,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":100,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":2,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":123,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":29,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":58,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":62,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":33,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":56,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":42,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":124,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":61,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":64,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":120,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":107,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":80,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":86,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":84,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":44,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":111,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":59,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":70,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":105,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":83,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":115,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":68,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":90,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":31,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":45,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":47,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":65,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":55,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":46,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":92,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":4,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":113}}]
