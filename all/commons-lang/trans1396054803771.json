[{"failures":[0],"binaryOperator":"(int * 16)","name":"math","position":"org.apache.commons.lang3.Conversion:732","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Short[][int] = java.lang.Short.java.lang.Short.valueOf(short[][int])","position":"org.apache.commons.lang3.ArrayUtils:3213","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.NumberUtils:1418","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getFuture().get()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.initialize();\n} finally {\n    if ((java.util.concurrent.ExecutorService) != null) {\n        java.util.concurrent.ExecutorService.shutdown();\n    } \n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:326","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) < long) {\n        long = long[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:794","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:669","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType()","position":"org.apache.commons.lang3.reflect.TypeUtils:854","type":"CtLocalVariableImpl"},"status":-2},{"failures":[1,2,3],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((byte[].int) != (byte[].int)) {\n    int = (byte[].int) < (byte[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:862","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"buf"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","position":"org.apache.commons.lang3.text.StrBuilder:1246","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())","position":"org.apache.commons.lang3.text.StrSubstitutor:557","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1892","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (this == org.apache.commons.lang3.math.Fraction) {\n    return 0;\n} ","position":"org.apache.commons.lang3.math.Fraction:884","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:901","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(java.lang.CharSequence[])) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:259","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:944","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","remove":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"return java.lang.String.substring(java.lang.String.length())","position":"org.apache.commons.lang3.StringUtils:4219","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.ClassUtils:237","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.CharSetUtils:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.this(java.lang.Object, null, null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (int + int) - (int - int)","position":"org.apache.commons.lang3.text.StrSubstitutor:855","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.String.indexOf(java.lang.String[][int])","position":"org.apache.commons.lang3.StringUtils:4727","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false)","position":"org.apache.commons.lang3.time.FastDatePrinter:1169","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:674","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2714","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"org.apache.commons.lang3.exception.ExceptionUtils:207","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((char[][(int + 1)]) == 'x') || ((char[][(int + 1)]) == 'X')) {\n    int int = int + 2;\n    if (int == int) {\n        return false;\n    } \n    for ( ; int < (char[].int) ; int++) {\n        if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n            return false;\n        } \n    }\n    return true;\n} else {\n    int int = int + 1;\n    for ( ; int < (char[].int) ; int++) {\n        if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n            return false;\n        } \n    }\n    return true;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1350","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > (int + 1)) && ((char[][int]) == '0')) {\n    if (((char[][(int + 1)]) == 'x') || ((char[][(int + 1)]) == 'X')) {\n        int int = int + 2;\n        if (int == int) {\n            return false;\n        } \n        for ( ; int < (char[].int) ; int++) {\n            if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n                return false;\n            } \n        }\n        return true;\n    } else {\n        int int = int + 1;\n        for ( ; int < (char[].int) ; int++) {\n            if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n                return false;\n            } \n        }\n        return true;\n    }\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1349","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","pos":"pos","this":"this"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","position":"org.apache.commons.lang3.math.Fraction:346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf('/');\n    if (int < 0) {\n        throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n    } else {\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n        return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int);\n    }\n} ","position":"org.apache.commons.lang3.math.Fraction:331","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')')","position":"org.apache.commons.lang3.time.FastDateParser:610","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n    java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:169","type":"CtIfImpl"},"status":0},{"failures":[4,5,6,3,7,8,9,10,11,12,13],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:940","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[], java.lang.Object[], null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:621","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"(\"Could not find ceiling of for type: \" + (java.lang.Object.getClass()))","name":"math","position":"org.apache.commons.lang3.time.DateUtils:944","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) == (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: too large to negate\");\n} ","position":"org.apache.commons.lang3.math.Fraction:512","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + 4), ((int) - int))","position":"org.apache.commons.lang3.text.StrBuilder:1577","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:1079","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(int[], char, 0, int[].int)","position":"org.apache.commons.lang3.StringUtils:3371","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 6 :\n    return '6';","position":"org.apache.commons.lang3.Conversion:642","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:159","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<java.lang.String, V>) == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:162","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1794","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = boolean[][int]","position":"org.apache.commons.lang3.ArrayUtils:1581","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int < 0) || (int > (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2799","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = int;\n}","position":"org.apache.commons.lang3.StringUtils:6927","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"prefix":"valueDelimiter","valueMap":"valueMap","suffix":"suffix"},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V> , java.lang.String , java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:198","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.mapLookup(java.util.Map<java.lang.String, V>), java.lang.String, java.lang.String, char, java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:296","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, true)","position":"org.apache.commons.lang3.time.FastDateParser:578","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, -1)","position":"org.apache.commons.lang3.time.DateUtils:1221","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"namingPattern":"fieldSeparator","pattern":"fieldSeparator"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:306","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1897","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 13 :\n    return 'b';","position":"org.apache.commons.lang3.Conversion:656","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double = double","position":"org.apache.commons.lang3.mutable.MutableDouble:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.short -= java.lang.Number.shortValue()","position":"org.apache.commons.lang3.mutable.MutableShort:170","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long[][0]","position":"org.apache.commons.lang3.math.NumberUtils:941","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>()","position":"org.apache.commons.lang3.builder.ToStringStyle:137","type":"CtNewClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '9';\n} else {\n    return '8';\n}","position":"org.apache.commons.lang3.Conversion:544","type":"CtIfImpl"},"status":-2},{"failures":[14],"variableMapping":{"toTypeVarAssigns":"typeVarAssigns","this":"this","fromTypeVarAssigns":"typeVarAssigns","typeVarAssigns":"typeVarAssigns"},"name":"replace","transplant":{"sourceCode":"for (final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> : java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.keySet()) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if (((java.lang.reflect.Type != null) && (!(java.lang.reflect.Type.equals(java.lang.reflect.Type)))) && (!((java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) && (org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:464","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n            return false;\n        } \n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:628","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{"suffix":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1038","type":"CtInvocationImpl"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = byte == byte","position":"org.apache.commons.lang3.builder.EqualsBuilder:570","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isArray())) {\n    boolean = java.lang.Object.equals(java.lang.Object);\n} else if ((java.lang.Object.getClass()) != (java.lang.Object.getClass())) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n} else if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:463","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"className"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(\"[\")) {\n    while ((java.lang.String.charAt(0)) == '[') {\n        java.lang.String = java.lang.String.substring(1);\n        java.lang.StringBuilder.append(\"[]\");\n    }\n    if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n        java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n    } \n    if (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)) {\n        java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    } \n} ","position":"org.apache.commons.lang3.ClassUtils:202","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String) ? null : java.lang.String","position":"org.apache.commons.lang3.StringUtils:445","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.util.concurrent.ConcurrentHashMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>(7)","position":"org.apache.commons.lang3.time.FormatCache:45","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length())) + 1","position":"org.apache.commons.lang3.StringUtils:1116","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:155","type":"CtThrowImpl"},"status":-2},{"failures":[55],"binaryOperator":"(char[][int]) != char","name":"negateConditional","position":"org.apache.commons.lang3.text.StrBuilder:1705","type":"mutation","status":-1},{"failures":[56,57,58],"variableMapping":{"strLen":"startIndex","str":"str","startIndex":"startIndex","this":"this"},"name":"add","transplant":{"sourceCode":"if (int == 1) {\n    return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String.charAt(0), int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2464","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.text.StrBuilder:2341","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1793","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char","position":"org.apache.commons.lang3.text.StrBuilder:2027","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"cs":"input","searchChar":"index","start":"index"},"name":"add","transplant":{"sourceCode":"if (java.lang.CharSequence instanceof java.lang.String) {\n    return ((java.lang.String)(java.lang.CharSequence)).lastIndexOf(int, int);\n} else {\n    final int int = java.lang.CharSequence.length();\n    if (int < 0) {\n        return -1;\n    } \n    if (int >= int) {\n        int = int - 1;\n    } \n    for (int int = int ; int >= 0 ; --int) {\n        if ((java.lang.CharSequence.charAt(int)) == int) {\n            return int;\n        } \n    }\n    return -1;\n}","position":"org.apache.commons.lang3.CharSequenceUtils:117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((java.lang.CharSequence.charAt(int)) == '\\\\') && ((int + 1) < (java.lang.CharSequence.length()))) && ((java.lang.CharSequence.charAt((int + 1))) == 'u')) {\n    int int = 2;\n    while (((int + int) < (java.lang.CharSequence.length())) && ((java.lang.CharSequence.charAt((int + int))) == 'u')) {\n        int++;\n    }\n    if (((int + int) < (java.lang.CharSequence.length())) && ((java.lang.CharSequence.charAt((int + int))) == '+')) {\n        int++;\n    } \n    if (((int + int) + 4) <= (java.lang.CharSequence.length())) {\n        final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence((int + int), ((int + int) + 4));\n        try {\n            final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.toString(), 16);\n            java.io.Writer.write(((char)(int)));\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + java.lang.CharSequence) , java.lang.NumberFormatException);\n        }\n        return int + 4;\n    } else {\n        throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: \\'\" + (java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length()))) + \"\\' due to end of CharSequence\"));\n    }\n} ","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:37","type":"CtIfImpl"},"status":-2},{"failures":[59],"binaryOperator":"(int * 4)","name":"math","position":"org.apache.commons.lang3.Conversion:1015","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.substring(java.lang.String.length())","position":"org.apache.commons.lang3.StringUtils:4219","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (java.lang.String.length())) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2076","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.java.lang.String.valueOf(double))","position":"org.apache.commons.lang3.text.StrBuilder:839","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:497","type":"CtReturnImpl"},"status":-2},{"failures":[60],"variableMapping":{"name":"name","this":"this"},"name":"replace","transplant":{"sourceCode":"return java.lang.Class.forName(java.lang.String, false, java.lang.Thread.currentThread().getContextClassLoader())","position":"org.apache.commons.lang3.SerializationUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.ClassLoader);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    try {\n        return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n        if (java.lang.Class<?> != null) {\n            return java.lang.Class<?>;\n        } else {\n            throw java.lang.ClassNotFoundException;\n        }\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:322","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{"t":"found"},"name":"replace","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int /= 2;\n}","position":"org.apache.commons.lang3.math.Fraction:610","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5645","type":"CtInvocationImpl"},"status":-2},{"failures":[61],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 3","position":"org.apache.commons.lang3.Conversion:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, 0)","position":"org.apache.commons.lang3.StringUtils:930","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1029","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:64","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)])","position":"org.apache.commons.lang3.exception.ExceptionUtils:523","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == (org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][int])) {\n    float += 0.1F;\n    if (int < ((org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n        java.lang.Class<?> = org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(int + 1)];\n    } \n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:176","type":"CtIfImpl"},"status":-2},{"failures":[62],"variableMapping":{"str":"version"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.SystemUtils:1428","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this","enumClass":"enumClass"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.EnumUtils.asEnum(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:290","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.EnumUtils.org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:250","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.CharSequenceUtils:172","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.java.lang.Character.isDigit(char)","position":"org.apache.commons.lang3.time.FastDateParser:570","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"last":"ch","lastIdx":"i","org.apache.commons.lang3.CharUtils.CR":"ch"},"name":"add","transplant":{"sourceCode":"if (char != char) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:5016","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n} ","position":"org.apache.commons.lang3.StringUtils:5782","type":"CtIfImpl"},"status":0},{"failures":[63],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:776","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:139","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.getActualMaximum(int[][0])","position":"org.apache.commons.lang3.time.DateUtils:1082","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDateFormat:435","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeField(java.lang.reflect.Field, ((java.lang.Object)(null)), java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:603","type":"CtInvocationImpl"},"status":-2},{"failures":[64,65],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int))","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:116","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"(((int - 1) * 16) + int)","name":"math","position":"org.apache.commons.lang3.Conversion:762","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    java.lang.reflect.Field.setAccessible(true);\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:686","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.StopWatch:73","type":"CtReturnImpl"},"status":-2},{"failures":[66],"variableMapping":{"value":"value"},"name":"add","transplant":{"sourceCode":"(this.short)--","position":"org.apache.commons.lang3.mutable.MutableShort:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(short)++","position":"org.apache.commons.lang3.mutable.MutableShort:118","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[67],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:185","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final long[] long[] = new long[int]","position":"org.apache.commons.lang3.ArrayUtils:929","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:833","type":"CtIfImpl"},"status":-2},{"failures":[68],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY":"array","array":"array","length":"index"},"name":"add","transplant":{"sourceCode":"if ((float[] == null) || (int == 0)) {\n    return float[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.add(float[], int, java.lang.Float.java.lang.Float.valueOf(float), java.lang.Float.java.lang.Class<java.lang.Float>)))","position":"org.apache.commons.lang3.ArrayUtils:4514","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"a":"a","b":"b","this":"this"},"name":"add","transplant":{"sourceCode":"return java.lang.Math.java.lang.Math.max(float, float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:261","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.min(float, float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:143","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][int++] = 'a'","position":"org.apache.commons.lang3.text.StrBuilder:1587","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int += 60 * int;\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:384","type":"CtIfImpl"},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"binaryOperator":"char == '\\''","name":"negateConditional","position":"org.apache.commons.lang3.time.CopyQuotedStrategy:567","type":"mutation","status":-1},{"failures":[176,177,178,179,179,180,181,181,182,182,183,183,184,184,185,186,187,188,189,189,190,191,192,193,194,195,196,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,213,214,215,216,216,217,218,218,219,220,221,222,223,223,224,225,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"variableMapping":{"fieldName":"fieldName","this":"this","buffer":"buffer","value":"item"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:503","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:905","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char char = char[][int]","position":"org.apache.commons.lang3.StringUtils:5777","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.lang3.ArrayUtils:1688","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) - 1","position":"org.apache.commons.lang3.time.DateUtils:1054","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = \"...\"","position":"org.apache.commons.lang3.StringUtils:6409","type":"CtLocalVariableImpl"},"status":-2},{"failures":[256],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:2067","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:73","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:48","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"offset":"i","length":"i"},"name":"add","transplant":{"sourceCode":"int int = int + int","position":"org.apache.commons.lang3.text.StrSubstitutor:761","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String[][int].length()","position":"org.apache.commons.lang3.time.FastDatePrinter:700","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.util.Collection<?>)","position":"org.apache.commons.lang3.builder.ToStringStyle:607","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.util.Collection<?>)","position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:83","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"array":"result"},"name":"add","transplant":{"sourceCode":"if (float[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float[]","position":"org.apache.commons.lang3.ArrayUtils:3375","type":"CtReturnImpl"},"status":0},{"failures":[257],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:274","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"char = 0","position":"org.apache.commons.lang3.CharRange:294","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = char","position":"org.apache.commons.lang3.CharRange:72","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterString(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:279","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(float[], java.util.BitSet)))","position":"org.apache.commons.lang3.ArrayUtils:5826","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces()","position":"org.apache.commons.lang3.reflect.MethodUtils:425","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = java.lang.Class<?>.getTypeParameters()","position":"org.apache.commons.lang3.reflect.TypeUtils:871","type":"CtLocalVariableImpl"},"status":-2},{"failures":[258],"variableMapping":{"ch":"start"},"name":"replace","transplant":{"sourceCode":"return (char < 32) || (char == 127)","position":"org.apache.commons.lang3.CharUtils:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char))","position":"org.apache.commons.lang3.CharRange:188","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.IEEE754rUtils:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:268","type":"CtIfImpl"},"status":-2},{"failures":[259,260],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1292","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    final long long = (255L & (byte[][(int + int)])) << int;\n    final long long = 255L << int;\n    long = (long & (~long)) | long;\n}","position":"org.apache.commons.lang3.Conversion:805","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()","position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String, null)","position":"org.apache.commons.lang3.text.WordUtils:324","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str1":"str","str2":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6503","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4171","type":"CtIfImpl"},"status":0},{"failures":[261,262,263,264,265,266,267,268,269,14,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)).getBounds()) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:388","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:374","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:211","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this)","position":"org.apache.commons.lang3.reflect.TypeUtils:192","type":"CtReturnImpl"},"status":-2},{"failures":[302,302,303,303,304],"variableMapping":{"str":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1212","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"(short[][int]) > short","name":"conditionalBoundary","position":"org.apache.commons.lang3.math.NumberUtils:989","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7089","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Date != null) && ((java.text.ParsePosition.getIndex()) == (java.lang.String.length()))) {\n    return java.util.Date;\n} ","position":"org.apache.commons.lang3.time.DateUtils:387","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.math.Fraction.ZERO":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:214","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    return org.apache.commons.lang3.math.Fraction.equals(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","position":"org.apache.commons.lang3.math.Fraction:470","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"duration":"tmp","tmp":"duration"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:200","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:364","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.remove(int)","position":"org.apache.commons.lang3.exception.ExceptionUtils:562","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":265,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":287,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":228,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":236,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":225,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":23,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":70,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":73,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":288,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArrayHiddenByObject":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":82,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":279,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":145,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":126,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":147,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectBuild":26,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":36,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":163,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":202,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":51,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":241,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":146,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":1,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":53,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":247,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":295,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":5,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":13,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":197,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":86,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":131,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":285,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":151,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":32,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":237,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":11,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":283,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":99,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":16,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":47,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":61,"org.apache.commons.lang3.ConversionTest.testHexToByte":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":230,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":214,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":257,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":218,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":178,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":121,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":158,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":109,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":208,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":90,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":264,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":124,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":238,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":272,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":185,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":153,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":262,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":221,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":25,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":139,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":170,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":144,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":239,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":76,"org.apache.commons.lang3.SerializationUtilsTest.testPrimitiveTypeClassSerialization":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":203,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":52,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":196,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":235,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":136,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":93,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":8,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":117,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":175,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":200,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":242,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":71,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":27,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":35,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":182,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":292,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":134,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":162,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":72,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":260,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":161,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":193,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":224,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":211,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":91,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":275,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":48,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":168,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":10,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":69,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":298,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":38,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":77,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":67,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":160,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":94,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":155,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":14,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":192,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":271,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":290,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":301,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":112,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":207,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":100,"org.apache.commons.lang3.SystemUtilsTest.testJavaVersionMatches":62,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":187,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":106,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":240,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArrayHiddenByObject":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":201,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArrayHiddenByObject":37,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":267,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":92,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":111,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":138,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":54,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":188,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObject":50,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":57,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":281,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":217,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":269,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":212,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":195,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":15,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":22,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":167,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":286,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":119,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":177,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":132,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":263,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":299,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":220,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":29,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":174,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":166,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArray":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":191,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":24,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":190,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":75,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":43,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":102,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":280,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":118,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":268,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":277,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":133,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_char":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":213,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":296,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":96,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":149,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":199,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":303,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":122,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":243,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":282,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":68,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":33,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":150,"org.apache.commons.lang3.ArrayUtilsTest.testToString":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":304,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":3,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":74,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":169,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":294,"org.apache.commons.lang3.mutable.MutableShortTest.testIncrement":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":219,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":79,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":107,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":273,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":19,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":125,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":216,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":256,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":227,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":56,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":181,"org.apache.commons.lang3.builder.DiffTest.testGetType":276,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":215,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":204,"org.apache.commons.lang3.text.StrTokenizerTest.test8":255,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":95,"org.apache.commons.lang3.time.DateUtilsTest.testRound":63,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":108,"org.apache.commons.lang3.text.StrTokenizerTest.test5":252,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":115,"org.apache.commons.lang3.text.StrTokenizerTest.test4":251,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":205,"org.apache.commons.lang3.text.StrTokenizerTest.test7":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":206,"org.apache.commons.lang3.text.StrTokenizerTest.test6":253,"org.apache.commons.lang3.text.StrTokenizerTest.test1":248,"org.apache.commons.lang3.text.StrTokenizerTest.test3":250,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":164,"org.apache.commons.lang3.text.StrTokenizerTest.test2":249,"org.apache.commons.lang3.builder.DiffTest.testToString":274,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":17,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":141,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":258,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":157,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":142,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":12,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":116,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":110,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":180,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":49,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":300,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":209,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":289,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":172,"org.apache.commons.lang3.time.FastDateParserTest.testParses":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":223,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":179,"org.apache.commons.lang3.builder.EqualsBuilderTest.testUnrelatedClasses":45,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":259,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":6,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":231,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":184,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":130,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":270,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":46,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":261,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":186,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":81,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":143,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":18,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":105,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":103,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":302,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":20,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":41,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":233,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":246}}]
