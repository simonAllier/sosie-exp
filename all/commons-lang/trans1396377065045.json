[{"failures":[0,1,2],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:5434","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:852","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[], java.lang.Object[], null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:621","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (short[] == null) {\n    int = (int) * (int);\n} else {\n    for (final short short : short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(short);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (org.apache.commons.lang3.StringUtils.int)) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.String, int, java.lang.String.java.lang.String.valueOf(char));\n} ","position":"org.apache.commons.lang3.StringUtils:5381","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","position":"org.apache.commons.lang3.math.Fraction:148","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.ArrayStoreException","position":"org.apache.commons.lang3.ArrayUtils:3740","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"length":"i","i":"i","chars":"chars"},"name":"add","transplant":{"sourceCode":"for ( ; int < (char[].int) ; int++) {\n    if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1359","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1415","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateParser:423","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"o1":"o2","o2":"o2","this":"this","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>.isAnnotation()) {\n    return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(java.lang.Class<?>.getComponentType(), java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:271","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.IEEE754rUtils:256","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2432","type":"CtReturnImpl"},"status":-2},{"failures":[3,4],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1053","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:466","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String))","position":"org.apache.commons.lang3.math.NumberUtils:600","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.ReflectionToStringBuilder(java.lang.Object).setExcludeFieldNames(java.lang.String[])","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:350","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 4095) {\n    java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 255) {\n    java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:117","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output one of a set of values.<\/p>\n */\nprivate static class TextField implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final int mField;\n\n    private final java.lang.String[] mValues;\n\n    /** \n     * Constructs an instance of {@code TextField}\n     * with the specified field and values.\n     * \n     * @param field the field\n     * @param values the field values\n     */\nTextField(final int field ,final java.lang.String[] values) {\n        int = int;\n        java.lang.String[] = java.lang.String[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        int int = 0;\n        for (int int = java.lang.String[].int ; (--int) >= 0 ; ) {\n            final int int = java.lang.String[][int].length();\n            if (int > int) {\n                int = int;\n            } \n        }\n        return int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String[][java.util.Calendar.get(int)]);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:677","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:294","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.math.NumberUtils:1247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?>[][int] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>[][int]);\n}","position":"org.apache.commons.lang3.ClassUtils:737","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","position":"org.apache.commons.lang3.time.FastDateParser:370","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.text.StrSubstitutor:869","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","position":"org.apache.commons.lang3.text.WordUtils:418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 1 :\n    {\n        final char char = java.lang.String.charAt(0);\n        if ((((char == 'y') || (char == 'Y')) || (char == 't')) || (char == 'T')) {\n            return java.lang.Boolean.java.lang.Boolean;\n        } \n        if ((((char == 'n') || (char == 'N')) || (char == 'f')) || (char == 'F')) {\n            return java.lang.Boolean.java.lang.Boolean;\n        } \n        break;\n    }","position":"org.apache.commons.lang3.BooleanUtils:561","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.lang3.math.Fraction:586","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == (char[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2340","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startCutoff":"offset"},"name":"add","transplant":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int + 1","position":"org.apache.commons.lang3.text.WordUtils:212","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"t":"u","v":"u"},"name":"add","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.math.Fraction:617","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int - int) / 2","position":"org.apache.commons.lang3.math.Fraction:620","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.StringUtils:5141","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds())) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType), org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1624","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(char);\n} ","position":"org.apache.commons.lang3.StringUtils:3818","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1664","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt((int)++)","position":"org.apache.commons.lang3.text.StrBuilder:2866","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:544","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, long)","position":"org.apache.commons.lang3.builder.ToStringBuilder:802","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[] = org.apache.commons.lang3.text.StrBuilder.char[]","position":"org.apache.commons.lang3.text.StrSubstitutor:773","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Locale = java.util.Locale.java.util.Locale.getDefault()","position":"org.apache.commons.lang3.time.FormatCache:77","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class<?>, java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:987","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 'd'","position":"org.apache.commons.lang3.Conversion:531","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '6'","position":"org.apache.commons.lang3.Conversion:557","type":"CtReturnImpl"},"status":-2},{"failures":[5],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6108","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.Character.(java.lang.Character.isDigit(java.lang.CharSequence.charAt(int))) == false) && ((java.lang.CharSequence.charAt(int)) != ' ')) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6075","type":"CtForImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Element that is parsed from the format pattern.\n */\nstatic class Token {\n    /** \n     * Helper method to determine if a set of tokens contain a value\n     * \n     * @param tokens set to look in\n     * @param value to look for\n     * @return boolean <code>true<\/code> if contained\n     */\nstatic boolean containsTokenWithValue(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final java.lang.Object value) {\n        final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token[].int;\n        for (int int = 0 ; int < int ; int++) {\n            if ((org.apache.commons.lang3.time.DurationFormatUtils.Token[][int].getValue()) == java.lang.Object) {\n                return true;\n            } \n        }\n        return false;\n    }\n\n    private final java.lang.Object value;\n\n    private int count;\n\n    /** \n     * Wraps a token around a value. A value would be something like a 'Y'.\n     * \n     * @param value to wrap\n     */\nToken(final java.lang.Object value) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = 1;\n    }\n\n    /** \n     * Wraps a token around a repeated number of a value, for example it would\n     * store 'yyyy' as a value for y and a count of 4.\n     * \n     * @param value to wrap\n     * @param count to wrap\n     */\nToken(final java.lang.Object value ,final int count) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = int;\n    }\n\n    /** \n     * Adds another one of the value\n     */\nvoid increment() {\n        (int)++;\n    }\n\n    /** \n     * Gets the current number of values represented\n     * \n     * @return int number of values represented\n     */\nint getCount() {\n        return int;\n    }\n\n    /** \n     * Gets the particular value this token represents.\n     * \n     * @return Object value\n     */\njava.lang.Object getValue() {\n        return java.lang.Object;\n    }\n\n    /** \n     * Supports equality of this Token to another Token.\n     * \n     * @param obj2 Object to consider equality of\n     * @return boolean <code>true<\/code> if equal\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj2) {\n        if (java.lang.Object instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(java.lang.Object));\n            if ((this.java.lang.Object.getClass()) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.getClass())) {\n                return false;\n            } \n            if ((this.int) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.int)) {\n                return false;\n            } \n            if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n            } else if ((this.java.lang.Object) instanceof java.lang.Number) {\n                return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            } else {\n                return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            }\n        } \n        return false;\n    }\n\n    /** \n     * Returns a hash code for the token equal to the\n     * hash code for the token's value. Thus 'TT' and 'TTTT'\n     * will have the same hash code.\n     * \n     * @return The hash code for the token\n     */\n@java.lang.Override\n    public int hashCode() {\n        return this.java.lang.Object.hashCode();\n    }\n\n    /** \n     * Represents this token as a String.\n     * \n     * @return String representation of the token\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(this.java.lang.Object.toString(), this.int);\n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:557","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"token":"separator"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(\"at\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:649","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2338","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream = new java.io.ObjectOutputStream(java.io.OutputStream)","position":"org.apache.commons.lang3.SerializationUtils:153","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (char[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(char[][int], char[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:826","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char == '_') {\n    if (int < 3) {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    final char char = java.lang.String.charAt(1);\n    final char char = java.lang.String.charAt(2);\n    if ((!java.lang.Character.(java.lang.Character.isUpperCase(char))) || (!java.lang.Character.(java.lang.Character.isUpperCase(char)))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    if (int == 3) {\n        return new java.util.Locale(\"\" , java.lang.String.substring(1, 3));\n    } \n    if (int < 5) {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    if ((java.lang.String.charAt(3)) != '_') {\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n    } \n    return new java.util.Locale(\"\" , java.lang.String.substring(1, 3) , java.lang.String.substring(4));\n} ","position":"org.apache.commons.lang3.LocaleUtils:105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1903","type":"CtIfImpl"},"status":-2},{"failures":[6,7,8,9],"variableMapping":{"fromIndex":"end"},"name":"add","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:391","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:675","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1161","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5307","type":"CtLocalVariableImpl"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:695","type":"CtLocalVariableImpl"},"status":-1},{"failures":[26,27,28,29],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:303","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.apache.commons.lang3.concurrent.ConcurrentException","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:109","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.BitField.((short)(getValue(short)))","position":"org.apache.commons.lang3.BitField:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BitField.((short)(getRawValue(short)))","position":"org.apache.commons.lang3.BitField:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startCutoff":"startPos","java.util.Calendar.MONDAY":"startPos"},"name":"add","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.StringUtils:1114","type":"CtAssignmentImpl"},"status":0},{"failures":[30,31,32],"variableMapping":{"dstPos":"len","nHex":"start"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:974","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if ((java.lang.String.charAt(int)) == char) {\n        if (boolean || boolean) {\n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n            boolean = true;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:2960","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{"threshold":"mMaxLengthEstimate","m":"mMaxLengthEstimate","n":"mMaxLengthEstimate"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} else if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.time.FastDatePrinter:516","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2879","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:847","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'a' :","position":"org.apache.commons.lang3.Conversion:182","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 31) + int","position":"org.apache.commons.lang3.ObjectUtils:243","type":"CtAssignmentImpl"},"status":-2},{"failures":[33,34],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = int ; int < (char[].int) ; int++) {\n    if (char == (char[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2339","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= 0 ; int--) {\n    if (char == (char[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2386","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:733","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"this":"padStr","value":"padLen"},"name":"add","transplant":{"sourceCode":"return java.lang.String.valueOf(int)","position":"org.apache.commons.lang3.mutable.MutableInt:273","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == 1) && (int <= (org.apache.commons.lang3.StringUtils.int))) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.charAt(0));\n} ","position":"org.apache.commons.lang3.StringUtils:5311","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:1004","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.CharRange(char , char , false)","position":"org.apache.commons.lang3.CharRange:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:707","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1085","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(\": \")","position":"org.apache.commons.lang3.text.StrSubstitutor:896","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.split(java.lang.String, null, -1)","position":"org.apache.commons.lang3.StringUtils:2575","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, false)","position":"org.apache.commons.lang3.StringUtils:3176","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"end":"t"},"name":"add","transplant":{"sourceCode":"int = 'z' + 1","position":"org.apache.commons.lang3.RandomStringUtils:241","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int /= 2","position":"org.apache.commons.lang3.math.Fraction:611","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.lang3.CharRange.CharacterIterator(this)","position":"org.apache.commons.lang3.CharRange:262","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Calendar)(java.lang.Object)), int)","position":"org.apache.commons.lang3.time.DateUtils:1252","type":"CtReturnImpl"},"status":-2},{"failures":[35,36,37,38],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:399","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"count":"count","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.random(int, true, false)","position":"org.apache.commons.lang3.RandomStringUtils:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, boolean, boolean)","position":"org.apache.commons.lang3.RandomStringUtils:143","type":"CtReturnImpl"},"status":-2},{"failures":[39,40],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3126","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.builder.HashCodeBuilder:174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int >= (java.lang.String.length())) || (int < ((java.lang.String.length()) + 2))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6456","type":"CtIfImpl"},"status":-2},{"failures":[3,4],"variableMapping":{"fromTypeVarAssigns":"typeVarAssigns"},"name":"add","transplant":{"sourceCode":"if (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:448","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> : java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.keySet()) {\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if (((java.lang.reflect.Type != null) && (!(java.lang.reflect.Type.equals(java.lang.reflect.Type)))) && (!((java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:464","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"6.0\")","position":"org.apache.commons.lang3.SystemUtils:1241","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7089","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 4","position":"org.apache.commons.lang3.text.StrBuilder:1582","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:490","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1053","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T T = null","position":"org.apache.commons.lang3.ObjectUtils:581","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.lang3.ArrayUtils:2598","type":"CtLocalVariableImpl"},"status":-2},{"failures":[41],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:3917","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (boolean[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:451","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3466","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.StrTokenizer:641","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Right hand object cannot be null\")","position":"org.apache.commons.lang3.builder.DiffResult:80","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: too large to negate\")","position":"org.apache.commons.lang3.math.Fraction:513","type":"CtThrowImpl"},"status":-2},{"failures":[42],"binaryOperator":"(int % 2)","name":"math","position":"org.apache.commons.lang3.StringUtils:6461","type":"mutation","status":-1},{"failures":[],"variableMapping":{"buf":"buf"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:580","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, java.lang.String.length())) == false) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:395","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int[].clone()","position":"org.apache.commons.lang3.ArrayUtils:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int[]","position":"org.apache.commons.lang3.Conversion:1199","type":"CtReturnImpl"},"status":-2},{"failures":[43,44],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:5081","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 32, 127, false, false)","position":"org.apache.commons.lang3.RandomStringUtils:83","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2592","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:854","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'e';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'a';\n    } else {\n        return '2';\n    }\n}","position":"org.apache.commons.lang3.Conversion:445","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final short[] short[] = new short[int]","position":"org.apache.commons.lang3.ArrayUtils:1009","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final short[] short[] = new short[(short[].int) + (short[].int)]","position":"org.apache.commons.lang3.ArrayUtils:3855","type":"CtLocalVariableImpl"},"status":-2},{"failures":[45],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((short[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:348","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((int[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:351","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(long[], 0, long[], 0, long[].int)","position":"org.apache.commons.lang3.ArrayUtils:3914","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:48","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:73","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:952","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= (int) ; int--) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence(int, (int + int));\n    final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(java.lang.CharSequence.toString());\n    if (java.lang.CharSequence != null) {\n        java.io.Writer.write(java.lang.CharSequence.toString());\n        return int;\n    } \n}","position":"org.apache.commons.lang3.text.translate.LookupTranslator:75","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Long.java.lang.Long.decode(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:712","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7040","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:584","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, java.lang.CharSequence, java.lang.String))","position":"org.apache.commons.lang3.Validate:851","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","position":"org.apache.commons.lang3.ObjectUtils:528","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>)","position":"org.apache.commons.lang3.text.StrTokenizer:646","type":"CtAssignmentImpl"},"status":-2},{"failures":[46,47],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2231","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (short[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2277","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Method))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n    boolean = false;\n} else {\n    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n}","position":"org.apache.commons.lang3.CharRange:287","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:1082","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1538","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"tz","timeZone":"tz"},"name":"add","transplant":{"sourceCode":"java.util.TimeZone = java.util.TimeZone.getDefault()","position":"org.apache.commons.lang3.time.FormatCache:74","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone)","position":"org.apache.commons.lang3.time.FastDateParser:754","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"index","tmp":"index"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:1979","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (char < 32) || (char == 127)","position":"org.apache.commons.lang3.CharUtils:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.text.Format[] java.text.Format[] = java.text.MessageFormat.getFormats()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:197","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"length"},"name":"add","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:815","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (long[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(long[][int], long[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:706","type":"CtForImpl"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:313","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = java.lang.Math.(java.lang.Math.round(((double + ((double * int) * (1.0 - double))) * 100.0))) / 100.0","position":"org.apache.commons.lang3.StringUtils:7020","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) * ((long)(org.apache.commons.lang3.math.Fraction.int))","position":"org.apache.commons.lang3.math.Fraction:892","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1013","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (int - int) - 1","position":"org.apache.commons.lang3.ArrayUtils:6039","type":"CtLocalVariableImpl"},"status":-2},{"failures":[99],"variableMapping":{"i":"pos"},"name":"replace","transplant":{"sourceCode":"if (int == 25) {\n    throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n} ","position":"org.apache.commons.lang3.math.Fraction:295","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int) + long) > (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n    long = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2893","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"this","this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)","position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(long)","position":"org.apache.commons.lang3.text.StrBuilder:1039","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:689","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:854","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = \"-1\"","position":"org.apache.commons.lang3.math.Fraction:937","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2734","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:276","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence, java.lang.CharSequence, 0)","position":"org.apache.commons.lang3.StringUtils:1074","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"endIndexExclusive","numerator":"length"},"name":"replace","transplant":{"sourceCode":"if ((this.int) == int) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\");\n} ","position":"org.apache.commons.lang3.math.Fraction:493","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (float[].int)) {\n    int = float[].int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1161","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"bit_pattern":"len","count":"len"},"name":"add","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","position":"org.apache.commons.lang3.BitField:43","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + int))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:455","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array"},"name":"add","transplant":{"sourceCode":"return short[].clone()","position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.ArrayUtils:576","type":"CtReturnImpl"},"status":-2},{"failures":[100],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5274","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5719","type":"CtIfImpl"},"status":-1},{"failures":[101,102],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:671","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:664","type":"CtIfImpl"},"status":-1},{"failures":[103,104,105,106,107,108,109,110,111],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrTokenizer:703","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int)(long))","position":"org.apache.commons.lang3.mutable.MutableLong:182","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, int)","position":"org.apache.commons.lang3.StringUtils:5019","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":80,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":73,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":14,"org.apache.commons.lang3.tuple.TripleTest.testComparable1":37,"org.apache.commons.lang3.tuple.TripleTest.testComparable3":38,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":67,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":60,"org.apache.commons.lang3.mutable.MutableIntTest.testConstructors":103,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":84,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":71,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":74,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":13,"org.apache.commons.lang3.mutable.MutableIntTest.testGetSet":104,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":100,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringChar":31,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":7,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":82,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":23,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccess":86,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":18,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfFloats":41,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":99,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":3,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":53,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":62,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":78,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValueObject":111,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":2,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":57,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":58,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfCharWithStartIndex":34,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":16,"org.apache.commons.lang3.tuple.PairTest.testComparable1":36,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":51,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":85,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":8,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":24,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":43,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithWhitespacesShouldNotThrow":92,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":87,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":46,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":0,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValuePrimitive":108,"org.apache.commons.lang3.StringUtilsTest.testLANG666":6,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringShouldNotThrow":93,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":98,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":15,"org.apache.commons.lang3.builder.CompareToBuilderTest.testAppendSuper":35,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":70,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":45,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithWhitespacesShouldNotThrow":96,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringChar":32,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":12,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":40,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":27,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringShouldNotThrow":94,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValueObject":109,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":22,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":81,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":97,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":30,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":39,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":50,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":20,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":54,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":66,"org.apache.commons.lang3.mutable.MutableLongTest.testPrimitiveValues":106,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":1,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":72,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumericSpace":5,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":42,"org.apache.commons.lang3.mutable.MutableLongTest.testDecrement":110,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":88,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":10,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfChar":33,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":52,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":21,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":83,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":64,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":102,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripEnd_StringString":9,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValuePrimitive":107,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":11,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":4,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":65,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithNewlinesShouldNotThrow":95,"org.apache.commons.lang3.time.FastDateParserTest.testParses":17,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":77,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":25,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":47,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":61,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":79,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithNewlinesShouldNotThrow":89,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":101,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":55,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":28,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":56,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":49,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues2":91,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":19,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":44,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":69,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":75,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues1":90,"org.apache.commons.lang3.mutable.MutableLongTest.testIncrement":105,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":26,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":59,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":63}}]
