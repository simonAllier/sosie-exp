[{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:773","sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:1133","failures":[],"status":0,"binaryOperator":"short < short","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:337","sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:455","sourceCode":"java.lang.StringBuilder.append(']')","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"regex":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:309","sourceCode":"java.lang.String java.lang.String = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:647","sourceCode":"final java.lang.String java.lang.String = java.util.StringTokenizer.nextToken()","type":"CtLocalVariableImpl"},"failures":[30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:538","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:503","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,38,39,40,41,42,43,44,45,46,46,47,48,49,50,51,52,52,53,54,55,56,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:611","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:143","sourceCode":"return false","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:130","sourceCode":"return boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:120","sourceCode":"return (boolean) == false","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:213","sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:800","sourceCode":"if (((int) == 0) || ((org.apache.commons.lang3.math.Fraction.int) == 0)) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:732","sourceCode":"return false","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.IEEE754rUtils:190","failures":[81],"status":-1,"binaryOperator":"int < (float[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1374","sourceCode":"return false","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:533","sourceCode":"return 'c'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:282","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[], 0)","type":"CtReturnImpl"},"failures":[83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:179","sourceCode":"return int & (~(int))","type":"CtReturnImpl"},"failures":[85,86,87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:345","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:330","sourceCode":"int = java.lang.String.indexOf(' ')","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"superCompareTo":"pos","comparison":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:508","sourceCode":"if (int > (-1)) {\n    if (int > (java.lang.String.length())) {\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    } \n    java.lang.String = java.lang.String.substring(0, int);\n} else {\n    java.lang.String = java.lang.String;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:413","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n        boolean = false;\n        break;\n    } \n}","type":"CtForImpl"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,38,41,42,46,48,54,55,56,57,59,63,67,68,69,71,74,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"fieldSeparator","mant":"fieldSeparator","expPos":"sepLen"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:817","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float)","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:560","sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:491","failures":[107,108,109,110],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:974","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:360","sourceCode":"return \"\\\\u\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:955","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:885","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"buf","this":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:895","sourceCode":"org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.4\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:995","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Mac\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:850","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"user.timezone\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:428","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, char[].int)","type":"CtInvocationImpl"},"failures":[0,112,2,5,7,11,12,16,19,21,23,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:987","sourceCode":"if ((short[][int]) > short) {\n    short = short[][int];\n} ","type":"CtIfImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:184","sourceCode":"if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3044","sourceCode":"for (int int = 0 ; int < (java.lang.Long[].int) ; int++) {\n    final java.lang.Long java.lang.Long = java.lang.Long[][int];\n    long[][int] = java.lang.Long == null ? long : java.lang.Long.longValue();\n}","type":"CtForImpl"},"failures":[114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:741","sourceCode":"boolean boolean = int > 0","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":65,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":16,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":71,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":66,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":94,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":78,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":67,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":68,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":32,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":42,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":15,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":109,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":92,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":41,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":48,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":79,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":23,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":84,"org.apache.commons.lang3.RangeTest.testToString":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":91,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":88,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":63,"org.apache.commons.lang3.BitFieldTest.testClear":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":59,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":50,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":96,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":106,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":72,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":21,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_long_long":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":3,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":110,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":18,"org.apache.commons.lang3.BitFieldTest.testClearShort":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":55,"org.apache.commons.lang3.BitFieldTest.testByte":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":14,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":74}}]
