[{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:259","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:790","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:2373","sourceCode":"if (int >= int) {\n    int = int - 1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:273","sourceCode":"if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"count","length":"count","array":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:79","sourceCode":"if (T == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:581","sourceCode":"return T","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"result"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:886","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(\": \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:739","sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buf":"workArea"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:292","sourceCode":"return new java.lang.String(char[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2230","sourceCode":"return new java.lang.String(char[] , int , ((int) - int))","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:333","sourceCode":"boolean = !boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1369","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"inLiteral":"allowSigns"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1133","sourceCode":"if (short < short) {\n    short = short;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1242","sourceCode":"if (short > short) {\n    short = short;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"a","a":"a"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"position":"org.apache.commons.lang3.time.FastDateParser:255","failures":[],"status":0,"binaryOperator":"(((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1372","sourceCode":"if (boolean || boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1426","sourceCode":"return (boolean && (!boolean)) && (!boolean)","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:195","sourceCode":"return ((this.char) <= (this.char)) && ((this.char) >= (this.char))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:188","sourceCode":"return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char))","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"range":"range","start":"end","end":"start"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1717","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4062","sourceCode":"byte[][(int - 1)] = byte","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1011","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"element":"max","newArray":"array","length":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:934","sourceCode":"if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:938","sourceCode":"if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numerator":"numerator","denominator":"numerator","this":"this","toProperString":"toProperString"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:60","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:639","failures":[98],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:505","sourceCode":"if (java.lang.Boolean == null) {\n    return java.lang.Integer;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:508","sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Integer : java.lang.Integer","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nullValue":"falseValue","bool":"bool"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:155","sourceCode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1120","sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"date2":"focus","date1":"focus"}},{"position":"org.apache.commons.lang3.math.NumberUtils:1115","failures":[],"status":0,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:529","sourceCode":"if (java.lang.Object != null) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:274","sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"o2"}},{"position":"org.apache.commons.lang3.math.NumberUtils:467","inlineConstant":"char char = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1119","sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:771","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"failures":[99,91,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:367","sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","sourceCode":"if (java.lang.reflect.Method == null) {\n    java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:239","sourceCode":"return java.lang.Class<?>.getSimpleName()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1590","sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"cls"}},{"transplant":{"position":"org.apache.commons.lang3.CsvUnescaper:312","sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:460","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\")","type":"CtThrowImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:558","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n}","type":"CtIfImpl"},"failures":[104,54,55,56,57,58,105,59,60,106,81,107,101,108,82,109,110,111,83,112,102,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,129,130,131,131,132,133,134,134,84,84,135,135,136,136,137,137,138,138,139,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,154,155,156,156,157,158,159,159,160,160,161,162,163,163,164,164,85,165,165,166,166,167,167,168,169,170,171,86,86,172,172,173,174,175,176,87,177,177,178,179,180,180,181,181,182,183,88,184,185,186,186,187,188,189,189,190,190,191,191,192,192,193,194,194,195,195,196,197,89,198,199,200,90,201,202,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":99,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":161,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":202,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":135,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":146,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":95,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":194,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":163,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":124,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":26,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":2,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":65,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":71,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":147,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":134,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":199,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":191,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":72,"org.apache.commons.lang3.ObjectUtilsTest.testMode":31,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":11,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":34,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":167,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":85,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":173,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":158,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":181,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":136,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":196,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":69,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":152,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":183,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":25,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":193,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":157,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":192,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":7,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":195,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":153,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":125,"org.apache.commons.lang3.math.FractionTest.testToProperString":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":15,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":150,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":144,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":178,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":28,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":131,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":123,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":82,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":42,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":20,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":141,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":102,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":189,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":27,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":190,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":112,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":50,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":107,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":168,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":90,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":172,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":16,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":180,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":200,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":187,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":129,"org.apache.commons.lang3.text.StrTokenizerTest.test1":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":77,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":78,"org.apache.commons.lang3.text.StrTokenizerTest.test3":56,"org.apache.commons.lang3.text.StrTokenizerTest.test2":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":156,"org.apache.commons.lang3.text.StrTokenizerTest.test8":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":151,"org.apache.commons.lang3.text.StrTokenizerTest.test5":58,"org.apache.commons.lang3.text.StrTokenizerTest.test4":57,"org.apache.commons.lang3.text.StrTokenizerTest.test7":59,"org.apache.commons.lang3.text.StrTokenizerTest.test6":105,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":113,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":176,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":44,"org.apache.commons.lang3.ArrayUtilsTest.testToString":106,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":100,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":1,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":117,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":53,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":116,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":37,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":154,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":64,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":81,"org.apache.commons.lang3.RangeTest.testIsEndedBy":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":165,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":9,"org.apache.commons.lang3.text.StrBuilderTest.testMidString":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":19,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":179,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":21,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":139}}]
