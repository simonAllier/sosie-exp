[{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1027","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:243","sourceCode":"final int int = (java.lang.String.hashCode()) * 127","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1061","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:518","sourceCode":"java.lang.Class<?>[] = java.lang.Class<?>[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:112","sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"classArray":"parameterTypes","org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:191","sourceCode":"return ((short)(org.apache.commons.lang3.BitField.clear(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:84","sourceCode":"return org.apache.commons.lang3.BitField.((short)(getValue(short)))","type":"CtReturnImpl"},"failures":[11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"holder":"holder","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:927","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.7\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1178","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"4.9\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:940","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:274","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nHex":"count","dstPos":"count"}},{"position":"org.apache.commons.lang3.Conversion:805","failures":[15,16],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:658","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1076","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:523","sourceCode":"if ((int > (int + 2)) && (boolean[][(int + 2)])) {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:466","sourceCode":"if (boolean[][int]) {\n    return '8';\n} else {\n    return '0';\n}","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"srcPos","src":"src"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1299","sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[][int]);\n}","type":"CtForImpl"},"failures":[21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:748","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1135","sourceCode":"return org.apache.commons.lang3.text.StrMatcher.setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1000","sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"valueDelimiter":"prefix","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:97","sourceCode":"this.long = long","type":"CtAssignmentImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1238","sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int]);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1337","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[31,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numeric":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1078","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:311","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"element":"object","this":"builder"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1208","sourceCode":"java.lang.StringBuffer.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1057","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:394","sourceCode":"return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:339","sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]))","type":"CtReturnImpl"},"failures":[35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"parentClass":"cls","methodName":"methodName","parameterTypes":"parameterTypes"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:385","sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.SplitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.org.apache.commons.lang3.time.StopWatch.SplitState)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \");\n} ","type":"CtIfImpl"},"failures":[37],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:792","sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) < long) {\n        long = long[][int];\n    } \n}","type":"CtForImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:83","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 32, 127, false, false)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:69","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, false, false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1030","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","type":"CtIfImpl"},"failures":[39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"suffixMatcher":"trimmer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:236","sourceCode":"int = char[].int","type":"CtAssignmentImpl"},"failures":[49],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:981","failures":[50],"status":-1,"binaryOperator":"(int * 4) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:523","sourceCode":"if ((int > (int + 2)) && (boolean[][(int + 2)])) {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:422","sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return '3';\n}","type":"CtIfImpl"},"failures":[20,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"srcPos","src":"src"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ContextedRuntimeException:148","sourceCode":"org.apache.commons.lang3.exception.ExceptionContext = new org.apache.commons.lang3.exception.DefaultExceptionContext()","type":"CtAssignmentImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.AtomicSafeInitializer:60","sourceCode":"new java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:246","sourceCode":"try {\n    final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>);\n    return java.lang.reflect.Constructor<T>;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:328","sourceCode":"return '9'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:557","sourceCode":"return '6'","type":"CtReturnImpl"},"failures":[53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:206","sourceCode":"org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)","type":"CtInvocationImpl"},"failures":[55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":3,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":19,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":47,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testNullExceptionPassing":52,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":10,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":48,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":43,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":28,"org.apache.commons.lang3.mutable.MutableLongTest.testGetSet":30,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":42,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":33,"org.apache.commons.lang3.ConversionTest.testHexToShort":50,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":2,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":54,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":36,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":7,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":21,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":34,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":31,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":5,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":9,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":29,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":56,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":26,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":40,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":39,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":8,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":15,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":25,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":35,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":45,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":27,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":55,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":49,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong":38,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":51}}]
