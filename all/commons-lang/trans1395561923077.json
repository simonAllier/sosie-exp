[{"transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:744","sourceCode":"int = (int * int) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:848","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"iTotal":"change","value":"change","iConstant":"change"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1191","sourceCode":"int = java.util.Calendar.get(java.util.Calendar.int)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1195","sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) - 3","type":"CtAssignmentImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Validate:506","sourceCode":"org.apache.commons.lang3.Validate.notNull(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:517","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this","array":"items"}},{"position":"org.apache.commons.lang3.text.StrTokenizer:604","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"binaryOperator":"(char[]) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:934","sourceCode":"if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:936","sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"numerator":"denominator","denominator":"numerator","this":"this","toProperString":"toProperString"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:304","sourceCode":"if (!boolean) {\n    java.lang.Object.wait();\n} else {\n    (int)++;\n}","type":"CtIfImpl"},"failures":[68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:595","inlineConstant":"int int = 0","failures":[73,74,75,76,77,78,79,80,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:545","sourceCode":"return '9'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:360","sourceCode":"return '0'","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:639","failures":[84],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:439","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:492","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[], 0)","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:65","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[85,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:378","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1722","sourceCode":"if ((char[][int]) == char) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + 1), 1);\n    break;\n} ","type":"CtIfImpl"},"failures":[87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:293","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:804","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:305","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:446","sourceCode":"if (boolean[][int]) {\n    return 'e';\n} else {\n    return '6';\n}","type":"CtIfImpl"},"failures":[90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:580","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:67","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1071","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:278","sourceCode":"char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:265","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = char;\n    int--;\n    char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n}","type":"CtIfImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1065","sourceCode":"float = float[][int]","type":"CtAssignmentImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:113","sourceCode":"int = int + 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:241","sourceCode":"int = 'z' + 1","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"offset":"end","spaceToWrapAt":"end"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:473","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:212","sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrLookup:53","sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = ((java.util.Map<java.lang.String, java.lang.String>)(java.util.Map<?, ?>))","type":"CtLocalVariableImpl"},"failures":[100,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:332","sourceCode":"return false","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1063","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:326","sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1751","sourceCode":"java.lang.StringBuilder.append('>')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:130","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","type":"CtInvocationImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buf":"wrappedLine"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4279","sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:213","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, null)","type":"CtReturnImpl"},"failures":[104,105,106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"pattern","remove":"pattern"}},{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testToString":27,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":16,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":50,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":64,"org.apache.commons.lang3.math.FractionTest.testFactory_double":77,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":20,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":10,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":8,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":24,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":15,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":22,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireLimit":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":0,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":49,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":53,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":103,"org.apache.commons.lang3.RangeTest.testIsAfterRange":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":59,"org.apache.commons.lang3.RangeTest.testElementCompareTo":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":9,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":63,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":60,"org.apache.commons.lang3.math.FractionTest.testPow":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":32,"org.apache.commons.lang3.math.FractionTest.testReduce":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":30,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAvailablePermits":72,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":104,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":38,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAverageCallsPerPeriod":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":2,"org.apache.commons.lang3.HashSetvBitSetTest.testTimes":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":18,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":67,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":78,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":99,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":105,"org.apache.commons.lang3.text.StrTokenizerTest.test1":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":65,"org.apache.commons.lang3.text.StrTokenizerTest.test3":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":66,"org.apache.commons.lang3.text.StrTokenizerTest.test2":42,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":73,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":68,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":102,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":82,"org.apache.commons.lang3.math.FractionTest.testSubtract":76,"org.apache.commons.lang3.text.StrTokenizerTest.test8":48,"org.apache.commons.lang3.math.FractionTest.testAdd":74,"org.apache.commons.lang3.text.StrTokenizerTest.test5":45,"org.apache.commons.lang3.text.StrTokenizerTest.test4":44,"org.apache.commons.lang3.text.StrTokenizerTest.test7":47,"org.apache.commons.lang3.text.StrTokenizerTest.test6":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":54,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":91,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":37,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":28,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":83,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":89,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":29,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":94,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_char":87,"org.apache.commons.lang3.math.FractionTest.testMultiply":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":6,"org.apache.commons.lang3.text.StrLookupTest.testSystemProperiesLookup":100,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":39,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":21,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":96,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":97,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":90,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":52,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultiplePeriods":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":14,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":40,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullInput":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":12,"org.apache.commons.lang3.math.FractionTest.testDivide":79,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":98,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":106,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":58,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":85,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":7,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":23,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":25,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":86}}]
