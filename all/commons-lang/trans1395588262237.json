[{"transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:235","sourceCode":"java.lang.Thread.setDaemon(org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag().booleanValue())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:223","sourceCode":"java.lang.Thread.setName(java.lang.String.java.lang.String.format(org.apache.commons.lang3.concurrent.BasicThreadFactory.getNamingPattern(), java.lang.Long))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:612","sourceCode":"if (int <= 16) {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} ","type":"CtIfImpl"},"failures":[1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:360","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:140","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1295","sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:45","sourceCode":"int >>= 1","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:179","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:304","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:433","sourceCode":"if ((java.lang.String.length()) > 2) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:195","sourceCode":"try {\n    java.text.DateFormat java.text.DateFormat;\n    if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n    }\n    java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String = java.lang.String;\n    } \n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"formatField":"pattern"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:490","sourceCode":"if (char == char) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:69","sourceCode":"return (char >= '0') && (char <= '7')","type":"CtReturnImpl"},"failures":[19,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delimiter":"ch","ch":"ch"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"(this.short)--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:149","sourceCode":"this.short += java.lang.Number.shortValue()","type":"CtOperatorAssignmentImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:587","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:292","sourceCode":"return true","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:72","sourceCode":"char char = ' '","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:604","sourceCode":"final char char = java.lang.String.charAt(3)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1738","sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:350","sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int))","type":"CtLocalVariableImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:789","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"yes\", \"no\", null)","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:634","sourceCode":"if (java.lang.String == null) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharEncoding:95","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"name"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:139","sourceCode":"return 15","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:102","sourceCode":"return float < float ? -1 : float < float ? 1 : 0","type":"CtReturnImpl"},"failures":[27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:360","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:444","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:971","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Validate:826","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1006","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4314","sourceCode":"if (org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:271","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (int == 0)) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","remove":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:108","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:314","sourceCode":"return 'd'","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4561","sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:607","sourceCode":"do {\n    while ((int & 1) == 0) {\n        int /= 2;\n    }\n    if (int > 0) {\n        int = -int;\n    } else {\n        int = int;\n    }\n    int = (int - int) / 2;\n} while (int != 0 )","type":"CtDoImpl"},"failures":[53,54,55,56,57,58,59,60,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"t","length":"u"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:913","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1265","sourceCode":"short[][(int + int)] = ((short)(65535 & (int >> int)))","type":"CtAssignmentImpl"},"failures":[62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:936","sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(long[])","type":"CtInvocationImpl"},"failures":[63,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:118","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1593","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:201","sourceCode":"return ((int)(float))","type":"CtReturnImpl"},"failures":[65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:40","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:516","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:506","sourceCode":"int = java.lang.String.length()","type":"CtAssignmentImpl"},"failures":[1,69,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:936","failures":[],"status":0,"binaryOperator":"((-1) * (int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1240","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:262","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:146","sourceCode":"float--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:146","sourceCode":"float++","type":"CtUnaryOperatorImpl"},"failures":[27,28,29,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:561","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:517","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[75,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:125","sourceCode":"if (int == 2) {\n    return new java.util.Locale(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:202","sourceCode":"throw new java.lang.IllegalArgumentException(\"The InputStream must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:189","sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":72,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":12,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":21,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":8,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":31,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":49,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":16,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":15,"org.apache.commons.lang3.math.FractionTest.testFactory_double":57,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":53,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":27,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_emptyArray":63,"org.apache.commons.lang3.math.FractionTest.testSubtract":56,"org.apache.commons.lang3.math.FractionTest.testAdd":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":36,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":35,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_nullArray":64,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":42,"org.apache.commons.lang3.mutable.MutableFloatTest.testDecrement":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":37,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":2,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":77,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":68,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":62,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumFloat":6,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":79,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":7,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":14,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":28,"org.apache.commons.lang3.mutable.MutableFloatTest.testIncrement":65,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":71,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":9,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":24,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":13,"org.apache.commons.lang3.math.FractionTest.testMultiply":60,"org.apache.commons.lang3.mutable.MutableShortTest.testAddValueObject":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":45,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":47,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":69,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":32,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":5,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":34,"org.apache.commons.lang3.math.FractionTest.testPow":55,"org.apache.commons.lang3.mutable.MutableFloatTest.testPrimitiveValues":66,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":40,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":70,"org.apache.commons.lang3.math.FractionTest.testReduce":61,"org.apache.commons.lang3.math.FractionTest.testDivide":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":38,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":4,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":19,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":50,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":33,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":52,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":18,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":11,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":43,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":1,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":78,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":26,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":10}}]
