[{"position":"org.apache.commons.lang3.math.NumberUtils:1203","failures":[],"status":0,"binaryOperator":"long > long","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:304","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:568","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '3';\n} else {\n    return '2';\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:481","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:483","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)","type":"CtReturnImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4707","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:517","sourceCode":"if (java.lang.Throwable == null) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:137","sourceCode":"new java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:110","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:122","sourceCode":"org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1033","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"suffixMatcher"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:809","sourceCode":"long = (long & (~long)) | long","type":"CtAssignmentImpl"},"failures":[5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:863","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:48","sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1518","failures":[8],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:260","sourceCode":"for (java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.reflect.Constructor<?>[]) {\n    if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Constructor<?>.getParameterTypes(), true)) {\n        java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>);\n        if (java.lang.reflect.Constructor<?> != null) {\n            org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n            if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n                java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n            } \n        } \n    } \n}","type":"CtForEachImpl"},"failures":[9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:958","sourceCode":"throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Validate:747","sourceCode":"throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","type":"CtThrowImpl"},"failures":[12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:555","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:653","sourceCode":"if (java.lang.String == null) {\n    if (java.lang.String == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.String == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.String == null) {\n        return null;\n    } \n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:301","sourceCode":"return java.lang.Double.java.lang.Double.compare(double, double)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:302","sourceCode":"return java.lang.Float.java.lang.Float.compare(float, float)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:157","sourceCode":"return true","type":"CtReturnImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","sourceCode":"if (java.lang.String[] == null) {\n    java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n} ","type":"CtIfImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testByteToHex":8,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":25,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":27,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":31,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":36,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":28,"org.apache.commons.lang3.text.StrTokenizerTest.test1":17,"org.apache.commons.lang3.text.StrTokenizerTest.test3":19,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":22,"org.apache.commons.lang3.text.StrTokenizerTest.test2":18,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":23,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":9,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":35,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":4,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_charSequence":13,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":38,"org.apache.commons.lang3.text.StrTokenizerTest.test5":20,"org.apache.commons.lang3.text.StrTokenizerTest.test7":21,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":1,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWrap":32,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":6,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":26,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":14,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":3,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":34,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":33,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":16,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":7,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":12,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":29,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":10,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":5,"org.apache.commons.lang3.math.FractionTest.testToProperString":0,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":11,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":30,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":24,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":2,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":37,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":15}}]
