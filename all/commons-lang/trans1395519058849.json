[{"transplant":{"position":"org.apache.commons.lang3.Conversion:1118","sourceCode":"if (((int - 1) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:246","sourceCode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"end","nBools":"end"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:72","sourceCode":"char = char","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1050","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:973","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.charMatcher(char))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:937","sourceCode":"if (0 == int) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:216","sourceCode":"return int | (int)","type":"CtReturnImpl"},"failures":[7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nHex":"holder","dstInit":"holder"}},{"position":"org.apache.commons.lang3.Conversion:880","failures":[10],"status":-1,"binaryOperator":"(255 & (byte[][(int + int)]))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:69","sourceCode":"return (char >= '0') && (char <= '7')","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1623","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) == char) {\n        if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n            if (int == int) {\n                return true;\n            } \n            if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n                return true;\n            } \n        } else {\n            return true;\n        }\n    } \n}","type":"CtForImpl"},"failures":[11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSet:250","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharSet) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:142","sourceCode":"if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"v1"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1005","sourceCode":"if (0 == int) {\n    return byte;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1152","sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return byte;\n} ","type":"CtIfImpl"},"failures":[21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nHex":"srcPos","dstInit":"dstInit"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:128","sourceCode":"if (int < 5) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","failures":[23],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:446","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:568","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:768","failures":[25],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:115","failures":[26],"status":-1,"name":"returnValue","return":"return 6","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:382","sourceCode":"java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\")","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:814","sourceCode":"java.lang.String = java.lang.String.substring(0, int)","type":"CtAssignmentImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str2":"varName","str":"varName"}},{"position":"org.apache.commons.lang3.SystemUtils:1441","failures":[28],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","failures":[23],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:294","sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:760","sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:777","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(org.apache.commons.lang3.SystemUtils.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:309","sourceCode":"if (java.util.Collection<java.lang.String> == null) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.AnnotationUtils:143","failures":[30],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:117","failures":[31,32,33,34,35,36],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:218","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Constructor<T>, \"constructor cannot be null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:265","sourceCode":"if (java.lang.reflect.Constructor<?> != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n    if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n        java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n    } \n} ","type":"CtIfImpl"},"failures":[37,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:455","sourceCode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:201","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:193","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.time.FastDateParser)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:313","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"o2"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:246","sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:308","sourceCode":"this.long += java.lang.System.(java.lang.System.nanoTime()) - (this.long)","type":"CtOperatorAssignmentImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this","stopTime":"stopTime"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:981","sourceCode":"return false","type":"CtReturnImpl"},"failures":[41,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","sourceCode":"if ((int >= int) && (int <= (this.int))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","sourceCode":"if ((int < (int)) || (int > (int))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[31,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"codepoint":"below","below":"codepoint","above":"below"}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":35,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":42,"org.apache.commons.lang3.CharSetTest.testContains_Char":2,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":44,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":26,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":21,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":14,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":41,"org.apache.commons.lang3.mutable.MutableBooleanTest.testEquals":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":32,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":47,"org.apache.commons.lang3.CharRangeTest.testContains_Char":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":31,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":0,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":17,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":33,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":37,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":36,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":48,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":12,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":66,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":65,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":62,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":20,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":24,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":10,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":22,"org.apache.commons.lang3.BitFieldTest.testSet":7,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":29,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":18,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":34,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":39,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":6,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":64,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":61,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":45,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":57,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":56,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":55,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":16,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":50,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":30,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":4,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":11,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":52,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":43,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":46,"org.apache.commons.lang3.BitFieldTest.testSetShort":9,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":15,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":25,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":27,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":38,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":49,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":54,"org.apache.commons.lang3.BitFieldTest.testByte":8,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":40,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":63}}]
