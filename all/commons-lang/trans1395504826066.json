[{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:510","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:464","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.HOUR_OF_DAY_STRATEGY"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1655","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"useIdentityHashCode"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1825","sourceCode":"break","type":"CtBreakImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:78","sourceCode":"final java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:176","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:413","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:885","sourceCode":"org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.3\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:995","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Mac\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:176","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:934","sourceCode":"if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"denominator":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateFormatUtils:62","sourceCode":"org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(\"yyyy-MM-dd\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1822","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1398","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:952","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, java.lang.Object[].int)","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:116","sourceCode":"if ((java.lang.String.charAt(3)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2066","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[55,18,56,57,58,49,59,19,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"summaryObjectStartText"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1346","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5135","sourceCode":"for (int int = (int * 2) - 2 ; int >= 0 ; int-- , int--) {\n    char[][int] = char;\n    char[][(int + 1)] = char;\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:760","sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"output2":"chars","ch1":"escape","ch0":"escape","repeat":"bufEnd"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:185","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:528","sourceCode":"throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:458","sourceCode":"final int int = java.lang.String.length()","type":"CtLocalVariableImpl"},"failures":[93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:111","sourceCode":"return 2","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2531","sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0, double)","type":"CtReturnImpl"},"failures":[95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:397","sourceCode":"if (boolean) {\n    for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n        if (java.lang.Class<?>.isAssignableFrom(java.lang.Throwable[][int].getClass())) {\n            return int;\n        } \n    }\n} else {\n    for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n        if (java.lang.Class<?>.equals(java.lang.Throwable[][int].getClass())) {\n            return int;\n        } \n    }\n}","type":"CtIfImpl"},"failures":[97,98,99,100],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1016","failures":[101],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int)))))","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:631","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[102,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:99","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:502","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:522","sourceCode":"if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[106,106,20,21,34,34,35,36,37,107,38,108,109,110,110,39,111,112,51,40,41,42,113,43,114,115,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:147","sourceCode":"java.lang.String[] = this.java.lang.String[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:460","sourceCode":"java.lang.String[] = null","type":"CtAssignmentImpl"},"failures":[116,117,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodNames":"tokens","org.apache.commons.lang3.exception.ExceptionUtils.CAUSE_METHOD_NAMES":"tokens"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:857","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:780","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:683","sourceCode":"org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,102,144,20,21,23,24,25,26,145,27,28,29,146,103,30,31,32,147,33,148,149,34,35,37,38,39,112,41,42,43,114,44],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToByte":101,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":108,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":90,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":119,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":112,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":137,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":124,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":82,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":50,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":59,"org.apache.commons.lang3.time.DateUtilsTest.testRound":131,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":145,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":136,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":126,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":127,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":110,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":27,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":88,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":1,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":56,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":141,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":94,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":8,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":51,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":12,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":89,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":13,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":77,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":49,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":122,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":31,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":147,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":78,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":20,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":29,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":74,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":66,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":37,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":142,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":64,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":115,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":19,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":97,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":128,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":58,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":99,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":132,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":39,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":148,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":53,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":3,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":95,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":84,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":65,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":98,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":83,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":44}}]
