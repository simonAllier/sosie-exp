[{"failures":[0,0],"variableMapping":{"suffix":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte)","position":"org.apache.commons.lang3.builder.ToStringStyle:733","type":"CtInvocationImpl"},"status":-1},{"failures":[1],"variableMapping":{"str":"contentStart","str2":"contentStart"},"name":"replace","transplant":{"sourceCode":"java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\")","position":"org.apache.commons.lang3.time.DateUtils:383","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1819","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:378","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:6917","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:139","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle()","position":"org.apache.commons.lang3.builder.ToStringStyle:106","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5271","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"tempExec":"tempExec"},"name":"add","transplant":{"sourceCode":"java.util.concurrent.ExecutorService = null","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:182","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1177","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1116","type":"CtForImpl"},"status":0},{"failures":[115],"variableMapping":{"a":"a","b":"a","c":"b","this":"this"},"name":"replace","transplant":{"sourceCode":"return java.lang.Math.min(java.lang.Math.min(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1191","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:140","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.(isStarted())) {\n    java.util.concurrent.ExecutorService java.util.concurrent.ExecutorService;\n    java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getExternalExecutor();\n    if ((java.util.concurrent.ExecutorService) == null) {\n        java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor();\n    } else {\n        java.util.concurrent.ExecutorService = null;\n    }\n    java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService));\n    return true;\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:175","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size())","position":"org.apache.commons.lang3.builder.ToStringStyle:491","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object, java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:863","type":"CtInvocationImpl"},"status":-2},{"failures":[7,14,65,78,86,95,103,116,111],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('+')","position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1201","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:632","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:380","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, boolean)","position":"org.apache.commons.lang3.builder.ToStringBuilder:276","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 6 :\n    return '6';","position":"org.apache.commons.lang3.Conversion:642","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean))","position":"org.apache.commons.lang3.builder.ToStringStyle:445","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, 0, char[].int)","position":"org.apache.commons.lang3.text.StrMatcher:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:909","type":"CtInvocationImpl"},"status":-2},{"failures":[117],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float, float), float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:242","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1297","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1102","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"duration":"sizeStartText"},"name":"add","transplant":{"sourceCode":"java.lang.String = \" \" + java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:178","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:2003","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:399","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize()","position":"org.apache.commons.lang3.concurrent.LazyInitializer:101","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:40","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.io.IOException)","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:63","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"style":"this"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, char[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1217","type":"CtIfImpl"},"status":0},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getFuture()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:212","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"binaryOperator":"((\"The character \" + char) + \" is not in the range \\'0\\' - \\'9\\'\")","name":"math","position":"org.apache.commons.lang3.CharUtils:219","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:377","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask(java.util.concurrent.ExecutorService)","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:291","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup<java.lang.String> = org.apache.commons.lang3.text.StrLookup<java.lang.String>","position":"org.apache.commons.lang3.text.StrLookup:58","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    int = (boolean[].int) < (boolean[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:982","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(short)","position":"org.apache.commons.lang3.builder.ToStringStyle:718","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:350","type":"CtInvocationImpl"},"status":-2},{"failures":[145],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new java.lang.String(new char[]{ char })","position":"org.apache.commons.lang3.CharUtils:311","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\\\\u\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","position":"org.apache.commons.lang3.CharUtils:360","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',')","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry()","position":"org.apache.commons.lang3.builder.ToStringStyle:187","type":"CtLocalVariableImpl"},"status":-2},{"failures":[141],"name":"returnValue","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:73","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:48","type":"CtAssignmentImpl"},"status":0},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.concurrent.Future<T>) == null) {\n    throw new java.lang.IllegalStateException(\"start() must be called first!\");\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:232","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > (java.util.Calendar.int)) {\n    int -= 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1211","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n} ","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:52","type":"CtIfImpl"},"status":-2},{"failures":[146],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString(), 8))","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:57","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:826","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double[][0]","position":"org.apache.commons.lang3.math.IEEE754rUtils:164","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> = T[].getClass()","position":"org.apache.commons.lang3.ArrayUtils:4009","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Character.java.lang.Character.valueOf(java.lang.String.charAt(0))","position":"org.apache.commons.lang3.CharUtils:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return null;\n} ","position":"org.apache.commons.lang3.CharUtils:109","type":"CtIfImpl"},"status":-2},{"failures":[2,13,41,46,52,59,73,81,90,98,147,106],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('-')","position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1061","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"fieldName":"fieldName","this":"this","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:439","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1278","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Iterable<?> != null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<?>) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object);\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1094","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:903","type":"CtInvocationImpl"},"status":-2},{"failures":[20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, float[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:3247","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:207","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"externalExecutor":"tempExec"},"name":"add","transplant":{"sourceCode":"java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:160","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService = null","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2023","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"delimMatcher":"org.apache.commons.lang3.text.StrMatcher.NONE_MATCHER"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrTokenizer:848","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1404","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1176","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4321","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:378","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterChar(char)","position":"org.apache.commons.lang3.text.StrTokenizer:268","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1395","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ true , true , false , true }","position":"org.apache.commons.lang3.Conversion:253","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (char char = 0 ; char < (org.apache.commons.lang3.CharUtils.java.lang.String[].int) ; char++) {\n    org.apache.commons.lang3.CharUtils.java.lang.String[][char] = java.lang.String.java.lang.String.valueOf(char);\n}","position":"org.apache.commons.lang3.CharUtils:54","type":"CtForImpl"},"status":-2},{"failures":[148,149,150,151,152,153,154,155,156,2,5,7,8,9,157,157,10,158,158,159,11,11,12,12,13,13,14,14,15,15,16,16,17,17,160,160,18,18,19,19,20,20,21,22,23,24,25,26,27,28,28,0,29,30,31,31,32,32,161,161,33,34,35,35,36,36,37,37,38,38,39,39,40,40,41,42,42,43,43,44,44,45,162,163,164,46,46,47,47,48,48,49,50,51,52,52,53,53,54,55,55,56,56,57,57,165,58,59,60,61,61,62,62,63,63,64,65,65,66,66,67,67,68,68,166,69,69,70,70,71,72,72,73,76,78,79,80,81,84,86,87,88,89,167,90,93,95,96,97,98,101,103,104,105,147,168,116,169,170,106,109,111,112,113,171,172,173,174,175,176,177,178,179,180,181,114],"binaryOperator":"java.lang.Object instanceof double[]","name":"removeConditional","position":"org.apache.commons.lang3.builder.ToStringStyle:529","type":"mutation","status":-1},{"failures":[],"variableMapping":{"result":"object","this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"synchronized(org.apache.commons.lang3.concurrent.LazyInitializer<T>) {\n    T = this.T;\n    if (T == null) {\n        this.T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n    } \n}","position":"org.apache.commons.lang3.concurrent.LazyInitializer:98","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    synchronized(this) {\n        T = T;\n        if (T == null) {\n            T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n        } \n    }\n} ","position":"org.apache.commons.lang3.concurrent.LazyInitializer:97","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:529","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:936","type":"CtInvocationImpl"},"status":-2},{"failures":[22],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:760","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"fieldSeparatorAtStart":"fieldSeparatorAtStart","this":"this","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:361","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtIfImpl"},"status":0},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","type":"mutation","return":"return 1","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:207","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:552","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringBuilder:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","object":"value"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:399","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size())","position":"org.apache.commons.lang3.builder.ToStringStyle:491","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:553","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:902","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch","org.apache.commons.lang3.CharUtils.CHAR_STRING_ARRAY":"org.apache.commons.lang3.CharUtils.CHAR_STRING_ARRAY"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.CharUtils.java.lang.String[][char]","position":"org.apache.commons.lang3.CharUtils:309","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char < 128) {\n    return org.apache.commons.lang3.CharUtils.java.lang.String[][char];\n} ","position":"org.apache.commons.lang3.CharUtils:308","type":"CtIfImpl"},"status":-2},{"failures":[182],"name":"returnValue","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","type":"mutation","return":"return 1","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone, false, int, java.util.Locale))","position":"org.apache.commons.lang3.time.TimeZoneNameRule:1158","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:169","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(\"HH:mm:ss\")","position":"org.apache.commons.lang3.time.DateFormatUtils:94","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:706","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"newarray":"org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE"},"name":"add","transplant":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:386","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; (int < (short[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(short[][int], short[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:786","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1300","type":"CtIfImpl"},"status":-2},{"failures":[127,141,142,144],"name":"returnValue","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1522","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1767","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Object.getClass().getComponentType(), (int - int))","position":"org.apache.commons.lang3.ArrayUtils:6071","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Map<java.lang.Object, java.lang.Object> != null) && (java.util.Map<java.lang.Object, java.lang.Object>.containsKey(java.lang.Object))","position":"org.apache.commons.lang3.builder.ToStringStyle:173","type":"CtReturnImpl"},"status":-2},{"failures":[19,19,37,37,48,48,49,50,51,52,53,54,55,56,57,165,58,59,60,61,62,63,64,65,66,67,68,166,69,70,71,72],"variableMapping":{"name":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:544","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"prefix":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte)","position":"org.apache.commons.lang3.builder.ToStringBuilder:573","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1722","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:357","type":"CtIfImpl"},"status":-2},{"failures":[183,184,185],"binaryOperator":"(java.lang.Class<?> == null)","name":"removeConditional","position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","position":"org.apache.commons.lang3.StringUtils:2521","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.lastIndexOf(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:358","type":"CtLocalVariableImpl"},"status":-2},{"failures":[186],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:634","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.text.Format.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)","position":"org.apache.commons.lang3.text.CompositeFormat:69","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char = 0","position":"org.apache.commons.lang3.CharacterIterator:294","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1156","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:516","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1858","type":"CtReturnImpl"},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-1},{"failures":[22,54,61],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int)","position":"org.apache.commons.lang3.builder.ToStringStyle:677","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:517","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:7398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1780","type":"CtReturnImpl"},"status":-2},{"failures":[187,188,189,190,191,192,193,194,195,196,197,198,199],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharEncoding:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder, 0, java.lang.StringBuilder.length())","position":"org.apache.commons.lang3.text.StrSubstitutor:656","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"prior":"fieldName","value":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:906","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"float float = 0.0F","position":"org.apache.commons.lang3.reflect.MemberUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float float = float[][0]","position":"org.apache.commons.lang3.math.IEEE754rUtils:189","type":"CtLocalVariableImpl"},"status":0},{"failures":[19,19,37,37,48,48,49,50,51,52,53,54,55,56,57,165,58,59,60,61,62,63,64,65,66,67,68,166,69,70,71,72],"variableMapping":{"fieldName":"fieldName","this":"this","detail":"detail","buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:530","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:550","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((char[].int) == 0) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1813","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String must not be empty\")","position":"org.apache.commons.lang3.CharUtils:174","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Character.charValue()","position":"org.apache.commons.lang3.CharUtils:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character == null) {\n    return char;\n} ","position":"org.apache.commons.lang3.CharUtils:150","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * A strategy that handles a timezone field in the parsing pattern\n */\nprivate static class TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final java.lang.String validTimeZoneChars;\n\n    private final java.util.SortedMap<java.lang.String, java.util.TimeZone> tzNames = new java.util.TreeMap<java.lang.String, java.util.TimeZone>(java.lang.String.java.util.Comparator<java.lang.String>);\n\n    /** \n     * Index of zone id\n     */\nprivate static final int ID = 0;\n\n    /** \n     * Index of the long name of zone in standard time\n     */\nprivate static final int LONG_STD = 1;\n\n    /** \n     * Index of the short name of zone in standard time\n     */\nprivate static final int SHORT_STD = 2;\n\n    /** \n     * Index of the long name of zone in daylight saving time\n     */\nprivate static final int LONG_DST = 3;\n\n    /** \n     * Index of the short name of zone in daylight saving time\n     */\nprivate static final int SHORT_DST = 4;\n\n    /** \n     * Construct a Strategy that parses a TimeZone\n     * @param locale The Locale\n     */\nTimeZoneStrategy(final java.util.Locale locale) {\n        final java.lang.String[][] java.lang.String[][] = java.text.DateFormatSymbols.java.text.DateFormatSymbols.getInstance(java.util.Locale).getZoneStrings();\n        for (java.lang.String[] java.lang.String[] : java.lang.String[][]) {\n            if (java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int].startsWith(\"GMT\")) {\n                continue;\n            } \n            final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]);\n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (java.util.TimeZone.useDaylightTime()) {\n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n            } \n        }\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        java.lang.StringBuilder.append(\"(GMT[+\\\\-]\\\\d{0,1}\\\\d{2}|[+\\\\-]\\\\d{2}:?\\\\d{2}|\");\n        for (final java.lang.String java.lang.String : java.util.SortedMap<java.lang.String, java.util.TimeZone>.keySet()) {\n            org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|');\n        }\n        java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n        java.lang.String = java.lang.StringBuilder.toString();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        java.lang.StringBuilder.append(java.lang.String);\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.TimeZone java.util.TimeZone;\n        if (((java.lang.String.charAt(0)) == '+') || ((java.lang.String.charAt(0)) == '-')) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone((\"GMT\" + java.lang.String));\n        } else if (java.lang.String.startsWith(\"GMT\")) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n        } else {\n            java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n            if (java.util.TimeZone == null) {\n                throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n            } \n        }\n        java.util.Calendar.setTimeZone(java.util.TimeZone);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:706","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, float[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:1392","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:139","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"T T = java.util.concurrent.atomic.AtomicReference<T>.get()","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:82","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.TypeUtils:1324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n    boolean = false;\n    break;\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:414","type":"CtIfImpl"},"status":-2},{"failures":[200],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:545","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.charAt(0)","position":"org.apache.commons.lang3.CharUtils:176","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final R R = org.apache.commons.lang3.tuple.MutablePair<L, R>.getRight()","position":"org.apache.commons.lang3.tuple.MutablePair:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1555","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object);\n    org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:377","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (0 == int) {\n    return byte;\n} ","position":"org.apache.commons.lang3.Conversion:1005","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:501","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","nHexs":"length"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1431","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (long[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:994","type":"CtForImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":64,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":73,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":130,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":63,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":177,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":119,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":79,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":136,"org.apache.commons.lang3.text.CompositeFormatTest.testUsage":186,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":187,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":44,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":96,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":7,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":132,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":101,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":181,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":39,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":97,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":178,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":53,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":57,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":47,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":0,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqualObject":185,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":94,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":59,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":157,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":74,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":42,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":107,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":193,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":134,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":14,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":137,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":194,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":62,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":140,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":8,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":131,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":146,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":46,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":143,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":30,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":67,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":24,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":188,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":99,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":126,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":4,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":77,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":31,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":56,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":160,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":15,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":88,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":104,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":20,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":22,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":161,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":135,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":171,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":23,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":89,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":129,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":41,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":158,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":84,"org.apache.commons.lang3.ArrayUtilsTest.testToString":156,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":1,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":82,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":183,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":159,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":192,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":190,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":65,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":13,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":54,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":83,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":139,"org.apache.commons.lang3.text.StrTokenizerTest.test8":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":162,"org.apache.commons.lang3.text.StrTokenizerTest.test5":152,"org.apache.commons.lang3.text.StrTokenizerTest.test4":151,"org.apache.commons.lang3.text.StrTokenizerTest.test7":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":163,"org.apache.commons.lang3.text.StrTokenizerTest.test6":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":164,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":128,"org.apache.commons.lang3.text.StrTokenizerTest.test1":148,"org.apache.commons.lang3.text.StrTokenizerTest.test3":150,"org.apache.commons.lang3.text.StrTokenizerTest.test2":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":25,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":80,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":170,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":118,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":95,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":48,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":125,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":110,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":173,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":121,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":9,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":36,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":28,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":127,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":123,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":145,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":29,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":87,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":17,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqual":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":195,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":98}}]
