[{"failures":[0],"variableMapping":{"this":"this","it":"it","sep":"separator"},"name":"replace","transplant":{"sourceCode":"if (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1161","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<?> != null) {\n    @java.lang.SuppressWarnings(value = \"deprecation\")\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.toString(java.lang.String);\n    while (java.util.Iterator<?>.hasNext()) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n        if (java.util.Iterator<?>.hasNext()) {\n            org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n        } \n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1180","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"array2":"array","this":"this","array1":"array"},"name":"add","transplant":{"sourceCode":"if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} else if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.ArrayUtils.int)) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:4773","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1557","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5819","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = (java.util.List<java.lang.String>.size()) - 1","position":"org.apache.commons.lang3.exception.ExceptionUtils:554","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:273","type":"CtReturnImpl"},"status":-2},{"failures":[1,2],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:428","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:432","type":"CtInvocationImpl"},"status":-1},{"failures":[3],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateParser:299","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:1252","type":"CtIfImpl"},"status":-2},{"failures":[4,5],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.CharSetUtils:65","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.isEmpty()) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.CharSetUtils:179","type":"CtIfImpl"},"status":-1},{"failures":[6],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ObjectUtils:582","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString(), 8))","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:57","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:1079","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(int)","position":"org.apache.commons.lang3.StringUtils:2255","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:6557","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.char","position":"org.apache.commons.lang3.text.StrSubstitutor:934","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7018","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n    try {\n        org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n    }\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:317","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateFormat.this(java.lang.String, java.util.TimeZone, java.util.Locale, null)","position":"org.apache.commons.lang3.time.FastDateFormat:369","type":"CtInvocationImpl"},"status":-2},{"failures":[7],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.String) == null) {\n    return this;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String.java.lang.String.valueOf(long))","position":"org.apache.commons.lang3.text.StrBuilder:1634","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?> ; java.lang.Class<?> != null ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(java.lang.String);\n        if (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isPublic(java.lang.reflect.Field.getModifiers()))) {\n            if (boolean) {\n                java.lang.reflect.Field.setAccessible(true);\n            } else {\n                continue;\n            }\n        } \n        return java.lang.reflect.Field;\n    } catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n    }\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:101","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 4) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n} else if (int == 3) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n} else if (int == 2) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:207","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((int) == 0) || ((org.apache.commons.lang3.math.Fraction.int) == 0)) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","position":"org.apache.commons.lang3.math.Fraction:800","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getReducedFraction(((int + (int * int)) * int), int)","position":"org.apache.commons.lang3.math.Fraction:298","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return this.T","position":"org.apache.commons.lang3.mutable.MutableObject:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:534","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"_mask":"length","holder":"length"},"name":"add","transplant":{"sourceCode":"return (int & (this.int)) != 0","position":"org.apache.commons.lang3.BitField:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((java.lang.Object[] == null) && (java.lang.Object[] != null)) && ((java.lang.Object[].int) > 0)) || (((java.lang.Object[] == null) && (java.lang.Object[] != null)) && ((java.lang.Object[].int) > 0))) || (((java.lang.Object[] != null) && (java.lang.Object[] != null)) && ((java.lang.Object[].int) != (java.lang.Object[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService().shutdownNow()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:260","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)) == false) {\n    throw new java.lang.IllegalArgumentException(((\"The character \" + char) + \" is not in the range \\'0\\' - \\'9\\'\"));\n} ","position":"org.apache.commons.lang3.CharUtils:218","type":"CtIfImpl"},"status":-2},{"failures":[8,9,10,11,12],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:905","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Float.java.lang.Float.floatToIntBits(float), java.lang.Float.java.lang.Float.floatToIntBits(float))","position":"org.apache.commons.lang3.builder.EqualsBuilder:611","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:171","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], byte)","position":"org.apache.commons.lang3.ArrayUtils:4772","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:55","type":"CtReturnImpl"},"status":-2},{"failures":[13],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:597","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.text.WordUtils:550","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.StringUtils:7073","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:723","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:483","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Class<?>[][int].getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"org.apache.commons.lang3.reflect.MethodUtils:432","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'Z' :","position":"org.apache.commons.lang3.time.FastDateParser:503","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.builder.ToStringBuilder:1031","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"numerator":"i","denominator":"i"},"name":"add","transplant":{"sourceCode":"return int / int","position":"org.apache.commons.lang3.math.Fraction:443","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float[][int])) {\n    return java.lang.Float.float;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:915","type":"CtIfImpl"},"status":-2},{"failures":[14],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6107","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.charMatcher(char))","position":"org.apache.commons.lang3.text.StrSubstitutor:1127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(null);\n    return this;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(long[], long[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Long[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(long[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Long[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(long[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char != char) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Character>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Character getLeft() {\n            return java.lang.Character.java.lang.Character.valueOf(char);\n        }\n\n        @java.lang.Override\n        public java.lang.Character getRight() {\n            return java.lang.Character.java.lang.Character.valueOf(char);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:304","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(int) - 1","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:2716","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1633","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:445","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:4886","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long <= long) || (long >= long)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String));\n} ","position":"org.apache.commons.lang3.Validate:1106","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n    int = java.util.Calendar.int;\n    int = java.util.Calendar.int;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(java.lang.String.charAt(int))) {\n    if (boolean || boolean) {\n        boolean = true;\n        if ((int++) == int) {\n            int = int;\n            boolean = false;\n        } \n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n        boolean = false;\n    } \n    int = ++int;\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3091","type":"CtIfImpl"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasPrevious()) {\n    return java.lang.String[][--(int)];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasNext()) {\n    return java.lang.String[][(int)++];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:517","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.String == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1843","type":"CtIfImpl"},"status":-2},{"failures":[53],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper()","position":"org.apache.commons.lang3.StringEscapeUtils:382","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:506","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"args":"parameters","method":"method"},"name":"add","transplant":{"sourceCode":"return java.lang.reflect.Method.invoke(null, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:226","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n    if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n        return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n    } else {\n        return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n    }\n} ","position":"org.apache.commons.lang3.event.EventUtils:111","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Custom specialization of the standard JDK {@link java.io.ObjectInputStream}\n * that uses a custom  <code>ClassLoader<\/code> to resolve a class.\n * If the specified <code>ClassLoader<\/code> is not able to resolve the class,\n * the context classloader of the current thread will be used.\n * This way, the standard deserialization work also in web-application\n * containers and application servers, no matter in which of the\n * <code>ClassLoader<\/code> the particular class that encapsulates\n * serialization/deserialization lives. <\/p>\n * \n * <p>For more in-depth information about the problem for which this\n * class here is a workaround, see the JIRA issue LANG-626. <\/p>\n */\nstatic class ClassLoaderAwareObjectInputStream extends java.io.ObjectInputStream {\n    private static final java.util.Map<java.lang.String, java.lang.Class<?>> primitiveTypes = new java.util.HashMap<java.lang.String, java.lang.Class<?>>();\n\n    private final java.lang.ClassLoader classLoader;\n\n    /** \n     * Constructor.\n     * @param in The <code>InputStream<\/code>.\n     * @param classLoader classloader to use\n     * @throws IOException if an I/O error occurs while reading stream header.\n     * @see java.io.ObjectInputStream\n     */\npublic ClassLoaderAwareObjectInputStream(final java.io.InputStream in ,final java.lang.ClassLoader classLoader) throws java.io.IOException {\n        java.io.ObjectInputStream.super(java.io.InputStream);\n        this.java.lang.ClassLoader = java.lang.ClassLoader;\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"byte\", byte.byte);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"short\", short.short);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"int\", int.int);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"long\", long.long);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"float\", float.float);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"double\", double.double);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"boolean\", boolean.boolean);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"char\", char.char);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"void\", void.void);\n    }\n\n    /** \n     * Overriden version that uses the parametrized <code>ClassLoader<\/code> or the <code>ClassLoader<\/code>\n     * of the current <code>Thread<\/code> to resolve the class.\n     * @param desc An instance of class <code>ObjectStreamClass<\/code>.\n     * @return A <code>Class<\/code> object corresponding to <code>desc<\/code>.\n     * @throws IOException Any of the usual Input/Output exceptions.\n     * @throws ClassNotFoundException If class of a serialized object cannot be found.\n     */\n@java.lang.Override\n    protected java.lang.Class<?> resolveClass(final java.io.ObjectStreamClass desc) throws java.io.IOException, java.lang.ClassNotFoundException {\n        final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName();\n        try {\n            return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.ClassLoader);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n            try {\n                return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n            } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n                if (java.lang.Class<?> != null) {\n                    return java.lang.Class<?>;\n                } else {\n                    throw java.lang.ClassNotFoundException;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:284","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = java.lang.Math.(java.lang.Math.round(((double + ((double * int) * (1.0 - double))) * 100.0))) / 100.0","position":"org.apache.commons.lang3.StringUtils:7020","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    int int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, 0);\n    while (int >= 0) {\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int);\n        int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, int);\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1742","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:2530","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:274","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:424","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.register(java.lang.Object, java.lang.Object);\n    final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields();\n    java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true);\n    for (int int = 0 ; (int < (java.lang.reflect.Field[].int)) && (org.apache.commons.lang3.builder.EqualsBuilder.boolean) ; int++) {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field[][int];\n        if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n            try {\n                org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n            } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n                throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n            }\n        } \n    }\n} finally {\n    org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.unregister(java.lang.Object, java.lang.Object);\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:400","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"short = ((short)((short & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:882","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1179","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>>()","position":"org.apache.commons.lang3.concurrent.AtomicSafeInitializer:60","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:629","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    java.lang.Object = java.lang.Object;\n} else {\n    java.lang.Object = java.lang.Object;\n}","position":"org.apache.commons.lang3.builder.DiffBuilder:808","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","position":"org.apache.commons.lang3.ObjectUtils:293","type":"CtIfImpl"},"status":-2},{"failures":[54],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case 'f' :","position":"org.apache.commons.lang3.Conversion:257","type":"CtCaseImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int[] == null) {\n    return null;\n} else if ((int[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == (char[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2387","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(']')","position":"org.apache.commons.lang3.Range:456","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:6466","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5125","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:579","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ false , true , false , true }","position":"org.apache.commons.lang3.Conversion:233","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , false , true , true }","position":"org.apache.commons.lang3.Conversion:247","type":"CtReturnImpl"},"status":-2},{"failures":[55],"variableMapping":{"replaceLen":"i","to":"shift","removeLen":"srcPos"},"name":"replace","transplant":{"sourceCode":"int = (int - int) + int","position":"org.apache.commons.lang3.text.StrBuilder:2001","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1519","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.math.Fraction:377","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.lang.Object != null) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:531","type":"CtForEachImpl"},"status":-2},{"failures":[56],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:430","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, char[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1221","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.lang3.ArrayUtils:4127","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 100) {\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:755","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.builder.CompareToBuilder().append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle())","position":"org.apache.commons.lang3.tuple.Triple:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:339","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.Iterable<?>.iterator(), java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4151","type":"CtReturnImpl"},"status":-2},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,56,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,35,203,204,205],"variableMapping":{"this":"this","buffer":"buffer","object":"object"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:378","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) && (java.lang.Object != null)) {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object);\n    if (boolean) {\n        java.lang.StringBuffer.append(org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(java.lang.Object.getClass()));\n    } else {\n        java.lang.StringBuffer.append(java.lang.Object.getClass().getName());\n    }\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1452","type":"CtIfImpl"},"status":-1},{"failures":[206],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException()","position":"org.apache.commons.lang3.text.StrBuilder:2874","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1669","type":"CtThrowImpl"},"status":-1},{"failures":[207,208],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:260","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6171","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.byte[]","position":"org.apache.commons.lang3.ArrayUtils:3255","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:825","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:5953","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(java.util.concurrent.ExecutionException.getCause()))","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:160","type":"CtThrowImpl"},"status":-2},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1722","type":"CtInvocationImpl"},"status":-1},{"failures":[229,230,231],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:5434","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:1127","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:915","type":"CtIfImpl"},"status":-2},{"failures":[232],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:310","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:309","type":"CtInvocationImpl"},"status":-1},{"failures":[233,234],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","position":"org.apache.commons.lang3.reflect.FieldUtils:218","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.(java.lang.Character.isUpperCase(java.lang.CharSequence.charAt(int))) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6173","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:1490","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:490","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:657","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:524","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"falseValue":"falseValue"},"name":"add","transplant":{"sourceCode":"if (java.lang.Integer == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:294","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:299","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","position":"org.apache.commons.lang3.reflect.TypeUtils:855","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","position":"org.apache.commons.lang3.reflect.TypeUtils:1373","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.FastDatePrinter:332","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:948","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) - 3","position":"org.apache.commons.lang3.time.DateUtils:1198","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.util.Calendar.get(int[][0])) - int","position":"org.apache.commons.lang3.time.DateUtils:1084","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:2964","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:533","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Boolean == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:64","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:368","type":"CtReturnImpl"},"status":-2},{"failures":[235,236],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')')","position":"org.apache.commons.lang3.time.FastDateParser:610","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == 'E') {\n    java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n    char = 'Q';\n} ","position":"org.apache.commons.lang3.time.FastDateParser:360","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int & (~(int))) | ((int << (int)) & (int))","position":"org.apache.commons.lang3.BitField:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:41","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1743","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","startTime":"startTime"},"name":"add","transplant":{"sourceCode":"return (java.lang.System.nanoTime()) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:343","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return 0;\n} else if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return java.lang.System.(java.lang.System.nanoTime()) - (this.long);\n} ","position":"org.apache.commons.lang3.time.StopWatch:340","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Method = java.lang.Throwable.getClass().getMethod(java.lang.String)","position":"org.apache.commons.lang3.exception.ExceptionUtils:195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float float","position":"org.apache.commons.lang3.ArrayUtils:1719","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float == (float[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2818","type":"CtIfImpl"},"status":-2},{"failures":[237,238,239,240,241,242,12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(char[][int], char[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:779","type":"CtInvocationImpl"},"status":-1},{"failures":[243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"variableMapping":{"offsetSet":"offsetSet"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.time.DateUtils:1074","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","position":"org.apache.commons.lang3.time.DateUtils:1080","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Locale == null) {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat();\n} else {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale);\n}","position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"strLen":"index","size":"index"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1041","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.Object[], char, 0, java.lang.Object[].int)","position":"org.apache.commons.lang3.StringUtils:3307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1677","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"newarray":"org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE"},"name":"add","transplant":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:349","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startCutoff":"java.util.Calendar.DAY_OF_WEEK","focus":"focus","java.util.Calendar.DAY_OF_WEEK":"java.util.Calendar.DAY_OF_WEEK"},"name":"add","transplant":{"sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) - 3","position":"org.apache.commons.lang3.time.DateUtils:1198","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:1194","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((int + int) + 4) <= (java.lang.CharSequence.length())) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence((int + int), ((int + int) + 4));\n    try {\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.toString(), 16);\n        java.io.Writer.write(((char)(int)));\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + java.lang.CharSequence) , java.lang.NumberFormatException);\n    }\n    return int + 4;\n} else {\n    throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: \\'\" + (java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length()))) + \"\\' due to end of CharSequence\"));\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:48","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if ((java.lang.String.charAt(int)) == char) {\n        if (boolean || boolean) {\n            boolean = true;\n            if ((int++) == int) {\n                int = int;\n                boolean = false;\n            } \n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:3111","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"subarray"},"name":"add","transplant":{"sourceCode":"return T[].clone()","position":"org.apache.commons.lang3.ArrayUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.ArrayUtils:891","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1292","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.EnumUtils:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.BooleanUtils:298","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    return java.lang.Long.java.lang.Long.parseLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return long;\n}","position":"org.apache.commons.lang3.math.NumberUtils:173","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:231","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:153","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":125,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":188,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":187,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":255,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":63,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":23,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":121,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":258,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":82,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":89,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":167,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":263,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":114,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":216,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":217,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":74,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":116,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":103,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":250,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":67,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":1,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":162,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":261,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":75,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":64,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":208,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":79,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":251,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":269,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":192,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":178,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":224,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":182,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":122,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":235,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":36,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToBinary":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":172,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":264,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":229,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloat":9,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":150,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":72,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":56,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":21,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":161,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":196,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":165,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":92,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":218,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":238,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":225,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFieldsList":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":139,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":259,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":134,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":49,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":186,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":207,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":268,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":265,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":117,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":6,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":239,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":39,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":66,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":223,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":157,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":142,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":171,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":221,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":270,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":152,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":111,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":166,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":145,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":256,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":115,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":101,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":113,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":80,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":153,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":181,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":138,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":160,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":135,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":99,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":106,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":141,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":226,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":143,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":108,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":24,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":155,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":212,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":144,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":127,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":209,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":105,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":177,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":231,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":164,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":87,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":95,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetAllFields":234,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":123,"org.apache.commons.lang3.ArrayUtilsTest.testToString":197,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":50,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":51,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":220,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":102,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":2,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":189,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":243,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":70,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":20,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":91,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":240,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":133,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":179,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":8,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":247,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":94,"org.apache.commons.lang3.text.StrTokenizerTest.test8":204,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":267,"org.apache.commons.lang3.time.DateUtilsTest.testRound":246,"org.apache.commons.lang3.text.StrTokenizerTest.test5":202,"org.apache.commons.lang3.text.StrTokenizerTest.test4":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":169,"org.apache.commons.lang3.text.StrTokenizerTest.test7":203,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":260,"org.apache.commons.lang3.text.StrTokenizerTest.test6":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":170,"org.apache.commons.lang3.text.StrTokenizerTest.test1":198,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":230,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":34,"org.apache.commons.lang3.text.StrTokenizerTest.test3":200,"org.apache.commons.lang3.text.StrTokenizerTest.test2":199,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":146,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":110,"org.apache.commons.lang3.StringUtilsIsTest.testIsWhitespace":14,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":83,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":126,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":7,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":3,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":252,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":16,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":242,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":132,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":206,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean_Integer_Integer_Integer":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":173,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":13,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":59,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":253,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":219,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":26,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":27,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":228,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":30,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":185,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":262,"org.apache.commons.lang3.ConversionTest.testByteToHex":55,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":159,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":149,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":248,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":214,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":241,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":40,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":97,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":38,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":215,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":245,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":193,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":257,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":205,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":222,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":194,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":249,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":100}}]
