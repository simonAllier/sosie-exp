[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 8","position":"org.apache.commons.lang3.Conversion:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:6645","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"delimLen":"nullValue","start":"nullValue"},"name":"add","transplant":{"sourceCode":"return int + int","position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.BooleanUtils:467","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return int >= (int) ? int : int + 100","position":"org.apache.commons.lang3.time.FastDateParser:393","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[], short, java.lang.Integer.int)","position":"org.apache.commons.lang3.ArrayUtils:2253","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"stopTime":"out","startTime":"out"},"name":"add","transplant":{"sourceCode":"return long - long","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:700","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 0) {\n    return 0;\n} ","position":"org.apache.commons.lang3.StringUtils:6622","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:42","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring((int + 1))","position":"org.apache.commons.lang3.math.Fraction:333","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:278","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.translate.UnicodeEscaper(int , int , true)","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.StringEscapeUtils:400","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case '8' :\n    return new boolean[]{ false , false , false , true };","position":"org.apache.commons.lang3.Conversion:178","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","shift":"length","i":"length"},"name":"add","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = boolean[].int","position":"org.apache.commons.lang3.ArrayUtils:1202","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 31) + int","position":"org.apache.commons.lang3.ObjectUtils:243","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.concurrent.ConstantInitializer<T>.(getObject()) != null ? org.apache.commons.lang3.concurrent.ConstantInitializer<T>.getObject().hashCode() : 0","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.time.FastDatePrinter:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[])","position":"org.apache.commons.lang3.time.FastDatePrinter:184","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"Exception Context:\\n\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:137","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append('<')","position":"org.apache.commons.lang3.reflect.TypeUtils:1751","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n        break;\n    } \n    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + int));\n        break;\n    } \n}","position":"org.apache.commons.lang3.text.StrSubstitutor:817","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Comparator<T>.compare(T, T)) < 0","position":"org.apache.commons.lang3.Range:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.concurrent.BackgroundInitializer<?>","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:349","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:896","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} else if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrMatcher:376","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = int ; int >= 0 ; int--) {\n    if (java.lang.Object.equals(java.lang.Object[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:1969","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.lang.Object[].int) ; int++) {\n    if (java.lang.Object.equals(java.lang.Object[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:1916","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:240","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1593","type":"CtAssignmentImpl"},"status":-2},{"failures":[48,49],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.CharSetUtils:114","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.StringUtils:5786","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:1063","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:1588","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrLookup<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:920","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:753","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.ConstructorUtils:290","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Cannot alter Diff object.\")","position":"org.apache.commons.lang3.builder.Diff:117","type":"CtThrowImpl"},"status":-2},{"failures":[50],"variableMapping":{"rangeStyle":"startIndex","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"startIndex","endCutoff":"startIndex","startCutoff":"startIndex","java.util.Calendar.MONDAY":"startIndex","java.util.Calendar.SUNDAY":"startIndex"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2336","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = null","position":"org.apache.commons.lang3.AnnotationUtils:73","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next()","position":"org.apache.commons.lang3.reflect.MethodUtils:523","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output the twelve hour field.<\/p>\n */\nprivate static class TwelveHourField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final org.apache.commons.lang3.time.FastDatePrinter.NumberRule mRule;\n\n    /** \n     * Constructs an instance of {@code TwelveHourField} with the specified\n     * {@code NumberRule}.\n     * \n     * @param rule the rule\n     */\nTwelveHourField(final org.apache.commons.lang3.time.FastDatePrinter.NumberRule rule) {\n        org.apache.commons.lang3.time.FastDatePrinter.NumberRule = org.apache.commons.lang3.time.FastDatePrinter.NumberRule;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return org.apache.commons.lang3.time.FastDatePrinter.NumberRule.estimateLength();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        int int = java.util.Calendar.get(java.util.Calendar.int);\n        if (int == 0) {\n            int = (java.util.Calendar.getLeastMaximum(java.util.Calendar.int)) + 1;\n        } \n        org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(java.lang.StringBuffer, int);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(java.lang.StringBuffer, int);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:999","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final long[] long[] = org.apache.commons.lang3.ArrayUtils.((long[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(long[], java.lang.Long.java.lang.Class<java.lang.Long>)))","position":"org.apache.commons.lang3.ArrayUtils:4206","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String, java.lang.Object[]).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:891","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.CharSequence = java.lang.CharSequence","position":"org.apache.commons.lang3.StringUtils:6916","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:713","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"replace","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3004","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object == null) || ((java.lang.Object.getClass()) != java.lang.Object.(getClass()))) {\n    return false;\n} else {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.lang3.Range<T> org.apache.commons.lang3.Range<T> = ((org.apache.commons.lang3.Range<T>)(java.lang.Object));\n    return (T.equals(org.apache.commons.lang3.Range<T>.T)) && (T.equals(org.apache.commons.lang3.Range<T>.T));\n}","position":"org.apache.commons.lang3.Range:411","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(((int) / int), ((org.apache.commons.lang3.math.Fraction.int) / int)), org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / int), ((org.apache.commons.lang3.math.Fraction.int) / int)))","position":"org.apache.commons.lang3.math.Fraction:807","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3859","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:981","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring((int + (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:2342","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"pos","pattern":"pattern"},"name":"add","transplant":{"sourceCode":"char char = java.lang.String.charAt(java.text.ParsePosition.getIndex())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:337","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:167","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Integer","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:171","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    int = (int) * (int);\n} else {\n    for (final long long : long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(long);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.put(\"a-z\", org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet)","position":"org.apache.commons.lang3.CharSet:86","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int) {\n    @java.lang.Override\n    int modify(final int iValue) {\n        return int % 12;\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:818","type":"CtNewClassImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:770","failures":[51],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"transformationPoint":"org.apache.commons.lang3.CharSequenceUtils:169","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[52],"variableMapping":{"this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:836","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:834","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 65535) {\n    final char[] char[] = java.lang.Character.java.lang.Character.toChars(int);\n    java.io.Writer.write(char[][0]);\n    java.io.Writer.write(char[][1]);\n} else {\n    java.io.Writer.write(int);\n}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.java.lang.String);\n} ","position":"org.apache.commons.lang3.Validate:803","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:1127","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>\n * A <em>builder<\/em> class for creating instances of {@code\n * BasicThreadFactory}.\n * <\/p>\n * <p>\n * Using this builder class instances of {@code BasicThreadFactory} can be\n * created and initialized. The class provides methods that correspond to\n * the configuration options supported by {@code BasicThreadFactory}. Method\n * chaining is supported. Refer to the documentation of {@code\n * BasicThreadFactory} for a usage example.\n * <\/p>\n * \n * @version $Id$\n */\npublic static class Builder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.concurrent.BasicThreadFactory> {\n    /** \n     * The wrapped factory.\n     */\nprivate java.util.concurrent.ThreadFactory wrappedFactory;\n\n    /** \n     * The uncaught exception handler.\n     */\nprivate java.lang.Thread.UncaughtExceptionHandler exceptionHandler;\n\n    /** \n     * The naming pattern.\n     */\nprivate java.lang.String namingPattern;\n\n    /** \n     * The priority.\n     */\nprivate java.lang.Integer priority;\n\n    /** \n     * The daemon flag.\n     */\nprivate java.lang.Boolean daemonFlag;\n\n    /** \n     * Sets the {@code ThreadFactory} to be wrapped by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param factory the wrapped {@code ThreadFactory} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the passed in {@code ThreadFactory}\n     * is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder wrappedFactory(final java.util.concurrent.ThreadFactory factory) {\n        if (java.util.concurrent.ThreadFactory == null) {\n            throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\");\n        } \n        java.util.concurrent.ThreadFactory = java.util.concurrent.ThreadFactory;\n        return this;\n    }\n\n    /** \n     * Sets the naming pattern to be used by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param pattern the naming pattern (must not be <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the naming pattern is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n        if (java.lang.String == null) {\n            throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n        } \n        java.lang.String = java.lang.String;\n        return this;\n    }\n\n    /** \n     * Sets the daemon flag for the new {@code BasicThreadFactory}. If this\n     * flag is set to <b>true<\/b> the new thread factory will create daemon\n     * threads.\n     * \n     * @param f the value of the daemon flag\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n        java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(boolean);\n        return this;\n    }\n\n    /** \n     * Sets the priority for the threads created by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param prio the priority\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder priority(final int prio) {\n        java.lang.Integer = java.lang.Integer.java.lang.Integer.valueOf(int);\n        return this;\n    }\n\n    /** \n     * Sets the uncaught exception handler for the threads created by the\n     * new {@code BasicThreadFactory}.\n     * \n     * @param handler the {@code UncaughtExceptionHandler} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the exception handler is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder uncaughtExceptionHandler(final java.lang.Thread.UncaughtExceptionHandler handler) {\n        if (java.lang.Thread.UncaughtExceptionHandler == null) {\n            throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\");\n        } \n        java.lang.Thread.UncaughtExceptionHandler = java.lang.Thread.UncaughtExceptionHandler;\n        return this;\n    }\n\n    /** \n     * Resets this builder. All configuration options are set to default\n     * values. Note: If the {@link #build()} method was called, it is not\n     * necessary to call {@code reset()} explicitly because this is done\n     * automatically.\n     */\npublic void reset() {\n        java.util.concurrent.ThreadFactory = null;\n        java.lang.Thread.UncaughtExceptionHandler = null;\n        java.lang.String = null;\n        java.lang.Integer = null;\n        java.lang.Boolean = null;\n    }\n\n    /** \n     * Creates a new {@code BasicThreadFactory} with all configuration\n     * options that have been specified by calling methods on this builder.\n     * After creating the factory {@link #reset()} is called.\n     * \n     * @return the new {@code BasicThreadFactory}\n     */\n@java.lang.Override\n    public org.apache.commons.lang3.concurrent.BasicThreadFactory build() {\n        final org.apache.commons.lang3.concurrent.BasicThreadFactory org.apache.commons.lang3.concurrent.BasicThreadFactory = new org.apache.commons.lang3.concurrent.BasicThreadFactory(this);\n        org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.reset();\n        return org.apache.commons.lang3.concurrent.BasicThreadFactory;\n    }\n}","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:254","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[] = new char[org.apache.commons.lang3.text.StrBuilder.length()]","position":"org.apache.commons.lang3.text.StrBuilder:250","type":"CtAssignmentImpl"},"status":-2},{"failures":[53,54,55],"variableMapping":{"change":"years","varLen":"years","startPos":"years","endPos":"years"},"name":"replace","transplant":{"sourceCode":"int = (int + int) - (int - int)","position":"org.apache.commons.lang3.text.StrSubstitutor:855","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:324","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], 0, char[].int)","position":"org.apache.commons.lang3.text.StrTokenizer:609","type":"CtLocalVariableImpl"},"status":-2},{"failures":[56,57,58,59,60,61],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)(int + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:800","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1377","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Calendar.getTime()","position":"org.apache.commons.lang3.time.DateUtils:655","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"L\")","position":"org.apache.commons.lang3.ClassUtils:972","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:437","type":"CtInvocationImpl"},"status":-2},{"failures":[62],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6908","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int <= int ; int++) {\n    final char char = java.lang.CharSequence.charAt((int - 1));\n    int[][0] = int;\n    final int int = java.lang.Math.java.lang.Math.max(1, (int - int));\n    final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int));\n    if (int > int) {\n        return -1;\n    } \n    if (int > 1) {\n        int[][(int - 1)] = java.lang.Integer.int;\n    } \n    for (int int = int ; int <= int ; int++) {\n        if ((java.lang.CharSequence.charAt((int - 1))) == char) {\n            int[][int] = int[][(int - 1)];\n        } else {\n            int[][int] = 1 + java.lang.Math.(java.lang.Math.min(java.lang.Math.java.lang.Math.min(int[][(int - 1)], int[][int]), int[][(int - 1)]));\n        }\n    }\n    int[] = int[];\n    int[] = int[];\n    int[] = int[];\n}","position":"org.apache.commons.lang3.StringUtils:6936","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","position":"org.apache.commons.lang3.StringUtils:4696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:965","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:451","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = java.lang.Object == null ? org.apache.commons.lang3.text.StrBuilder.getNullText() : java.lang.Object.toString()","position":"org.apache.commons.lang3.text.StrBuilder:1386","type":"CtLocalVariableImpl"},"status":-2},{"failures":[63],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[]","position":"org.apache.commons.lang3.ArrayUtils:494","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[]","position":"org.apache.commons.lang3.ClassUtils:740","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next())","position":"org.apache.commons.lang3.text.StrBuilder:1184","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = ((short)((short & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:984","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.List<java.lang.String>","position":"org.apache.commons.lang3.exception.ExceptionUtils:525","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:441","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 89 + (java.util.Set<org.apache.commons.lang3.CharRange>.hashCode())","position":"org.apache.commons.lang3.CharSet:265","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method.invoke(null, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:295","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int[] int[]","position":"org.apache.commons.lang3.StringUtils:6783","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[java.lang.Integer[].int]","position":"org.apache.commons.lang3.ArrayUtils:3121","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.isFieldSeparatorAtEnd()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:394","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (boolean[].int)) && (boolean) ; ++int) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[][int], boolean[][int]);\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:902","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"list":"list"},"name":"add","transplant":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2541","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.exception.ExceptionUtils:625","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = \"1\"","position":"org.apache.commons.lang3.math.Fraction:935","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4942","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ true , true , false , true }","position":"org.apache.commons.lang3.Conversion:253","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return boolean[];\n} ","position":"org.apache.commons.lang3.Conversion:1550","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append('-')","position":"org.apache.commons.lang3.time.FastDatePrinter:1198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1770","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Double.java.lang.Double.valueOf(double)","position":"org.apache.commons.lang3.builder.DiffBuilder:399","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String[][0]","position":"org.apache.commons.lang3.StringUtils:6693","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:353","type":"CtReturnImpl"},"status":-2},{"failures":[64],"variableMapping":{"str":"remove","remove":"remove"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())));\n} ","position":"org.apache.commons.lang3.StringUtils:4323","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String[] != null) {\n    for (final java.lang.String java.lang.String : java.lang.String[]) {\n        if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n            return false;\n        } \n    }\n} ","position":"org.apache.commons.lang3.CharSetUtils:242","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.CharSetUtils:243","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY":"result"},"name":"replace","transplant":{"sourceCode":"return java.lang.Byte[]","position":"org.apache.commons.lang3.ArrayUtils:774","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Byte[]","position":"org.apache.commons.lang3.ArrayUtils:3283","type":"CtReturnImpl"},"status":0},{"failures":[65,66,67,68],"variableMapping":{"lhs":"lhs","this":"this","rhs":"rhs"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:430","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:418","type":"CtInvocationImpl"},"status":-1},{"failures":[69,70,71],"variableMapping":{"str":"className","nullText":"className"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1494","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) > 0) {\n    java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.substring(0, 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:1127","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.RandomStringUtils:292","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5420","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","position":"org.apache.commons.lang3.Conversion:523","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.Conversion:1551","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:217","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int < 0) || (int > (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2799","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence;\n    java.lang.CharSequence = java.lang.CharSequence;\n    java.lang.CharSequence = java.lang.CharSequence;\n    int = int;\n    int = java.lang.CharSequence.length();\n} ","position":"org.apache.commons.lang3.StringUtils:6912","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"srcPos","src":"src"},"name":"add","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '5';\n} else {\n    return '4';\n}","position":"org.apache.commons.lang3.Conversion:343","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","position":"org.apache.commons.lang3.Conversion:429","type":"CtIfImpl"},"status":-2},{"failures":[72],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Integer, new org.apache.commons.lang3.mutable.MutableInt(1))","position":"org.apache.commons.lang3.ArrayUtils:5542","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5719","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = ((java.lang.String.length()) / 2) + 1","position":"org.apache.commons.lang3.StringUtils:7045","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.WordUtils:182","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:574","failures":[73,74],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4008","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:756","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3618","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(java.lang.Object))","position":"org.apache.commons.lang3.builder.IDKey:67","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1110","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.Set<java.util.Locale>","position":"org.apache.commons.lang3.LocaleUtils:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:615","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Class<?>","position":"org.apache.commons.lang3.ClassUtils:714","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(org.apache.commons.lang3.time.StopWatch.getTime())","position":"org.apache.commons.lang3.time.StopWatch:417","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tokenPos":"codepoint"},"name":"add","transplant":{"sourceCode":"return int > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"found":"type","annotationType":"type"},"name":"add","transplant":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<? extends java.lang.annotation.Annotation>","position":"org.apache.commons.lang3.AnnotationUtils:79","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4011","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(char[], int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:459","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1680","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1494","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    java.lang.String = java.lang.CharSequence.toString().toLowerCase();\n    java.lang.String = java.lang.CharSequence.toString().toLowerCase();\n} else {\n    java.lang.String = java.lang.CharSequence.toString().toLowerCase();\n    java.lang.String = java.lang.CharSequence.toString().toLowerCase();\n}","position":"org.apache.commons.lang3.StringUtils:7036","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:1973","failures":[75],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '2'","position":"org.apache.commons.lang3.Conversion:639","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","position":"org.apache.commons.lang3.Conversion:429","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'H' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:223","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:849","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1045","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:497","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.ClassUtils.Interfaces()","position":"org.apache.commons.lang3.ClassUtils:53","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.substring((int + (java.lang.String.length())), int)","position":"org.apache.commons.lang3.StringUtils:2488","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (int <= 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5550","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:611","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '1'","position":"org.apache.commons.lang3.Conversion:647","type":"CtReturnImpl"},"status":-2},{"failures":[76],"variableMapping":{"str":"str","trueString":"str","falseString":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1315","type":"CtForImpl"},"status":-1},{"failures":[77,78,79,80,81,82,83],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 'a'","position":"org.apache.commons.lang3.Conversion:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.char","position":"org.apache.commons.lang3.text.StrSubstitutor:934","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:1392","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(\"GMT\")) {\n    java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n} else {\n    java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n    if (java.util.TimeZone == null) {\n        throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n    } \n}","position":"org.apache.commons.lang3.time.FastDateParser:786","type":"CtIfImpl"},"status":-2},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setUseShortClassName(true)","position":"org.apache.commons.lang3.AnnotationUtils:59","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:554","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.math.Fraction:885","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.Range<T>.isAfter(T)) {\n    return -1;\n} else if (org.apache.commons.lang3.Range<T>.isBefore(T)) {\n    return 1;\n} else {\n    return 0;\n}","position":"org.apache.commons.lang3.Range:293","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":137,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":9,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":134,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":85,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":146,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":90,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":129,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":92,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":55,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":24,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":72,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":104,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":21,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":52,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":115,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":147,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":20,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":110,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":155,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":82,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":35,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringArray":75,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":160,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":68,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":124,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":162,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfCharWithStartIndex":50,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":128,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":1,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":111,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":79,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":19,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":152,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":99,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":130,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":46,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":109,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":38,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":167,"org.apache.commons.lang3.CharSetTest.testStatics":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":143,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":61,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":158,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":113,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":44,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":51,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":88,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":95,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":30,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":58,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":164,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":84,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":25,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":106,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":159,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":133,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":149,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":54,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":22,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":96,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":37,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":28,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":56,"org.apache.commons.lang3.ClassUtilsTest.testPrimitivesToWrappers":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":119,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":26,"org.apache.commons.lang3.ArrayUtilsTest.testContains":0,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":59,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":14,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":57,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":43,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":32,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":132,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":101,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":138,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":148,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":114,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":98,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":4,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":39,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":94,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":48,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":31,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":78,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":144,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":45,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":145,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":161,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":81,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":87,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":141,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":150}}]
