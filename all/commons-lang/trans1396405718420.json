[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n}","position":"org.apache.commons.lang3.ClassUtils:130","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLowerCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6140","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4354","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[]).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5437","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4],"variableMapping":{"replacementType":"useOwner","type":"useOwner"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    throw new java.lang.IllegalArgumentException((\"missing assignment type for type variable \" + java.lang.reflect.Type));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:725","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    java.lang.reflect.Type = java.lang.Class<?>.getEnclosingClass();\n} else {\n    org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", java.lang.reflect.Type, java.lang.Class<?>);\n    java.lang.reflect.Type = java.lang.reflect.Type;\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1494","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.keySet()) {\n    final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n    if (!(java.lang.Class<?>.equals(java.lang.Class<?>))) {\n        org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>, java.lang.Class<?>);\n    } \n}","position":"org.apache.commons.lang3.ClassUtils:97","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"input","searchStr":"input","lastIndex":"isHex"},"name":"add","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return boolean ? java.lang.CharSequence.length() : 0;\n} ","position":"org.apache.commons.lang3.StringUtils:1029","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (boolean) {\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 16);\n    } else {\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 10);\n    }\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return 0;\n}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:117","type":"CtTryImpl"},"status":0},{"failures":[5,6,7,8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:229","type":"CtInvocationImpl"},"status":-1},{"failures":[9,10],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:926","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1655","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21],"variableMapping":{"externalExecutor":"executor"},"name":"replace","transplant":{"sourceCode":"this.java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:160","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getExternalExecutor()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:180","type":"CtAssignmentImpl"},"status":-1},{"failures":[22],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.ClassUtils:939","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:698","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"sz"},"name":"replace","transplant":{"sourceCode":"return int != 0","position":"org.apache.commons.lang3.BooleanUtils:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isDigit(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6038","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:393","type":"CtBreakImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    char[][int++] = char;\n    boolean = false;\n} else {\n    continue;\n}","position":"org.apache.commons.lang3.text.WordUtils:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.lang3.time.DateUtils:1847","type":"CtThrowImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"binaryOperator":"java.util.Date != null","name":"negateConditional","position":"org.apache.commons.lang3.time.FastDateParser:115","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    final java.lang.String java.lang.String = ((java.lang.String)(java.util.Enumeration<?>.nextElement()));\n    final java.lang.String java.lang.String = java.util.Properties.getProperty(java.lang.String);\n    java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:215","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:952","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType)","position":"org.apache.commons.lang3.reflect.TypeUtils:442","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(E[])","position":"org.apache.commons.lang3.EnumUtils:203","type":"CtInvocationImpl"},"status":-2},{"failures":[141,142,143],"variableMapping":{"fromIndex":"firstDiff"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:390","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != (-1)) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6636","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.SecurityException java.lang.SecurityException","position":"org.apache.commons.lang3.reflect.MemberUtils:63","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean[] boolean[] = new boolean[int]","position":"org.apache.commons.lang3.ArrayUtils:1209","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","close":"str","open":"str"},"name":"add","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2297","type":"CtIfImpl"},"status":0},{"failures":[144],"variableMapping":{"regex":"sb"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\")","position":"org.apache.commons.lang3.time.FastDateParser:361","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1403","type":"CtInvocationImpl"},"status":-1},{"failures":[145],"binaryOperator":"((int[].int) > 0)","name":"conditionalBoundary","position":"org.apache.commons.lang3.ArrayUtils:1264","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:347","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:191","type":"CtThrowImpl"},"status":0},{"failures":[146],"variableMapping":{"obj":"o1"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharRange) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharRange:212","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Character.java.lang.Class<java.lang.Character>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:300","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"t":"v","u":"v","v":"t"},"name":"add","transplant":{"sourceCode":"int = (int - int) / 2","position":"org.apache.commons.lang3.math.Fraction:620","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    int = -int;\n} else {\n    int = int;\n}","position":"org.apache.commons.lang3.math.Fraction:614","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","type":"cls"},"name":"add","transplant":{"sourceCode":"return (java.lang.Class<?>.isPrimitive()) || (org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:545","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) && (!(java.lang.Class<?>.isPrimitive()))) {\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>);\n    if (java.lang.Class<?> == null) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.ClassUtils:634","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.ClassPathUtils:132","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 32) + int;\n    final long long = (4294967295L & (int[][(int + int)])) << int;\n    final long long = 4294967295L << int;\n    long = (long & (~long)) | long;\n}","position":"org.apache.commons.lang3.Conversion:694","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(int[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1753","type":"CtLocalVariableImpl"},"status":-2},{"failures":[147,148,149,150,151,152,153,154],"binaryOperator":"(java.lang.CharSequence.length()) - int","name":"math","position":"org.apache.commons.lang3.text.translate.LookupTranslator:72","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.concurrent.ThreadFactory = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:362","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(double)--","position":"org.apache.commons.lang3.mutable.MutableDouble:146","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"binaryOperator":"(int < int)","name":"conditionalBoundary","position":"org.apache.commons.lang3.text.StrBuilder:2049","type":"mutation","status":0},{"failures":[],"variableMapping":{"noOfItems":"lastIdx","org.apache.commons.lang3.StringUtils.EMPTY":"ret"},"name":"add","transplant":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3715","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, (int - 1))","position":"org.apache.commons.lang3.StringUtils:5091","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final long long : long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(long);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:799","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:761","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.reflect.TypeUtils:1097","type":"mutation","return":"return false","status":0},{"failures":[155],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:302","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(int)","position":"org.apache.commons.lang3.text.StrBuilder:327","type":"CtThrowImpl"},"status":-1},{"failures":[25,30],"variableMapping":{"str":"pattern","padStr":"pattern"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Date, java.lang.String, null, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:188","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == 0) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = 0;\n}","position":"org.apache.commons.lang3.CharRange:286","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch"},"name":"add","transplant":{"sourceCode":"return (char >= '0') && (char <= '3')","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return java.lang.Character.java.lang.Character.isWhitespace(char);\n} ","position":"org.apache.commons.lang3.text.WordUtils:570","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.version\")","position":"org.apache.commons.lang3.SystemUtils:521","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    int = java.lang.String.indexOf(java.lang.String, int);\n    if (int > (-1)) {\n        if (int > int) {\n            int += 1;\n            if (int == int) {\n                int = int;\n                java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n            } else {\n                java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int));\n                int = int + int;\n            }\n        } else {\n            if (boolean) {\n                int += 1;\n                if (int == int) {\n                    int = int;\n                    java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n                } else {\n                    java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n                }\n            } \n            int = int + int;\n        }\n    } else {\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n        int = int;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:2826","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"codepoint":"pos","this":"this"},"name":"add","transplant":{"sourceCode":"final char[] char[] = java.lang.Character.toChars(int)","position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:110","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:87","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"int <= 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:3617","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1032","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3459","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int >= (java.lang.String.length())) || (int < ((java.lang.String.length()) + 2))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6456","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:940","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int > 0 ? int + 1 : -1","position":"org.apache.commons.lang3.reflect.InheritanceUtils:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:287","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.reflect.Type[].int) > 0) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" super \"), \" & \", java.lang.reflect.Type[]);\n} else if (!(((java.lang.reflect.Type[].int) == 1) && (java.lang.Object.java.lang.Object.equals(java.lang.reflect.Type[][0])))) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" extends \"), \" & \", java.lang.reflect.Type[]);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1811","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.reflect.Field>.toArray(new java.lang.reflect.Field[java.util.List<java.lang.reflect.Field>.size()])","position":"org.apache.commons.lang3.reflect.FieldUtils:198","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.defaultIfNull(java.lang.CharSequence, org.apache.commons.lang3.StringUtils.java.lang.String)","position":"org.apache.commons.lang3.text.FormattableUtils:140","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4942","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:445","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2495","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:948","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3343","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String, java.lang.CharSequence, true, java.lang.CharSequence[])","position":"org.apache.commons.lang3.StringUtils:7499","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:625","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Double[].int) ; int++) {\n    double[][int] = java.lang.Double[][int].doubleValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3304","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.mutable.MutableInt:212","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3711","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"escapeChar":"ch","escapeCharacter":"ch"},"name":"add","transplant":{"sourceCode":"char = char","position":"org.apache.commons.lang3.text.StrSubstitutor:945","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = char[][int]","position":"org.apache.commons.lang3.CharSetUtils:75","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"csLength":"java.util.Calendar.HOUR"},"name":"add","transplant":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1624","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1025","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:1004","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.text.MessageFormat.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:271","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.Conversion:1020","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:510","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"stopTime":"defaultValue","startTime":"defaultValue"},"name":"replace","transplant":{"sourceCode":"return long - long","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return long;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final R R = org.apache.commons.lang3.tuple.MutablePair<L, R>.getRight()","position":"org.apache.commons.lang3.tuple.MutablePair:119","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = java.lang.Math.(java.lang.Math.round(((double + ((double * int) * (1.0 - double))) * 100.0))) / 100.0","position":"org.apache.commons.lang3.StringUtils:7020","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:679","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:382","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction, false)","position":"org.apache.commons.lang3.math.Fraction:727","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1);\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int);\n}","position":"org.apache.commons.lang3.math.Fraction:346","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:382","type":"CtBreakImpl"},"status":0},{"failures":[156,157,158],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 4","position":"org.apache.commons.lang3.time.FastDatePrinter:835","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.toHashCode()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:345","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"defaultValue":"defaultValue"},"name":"add","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character.charValue(), int)","position":"org.apache.commons.lang3.CharUtils:289","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[159,160,161,162],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object == java.lang.Object) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:402","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:409","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","position":"org.apache.commons.lang3.BooleanUtils:269","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method))","position":"org.apache.commons.lang3.AnnotationUtils:174","type":"CtThrowImpl"},"status":-2},{"failures":[163],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.put(\"A-Z\", org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet)","position":"org.apache.commons.lang3.CharSet:87","type":"CtInvocationImpl"},"status":-1},{"failures":[164],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:302","type":"CtIfImpl"},"status":-1},{"failures":[165,166],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int < 0) {\n    int = (java.lang.String.length()) + int;\n} ","position":"org.apache.commons.lang3.StringUtils:2069","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n        if (boolean || boolean) {\n            boolean = true;\n            if ((int++) == int) {\n                int = int;\n                boolean = false;\n            } \n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:3131","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return L","position":"org.apache.commons.lang3.tuple.MutableTriple:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) && (!(java.lang.Class<?>.isPrimitive()))) {\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>);\n    if (java.lang.Class<?> == null) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.ClassUtils:634","type":"CtIfImpl"},"status":-2},{"failures":[167],"variableMapping":{"x":"i","y":"i"},"name":"replace","transplant":{"sourceCode":"final long long = ((long)(int)) + ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:676","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = (4294967295L & (int[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:696","type":"CtLocalVariableImpl"},"status":-1},{"failures":[168,169,170,171,172,173,174,175,176],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:365","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Cannot alter Diff object.\")","position":"org.apache.commons.lang3.builder.Diff:117","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1741","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 14","position":"org.apache.commons.lang3.Conversion:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.AggregateTranslator:57","type":"CtReturnImpl"},"status":-2},{"failures":[177,178,179,180,181,182],"variableMapping":{"org.apache.commons.lang3.builder.DiffResult.OBJECTS_SAME_STRING":"stripChars"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.DiffResult:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:626","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2715","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int >= (java.lang.Character.char)) && (int <= (java.lang.Character.char))) {\n    return true;\n} else {\n    return false;\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:34","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.Fraction:845","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (37 << 4) | (java.lang.reflect.Type.hashCode())","position":"org.apache.commons.lang3.reflect.TypeLiteral:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = double < 0 ? -1 : 1","position":"org.apache.commons.lang3.math.Fraction:250","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(double[], double)","position":"org.apache.commons.lang3.ArrayUtils:4902","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.reflect.Type[].clone()","position":"org.apache.commons.lang3.reflect.TypeUtils:184","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The List must not be null\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:552","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:1252","type":"CtIfImpl"},"status":-2},{"failures":[183],"variableMapping":{"tempIndex":"newSize","i":"startIndexInclusive","textIndex":"startIndexInclusive","replaceIndex":"startIndexInclusive"},"name":"replace","transplant":{"sourceCode":"if ((int == (-1)) || (int < int)) {\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4733","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(long[], int, long[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:930","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ false , true , true , false }","position":"org.apache.commons.lang3.Conversion:235","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3457","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int >= (double[].int)) {\n    int = (double[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2658","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (java.util.Calendar.int)) {\n    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n        java.util.Calendar.add(java.util.Calendar.int, 12);\n    } else {\n        java.util.Calendar.add(java.util.Calendar.int, -12);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n} else {\n    java.util.Calendar.add(int[][0], 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1024","type":"CtIfImpl"},"status":-2},{"failures":[184],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.text.Format == null) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:176","type":"CtIfImpl"},"status":-1},{"failures":[185],"variableMapping":{"rawType":"type"},"name":"replace","transplant":{"sourceCode":"if (!(java.lang.reflect.Type instanceof java.lang.Class<?>)) {\n    throw new java.lang.IllegalStateException((\"Wait... What!? Type of rawType: \" + java.lang.reflect.Type));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1247","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    throw new java.lang.IllegalArgumentException((\"missing assignment type for type variable \" + java.lang.reflect.Type));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:725","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(3 , 5)","position":"org.apache.commons.lang3.math.Fraction:87","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeField(java.lang.Object, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:720","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:864","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[][int])","position":"org.apache.commons.lang3.builder.ToStringStyle:1425","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + 1))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:466","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:913","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.class.path\")","position":"org.apache.commons.lang3.SystemUtils:227","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.init()","position":"org.apache.commons.lang3.time.FastDatePrinter:570","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getDaemonFlag()) != null) {\n    java.lang.Thread.setDaemon(org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag().booleanValue());\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:234","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.char[] = org.apache.commons.lang3.text.StrTokenizer.char[].clone()","position":"org.apache.commons.lang3.text.StrTokenizer:1094","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (char char = 0 ; char < (org.apache.commons.lang3.CharUtils.java.lang.String[].int) ; char++) {\n    org.apache.commons.lang3.CharUtils.java.lang.String[][char] = java.lang.String.java.lang.String.valueOf(char);\n}","position":"org.apache.commons.lang3.CharUtils:54","type":"CtForImpl"},"status":-2},{"failures":[186,187],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:586","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.replace(char, char)","position":"org.apache.commons.lang3.StringUtils:4838","type":"CtReturnImpl"},"status":-1},{"failures":[159,188,189,190,191,192,193,194,195,196,197,198,199,200,201,162,202,203,204,205,206,207,208],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:824","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object, java.lang.Object, null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:370","type":"CtReturnImpl"},"status":-1},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\")","position":"org.apache.commons.lang3.Conversion:1009","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:222","type":"CtThrowImpl"},"status":-1},{"failures":[238,239,240,241,242],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.lang3.text.StrTokenizer:701","type":"mutation","status":-1},{"failures":[243,244,245,246,247,248],"variableMapping":{"object":"object"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:132","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence))","position":"org.apache.commons.lang3.StringUtils:1680","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} else if ((java.lang.CharSequence.length()) != (java.lang.CharSequence.length())) {\n    return false;\n} else {\n    return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, 0, java.lang.CharSequence, 0, java.lang.CharSequence.length());\n}","position":"org.apache.commons.lang3.StringUtils:831","type":"CtIfImpl"},"status":-2},{"failures":[249,250],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.CharSetUtils:145","type":"mutation","status":-1},{"failures":[251],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1525","type":"CtInvocationImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"char char","position":"org.apache.commons.lang3.StringUtils:6789","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringCharChar":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":169,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":250,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":66,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparator":161,"org.apache.commons.lang3.tuple.TripleTest.testComparable2":206,"org.apache.commons.lang3.tuple.TripleTest.testComparable1":205,"org.apache.commons.lang3.tuple.TripleTest.testComparable4":208,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":23,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":26,"org.apache.commons.lang3.tuple.TripleTest.testComparable3":207,"org.apache.commons.lang3.ValidateTest.testNotNull2":232,"org.apache.commons.lang3.ValidateTest.testNotNull1":231,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":35,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":62,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":65,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":127,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":157,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":178,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":84,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":83,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":42,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":119,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullArray":215,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":153,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathClassNullString":230,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":64,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":190,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":39,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":132,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":176,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":69,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathPackageNull":227,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":52,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNamePackageNull":223,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":247,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":92,"org.apache.commons.lang3.StringUtilsTest.testLang623":187,"org.apache.commons.lang3.tuple.PairTest.testComparable2":204,"org.apache.commons.lang3.tuple.PairTest.testComparable1":203,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors_nullClass":218,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":70,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectBuild":159,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":120,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":106,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":139,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":22,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":43,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":124,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":244,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":5,"org.apache.commons.lang3.ArrayUtilsTest.testReverseCharRange":10,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":63,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":7,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":72,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":3,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathPackageNullString":225,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":196,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":54,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":91,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":6,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":61,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":191,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectEx2":195,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":29,"org.apache.commons.lang3.event.EventListenerSupportTest.testAddNullListener":210,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArray":220,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":40,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":148,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":166,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":138,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":46,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":156,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":116,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":97,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":75,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":243,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObject":162,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":24,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":165,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":248,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":36,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":158,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":152,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":73,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian_nullComparator":237,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":20,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":82,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":136,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":13,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":25,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":81,"org.apache.commons.lang3.event.EventListenerSupportTest.testCreateWithNullParameter":211,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":71,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":51,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":170,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":50,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":146,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":143,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":44,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparatorNull":160,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":89,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":18,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":126,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":167,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":30,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullClassWithArray":213,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":47,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":74,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":145,"org.apache.commons.lang3.event.EventListenerSupportTest.testRemoveNullListener":209,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":108,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":110,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":53,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":103,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":21,"org.apache.commons.lang3.ConversionTest.testLongToHex":144,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":45,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":111,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":109,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullIterable":217,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":249,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameNullPackageString":229,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":140,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":168,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullClass":216,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":1,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":150,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":179,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":88,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":164,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":174,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":118,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":133,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripStart_StringString":177,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":4,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":96,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":87,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArrayHiddenByObject":192,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":130,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullClass":221,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":99,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":17,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":117,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerThrowsException":246,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":134,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":49,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":67,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":121,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":68,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":142,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":180,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":149,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullClassWithArray":219,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":242,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":27,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":200,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":90,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector_nullClass":222,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":0,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":197,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":32,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":125,"org.apache.commons.lang3.builder.CompareToBuilderTest.testAppendSuper":202,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":9,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":198,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":86,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":172,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":188,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":147,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":105,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":112,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":2,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":37,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray2":236,"org.apache.commons.lang3.ValidateTest.testNoNullElementsArray1":235,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":16,"org.apache.commons.lang3.text.StrTokenizerTest.test1":238,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":85,"org.apache.commons.lang3.CharSetTest.testGetInstance":163,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":154,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":171,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection1":233,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection2":234,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":175,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":181,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":57,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":199,"org.apache.commons.lang3.text.StrBuilderTest.testSetCharAt":155,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":11,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":76,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameNullClassString":228,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":245,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":8,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":58,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathClassNull":224,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":107,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":129,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringArray":141,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullIterable":214,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":95,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":137,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":15,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":193,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":12,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":173,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":93,"org.apache.commons.lang3.time.FastDateParserTest.testParses":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":41,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":135,"org.apache.commons.lang3.ConversionTest.testByteToHex":251,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":56,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":98,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":122,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":131,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":189,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":185,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":240,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":241,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":239,"org.apache.commons.lang3.reflect.TypeLiteralTest.testRaw":212,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":34,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":59,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":182,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":101,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":102,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":100,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":128,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":201,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":183,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":55,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":123,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameClassNull":226}}]
