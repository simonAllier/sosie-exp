[{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1079","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"SunOS\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1116","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.0\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:244","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    return int ^ org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Object.getClass().getComponentType(), java.lang.Object));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:245","sourceCode":"return int ^ org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Object.getClass().getComponentType(), java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:1133","sourceCode":"java.lang.StringBuilder.append(\"[]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:327","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"canonicalClassNameBuffer":"regex"}},{"transplant":{"position":"org.apache.commons.lang3.Range:290","sourceCode":"throw new java.lang.NullPointerException(\"Element is null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:98","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableObject:76","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1403","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1525","sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"sb":"sb","bits":"dstPos","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:354","sourceCode":"if (int[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1199","sourceCode":"return int[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:382","sourceCode":"if (!org.apache.commons.lang3.Range<T>.(isOverlappedBy(org.apache.commons.lang3.Range<T>))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:223","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CsvUnescaper:312","sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:128","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:262","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1299","sourceCode":"byte[][(int + int)] = ((byte)(255 & (long >> int)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1197","sourceCode":"int[][(int + int)] = ((int)(-1 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:508","sourceCode":"if (int > (-1)) {\n    if (int > (java.lang.String.length())) {\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    } \n    java.lang.String = java.lang.String.substring(0, int);\n} else {\n    java.lang.String = java.lang.String;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:495","sourceCode":"if (int > (-1)) {\n    if (int > (-1)) {\n        if ((int < int) || (int > (java.lang.String.length()))) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring((int + 1), int);\n    } else {\n        java.lang.String = java.lang.String.substring((int + 1));\n    }\n    java.lang.String = java.lang.String.substring(0, int);\n    int = java.lang.String.length();\n} else {\n    if (int > (-1)) {\n        if (int > (java.lang.String.length())) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring(0, int);\n    } else {\n        java.lang.String = java.lang.String;\n    }\n    java.lang.String = null;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1083","sourceCode":"boolean = int > ((int - int) / 2)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:303","sourceCode":"boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"min":"org.apache.commons.lang3.concurrent.TimedSemaphore.NO_LIMIT","max":"acquireCount","roundUp":"canPass","offset":"acquireCount"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:567","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:481","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"failures":[6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numeric":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:143","sourceCode":"float += 0.25F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:175","sourceCode":"if (java.lang.Class<?> == (org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][int])) {\n    float += 0.1F;\n    if (int < ((org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[].int) - 1)) {\n        java.lang.Class<?> = org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(int + 1)];\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:52","sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.EntityArrays:420","sourceCode":"java.lang.String[][][int][1] = java.lang.String[][][int][0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.EntityArrays:419","sourceCode":"java.lang.String[][][int][0] = java.lang.String[][][int][1]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"newarray":"newarray","i":"i","array":"array"}},{"position":"org.apache.commons.lang3.Conversion:1520","failures":[3],"status":-1,"binaryOperator":"(byte >> int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:580","sourceCode":"java.lang.String = java.lang.String.substring((int + 1), java.lang.String.length())","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:814","sourceCode":"java.lang.String = java.lang.String.substring(0, int)","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exp":"varNameExpr","str":"varNameExpr","expPos":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:305","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:306","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:541","sourceCode":"return (int) > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:506","sourceCode":"return (int) < (java.lang.String[].int)","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:564","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:562","sourceCode":"java.util.List<java.lang.String>.remove(int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"causeFrameIndex":"causeFrameIndex"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:512","sourceCode":"if (int == int) {\n    throw new java.lang.ArithmeticException(\"overflow: too large to negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:121","sourceCode":"if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","type":"CtIfImpl"},"failures":[61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"codepoint","numerator":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:196","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1314","sourceCode":"if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[64,65,63,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharSetUtils:108","failures":[67,68],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:220","sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","type":"CtIfImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":19,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":31,"org.apache.commons.lang3.ConversionTest.testByteToHex":3,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":8,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":20,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":23,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":24,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":14,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":5,"org.apache.commons.lang3.text.StrTokenizerTest.test6":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":51,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":1,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":6,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":28,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":2,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":40,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":26,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":32,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":43,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":47,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":61,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":63,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":53,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":0,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":66,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":41,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":25,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":65,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":18,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":54,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":39,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":45,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":15,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":13,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":27,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":22,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":29}}]
