[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ClassUtils:728","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1749","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)","position":"org.apache.commons.lang3.Conversion:1515","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double[][0]","position":"org.apache.commons.lang3.math.IEEE754rUtils:46","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 12","position":"org.apache.commons.lang3.Conversion:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? 1 : -1","position":"org.apache.commons.lang3.ObjectUtils:509","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.float -= java.lang.Number.floatValue()","position":"org.apache.commons.lang3.mutable.MutableFloat:189","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NoSuchMethodException((\"No such accessible constructor on object: \" + (java.lang.Class<T>.getName())))","position":"org.apache.commons.lang3.reflect.ConstructorUtils:115","type":"CtThrowImpl"},"status":-2},{"failures":[0],"binaryOperator":"long < 0","name":"removeConditional","position":"org.apache.commons.lang3.text.StrBuilderReader:2896","type":"mutation","status":-1},{"failures":[1,2],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '5'","position":"org.apache.commons.lang3.Conversion:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '3'","position":"org.apache.commons.lang3.Conversion:569","type":"CtReturnImpl"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.String = java.util.regex.Matcher.group()","position":"org.apache.commons.lang3.time.FastDateParser:150","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for ( ;  ; ) {\n    java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd());\n    if (!(java.util.regex.Matcher.lookingAt())) {\n        org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n        break;\n    } \n    final java.lang.String java.lang.String = java.util.regex.Matcher.group();\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String, java.util.Calendar);\n    if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n        java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n    } \n    java.lang.String = java.lang.String;\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n}","position":"org.apache.commons.lang3.time.FastDateParser:152","type":"CtForImpl"},"status":-1},{"failures":[121,121,122,123],"variableMapping":{"fieldName":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtIfImpl"},"status":-1},{"failures":[124],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:7114","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vendor.url\")","position":"org.apache.commons.lang3.SystemUtils:503","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"org.apache.commons.lang3.builder.EqualsBuilder:366","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(java.lang.String + \" is not a valid number.\")","name":"math","position":"org.apache.commons.lang3.math.NumberUtils:773","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:915","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long))","position":"org.apache.commons.lang3.Validate:946","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:649","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) == 0) {\n    return org.apache.commons.lang3.math.Fraction.equals(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","position":"org.apache.commons.lang3.math.Fraction:470","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Long.java.lang.Long.valueOf(-1L)","position":"org.apache.commons.lang3.math.NumberUtils:38","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"lhs":"match","isEquals":"match","rhs":"match"},"name":"add","transplant":{"sourceCode":"boolean = boolean == boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:625","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.builder.ToStringStyle:415","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(java.lang.CharSequence[])) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:359","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int))","position":"org.apache.commons.lang3.text.StrBuilder:1363","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:2065","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:608","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"object"},"name":"add","transplant":{"sourceCode":"java.lang.Object.wait()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:305","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","position":"org.apache.commons.lang3.ObjectUtils:317","type":"CtIfImpl"},"status":-2},{"failures":[125,126],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:573","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"method":"method"},"name":"add","transplant":{"sourceCode":"return java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:375","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Method))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtIfImpl"},"status":-2},{"failures":[127,128],"name":"returnValue","position":"org.apache.commons.lang3.math.Fraction:895","type":"mutation","return":"return 0","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , true , true , true }","position":"org.apache.commons.lang3.Conversion:259","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"type2":"componentType","type":"componentType"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Class<? extends java.lang.annotation.Annotation>.equals(java.lang.Class<? extends java.lang.annotation.Annotation>))) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:133","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:312","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (short[].int)) {\n    int = (short[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2274","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:574","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1604","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[])","position":"org.apache.commons.lang3.ArrayUtils:5891","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += java.util.Calendar.getActualMaximum(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DurationFormatUtils:317","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:487","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"out":"out"},"name":"add","transplant":{"sourceCode":"if (java.io.ObjectOutputStream != null) {\n    java.io.ObjectOutputStream.close();\n} ","position":"org.apache.commons.lang3.SerializationUtils:160","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (java.io.ObjectOutputStream != null) {\n        java.io.ObjectOutputStream.close();\n    } \n} catch (final java.io.IOException java.io.IOException) {\n}","position":"org.apache.commons.lang3.SerializationUtils:159","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return boolean ? org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:409","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.booleanValue() ? org.apache.commons.lang3.math.NumberUtils.java.lang.Integer : org.apache.commons.lang3.math.NumberUtils.java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:430","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:937","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[])","position":"org.apache.commons.lang3.time.FastDatePrinter:208","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (java.lang.String[].int)","position":"org.apache.commons.lang3.text.StrTokenizer:506","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:6942","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String != null ? new java.lang.String(byte[] , java.lang.String) : new java.lang.String(byte[] , java.nio.charset.Charset.java.nio.charset.Charset.defaultCharset())","position":"org.apache.commons.lang3.StringUtils:7620","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == int) {\n    if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                java.util.Calendar.add(java.util.Calendar.int, 15);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -15);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else if (int == (java.util.Calendar.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                java.util.Calendar.add(java.util.Calendar.int, 12);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -12);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else {\n            java.util.Calendar.add(int[][0], 1);\n        }\n    } \n    return ;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1010","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:2959","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringBuilder:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case '6' :\n    return new boolean[]{ false , true , true , false };","position":"org.apache.commons.lang3.Conversion:174","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.StringBuilder.append(((java.lang.Class<?>)(java.lang.reflect.Type)).getName());\n} else {\n    java.lang.StringBuilder.append(java.lang.reflect.Type.toString());\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1789","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.StringBuilder.toString())","position":"org.apache.commons.lang3.time.FastDateParser:627","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    java.lang.Class<?> java.lang.Class<?> = null;\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    } else {\n        throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type));\n    }\n    if (org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>)) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.Type)(java.lang.Class<?>))))) {\n        java.lang.reflect.Type = java.lang.reflect.Type;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1056","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.reflect.MemberUtils:157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.TypeVariable<?>), \"missing argument mapping for %s\", org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.TypeVariable<?>))","position":"org.apache.commons.lang3.reflect.TypeUtils:1535","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.EnumUtils:114","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.String[] = org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.lang.String[])","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:651","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (long[].int)) {\n    int = (long[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2070","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte","position":"org.apache.commons.lang3.Conversion:1006","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:1659","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case java.util.Calendar.int :\n    long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1724","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte","position":"org.apache.commons.lang3.Conversion:1006","type":"CtReturnImpl"},"status":-2},{"failures":[129],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"byte = byte[][int]","position":"org.apache.commons.lang3.math.NumberUtils:865","type":"CtAssignmentImpl"},"status":-1},{"failures":[130,131,132,133,134,135,136,137,138,139],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(\"]\")","position":"org.apache.commons.lang3.AnnotationUtils:65","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1275","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(':')","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:143","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ScheduledFuture<?> = org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:298","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return '3';\n    } else {\n        return '2';\n    }\n} else {\n    if (boolean[][int]) {\n        return '1';\n    } else {\n        return '0';\n    }\n}","position":"org.apache.commons.lang3.Conversion:350","type":"CtIfImpl"},"status":-2},{"failures":[140],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:611","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher, java.lang.String, 0, int, -1)","position":"org.apache.commons.lang3.text.StrBuilder:1932","type":"CtReturnImpl"},"status":-1},{"failures":[32,34,36,44,45,46,47,49,50,52,97,99,101,109,110,111,112,114,115,117],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.java.lang.Character.isDigit(char)","position":"org.apache.commons.lang3.time.FastDateParser:570","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)","position":"org.apache.commons.lang3.builder.ToStringBuilder:416","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringBuilder.(getObject()) == null) {\n    return org.apache.commons.lang3.builder.ToStringBuilder.getStyle().getNullText();\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:684","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getKey(), java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getValue(), java.util.Map.Entry<?, ?>.getValue()))","position":"org.apache.commons.lang3.tuple.Pair:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:2023","type":"CtLocalVariableImpl"},"status":-2},{"failures":[141],"binaryOperator":"((boolean[].int) > (int + 2))","name":"conditionalBoundary","position":"org.apache.commons.lang3.Conversion:335","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(boolean[], ((int + 1) - int), boolean[], (4 - int), int)","position":"org.apache.commons.lang3.Conversion:518","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.builder.CompareToBuilder().append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle())","position":"org.apache.commons.lang3.tuple.Triple:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.event.EventListenerSupport<L>.createProxy(java.lang.Class<L>, java.lang.ClassLoader)","position":"org.apache.commons.lang3.event.EventListenerSupport:271","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.classToString(java.lang.Class<?>.getEnclosingClass())).append('.')","position":"org.apache.commons.lang3.reflect.TypeUtils:1746","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.time.FastDatePrinter:858","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.CharSequenceUtils:167","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n}","position":"org.apache.commons.lang3.ClassUtils:130","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Boolean java.lang.Boolean = java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(boolean[], java.lang.Boolean.booleanValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5989","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Character[] == null) || ((java.lang.Character[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:753","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3004","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:503","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((double[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:41","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:714","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","position":"org.apache.commons.lang3.text.StrTokenizer:781","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5514","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, int)","position":"org.apache.commons.lang3.time.DateUtils:1782","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.time.DateUtils:974","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buf"},"name":"add","transplant":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.builder.ToStringBuilder:1031","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Date, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:462","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.float += float","position":"org.apache.commons.lang3.mutable.MutableFloat:157","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float += 0.1F","position":"org.apache.commons.lang3.reflect.MemberUtils:177","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[142,52,117],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.lang3.StringUtils:6597","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:282","type":"CtIfImpl"},"status":-1},{"failures":[124],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final java.lang.String java.lang.String = \"...\"","position":"org.apache.commons.lang3.StringUtils:6409","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.String, java.lang.String, int)","position":"org.apache.commons.lang3.StringUtils:7049","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = int ; int >= 0 ; int--) {\n    if (boolean == (boolean[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2922","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder()","position":"org.apache.commons.lang3.builder.EqualsBuilder:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setSizeEndText(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:493","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long = java.lang.System.java.lang.System.currentTimeMillis()","position":"org.apache.commons.lang3.time.StopWatch:185","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:975","type":"CtThrowImpl"},"status":-2},{"failures":[143],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 1","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:968","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final byte[] byte[] = org.apache.commons.lang3.SerializationUtils.org.apache.commons.lang3.SerializationUtils.serialize(T)","position":"org.apache.commons.lang3.SerializationUtils:82","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"))","position":"org.apache.commons.lang3.time.DateUtils:1206","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"parsePattern":"methodName","pattern":"methodName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} ","position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } \n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:485","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\");\n} ","position":"org.apache.commons.lang3.Conversion:512","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0, double)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2732","type":"CtReturnImpl"},"status":-2},{"failures":[144,145,146],"variableMapping":{"pos":"pos"},"name":"replace","transplant":{"sourceCode":"int += 3","position":"org.apache.commons.lang3.CharSet:189","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 2","position":"org.apache.commons.lang3.math.NumberUtils:738","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"bufferEnd":"length","len":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","pos":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"if ((int + int) > int) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:368","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (float[].int)) {\n    int = (float[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2812","type":"CtIfImpl"},"status":-2},{"failures":[147,148,122,149,150,151,152,153,154],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n    if (java.util.Map<java.lang.Object, java.lang.Object> == null) {\n        org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>());\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry().put(java.lang.Object, null);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:186","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    return 0.0;\n} ","position":"org.apache.commons.lang3.StringUtils:7060","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n        org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, false);\n        break;\n    case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n        int++;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)));\n        if (int == 1) {\n            int++;\n            final java.lang.String java.lang.String = java.util.ArrayList<java.lang.String>.get(int);\n            if (java.lang.String != null) {\n                java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n            } \n        } \n        break;\n    case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n        int--;\n    default :\n        java.lang.StringBuilder.append(char);\n        org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:417","type":"CtSwitchImpl"},"status":-2},{"failures":[155],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1119","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","position":"org.apache.commons.lang3.math.Fraction:336","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"t":"value","u":"value","v":"value"},"name":"add","transplant":{"sourceCode":"do {\n    while ((int & 1) == 0) {\n        int /= 2;\n    }\n    if (int > 0) {\n        int = -int;\n    } else {\n        int = int;\n    }\n    int = (int - int) / 2;\n} while (int != 0 )","position":"org.apache.commons.lang3.math.Fraction:607","type":"CtDoImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(java.lang.StringBuffer, int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1082","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:276","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.concurrent.ConstantInitializer<T>.(getObject()) != null ? org.apache.commons.lang3.concurrent.ConstantInitializer<T>.getObject().hashCode() : 0","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:92","type":"CtReturnImpl"},"status":-2},{"failures":[156],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:541","type":"CtThrowImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, org.apache.commons.lang3.math.Fraction.int)","position":"org.apache.commons.lang3.math.Fraction:753","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.String.length()) <= int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2180","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.this(java.lang.String, java.util.Locale, null)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:102","type":"CtInvocationImpl"},"status":-2},{"failures":[3,4,6,7,8,9,12,13,14,15,17,18,20,21,24,27,157,158,159,160,56,161,162,163,58],"binaryOperator":"((char)((int % 10) + '0'))","name":"math","position":"org.apache.commons.lang3.time.TwoDigitNumberField:911","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getContentStart()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:3623","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"rc","endIndex":"rc"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int = (int * 7) + (java.lang.Object.hashCode());\n    } \n}","position":"org.apache.commons.lang3.time.FormatCache:255","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{"toClass":"toClass","cls":"cls","typeVarAssigns":"typeVarAssigns"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:880","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(java.lang.Class<?>, java.lang.Class<?>), java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:886","type":"CtReturnImpl"},"status":-2},{"failures":[1,2],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '0'","position":"org.apache.commons.lang3.Conversion:469","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'b';\n} else {\n    return 'a';\n}","position":"org.apache.commons.lang3.Conversion:538","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.Object[], char, 0, java.lang.Object[].int)","position":"org.apache.commons.lang3.StringUtils:3307","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    short = ((short)((short & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:1124","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'W' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:485","type":"CtCaseImpl"},"status":-2},{"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"binaryOperator":"(int + int) - (int - int)","name":"math","position":"org.apache.commons.lang3.text.StrSubstitutor:855","type":"mutation","status":-1},{"failures":[179],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:1365","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0, int int = (int) - 1 ; int < int ; int++ , int--) {\n    final char char = char[][int];\n    char[][int] = char[][int];\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.text.StrBuilder:2024","type":"CtForImpl"},"status":-1},{"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"variableMapping":{"quoteLen":"quoteLen","len":"quoteLen","workArea":"workArea","srcChars":"srcChars","start":"start","this":"this","tokenList":"tokenList"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int);\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:715","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:716","type":"CtReturnImpl"},"status":-1},{"failures":[197,198,199,200,201,202,203,135,204,205,206,207,208,209,210,211,212,213,139,214,215,216,217,218,219,220,221,222],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.Class<?>.getName())","position":"org.apache.commons.lang3.ClassUtils:179","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"quoteLen":"i","pos":"dstPos"},"name":"add","transplant":{"sourceCode":"int += int * 2","position":"org.apache.commons.lang3.text.StrTokenizer:759","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 32) + int","position":"org.apache.commons.lang3.Conversion:695","type":"CtAssignmentImpl"},"status":-2},{"failures":[223,224,225,226,227],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (boolean) {\n        org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService().shutdownNow();\n    } \n    if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n        java.util.concurrent.ScheduledFuture<?>.cancel(false);\n    } \n    boolean = true;\n} ","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:255","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.Writer.write(int)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:132","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","position":"org.apache.commons.lang3.Conversion:81","type":"CtThrowImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":154,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":173,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":170,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":3,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":6,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":74,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_StringInt":143,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":203,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":63,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":140,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":13,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":66,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":42,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":41,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_831":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":166,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":114,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":217,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":179,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":65,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":212,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":219,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":137,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":78,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":213,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":70,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":133,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":178,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":50,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":153,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":115,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":35,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":150,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":82,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":226,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":119,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":199,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":206,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":64,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte":129,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":30,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":210,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":56,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":49,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":157,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":62,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":209,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":131,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":24,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":85,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":38,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":111,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":55,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":33,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":75,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":169,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":22,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":40,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":5,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":201,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":145,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":29,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":130,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":83,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":220,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":47,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":158,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":12,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":10,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":37,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":86,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":163,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":92,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":11,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":98,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":214,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":222,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":156,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":123,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":160,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":84,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":106,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":104,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":218,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":216,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":26,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":134,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":138,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":215,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testPassAfterShutdown":223,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":147,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":46,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":113,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":19,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":121,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":171,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":175,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":8,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":94,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":122,"org.apache.commons.lang3.math.FractionTest.testCompareTo":128,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":112,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":205,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownOwnExecutor":224,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":197,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":139,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":177,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":108,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":88,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Object":198,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":164,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":69,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":167,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":7,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":165,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":225,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":61,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":99,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":120,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getMessage_Throwable":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":202,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":172,"org.apache.commons.lang3.text.StrTokenizerTest.test8":194,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":87,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":141,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":100,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":107,"org.apache.commons.lang3.text.StrTokenizerTest.test5":191,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":109,"org.apache.commons.lang3.text.StrTokenizerTest.test4":190,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":76,"org.apache.commons.lang3.text.StrTokenizerTest.test7":193,"org.apache.commons.lang3.text.StrTokenizerTest.test6":192,"org.apache.commons.lang3.text.StrTokenizerTest.test1":187,"org.apache.commons.lang3.text.StrTokenizerTest.test3":189,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":43,"org.apache.commons.lang3.text.StrTokenizerTest.test2":188,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection1":125,"org.apache.commons.lang3.ValidateTest.testNoNullElementsCollection2":126,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":162,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":58,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":34,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":211,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":59,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":161,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":110,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":15,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":102,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":53,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":227,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":155,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":168,"org.apache.commons.lang3.math.FractionTest.testPow":127,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":221,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":180,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":182,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":181,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":183,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":186,"org.apache.commons.lang3.time.FastDateParserTest.testParses":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":185,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":196,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":21,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":2,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":207,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":149,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":195,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":204,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":73,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":60,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":96,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":176,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":148,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":118,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":144,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":146,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":136}}]
