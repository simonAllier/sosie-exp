[{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:925","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:569","sourceCode":"return '3'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:467","sourceCode":"return '8'","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:182","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be reset before being restarted. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:264","sourceCode":"throw new java.lang.IllegalArgumentException(\"The character must not be null\")","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharRange:226","failures":[],"status":0,"binaryOperator":"(83 + (char))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1052","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1332","sourceCode":"byte[][(int + int)] = ((byte)(255 & (int >> int)))","type":"CtAssignmentImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1197","failures":[24],"status":-1,"binaryOperator":"(long >> int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:76","sourceCode":"if (java.io.Writer == null) {\n    throw new java.lang.IllegalArgumentException(\"The Writer must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:114","sourceCode":"java.io.Writer.write(\"&#\")","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:684","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"os.arch\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:597","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:579","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"u":"v"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:471","sourceCode":"return this.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.equals(this.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction : this.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:801","sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"org.apache.commons.lang3.math.Fraction.ZERO","org.apache.commons.lang3.math.Fraction.ZERO":"org.apache.commons.lang3.math.Fraction.ZERO"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:809","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:266","sourceCode":"return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character.charValue())","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:183","sourceCode":"if (int < 0) {\n    long = (int * ((long)(int))) - int;\n} else {\n    long = (int * ((long)(int))) + int;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:186","sourceCode":"long = (int * ((long)(int))) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"whole":"numerator","denominator":"whole","numerator":"whole","numeratorValue":"numeratorValue"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:42","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:369","sourceCode":"return false","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:811","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:842","failures":[151],"status":-1,"binaryOperator":"(int * 8) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6845","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:944","sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"threshold":"properNumerator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:170","sourceCode":"this.int -= java.lang.Number.intValue()","type":"CtOperatorAssignmentImpl"},"failures":[153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1500","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:263","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:540","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vm.info\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:145","sourceCode":"if (int < 7) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1178","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[47,47,0,1,13,13,14,67,15,154,16,68,69,70,70,17,71,72,73,74,18,19,155,75,76,77,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"arraySeparator","len":"i"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:961","sourceCode":"if (int == (java.util.Calendar.int)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1009","sourceCode":"if (int == int) {\n    if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                java.util.Calendar.add(java.util.Calendar.int, 15);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -15);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else if (int == (java.util.Calendar.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                java.util.Calendar.add(java.util.Calendar.int, 12);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -12);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else {\n            java.util.Calendar.add(int[][0], 1);\n        }\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1093","sourceCode":"if ((org.apache.commons.lang3.text.StrTokenizer.char[]) != null) {\n    org.apache.commons.lang3.text.StrTokenizer.char[] = org.apache.commons.lang3.text.StrTokenizer.char[].clone();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1094","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.char[] = org.apache.commons.lang3.text.StrTokenizer.char[].clone()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:861","inlineConstant":"int int = 1","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:639","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1755","sourceCode":"return org.apache.commons.lang3.time.DateUtils.(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date, java.util.Date, int)) == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:131","sourceCode":"if ((java.lang.String.charAt(2)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:561","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[39,39,40,41,42,158,73,73,83,159,91,160,99,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1156","sourceCode":"java.util.Calendar java.util.Calendar = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:912","sourceCode":"final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtLocalVariableImpl"},"failures":[162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1553","sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:832","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"org.apache.commons.lang3.time.DateUtils.MODIFY_TRUNCATE","nBools":"field"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1769","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:933","sourceCode":"java.lang.String = \"0\"","type":"CtAssignmentImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arrayEnd":"toProperString"}},{"position":"org.apache.commons.lang3.Conversion:119","failures":[164],"status":-1,"name":"returnValue","return":"return 1","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:895","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.4\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1019","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"FreeBSD\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:216","sourceCode":"return java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:142","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Date, java.lang.String, org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, null)","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"duration":"pattern"}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":2,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":47,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":60,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":57,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":92,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":68,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":107,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":72,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":27,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":30,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":94,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":96,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":50,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":56,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":70,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":112,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":98,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":6,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":28,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":5,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":157,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":82,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":134,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":138,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":73,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":159,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":37,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":33,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":147,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":146,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":145,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":161,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":123,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":31,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":122,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":160,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":119,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":118,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":10,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":117,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":61,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":87,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":80,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":93,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":67,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":85,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":106,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":9,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":8,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":12,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":164,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":41,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":22,"org.apache.commons.lang3.text.StrTokenizerTest.test1":126,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":150,"org.apache.commons.lang3.text.StrTokenizerTest.test3":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":4,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":165,"org.apache.commons.lang3.text.StrTokenizerTest.test2":127,"org.apache.commons.lang3.text.StrTokenizerTest.test8":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":51,"org.apache.commons.lang3.text.StrTokenizerTest.test5":130,"org.apache.commons.lang3.text.StrTokenizerTest.test4":129,"org.apache.commons.lang3.text.StrTokenizerTest.test7":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":40,"org.apache.commons.lang3.text.StrTokenizerTest.test6":131,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":140,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":77,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":52,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":102,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":64,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":16,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":116,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":63,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":55,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":88,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":36,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":42,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":21,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":46,"org.apache.commons.lang3.math.FractionTest.testToProperString":152,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":143,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":14,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":97,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":111,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":24,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":158,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":20,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValueObject":153}}]
