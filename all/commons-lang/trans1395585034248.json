[{"transplant":{"position":"org.apache.commons.lang3.Conversion:301","sourceCode":"if ((boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:404","sourceCode":"if ((boolean[].int) > 8) {\n    throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (boolean[].int)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:282","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[], 0)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:383","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[], 0)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:935","sourceCode":"java.lang.String = \"1\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:944","sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:477","sourceCode":"this.char[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1094","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.char[] = org.apache.commons.lang3.text.StrTokenizer.char[].clone()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:427","sourceCode":"if (java.lang.Boolean == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:505","sourceCode":"if (java.lang.Boolean == null) {\n    return java.lang.Integer;\n} ","type":"CtIfImpl"},"failures":[56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bool":"bool"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:134","sourceCode":"org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"${\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:914","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"quote"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"failures":[76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:274","sourceCode":"java.lang.String = java.lang.String.toLowerCase()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1743","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"arrayStart"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:517","sourceCode":"final boolean[] boolean[] = new boolean[4]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1077","sourceCode":"final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])","type":"CtLocalVariableImpl"},"failures":[78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:477","sourceCode":"if ((int > 16) || ((int == 16) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[81,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1190","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:52","sourceCode":"if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n} ","type":"CtIfImpl"},"failures":[83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"next3","nInts":"next3"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:608","sourceCode":"java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int))","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:404","sourceCode":"for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n    if (java.lang.Class<?>.equals(java.lang.Throwable[][int].getClass())) {\n        return int;\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:398","sourceCode":"for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Throwable[][int].getClass())) {\n        return int;\n    } \n}","type":"CtForImpl"},"failures":[85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:160","sourceCode":"this.java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","sourceCode":"java.util.concurrent.ExecutorService = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:485","sourceCode":"final char char = java.lang.String.charAt(((java.lang.String.length()) - 1))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:463","sourceCode":"final char char = java.lang.String.charAt(int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1242","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:401","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been started\")","type":"CtThrowImpl"},"failures":[87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:798","sourceCode":"char[][int++] = char","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:381","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","type":"CtAssignmentImpl"},"failures":[88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","ch":"ch","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:651","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:653","sourceCode":"if (boolean) {\n    break;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"traceStarted":"traceStarted"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:601","sourceCode":"try {\n    if (int <= 7) {\n        final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n        if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n            return java.lang.Float;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[90,81,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:511","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:462","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_STRATEGY"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1133","sourceCode":"if (short < short) {\n    short = short;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1258","sourceCode":"byte = byte","type":"CtAssignmentImpl"},"failures":[92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:897","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:61","sourceCode":"if (int == 1) {\n    return int;\n} else {\n    int += org.apache.commons.lang3.reflect.InheritanceUtils.org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class<?>, java.lang.Class<?>);\n    return int > 0 ? int + 1 : -1;\n}","type":"CtIfImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1225","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:207","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")","type":"CtThrowImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:306","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:180","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:299","sourceCode":"int -= 1","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:741","sourceCode":"int = 8","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"seconds":"radix"}},{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:492","failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,18,24,25,29,32,35,39,46,51,52],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:514","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2099","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"summaryObjectEndText","mant":"summaryObjectEndText"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:490","sourceCode":"if (char == char) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[110,111,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TwoDigitMonthField:974","sourceCode":"return 2","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:259","sourceCode":"return byte","type":"CtReturnImpl"},"failures":[114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1685","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:295","sourceCode":"for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n    final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n    if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n        java.util.List<java.util.Locale>.add(java.util.Locale);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:182","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[115,116,117,118,119,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5773","sourceCode":"if (java.lang.Character.isLowerCase(char)) {\n    char[][int] = java.lang.Character.toUpperCase(char);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:336","sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","ch":"ch","this":"this","i":"i"}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":9,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":41,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumByte":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":46,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":101,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValuePrimitive":118,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":8,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":35,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValueObject":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":5,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":43,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":99,"org.apache.commons.lang3.BooleanUtilsTest.test_toIntegerObject_Boolean_Integer_Integer_Integer":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":21,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":17,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":6,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":107,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":88,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":94,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValuePrimitive":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":48,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":82,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":49,"org.apache.commons.lang3.mutable.MutableIntTest.testConstructors":115,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":63,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":60,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":78,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":58,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":29,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":83,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":93,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":30,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":108,"org.apache.commons.lang3.text.StrTokenizerTest.test1":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":16,"org.apache.commons.lang3.text.StrTokenizerTest.test3":67,"org.apache.commons.lang3.text.StrTokenizerTest.test2":66,"org.apache.commons.lang3.time.StopWatchTest.testGetStartTime":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":39,"org.apache.commons.lang3.text.StrTokenizerTest.test8":72,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":10,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":86,"org.apache.commons.lang3.text.StrTokenizerTest.test5":69,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":91,"org.apache.commons.lang3.text.StrTokenizerTest.test4":68,"org.apache.commons.lang3.text.StrTokenizerTest.test7":71,"org.apache.commons.lang3.text.StrTokenizerTest.test6":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":74,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":11,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":81,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValueObject":120,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":33,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":79,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":40,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfPrimitiveArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":109,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":34,"org.apache.commons.lang3.mutable.MutableLongTest.testDecrement":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":12,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":2,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":113,"org.apache.commons.lang3.math.FractionTest.testToProperString":55,"org.apache.commons.lang3.mutable.MutableByteTest.testHashCode":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":75,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":90,"org.apache.commons.lang3.mutable.MutableLongTest.testIncrement":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":54,"org.apache.commons.lang3.mutable.MutableIntTest.testGetSet":116}}]
