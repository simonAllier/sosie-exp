[{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:678","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1116","sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","type":"CtForImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"arraySeparator","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:834","sourceCode":"return 4","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:96","sourceCode":"return new org.apache.commons.lang3.builder.CompareToBuilder().append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight()).toComparison()","type":"CtReturnImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:481","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:332","sourceCode":"return null","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1614","sourceCode":"byte[][int] = byte[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1332","sourceCode":"byte[][(int + int)] = ((byte)(255 & (int >> int)))","type":"CtAssignmentImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"j":"shift","array":"dst","i":"src"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:895","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:76","sourceCode":"T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:575","sourceCode":"T = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"result"}},{"transplant":{"position":"org.apache.commons.lang3.CharacterIterator:341","sourceCode":"if (boolean == false) {\n    throw new java.util.NoSuchElementException();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:332","sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    final char char = char[][int];\n    if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n        boolean = true;\n    } else if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n        boolean = false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"hasNext":"uncapitalizeNext"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:575","sourceCode":"T = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:159","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1088","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1231","sourceCode":"short[][(int + int)] = ((short)(65535 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"shift","shift":"shift","i":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:477","sourceCode":"this.char[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:757","sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, int)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"chars":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:123","sourceCode":"return (int & (int)) != 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:139","sourceCode":"return (int & (int)) == (int)","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:805","inlineConstant":"int int = 0","failures":[44,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:492","failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:274","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1093","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:896","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:518","sourceCode":"java.lang.Class<?>[] = java.lang.Class<?>[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:172","sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"classArray":"parameterTypes","org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:885","sourceCode":"org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.3\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1019","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"FreeBSD\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:3289","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1031","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\")","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:131","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<? extends java.lang.annotation.Annotation>, \"Annotation %s with null annotationType()\", java.lang.annotation.Annotation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:664","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n        return ;\n    } \n    if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n        java.lang.String = null;\n    } \n} ","type":"CtIfImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,19,20,88,89,90,91,92,23,24,25,26,93,94,95,96,97,98,27,28,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:38","sourceCode":"java.lang.Long.java.lang.Long.valueOf(-1L)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1501","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.lang.Class<?>.getTypeParameters().int) == (java.lang.reflect.Type[].int)), \"invalid number of type parameters specified: expected %s, got %s\", java.lang.Class<?>.getTypeParameters().int, java.lang.reflect.Type[].int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:279","sourceCode":"throw new java.lang.NullPointerException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:52","sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:411","failures":[102],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:113","sourceCode":"return 10","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:288","sourceCode":"return ((int)(long ^ (long >>> 32)))","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:83","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2159","sourceCode":"return new java.lang.String(char[] , int , (int - int))","type":"CtReturnImpl"},"failures":[104,71,72,105,73,74,106,75,76,77,78,79,80,82,83,13,14,15,84,85,86,87,16,17,18,19,20,107,88,89,90,91,92,22,23,24,108,25,26,93,94,95,96,97,98,27,28,99,109,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:117","sourceCode":"return true","type":"CtReturnImpl"},"failures":[112,113,114,115,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BitField:228","sourceCode":"return ((short)(org.apache.commons.lang3.BitField.set(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:191","sourceCode":"return org.apache.commons.lang3.BitField.((short)(clear(short)))","type":"CtReturnImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"holder":"holder","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:433","sourceCode":"if ((java.lang.String.length()) > 2) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:804","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    final char[] char[] = java.lang.String.toCharArray();\n    int int = 0;\n    for (int int = 0 ; int < (char[].int) ; int++) {\n        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n            break;\n        } \n        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + int));\n            break;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[29,119,30,120,31,32,121,33,122,123,124,34,35,125,126,127,128,129,130,131,36,132,37,133,38,134,135,39,136,137,138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"formatField":"varDefaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:326","sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:131","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Character must not be null\")","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":114,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":79,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":41,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":100,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":138,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":136,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":98,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":73,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":112,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":64,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":115,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":111,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":78,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":129,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":49,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":57,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":76,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":62,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":113,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":65,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":106,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":119,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":89,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":110,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":68,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":39,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":94,"org.apache.commons.lang3.math.FractionTest.testPow":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":127,"org.apache.commons.lang3.RangeTest.testEqualsObject":102,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":85,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":123,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":15,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":1,"org.apache.commons.lang3.math.FractionTest.testCompareTo":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":82,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":128,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":71,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":72,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":99,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":35,"org.apache.commons.lang3.text.StrTokenizerTest.test1":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":28,"org.apache.commons.lang3.text.StrTokenizerTest.test3":18,"org.apache.commons.lang3.text.StrTokenizerTest.test2":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":55,"org.apache.commons.lang3.text.StrTokenizerTest.test8":88,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":30,"org.apache.commons.lang3.text.StrTokenizerTest.test5":20,"org.apache.commons.lang3.text.StrTokenizerTest.test4":19,"org.apache.commons.lang3.text.StrTokenizerTest.test7":107,"org.apache.commons.lang3.text.StrTokenizerTest.test6":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":108,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":25,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":90,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":139,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":23,"org.apache.commons.lang3.mutable.MutableDoubleTest.testHashCode":103,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":59,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":2,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":80,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":134,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int_int_int":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":53,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":42,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":87,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":60,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":74,"org.apache.commons.lang3.tuple.TripleTest.testComparable4":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":48,"org.apache.commons.lang3.tuple.TripleTest.testComparable3":5,"org.apache.commons.lang3.tuple.TripleTest.testComparable2":4,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":92,"org.apache.commons.lang3.tuple.TripleTest.testComparable1":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":137,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":12,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":34,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":131,"org.apache.commons.lang3.BitFieldTest.testClearShort":118,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":26,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":126,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":75,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":77}}]
