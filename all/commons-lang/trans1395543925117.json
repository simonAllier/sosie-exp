[{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:208","sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:912","sourceCode":"if ((java.lang.String) == null) {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"className":"toString"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:938","sourceCode":"if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"numerator":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:283","sourceCode":"java.util.Calendar.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:179","sourceCode":"if ((java.util.Calendar == null) || (java.util.Calendar == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"cal":"cal2"}},{"position":"org.apache.commons.lang3.BitField:66","failures":[3,4,5,6],"status":-1,"binaryOperator":"org.apache.commons.lang3.BitField.(getRawValue(int)) >> (int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:380","sourceCode":"if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:383","sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","whitespace":"whitespace","ch":"ch","this":"this","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:114","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:471","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"initialCapacity":"pfxLen","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"pfxLen"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:120","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Float.NaN":"totalCost"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:595","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:328","sourceCode":"if (int == int) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:357","sourceCode":"if (java.lang.Integer == null) {\n    if (java.lang.Integer == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.Integer == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.Integer == null) {\n        return null;\n    } \n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:839","sourceCode":"if ((short[][int]) < short) {\n    short = short[][int];\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:345","sourceCode":"return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(java.lang.Object).setExcludeFieldNames(java.lang.String[]).toString()","type":"CtReturnImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:219","sourceCode":"return (((((\"FastDateParser[\" + (java.lang.String)) + \",\") + (java.util.Locale)) + \",\") + (java.util.TimeZone.getID())) + \"]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:290","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, java.util.Locale)","type":"CtReturnImpl"},"failures":[28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:450","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"buf"}},{"position":"org.apache.commons.lang3.ObjectUtils:412","failures":[39],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:257","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, null, java.util.Locale)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:195","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, null, java.util.Locale)","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1079","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"SunOS\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:885","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.3\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:262","sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n    java.util.concurrent.ScheduledFuture<?>.cancel(false);\n} ","type":"CtIfImpl"},"failures":[41,42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:940","inlineConstant":"int int = 1","failures":[43],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.apache.commons.lang3.time.DateUtils:1716","failures":[],"status":0,"binaryOperator":"((java.util.Calendar.get(java.util.Calendar.int)) * 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:942","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.and(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1011","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.AtomicInitializer:86","sourceCode":"if (!(this.java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n    T = this.java.util.concurrent.atomic.AtomicReference<T>.get();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.AtomicInitializer:84","sourceCode":"if (T == null) {\n    T = org.apache.commons.lang3.concurrent.AtomicInitializer<T>.initialize();\n    if (!(java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n        T = java.util.concurrent.atomic.AtomicReference<T>.get();\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","reference":"reference"}},{"transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:100","sourceCode":"if (T == null) {\n    T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n} ","type":"CtIfImpl"},"failures":[46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"object"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":13,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":29,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":45,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":8,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGet":46,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetMultipleTimes":48,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":34,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":28,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":12,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":18,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":25,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":16,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":1,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":9,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":37,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":7,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":44,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":27,"org.apache.commons.lang3.BitFieldTest.testGetValue":3,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetConcurrent":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":30,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":32,"org.apache.commons.lang3.BitFieldTest.testSetValue":6,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":4,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":14,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":21,"org.apache.commons.lang3.ObjectUtilsTest.testToString_ObjectString":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":33,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":42,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":24,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":17,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":20,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":23,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":31,"org.apache.commons.lang3.math.FractionTest.testToString":0,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":26,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":10}}]
