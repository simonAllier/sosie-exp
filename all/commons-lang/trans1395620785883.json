[{"transplant":{"position":"org.apache.commons.lang3.Conversion:521","sourceCode":"if (boolean[][int]) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:304","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:938","failures":[],"status":0,"binaryOperator":"(int) > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:517","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:226","sourceCode":"int = -int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:217","sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1013","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:101","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:282","sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:796","sourceCode":"if ((((byte[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:663","sourceCode":"if ((java.lang.Object != null) && ((java.lang.Class<?>.isInstance(java.lang.Object)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:176","sourceCode":"try {\n    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.register(java.lang.Object);\n    final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields();\n    java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true);\n    for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n        if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n            try {\n                final java.lang.Object java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n                org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object);\n            } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n                throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n            }\n        } \n    }\n} finally {\n    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.unregister(java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"object","clazz":"clazz"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:345","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((byte[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:360","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:731","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"negate"}},{"transplant":{"position":"org.apache.commons.lang3.event.ProxyInvocationHandler:315","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ContextedException:205","sourceCode":"return this.org.apache.commons.lang3.exception.ExceptionContext.getFirstContextValue(java.lang.String)","type":"CtReturnImpl"},"failures":[10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:861","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:863","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:459","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:845","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:545","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:444","failures":[23,24],"status":-1,"binaryOperator":"(int + 2)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1382","sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:804","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char[], int, int)","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"width":"pos","this":"workArea","size":"trimmedLen"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:337","sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.TextStrategy:578","sourceCode":"org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|')","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","failures":[91,92,93,94],"status":-1,"binaryOperator":"(int > (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:330","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:151","sourceCode":"return char","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:333","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:581","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[95,96,97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:357","sourceCode":"return int[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1188","sourceCode":"return int[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:823","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:113","sourceCode":"if (int < 5) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1029","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.CharSequenceUtils:117","sourceCode":"if (java.lang.CharSequence instanceof java.lang.String) {\n    return ((java.lang.String)(java.lang.CharSequence)).lastIndexOf(int, int);\n} else {\n    final int int = java.lang.CharSequence.length();\n    if (int < 0) {\n        return -1;\n    } \n    if (int >= int) {\n        int = int - 1;\n    } \n    for (int int = int ; int >= 0 ; --int) {\n        if ((java.lang.CharSequence.charAt(int)) == int) {\n            return int;\n        } \n    }\n    return -1;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:606","sourceCode":"java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:815","sourceCode":"for (int int = 1 ; int < (int[].int) ; int++) {\n    if ((int[][int]) < int) {\n        int = int[][int];\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:72","sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float);\n}","type":"CtForImpl"},"failures":[98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:227","sourceCode":"if (java.lang.Class<?>.isArray()) {\n    java.lang.Class<?> = java.lang.Class<?>.getComponentType();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:227","sourceCode":"if (java.lang.Class<?>.isArray()) {\n    java.lang.Class<?> = java.lang.Class<?>.getComponentType();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:633","sourceCode":"return '8'","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateIterator:1870","sourceCode":"throw new java.util.NoSuchElementException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:148","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","type":"CtThrowImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:564","sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","type":"CtIfImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":93,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":43,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":80,"org.apache.commons.lang3.math.FractionTest.testFactory_double":4,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":42,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":94,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":26,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":98,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":27,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":48,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":63,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":13,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":67,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":95,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":34,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":46,"org.apache.commons.lang3.ObjectUtilsTest.testMode":101,"org.apache.commons.lang3.math.FractionTest.testPow":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":28,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":59,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":25,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":9,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":51,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":83,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":11,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":32,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":50,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":70,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":75,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":64,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":24,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":22,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":62,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":6,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":92,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":31,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":85,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":73,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":69,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":86,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":2,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":82,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":0,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":19,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":84,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":49,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":37,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":15,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":41,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":90,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":56,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":58,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":12,"org.apache.commons.lang3.math.FractionTest.testMultiply":8,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":54,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":17,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":100,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":16,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":1,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":23,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":55,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":97,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":53,"org.apache.commons.lang3.math.FractionTest.testDivide":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":39,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":71,"org.apache.commons.lang3.math.FractionTest.testToProperString":5,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":65,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":87,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":14,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":99,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":60}}]
