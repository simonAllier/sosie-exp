[{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:886","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(\": \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:3763","sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.StringBuilder.append(short[][int]);\n}","type":"CtForImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:143","sourceCode":"return new java.util.Locale(java.lang.String.substring(0, 2) , java.lang.String.substring(3, 5))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:136","sourceCode":"return new java.util.Locale(java.lang.String.substring(0, 2) , \"\" , java.lang.String.substring(4))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:66","sourceCode":"return this.T","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:173","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"minimum"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:3634","sourceCode":"return (char[] != null) && (int != 0)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1371","sourceCode":"if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    boolean = true;\n} else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","array":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:429","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:460","sourceCode":"if (boolean[][int]) {\n    return 'c';\n} else {\n    return '4';\n}","type":"CtIfImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","failures":[],"status":0,"binaryOperator":"int > 255","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:124","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCause(java.lang.Throwable, org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1080","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:623","sourceCode":"throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:545","sourceCode":"return '9'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:553","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","type":"CtIfImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:457","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n            T = T;\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:432","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n            T = T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","values":"values","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:330","sourceCode":"java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:455","sourceCode":"java.lang.StringBuilder.append(']')","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"regex":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:123","sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:560","sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])) {\n    final java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>(T[].int);\n    for (final T T : T[]) {\n        final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T);\n        if (org.apache.commons.lang3.mutable.MutableInt == null) {\n            java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n        } else {\n            org.apache.commons.lang3.mutable.MutableInt.increment();\n        }\n    }\n    T T = null;\n    int int = 0;\n    for (final java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n        final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue();\n        if (int == int) {\n            T = null;\n        } else if (int > int) {\n            int = int;\n            T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n        } \n    }\n    return T;\n} ","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"items"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:382","sourceCode":"if (!org.apache.commons.lang3.Range<T>.(isOverlappedBy(org.apache.commons.lang3.Range<T>))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>));\n} ","type":"CtIfImpl"},"failures":[9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:194","sourceCode":"try {\n    java.lang.reflect.Method = java.lang.Throwable.getClass().getMethod(java.lang.String);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"prefix":"methodName"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:234","sourceCode":"if ((int == 0) && (int == 0)) {\n    if (char[] != null) {\n        int = char[].int;\n    } else {\n        if ((!boolean) && (!boolean)) {\n            int = java.lang.Integer.int;\n        } else {\n            int = 'z' + 1;\n            int = ' ';\n        }\n    }\n} else {\n    if (int <= int) {\n        throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n    } \n}","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:643","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mul\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:974","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:544","sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:558","sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6845","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:390","sourceCode":"if (int < 0) {\n    int = 0;\n} ","type":"CtIfImpl"},"failures":[20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"threshold":"fromIndex"}},{"position":"org.apache.commons.lang3.math.Fraction:773","failures":[22,23],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.apache.commons.lang3.math.NumberUtils:740","failures":[24],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:538","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:355","sourceCode":"throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\")","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:735","sourceCode":"int = 16","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:577","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"radix":"max"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:122","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1740","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:159","sourceCode":"return (java.lang.Boolean != null) && (java.lang.Boolean.booleanValue())","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:138","sourceCode":"org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"}\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1099","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"valueDelimiterMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:452","sourceCode":"if (boolean[][int]) {\n    return 'a';\n} else {\n    return '2';\n}","type":"CtIfImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:180","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(char[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:178","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(char[][0])","type":"CtReturnImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"chars":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:879","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:769","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"failures":[29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:947","failures":[30],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:167","sourceCode":"float float = 0.0F","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1299","sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[][int]);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:242","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(float, float), float)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:124","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float, float), float)","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"a","c":"b","a":"b","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_emptyInput":18,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":2,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":17,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":9,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfShorts":0,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":14,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":3,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":15,"org.apache.commons.lang3.ConversionTest.testHexToInt":30,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Boolean":27,"org.apache.commons.lang3.RangeTest.testToString":7,"org.apache.commons.lang3.math.FractionTest.testSubtract":23,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":28,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":21,"org.apache.commons.lang3.math.FractionTest.testAdd":22,"org.apache.commons.lang3.ObjectUtilsTest.testMode":8,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":26,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":24,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":5,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":29,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":31,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":16,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":20,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":10,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":6,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":25,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":19,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG807":12,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":11,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":1,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":4}}]
