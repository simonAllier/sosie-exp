[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(java.lang.Object.java.lang.Object).build()","position":"org.apache.commons.lang3.reflect.TypeUtils:288","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:1202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final byte byte : byte[]) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte.java.lang.Byte.valueOf(byte);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Byte);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Byte, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5360","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"found an unhandled type: \" + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:575","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"]\\n\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:158","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        final int int = int;\n        while ((++int) < (int)) {\n            if ((char[][int]) != char) {\n                break;\n            } \n        }\n        final int int = int - int;\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n        int -= int;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1701","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) && (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> != null)) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type);\n    if (java.lang.reflect.Type == null) {\n        throw new java.lang.IllegalArgumentException((\"missing assignment type for type variable \" + java.lang.reflect.Type));\n    } \n    return java.lang.reflect.Type;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:722","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Throwable == null) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:517","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6908","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtIfImpl"},"status":-2},{"failures":[0],"variableMapping":{"srcPos":"size","nShorts":"size"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + 4), ((int) - int))","position":"org.apache.commons.lang3.text.StrBuilder:1577","type":"CtInvocationImpl"},"status":-1},{"failures":[1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:578","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Integer.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:242","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"comparison":"depth","lhs":"depth","rhs":"depth"},"name":"replace","transplant":{"sourceCode":"int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:434","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < (int)) {\n    org.apache.commons.lang3.text.StrBuilder.delete(int, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2052","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:487","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char == (org.apache.commons.lang3.CharUtils.char)) {\n    if ((java.lang.String.charAt((int - 1))) == (org.apache.commons.lang3.CharUtils.char)) {\n        int--;\n    } \n} else if (char != (org.apache.commons.lang3.CharUtils.char)) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:5012","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>)","position":"org.apache.commons.lang3.reflect.ConstructorUtils:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 7","position":"org.apache.commons.lang3.Conversion:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"));","position":"org.apache.commons.lang3.time.DateUtils:1205","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrTokenizer:834","type":"CtReturnImpl"},"status":-2},{"failures":[2],"variableMapping":{"str":"str","remove":"abrevMarker"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String + org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String.substring(int), (int - 3)))","position":"org.apache.commons.lang3.StringUtils:6417","type":"CtReturnImpl"},"status":-1},{"failures":[3,4],"variableMapping":{"startIndex":"i"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.exception.ExceptionUtils:406","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1293","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","position":"org.apache.commons.lang3.math.Fraction:223","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isPrimitive())) {\n    java.lang.Object = ((java.lang.Object[])(T)).clone();\n} else {\n    int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(T);\n    java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int);\n    while ((int--) > 0) {\n        java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n    }\n}","position":"org.apache.commons.lang3.ObjectUtils:613","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","position":"org.apache.commons.lang3.exception.ExceptionUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","position":"org.apache.commons.lang3.ArrayUtils:5725","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.Range<T>.equals(org.apache.commons.lang3.Range<T>)) {\n    return this;\n} ","position":"org.apache.commons.lang3.Range:387","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Range<T>.org.apache.commons.lang3.Range.between(T, T, null)","position":"org.apache.commons.lang3.Range:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = ((java.lang.String.length()) / 2) + 1","position":"org.apache.commons.lang3.StringUtils:7045","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutionException.getCause()) instanceof java.lang.RuntimeException) {\n    throw ((java.lang.RuntimeException)(java.util.concurrent.ExecutionException.getCause()));\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:159","type":"CtIfImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16],"variableMapping":{"pair":"pair"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue()","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n    return org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue();\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:93","type":"CtIfImpl"},"status":-1},{"failures":[17,18,18,19,20,20,21,22,23,24,25,26,27,27,28,29,30,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,56,57,58,59,59,60,61,62,63,64,64,65,66,66,67,68,69,70,71,72,73,74,74,75,76,77,78,79,80,81,82,83],"binaryOperator":"java.lang.Object == null","name":"negateConditional","position":"org.apache.commons.lang3.ObjectUtils:341","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = int + 3","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:6037","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrSubstitutor:833","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(double[], java.lang.Double.doubleValue(), int)","position":"org.apache.commons.lang3.ArrayUtils:5908","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:530","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:327","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"className":"sep"},"name":"replace","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.ClassUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n    if (java.util.Iterator<?>.hasNext()) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1183","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5419","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:214","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:704","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4718","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","position":"org.apache.commons.lang3.math.Fraction:679","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String))","position":"org.apache.commons.lang3.Validate:1107","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new () {\n    @java.lang.Override\n    boolean isStarted() {\n        return true;\n    }\n\n    @java.lang.Override\n    boolean isStopped() {\n        return false;\n    }\n\n    @java.lang.Override\n    boolean isSuspended() {\n        return true;\n    }\n}","position":"org.apache.commons.lang3.time.StopWatch:82","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","position":"org.apache.commons.lang3.time.FastDateParser:370","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append('>')","position":"org.apache.commons.lang3.reflect.TypeUtils:1753","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.exception.ExceptionUtils:522","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(java.lang.Object[].int)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:330","type":"CtLocalVariableImpl"},"status":-2},{"failures":[84],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], java.lang.Short.shortValue(), int)","position":"org.apache.commons.lang3.ArrayUtils:5463","type":"CtAssignmentImpl"},"status":-1},{"failures":[85,86,87],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:867","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98],"variableMapping":{"quoteLen":"max","pos":"max"},"name":"replace","transplant":{"sourceCode":"int += int * 2","position":"org.apache.commons.lang3.text.StrTokenizer:759","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.CharSequence.length()) - int","position":"org.apache.commons.lang3.text.translate.LookupTranslator:72","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.apache.commons.lang3.reflect.ConstructorUtils:201","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.lang3.ArrayUtils:2598","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:516","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2662","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(double[][int], double[][int])","position":"org.apache.commons.lang3.builder.CompareToBuilder:907","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[][int], boolean[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:903","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"java.util.Calendar.DAY_OF_YEAR":"offset"},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:808","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        break;\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        break;\n    default :\n        break;\n}","position":"org.apache.commons.lang3.time.DateUtils:1697","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = 15 & (int >> int)","position":"org.apache.commons.lang3.Conversion:1440","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1716","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(byte[] , (java.nio.charset.Charset != null ? java.nio.charset.Charset : java.nio.charset.Charset.java.nio.charset.Charset.defaultCharset()))","position":"org.apache.commons.lang3.StringUtils:7637","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < int) {\n    return java.lang.String.concat(java.lang.String.substring(0, int));\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return java.lang.String.concat(new java.lang.String(char[]));\n}","position":"org.apache.commons.lang3.StringUtils:5317","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String, int)","position":"org.apache.commons.lang3.StringUtils:5180","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.text.Normalizer.java.text.Normalizer.normalize(java.lang.String, java.text.Normalizer.Form.java.text.Normalizer.Form)","position":"org.apache.commons.lang3.StringUtils:766","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nBytes":"length","srcPos":"length"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[], 0, java.lang.Object[].int)","position":"org.apache.commons.lang3.ArrayUtils:1439","type":"CtInvocationImpl"},"status":-2},{"failures":[99,100,101,102],"variableMapping":{"buffer":"buf"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"null\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:148","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.replace((int - (java.lang.CharSequence.length())), java.lang.CharSequence.length(), java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.text.FormattableUtils:141","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"strLen":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","size":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"if (int > (this.org.apache.commons.lang3.StringUtils.int)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1223","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"long long = 0","position":"org.apache.commons.lang3.time.DateUtils:1692","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long","position":"org.apache.commons.lang3.Conversion:803","type":"CtLocalVariableImpl"},"status":-2},{"failures":[103],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","position":"org.apache.commons.lang3.math.Fraction:336","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\")","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:294","type":"CtThrowImpl"},"status":-1},{"failures":[104,105,106,107,108,109,110],"variableMapping":{"lhs":"eventSource","rhs":"eventSource"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.NullPointerException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:278","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, (\"add\" + (java.lang.Class<L>.getSimpleName())), L);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have an accessible add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Unable to add listener.\" , java.lang.reflect.InvocationTargetException.getCause());\n}","position":"org.apache.commons.lang3.event.EventUtils:49","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:276","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"hours":"nHex","days":"srcPos"},"name":"add","transplant":{"sourceCode":"while (int < 0) {\n    int += 24;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:310","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final long long = (15L & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final long long = 15L << int;\n    long = (long & (~long)) | long;\n}","position":"org.apache.commons.lang3.Conversion:912","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"formatField":"str"},"name":"add","transplant":{"sourceCode":"char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.time.FastDateParser:566","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.StringUtils:5010","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:712","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:375","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"objectToTest":"value","lhs":"value"},"name":"add","transplant":{"sourceCode":"java.lang.Object = java.lang.Object","position":"org.apache.commons.lang3.builder.DiffBuilder:809","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object","position":"org.apache.commons.lang3.time.DurationFormatUtils:514","type":"CtAssignmentImpl"},"status":0},{"failures":[111,89,112],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:60","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:273","type":"CtReturnImpl"},"status":-2},{"failures":[113,114],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>))","position":"org.apache.commons.lang3.Range:384","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Object[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.Object[][int]);\n} ","position":"org.apache.commons.lang3.StringUtils:3574","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(byte[][int])","position":"org.apache.commons.lang3.StringUtils:3723","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:456","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","position":"org.apache.commons.lang3.ArrayUtils:243","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double[]","position":"org.apache.commons.lang3.ArrayUtils:3307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    break;","position":"org.apache.commons.lang3.BooleanUtils:630","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:7316","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isDigit(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6038","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6503","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4692","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:370","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float[]","position":"org.apache.commons.lang3.ArrayUtils:3945","type":"CtReturnImpl"},"status":-2},{"failures":[115],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:709","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:576","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"array"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","position":"org.apache.commons.lang3.ObjectUtils:293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer(), null, java.lang.Object)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:610","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:958","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(boolean[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5944","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:772","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:87","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.BooleanUtils:1055","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:259","type":"CtIfImpl"},"status":-2},{"failures":[116],"variableMapping":{"tokenPos":"i"},"name":"replace","transplant":{"sourceCode":"return int > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation[][int], java.lang.annotation.Annotation[][int]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:330","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1155","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(double[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2559","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = java.lang.Integer.int","position":"org.apache.commons.lang3.StringUtils:1970","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char >= '0') && (char <= '3')","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:78","type":"CtReturnImpl"},"status":-2},{"failures":[117],"variableMapping":{"str":"str","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, false)","position":"org.apache.commons.lang3.StringUtils:3176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, -1, false)","position":"org.apache.commons.lang3.StringUtils:2693","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:182","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.math.NumberUtils:1437","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasPrevious()) {\n    return java.lang.String[][--(int)];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:421","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int, int, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.FastDateFormat:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Long)","position":"org.apache.commons.lang3.ArrayUtils:5718","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"dstPos":"length","nShorts":"length"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:725","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.lang.Class<?>.getTypeParameters().int) == (java.lang.reflect.Type[].int)), \"invalid number of type parameters specified: expected %s, got %s\", java.lang.Class<?>.getTypeParameters().int, java.lang.reflect.Type[].int)","position":"org.apache.commons.lang3.reflect.TypeUtils:1502","type":"CtInvocationImpl"},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(T)","position":"org.apache.commons.lang3.Validate:745","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.text.WordUtils:294","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(java.lang.String, org.apache.commons.lang3.tuple.Pair<L, R>.getLeft(), org.apache.commons.lang3.tuple.Pair<L, R>.getRight())","position":"org.apache.commons.lang3.tuple.Pair:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4718","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long = long - (long * (org.apache.commons.lang3.time.DateUtils.long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:138","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:861","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2338","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.get()","position":"org.apache.commons.lang3.builder.EqualsBuilder:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:475","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.toString(), 16)","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:53","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"HP-UX\")","position":"org.apache.commons.lang3.SystemUtils:971","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, boolean[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1400","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Constructor<T>, \"constructor cannot be null\")","position":"org.apache.commons.lang3.reflect.ConstructorUtils:218","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (byte[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, long[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:835","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3613","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Type[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(java.lang.reflect.Type[], int--)","position":"org.apache.commons.lang3.reflect.TypeUtils:1412","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n    boolean = false;\n    break;\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:414","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return int == (java.lang.Integer.int) ? org.apache.commons.lang3.StringUtils.int : int","position":"org.apache.commons.lang3.StringUtils:1988","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrMatcher:376","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","o":"o"},"name":"add","transplant":{"sourceCode":"return java.util.Arrays.hashCode(((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:369","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((byte[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:345","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.State.isSuspended()","position":"org.apache.commons.lang3.time.StopWatch:460","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    if ((int[][0]) == (java.util.Calendar.int)) {\n        int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n        if (int >= 15) {\n            int -= 15;\n        } \n        boolean = int > 7;\n        boolean = true;\n    } \n    break;","position":"org.apache.commons.lang3.time.DateUtils:1049","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= 0 ; int--) {\n    if ((java.lang.Object[][int]) == null) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:1963","type":"CtForImpl"},"status":-2},{"failures":[147,148],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","position":"org.apache.commons.lang3.Conversion:524","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:574","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n    int += 1;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:347","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:944","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.StopWatch.SplitState()","position":"org.apache.commons.lang3.time.StopWatch:126","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.CharRange:248","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',')","position":"org.apache.commons.lang3.tuple.Triple:142","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:513","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":74,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":76,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":73,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":18,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":129,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":39,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":138,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":97,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":27,"org.apache.commons.lang3.text.FormattableUtilsTest.testEllipsis":102,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":95,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerThrowsException":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":140,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":113,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":145,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":78,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":66,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":91,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharacter":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":127,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":126,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":123,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":106,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":67,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":33,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":69,"org.apache.commons.lang3.text.FormattableUtilsTest.testDefaultAppend":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":90,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":83,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":3,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer":1,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":63,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":130,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":29,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":98,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":11,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":146,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringIntInt":2,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuffer":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":72,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":108,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":12,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":59,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":104,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":30,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":8,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":57,"org.apache.commons.lang3.text.FormattableUtilsTest.testAlternatePadCharAndEllipsis":101,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":128,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":93,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":25,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":49,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":32,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":36,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":139,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":81,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testPassAfterShutdown":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":141}}]
