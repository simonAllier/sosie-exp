[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","position":"org.apache.commons.lang3.math.NumberUtils:527","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String)","position":"org.apache.commons.lang3.time.FastDatePrinter:278","type":"CtAssignmentImpl"},"status":-2},{"failures":[0,1],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.applyRulesToString(java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDatePrinter:400","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) == int) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:77","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean && (org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, char, 0)) < 0)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1769","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > (int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(char);\n} ","position":"org.apache.commons.lang3.StringUtils:3867","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1375","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (short[] != null) && ((short[].int) != 0)","position":"org.apache.commons.lang3.ArrayUtils:3633","type":"CtReturnImpl"},"status":-2},{"failures":[2,3,4,5,6],"binaryOperator":"char == (java.lang.Character.char)","name":"negateConditional","position":"org.apache.commons.lang3.Conversion:604","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.CharSet:248","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField()","position":"org.apache.commons.lang3.time.FastDatePrinter:768","type":"CtNewClassImpl"},"status":-2},{"failures":[7,8],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:925","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:448","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (int) == 0","position":"org.apache.commons.lang3.text.StrBuilder:278","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n    final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(java.lang.Object));\n    return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale));\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1262","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6763","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6037","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.java.lang.String.format(\"[%s: %s, %s]\", java.lang.String, org.apache.commons.lang3.tuple.Pair<T, T>.getLeft(), org.apache.commons.lang3.tuple.Pair<T, T>.getRight())","position":"org.apache.commons.lang3.builder.Diff:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:579","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)","position":"org.apache.commons.lang3.text.StrBuilder:1812","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n    continue outer;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2471","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:94","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:96","type":"CtInvocationImpl"},"status":-2},{"failures":[9],"binaryOperator":"((byte[].int) - int) < 16","name":"conditionalBoundary","position":"org.apache.commons.lang3.Conversion:1711","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (boolean[].int)) + \", srcPos=\") + int))","position":"org.apache.commons.lang3.Conversion:408","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:112","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final boolean boolean = org.apache.commons.lang3.text.translate.CodePointTranslator.translate(int, java.io.Writer)","position":"org.apache.commons.lang3.text.translate.CodePointTranslator:38","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.5\")","position":"org.apache.commons.lang3.SystemUtils:905","type":"CtInvocationImpl"},"status":-2},{"failures":[10],"variableMapping":{"str":"valueIfNull","remove":"valueIfNull"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.ClassUtils:269","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte < byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"byte < byte","name":"conditionalBoundary","position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"mutation","status":0},{"failures":[11],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6136","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    if (java.lang.Double.java.lang.Double.isNaN(double[][int])) {\n        return java.lang.Double.double;\n    } \n    if ((double[][int]) < double) {\n        double = double[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:887","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:216","type":"CtInvocationImpl"},"status":-2},{"failures":[12,13,14],"variableMapping":{"count":"tokenPos"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String[][--(int)]","position":"org.apache.commons.lang3.text.StrTokenizer:422","type":"CtReturnImpl"},"status":-1},{"failures":[15,16,17],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:332","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:680","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:67","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:593","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:435","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:823","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.math.NumberUtils:741","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:437","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 10 :\n    return '5';","position":"org.apache.commons.lang3.Conversion:650","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int >= org.apache.commons.lang3.text.StrBuilder.(length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:326","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"isEquals":"whitespace"},"name":"add","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:939","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:470","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:4179","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:125","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int != 0) {\n    int += 12 * int;\n    int = 0;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:328","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (java.lang.Object[].int) ; int++) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object[][int]);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1136","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<java.lang.Class<?>> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ClassUtils:425","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"gcd":"denominator"},"name":"replace","transplant":{"sourceCode":"if (int == 1) {\n    return this;\n} ","position":"org.apache.commons.lang3.math.Fraction:474","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Iterable<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:4148","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"FastDatePrinter[\" + (java.lang.String)) + \",\") + (java.util.Locale)) + \",\") + (java.util.TimeZone.getID())) + \"]\"","name":"math","position":"org.apache.commons.lang3.time.FastDatePrinter:555","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 16) + int","position":"org.apache.commons.lang3.Conversion:1230","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.replaceImpl(int, (int + int), int, java.lang.String, int)","position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double - double","position":"org.apache.commons.lang3.ArrayUtils:2695","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map<java.lang.Object, java.lang.Object> != null) {\n    java.util.Map<java.lang.Object, java.lang.Object>.remove(java.lang.Object);\n    if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n        org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:210","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:753","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"count","denominator":"count","numerator":"count"},"name":"add","transplant":{"sourceCode":"if ((int == int) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:274","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:4062","type":"CtReturnImpl"},"status":-2},{"failures":[18,19,20,21],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:631","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    java.lang.String.getChars(0, int, char[], int);\n} else {\n    final int int = int - int;\n    java.lang.String.getChars(0, int, char[], int);\n    for (int int = 0 ; int < int ; int++) {\n        char[][(((int) + int) + int)] = char;\n    }\n}","position":"org.apache.commons.lang3.text.StrBuilder:1438","type":"CtIfImpl"},"status":-1},{"failures":[22],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer().toString()","position":"org.apache.commons.lang3.builder.ToStringBuilder:1063","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.getStyle().getNullText()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:685","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"nullText":"fieldName"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:633","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(']')","position":"org.apache.commons.lang3.Range:456","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:624","type":"CtInvocationImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"variableMapping":{"cs":"cs","this":"this","i":"strLen"},"name":"replace","transplant":{"sourceCode":"if (((java.lang.Character.isLetterOrDigit(java.lang.CharSequence.charAt(int))) == false) && ((java.lang.CharSequence.charAt(int)) != ' ')) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5957","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:311","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:388","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.builder.IDKey:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array2":"this","array1":"this"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.ArrayUtils:1418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * {@link WildcardType} builder.\n * @since 3.2\n */\npublic static class WildcardTypeBuilder implements org.apache.commons.lang3.builder.Builder<java.lang.reflect.WildcardType> {\n    /** \n     * Constructor\n     */\nprivate WildcardTypeBuilder() {\n    }\n\n    private java.lang.reflect.Type[] upperBounds;\n\n    private java.lang.reflect.Type[] lowerBounds;\n\n    /** \n     * Specify upper bounds of the wildcard type to build.\n     * @param bounds to set\n     * @return {@code this}\n     */\npublic org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type... bounds) {\n        this.java.lang.reflect.Type[] = java.lang.reflect.Type[];\n        return this;\n    }\n\n    /** \n     * Specify lower bounds of the wildcard type to build.\n     * @param bounds to set\n     * @return {@code this}\n     */\npublic org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder withLowerBounds(java.lang.reflect.Type... bounds) {\n        this.java.lang.reflect.Type[] = java.lang.reflect.Type[];\n        return this;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.WildcardType build() {\n        return new org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl(java.lang.reflect.Type[] , java.lang.reflect.Type[]);\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:53","type":"CtClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date(long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:284","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:749","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.ArrayUtils:6019","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:803","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.RandomStringUtils:279","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream java.io.ObjectInputStream = null","position":"org.apache.commons.lang3.SerializationUtils:219","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.DateUtils:380","type":"CtLocalVariableImpl"},"status":-2},{"failures":[89,90],"variableMapping":{"throwables":"throwables","i":"i","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Throwable[][int].getClass())) {\n    return int;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:399","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Throwable[][int].getClass())) {\n    return int;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:405","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = int + 3","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:3238","type":"CtLocalVariableImpl"},"status":-2},{"failures":[91,92,93],"variableMapping":{"size":"firstDiff","index":"firstDiff"},"name":"add","transplant":{"sourceCode":"if ((int < 0) || (int > int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2799","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != (-1)) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6636","type":"CtIfImpl"},"status":-1},{"failures":[94],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char)","position":"org.apache.commons.lang3.text.StrBuilder:1292","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"startIndex":"defaultValue"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2424","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character.charValue(), int)","position":"org.apache.commons.lang3.CharUtils:289","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.Throwable.getMessage()","position":"org.apache.commons.lang3.exception.ExceptionUtils:676","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.Throwable, null)","position":"org.apache.commons.lang3.exception.ExceptionUtils:675","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"count":"count"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, true)","position":"org.apache.commons.lang3.RandomStringUtils:111","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharUtils.java.lang.String[][char]","position":"org.apache.commons.lang3.CharUtils:309","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:938","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1099","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object[])","position":"org.apache.commons.lang3.builder.ToStringStyle:881","type":"CtInvocationImpl"},"status":0},{"failures":[95,96],"variableMapping":{"buffer":"wrappedLine"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(':')","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:143","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.WordUtils:196","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.lang.Math.java.lang.Math.max(java.lang.CharSequence[][int].length(), int)","position":"org.apache.commons.lang3.StringUtils:6612","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte = byte[][int]","position":"org.apache.commons.lang3.math.NumberUtils:865","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"double double = 1","position":"org.apache.commons.lang3.math.Fraction:267","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double","position":"org.apache.commons.lang3.ArrayUtils:1684","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1228","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3823","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:300","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = org.apache.commons.lang3.time.DurationFormatUtils.Token[][int];\n    final java.lang.Object java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.Token.getValue();\n    final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token.getCount();\n    if (java.lang.Object instanceof java.lang.StringBuilder) {\n        java.lang.StringBuilder.append(java.lang.Object.toString());\n    } else {\n        if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = false;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            boolean = true;\n        } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n            if (boolean) {\n                int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n                java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n            } else {\n                java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n            }\n            boolean = false;\n        } \n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:420","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"throwable":"throwable","this":"this"},"name":"add","transplant":{"sourceCode":"java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCause(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:284","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(java.lang.Throwable, java.lang.System.java.io.PrintStream)","position":"org.apache.commons.lang3.exception.ExceptionUtils:433","type":"CtInvocationImpl"},"status":-2},{"failures":[97],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((--int) == 0) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:4533","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:966","type":"CtIfImpl"},"status":-1},{"failures":[98],"variableMapping":{"nBools":"len","srcPos":"pos"},"name":"replace","transplant":{"sourceCode":"assert ((int - 1) * 1) < (16 - int)","position":"org.apache.commons.lang3.Conversion:1626","type":"CtAssertImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int < int) && ((char[][(int - 1)]) <= ' ')) {\n    int--;\n}","position":"org.apache.commons.lang3.text.StrBuilder:2049","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:784","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Default <code>ToStringStyle<\/code>.<\/p>\n * \n * <p>This is an inner class rather than using\n * <code>StandardToStringStyle<\/code> to ensure its immutability.<\/p>\n */\nprivate static final class DefaultToStringStyle extends org.apache.commons.lang3.builder.ToStringStyle {\n    /** \n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     */\nprivate static final long serialVersionUID = 1L;\n\n    /** \n     * <p>Constructor.<\/p>\n     * \n     * <p>Use the static constant rather than instantiating.<\/p>\n     */\nDefaultToStringStyle() {\n        org.apache.commons.lang3.builder.ToStringStyle.super();\n    }\n\n    /** \n     * <p>Ensure <code>Singleton<\/code> after serialization.<\/p>\n     * \n     * @return the singleton\n     */\nprivate java.lang.Object readResolve() {\n        return org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle;\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:2112","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.StringUtils:1719","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:943","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Right hand object cannot be null\")","position":"org.apache.commons.lang3.builder.DiffResult:80","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Illegal running state has occurred.\")","position":"org.apache.commons.lang3.time.StopWatch:345","type":"CtThrowImpl"},"status":-2},{"failures":[99,100,101,102,103,104,105,106,107,108],"variableMapping":{"fieldName":"methodName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n        final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n        if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } \n    } \n}","position":"org.apache.commons.lang3.reflect.MethodUtils:483","type":"CtForEachImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","position":"org.apache.commons.lang3.text.StrTokenizer:861","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1405","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.StringUtils:5774","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"delimLen":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","start":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return int + int","position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2284","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iValue":"length"},"name":"replace","transplant":{"sourceCode":"return int % 24","position":"org.apache.commons.lang3.time.FastDateParser:815","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (short[].int) ; int++) {\n    if (short == (short[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2234","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1333","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:723","type":"CtReturnImpl"},"status":-2},{"failures":[109],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.mutable.MutableShort:222","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrSubstitutor(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()).replace(java.lang.Object)","position":"org.apache.commons.lang3.text.StrSubstitutor:231","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)) == false) {\n    return java.lang.String.substring(int, (int + int));\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:418","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(int)","position":"org.apache.commons.lang3.text.StrBuilder:2800","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3367","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"cls":"type"},"name":"add","transplant":{"sourceCode":"return (java.lang.Class<?> != null) && ((java.lang.Class<?>.getEnclosingClass()) != null)","position":"org.apache.commons.lang3.ClassUtils:803","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:542","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ true , false , false , true }","position":"org.apache.commons.lang3.Conversion:241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , false , true , true }","position":"org.apache.commons.lang3.Conversion:247","type":"CtReturnImpl"},"status":-2},{"failures":[110,111],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:3230","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:695","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","position":"org.apache.commons.lang3.text.StrTokenizer:739","type":"CtInvocationImpl"},"status":-2},{"failures":[112],"variableMapping":{"startCutoff":"value","java.util.Calendar.MONDAY":"value"},"name":"replace","transplant":{"sourceCode":"int = this.int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int -= java.lang.Number.intValue()","position":"org.apache.commons.lang3.mutable.MutableInt:170","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, 0, int)) > 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Double.isNaN(double)","position":"org.apache.commons.lang3.mutable.MutableDouble:118","type":"CtReturnImpl"},"status":-2},{"failures":[113],"name":"returnValue","position":"org.apache.commons.lang3.Range:316","type":"mutation","return":"return false","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n} catch (final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException) {\n    throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause());\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtTryImpl"},"status":-2},{"failures":[114,115],"variableMapping":{"code":"abrevMarker"},"name":"replace","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.NotImplementedException:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.substring(0, (int - 3))) + java.lang.String","position":"org.apache.commons.lang3.StringUtils:6411","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-4830728138360036487L","position":"org.apache.commons.lang3.mutable.MutableBoolean:38","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.EnumUtils:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ObjectUtils:594","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDatePrinter:1260","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String != null) && (int > 0)) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1320","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"))","position":"org.apache.commons.lang3.ArrayUtils:4562","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '2'","position":"org.apache.commons.lang3.Conversion:571","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'd'","position":"org.apache.commons.lang3.Conversion:314","type":"CtReturnImpl"},"status":-2},{"failures":[116],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 1 ; int < (byte[].int) ; int++) {\n    if ((byte[][int]) < byte) {\n        byte = byte[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:863","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:47","type":"CtForImpl"},"status":-1},{"failures":[117,118,119],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Comparator<T>.compare(T, T)) < 0","position":"org.apache.commons.lang3.Range:236","type":"CtReturnImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":99,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":116,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":79,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":70,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":60,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":29,"org.apache.commons.lang3.StringUtilsTest.testIsAllLowerCase":11,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":84,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":32,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_2":33,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":65,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":71,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_3":34,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringWithWhitespacesShouldThrow":47,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":35,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValueObject":112,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":81,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":97,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccess":86,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":110,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":13,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":55,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":31,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":76,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":102,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":26,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":27,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":94,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":108,"org.apache.commons.lang3.ConversionTest.testShortToHex":4,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":64,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":53,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":12,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":85,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":92,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithWhitespacesShouldNotThrow":43,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":22,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":96,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithNewlinesShouldThrow":42,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":106,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":90,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringShouldNotThrow":44,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":24,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":103,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":63,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":82,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithWhitespacesShouldNotThrow":48,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageName_Object":10,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":0,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":89,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":19,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringShouldNotThrow":45,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNullStringShouldThrow":8,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":80,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Right":18,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":23,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":105,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":52,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":104,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":56,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":59,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldIllegalArgumentException2":74,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":9,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":66,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":17,"org.apache.commons.lang3.ValidateTest.testNotBlankNullStringShouldThrow":7,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":88,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringIntInt":115,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":20,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":101,"org.apache.commons.lang3.RangeTest.testIsAfter":119,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":95,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":98,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":54,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":107,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":16,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":50,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":93,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException4":67,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringArray":91,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":83,"org.apache.commons.lang3.ConversionTest.testIntToHex":5,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringShouldThrow":39,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":37,"org.apache.commons.lang3.mutable.MutableShortTest.testPrimitiveValues":109,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringInt":114,"org.apache.commons.lang3.reflect.FieldUtilsTest.testAmbig":68,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":14,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":1,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException4":78,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccessIllegalArgumentException2":69,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":58,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithNewlinesShouldNotThrow":46,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":75,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":15,"org.apache.commons.lang3.ConversionTest.testByteToHex":2,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":73,"org.apache.commons.lang3.RangeTest.testContainsRange":113,"org.apache.commons.lang3.RangeTest.testIsAfterRange":117,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":30,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":77,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithNewlinesShouldNotThrow":38,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":100,"org.apache.commons.lang3.ConversionTest.testLongToHex":3,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":57,"org.apache.commons.lang3.RangeTest.testElementCompareTo":118,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithWhitespacesShouldThrow":49,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":25,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":51,"org.apache.commons.lang3.ConversionTest.testIntToHexDigit":6,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":111,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues2":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":21,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":61,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":62,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues1":40,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":72,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":28,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":36}}]
