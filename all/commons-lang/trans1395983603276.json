[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2178","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int != (-1)) && (java.lang.String.substring(0, int).trim().isEmpty())) {\n    boolean = true;\n    java.util.List<java.lang.String>.add(java.lang.String);\n} else if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:650","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vendor\")","position":"org.apache.commons.lang3.SystemUtils:485","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6],"variableMapping":{"this":"this","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:380","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, long[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:970","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"i":"iConstant"},"name":"add","transplant":{"sourceCode":"if (int == 25) {\n    throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n} ","position":"org.apache.commons.lang3.math.Fraction:295","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    int = (int) * (int);\n} else {\n    for (final byte byte : byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(byte);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtIfImpl"},"status":0},{"failures":[7,8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.init()","position":"org.apache.commons.lang3.time.FastDatePrinter:570","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Type[][int++] = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1536","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> : java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.values()) {\n    if ((org.apache.commons.lang3.concurrent.BackgroundInitializer<?>.getExternalExecutor()) == null) {\n        org.apache.commons.lang3.concurrent.BackgroundInitializer<?>.setExternalExecutor(java.util.concurrent.ExecutorService);\n    } \n    org.apache.commons.lang3.concurrent.BackgroundInitializer<?>.start();\n}","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:195","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.System.java.lang.System.arraycopy(java.lang.Object, 0, java.lang.Object, 0, int);\n} ","position":"org.apache.commons.lang3.ArrayUtils:6046","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = (int) - 1 ; int >= 0 ; int--) {\n    int = (31 * int) + (char[][int]);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2716","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"char char","position":"org.apache.commons.lang3.StringUtils:6789","type":"CtLocalVariableImpl"},"status":-2},{"failures":[9,10],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.append(org.apache.commons.lang3.builder.Diff<?>.getFieldName(), org.apache.commons.lang3.builder.Diff<?>.getLeft())","position":"org.apache.commons.lang3.builder.DiffResult:189","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:778","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], java.lang.Short.shortValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5462","type":"CtForImpl"},"status":-2},{"failures":[11,12,13,0,14,15,1,16,2,17,3,18,4,19,5,20,6],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.ToStringStyle:994","type":"mutation","status":-1},{"failures":[],"variableMapping":{"lhs":"offsetSet","isEquals":"offsetSet","rhs":"offsetSet"},"name":"add","transplant":{"sourceCode":"boolean = boolean == boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:625","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.time.DateUtils:1062","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.FastDatePrinter:248","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers())) {\n    return java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:360","type":"CtIfImpl"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2075","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + int) >= int) || ((char[][(int + int)]) != (char[][(int + int)]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:833","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDateParser:668","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Type[].int) > 0) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" super \"), \" & \", java.lang.reflect.Type[]);\n} else if (!(((java.lang.reflect.Type[].int) == 1) && (java.lang.Object.java.lang.Object.equals(java.lang.reflect.Type[][0])))) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" extends \"), \" & \", java.lang.reflect.Type[]);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1811","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"dstPos":"j","nShorts":"j"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:725","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    float = float[][int];\n    float[][int] = float[][int];\n    float[][int] = float;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1720","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String.toUpperCase()","position":"org.apache.commons.lang3.StringUtils:5591","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(int)","position":"org.apache.commons.lang3.StringUtils:6513","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int < 0) || ((int + int) > (java.lang.String.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:540","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, char[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1257","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Date java.util.Date = java.text.SimpleDateFormat.parse(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.DateUtils:386","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.StringUtils:5010","type":"CtLocalVariableImpl"},"status":-2},{"failures":[38],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:1124","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:888","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"startIndex":"i"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2780","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Iterator<java.text.Format> java.util.Iterator<java.text.Format> = java.util.ArrayList<java.text.Format>.iterator() ; java.util.Iterator<java.text.Format>.hasNext() ; int++) {\n    final java.text.Format java.text.Format = java.util.Iterator<java.text.Format>.next();\n    if (java.text.Format != null) {\n        java.text.Format[][int] = java.text.Format;\n    } \n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:201","type":"CtForImpl"},"status":0},{"failures":[39,40],"variableMapping":{"field":"modifiersField"},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:383","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.reflect.Field.setAccessible(true);\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:686","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.long = long","position":"org.apache.commons.lang3.mutable.MutableLong:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(int[])) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(int[]))) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5534","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.reflect.Type[].int) > 0) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" super \"), \" & \", java.lang.reflect.Type[]);\n} else if (!(((java.lang.reflect.Type[].int) == 1) && (java.lang.Object.java.lang.Object.equals(java.lang.reflect.Type[][0])))) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" extends \"), \" & \", java.lang.reflect.Type[]);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1811","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.BooleanUtils:631","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{"newSize":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY":"array"},"name":"add","transplant":{"sourceCode":"if (int <= 0) {\n    return int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:965","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[] == null) || ((int[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n    java.lang.reflect.Method = java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:488","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Iterator<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:4081","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:729","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7041","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char[][(int % int)]","position":"org.apache.commons.lang3.StringUtils:5435","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int ; int < (short[].int) ; int++) {\n    if (short == (short[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2234","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toString(java.lang.Object, \"{}\")","position":"org.apache.commons.lang3.ArrayUtils:159","type":"CtReturnImpl"},"status":-2},{"failures":[41],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        char[][int] = char;\n        break;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = (int * 31) + int","position":"org.apache.commons.lang3.ObjectUtils:243","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:150","type":"CtAssignmentImpl"},"status":-2},{"failures":[42],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:5851","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"byte byte = byte","position":"org.apache.commons.lang3.Conversion:1012","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float)","position":"org.apache.commons.lang3.builder.ToStringStyle:817","type":"CtInvocationImpl"},"status":-2},{"failures":[43],"variableMapping":{"java.lang.Integer.MIN_VALUE":"startIndexInclusive","denominator":"startIndexInclusive","numerator":"startIndexInclusive"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    if ((int == int) || (int == int)) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"lhs":"lhs","this":"this","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if ((float[] == null) || (float[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return org.apache.commons.lang3.builder.EqualsBuilder;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:863","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[].int) != (float[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:867","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1538","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '9';\n} else {\n    return '8';\n}","position":"org.apache.commons.lang3.Conversion:327","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int))","position":"org.apache.commons.lang3.StringUtils:4531","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:733","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.Range<T>(T , T , java.util.Comparator<T>)","position":"org.apache.commons.lang3.Range:135","type":"CtReturnImpl"},"status":-2},{"failures":[44],"variableMapping":{"str":"str","remove":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5309","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) <= int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2180","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","size":"maxWidth","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, ' ')","position":"org.apache.commons.lang3.StringUtils:5237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String, 0, int)","position":"org.apache.commons.lang3.StringUtils:6355","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int >= (int) ? (int) - 1 : int","position":"org.apache.commons.lang3.text.StrBuilder:2423","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][0] = int","position":"org.apache.commons.lang3.StringUtils:6938","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return char","position":"org.apache.commons.lang3.Conversion:607","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (float[].int)) {\n    int = (float[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2814","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","position":"org.apache.commons.lang3.Conversion:429","type":"CtIfImpl"},"status":-2},{"failures":[45,46,47,11,12,48,49,50,51,52,53,13,0,54,55,56,57,58,58,59,59,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,69,69,70,70,71,71,72,72,73,73,74,74,14,14,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,15,15,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,98,99,100,100,101,101,102,102,1,1,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,124,124,125,125,126,126,127,127,9,128,129,130,16,2,131,132,133,134,135,136,17,3,137,138,139,140,141,142,18,4,143,144,145,146,147,148,19,5,149,150,151,152,153,154,20,6,155,156,157,158],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendEnd(org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer(), org.apache.commons.lang3.builder.ToStringBuilder.getObject())","position":"org.apache.commons.lang3.builder.ToStringBuilder:1061","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final T T = (org.apache.commons.lang3.Range<T>.getComparator().compare(T, org.apache.commons.lang3.Range<T>.T)) < 0 ? org.apache.commons.lang3.Range<T>.T : T","position":"org.apache.commons.lang3.Range:390","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (int[].int)) {\n    int = (int[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2173","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1392","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.regex.Matcher.lookingAt())) {\n    org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:154","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"HP-UX\")","position":"org.apache.commons.lang3.SystemUtils:971","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:421","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Byte java.lang.Byte = java.lang.Byte.java.lang.Byte.valueOf(byte)","position":"org.apache.commons.lang3.ArrayUtils:5361","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:762","type":"CtReturnImpl"},"status":-2},{"failures":[159,160],"variableMapping":{"lhs":"rhs","this":"this","rhs":"rhs"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:418","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:428","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"field":"field","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readStaticField(java.lang.reflect.Field, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:300","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readField(java.lang.reflect.Field, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:473","type":"CtReturnImpl"},"status":-2},{"failures":[69,96,104],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('0')","position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1115","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"method":"candidateMethod"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:444","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.reflect.Method.getDeclaringClass().getModifiers())) {\n    return java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.ClassUtils:942","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:386","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T[].getClass().getComponentType()","position":"org.apache.commons.lang3.ArrayUtils:4289","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"k":"k"},"name":"add","transplant":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.math.Fraction:597","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:5412","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1198","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long","position":"org.apache.commons.lang3.Conversion:910","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:2161","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (java.lang.StringBuffer.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:599","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:567","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 1 :\n    return '8';","position":"org.apache.commons.lang3.Conversion:632","type":"CtCaseImpl"},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"binaryOperator":"((java.util.Calendar.get(java.util.Calendar.int)) + 1)","name":"math","position":"org.apache.commons.lang3.time.TwoDigitMonthField:983","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, int[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1074","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:3127","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[179],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final char char = java.lang.String.charAt(4)","position":"org.apache.commons.lang3.BooleanUtils:620","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.StringUtils:5002","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY"},"name":"replace","transplant":{"sourceCode":"return short[].clone()","position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1005","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    java.lang.StringBuilder.append(java.lang.Object);\n} ","position":"org.apache.commons.lang3.StringUtils:4050","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(java.lang.String)","position":"org.apache.commons.lang3.exception.ContextedException:197","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"count":"text"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(int, java.text.ParsePosition.getIndex())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:386","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(int[])","position":"org.apache.commons.lang3.math.NumberUtils:813","type":"CtInvocationImpl"},"status":-2},{"failures":[180],"variableMapping":{"strLen":"shift","size":"shift"},"name":"replace","transplant":{"sourceCode":"final int int = int + int","position":"org.apache.commons.lang3.text.StrBuilder:1500","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = 65535 << int","position":"org.apache.commons.lang3.Conversion:771","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.ClassUtils:923","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (long[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1450","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"true\", \"false\")","position":"org.apache.commons.lang3.BooleanUtils:833","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.time.FastDatePrinter:698","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Custom specialization of the standard JDK {@link java.io.ObjectInputStream}\n * that uses a custom  <code>ClassLoader<\/code> to resolve a class.\n * If the specified <code>ClassLoader<\/code> is not able to resolve the class,\n * the context classloader of the current thread will be used.\n * This way, the standard deserialization work also in web-application\n * containers and application servers, no matter in which of the\n * <code>ClassLoader<\/code> the particular class that encapsulates\n * serialization/deserialization lives. <\/p>\n * \n * <p>For more in-depth information about the problem for which this\n * class here is a workaround, see the JIRA issue LANG-626. <\/p>\n */\nstatic class ClassLoaderAwareObjectInputStream extends java.io.ObjectInputStream {\n    private static final java.util.Map<java.lang.String, java.lang.Class<?>> primitiveTypes = new java.util.HashMap<java.lang.String, java.lang.Class<?>>();\n\n    private final java.lang.ClassLoader classLoader;\n\n    /** \n     * Constructor.\n     * @param in The <code>InputStream<\/code>.\n     * @param classLoader classloader to use\n     * @throws IOException if an I/O error occurs while reading stream header.\n     * @see java.io.ObjectInputStream\n     */\npublic ClassLoaderAwareObjectInputStream(final java.io.InputStream in ,final java.lang.ClassLoader classLoader) throws java.io.IOException {\n        java.io.ObjectInputStream.super(java.io.InputStream);\n        this.java.lang.ClassLoader = java.lang.ClassLoader;\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"byte\", byte.byte);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"short\", short.short);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"int\", int.int);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"long\", long.long);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"float\", float.float);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"double\", double.double);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"boolean\", boolean.boolean);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"char\", char.char);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"void\", void.void);\n    }\n\n    /** \n     * Overriden version that uses the parametrized <code>ClassLoader<\/code> or the <code>ClassLoader<\/code>\n     * of the current <code>Thread<\/code> to resolve the class.\n     * @param desc An instance of class <code>ObjectStreamClass<\/code>.\n     * @return A <code>Class<\/code> object corresponding to <code>desc<\/code>.\n     * @throws IOException Any of the usual Input/Output exceptions.\n     * @throws ClassNotFoundException If class of a serialized object cannot be found.\n     */\n@java.lang.Override\n    protected java.lang.Class<?> resolveClass(final java.io.ObjectStreamClass desc) throws java.io.IOException, java.lang.ClassNotFoundException {\n        final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName();\n        try {\n            return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.ClassLoader);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n            try {\n                return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n            } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n                if (java.lang.Class<?> != null) {\n                    return java.lang.Class<?>;\n                } else {\n                    throw java.lang.ClassNotFoundException;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:284","type":"CtClassImpl"},"status":-2},{"failures":[181],"variableMapping":{"nBools":"end","dstPos":"end"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:2144","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.exception.ExceptionUtils:522","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3093","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:773","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.replaceImpl(int, (int + int), int, java.lang.String, int)","position":"org.apache.commons.lang3.text.StrBuilder:1913","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.lang3.builder.EqualsBuilder:412","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"start":"length"},"name":"replace","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.math.NumberUtils:1379","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(long[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1788","type":"CtLocalVariableImpl"},"status":-2},{"failures":[182,183,184,185,186,187,188,189,190,191,192],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.char[]","position":"org.apache.commons.lang3.text.StrBuilder:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[].clone()","position":"org.apache.commons.lang3.ArrayUtils:390","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:535","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 60","position":"org.apache.commons.lang3.time.DurationFormatUtils:303","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DurationFormatUtils:518","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = ((boolean[].int) - 1) - int","position":"org.apache.commons.lang3.Conversion:515","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.getKey()","position":"org.apache.commons.lang3.reflect.TypeUtils:1219","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4008","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2799","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:975","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"pattern","pads":"text","padLen":"text","padStr":"pattern"},"name":"add","transplant":{"sourceCode":"if (int < int) {\n    return java.lang.String.substring(0, int).concat(java.lang.String);\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return new java.lang.String(char[]).concat(java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:5429","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return java.lang.String.substring(int, java.text.ParsePosition.getIndex());\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:385","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n    throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:139","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.text.Format java.text.Format = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:170","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.text.Format java.text.Format = java.util.Iterator<java.text.Format>.next()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:202","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5728","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.readObject()))","position":"org.apache.commons.lang3.SerializationUtils:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.double[]","position":"org.apache.commons.lang3.ArrayUtils:1126","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getPriority()) != null) {\n    java.lang.Thread.setPriority(org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority().intValue());\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:230","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:183","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType, java.lang.Class<?>, null)","position":"org.apache.commons.lang3.reflect.TypeUtils:970","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.CharSetUtils:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[193],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:888","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((this.int) != (org.apache.commons.lang3.text.StrBuilder.int)) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2679","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.time.FormatCache:218","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte > byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} else if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'a' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:250","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1359","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:998","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.util.List<java.lang.String>, \"->\")","position":"org.apache.commons.lang3.text.StrSubstitutor:897","type":"CtInvocationImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":118,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":117,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":38,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":176,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierAccessNotNeeded":40,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":186,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":47,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":165,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":55,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":143,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":95,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":16,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":138,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":131,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":90,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":139,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":122,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":110,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":11,"org.apache.commons.lang3.StringUtilsTest.testChomp":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":101,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang303":7,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":79,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":3,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":113,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":163,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":17,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":52,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":93,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":141,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":86,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":116,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":76,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":132,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":164,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":162,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":188,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":189,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":81,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":1,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":94,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":14,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":166,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":2,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":153,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":130,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":182,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":0,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":82,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":68,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":65,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":151,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":71,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":8,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":83,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":74,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":9,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":155,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":105,"org.apache.commons.lang3.reflect.FieldUtilsTest.testRemoveFinalModifierWithoutAccess":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":59,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":19,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":183,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":12,"org.apache.commons.lang3.ArrayUtilsTest.testToString":158,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":60,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":177,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":111,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":119,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":136,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":145,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":107,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":180,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":193,"org.apache.commons.lang3.text.StrTokenizerTest.test8":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":97,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":148,"org.apache.commons.lang3.text.StrTokenizerTest.test5":32,"org.apache.commons.lang3.text.StrTokenizerTest.test4":31,"org.apache.commons.lang3.text.StrTokenizerTest.test7":34,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_char_char":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":98,"org.apache.commons.lang3.text.StrTokenizerTest.test6":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":99,"org.apache.commons.lang3.text.StrTokenizerTest.test1":28,"org.apache.commons.lang3.text.StrTokenizerTest.test3":30,"org.apache.commons.lang3.text.StrTokenizerTest.test2":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":75,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":56,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":50,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayShort":43,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":161,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":137,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":160,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":62,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":171,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":102,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":4,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":23,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":184,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":115,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":87,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":78,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":172,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":36,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":149,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":80,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":150,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":45,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlpha":42,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":170,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":159,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":181,"org.apache.commons.lang3.ArrayUtilsTest.testCloneChar":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":77,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":125,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":152}}]
