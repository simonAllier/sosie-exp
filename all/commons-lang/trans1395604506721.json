[{"position":"org.apache.commons.lang3.Conversion:770","failures":[0],"status":-1,"binaryOperator":"(65535 & (short[][(int + int)]))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:66","sourceCode":"java.lang.Float.java.lang.Float.valueOf(1.0F)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:988","sourceCode":"short = short[][int]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1196","failures":[],"status":0,"binaryOperator":"(java.util.Calendar.get(java.util.Calendar.int)) + 3","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:304","sourceCode":"java.lang.StringBuilder.append(\"\\\\Q\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1523","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"regex":"sb"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1115","sourceCode":"if (int < int) {\n    int = int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:607","sourceCode":"do {\n    while ((int & 1) == 0) {\n        int /= 2;\n    }\n    if (int > 0) {\n        int = -int;\n    } else {\n        int = int;\n    }\n    int = (int - int) / 2;\n} while (int != 0 )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"t","a":"t"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:434","sourceCode":"java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2069","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"formatField":"summaryObjectStartText"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1069","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Float.NaN":"max"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:663","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1303","sourceCode":"return org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.isOSNameMatch(org.apache.commons.lang3.SystemUtils.java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"org.apache.commons.lang3.SystemUtils.OS_NAME","falseString":"osNamePrefix","trueString":"org.apache.commons.lang3.SystemUtils.OS_NAME"}},{"position":"org.apache.commons.lang3.Conversion:1559","failures":[],"status":0,"binaryOperator":"(int * 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:517","sourceCode":"final boolean[] boolean[] = new boolean[4]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:943","sourceCode":"final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])","type":"CtLocalVariableImpl"},"failures":[17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1209","sourceCode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:937","sourceCode":"this.java.lang.String = \"-1\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:246","sourceCode":"java.lang.String = java.lang.StringBuilder.toString()","type":"CtAssignmentImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toProperString":"iToString"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:701","sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    return -1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:744","sourceCode":"while (int < int) {\n    if (boolean) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n            if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n                org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n                int += int * 2;\n                int = org.apache.commons.lang3.text.StrBuilder.size();\n                continue;\n            } \n            boolean = false;\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    } else {\n        final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n            return int + int;\n        } \n        if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n            boolean = true;\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    }\n}","type":"CtWhileImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"start":"quoteStart","tokenList":"tokenList","len":"trimStart","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:1438","inlineConstant":"int int = 0","failures":[81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:961","sourceCode":"if (int == (java.util.Calendar.int)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1009","sourceCode":"if (int == int) {\n    if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                java.util.Calendar.add(java.util.Calendar.int, 15);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -15);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else if (int == (java.util.Calendar.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                java.util.Calendar.add(java.util.Calendar.int, 12);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -12);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else {\n            java.util.Calendar.add(int[][0], 1);\n        }\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:128","failures":[82,83],"status":-1,"binaryOperator":"int + 1","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:566","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:534","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numeric":"numeric","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:180","sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V>)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:197","sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V> , java.lang.String , java.lang.String)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"valueMap":"valueMap"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1209","sourceCode":"return long","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:388","sourceCode":"return (this.long) - (this.long)","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"a":"startTime"}},{"position":"org.apache.commons.lang3.ObjectUtils:234","failures":[86],"status":-1,"binaryOperator":"(int * 31)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:108","sourceCode":"return false","type":"CtReturnImpl"},"failures":[87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1097","failures":[89],"status":-1,"binaryOperator":"long < long","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:143","sourceCode":"java.lang.StringBuilder.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:120","sourceCode":"java.lang.StringBuilder.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"wrappedLine"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:699","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:913","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToLong":90,"org.apache.commons.lang3.CharSetTest.testContains_Char":29,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":31,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":43,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":86,"org.apache.commons.lang3.ConversionTest.testByteToHex":1,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":32,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":78,"org.apache.commons.lang3.text.StrTokenizerTest.test1":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":80,"org.apache.commons.lang3.text.StrTokenizerTest.test3":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":35,"org.apache.commons.lang3.text.StrTokenizerTest.test2":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":36,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":82,"org.apache.commons.lang3.math.FractionTest.testSubtract":13,"org.apache.commons.lang3.text.StrTokenizerTest.test8":62,"org.apache.commons.lang3.math.FractionTest.testAdd":11,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":42,"org.apache.commons.lang3.text.StrTokenizerTest.test5":59,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.text.StrTokenizerTest.test4":58,"org.apache.commons.lang3.text.StrTokenizerTest.test7":61,"org.apache.commons.lang3.text.StrTokenizerTest.test6":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":69,"org.apache.commons.lang3.SystemUtilsTest.testIS_OS":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":71,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":9,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":68,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":25,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":40,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":53,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":38,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":44,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":10,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":63,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":27,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":67,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":28,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":4,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":45,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":22,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":83,"org.apache.commons.lang3.math.FractionTest.testMultiply":15,"org.apache.commons.lang3.ConversionTest.testIntToHex":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":73,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":85,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":54,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":37,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":20,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":66,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumLong":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":77,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":76,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":74,"org.apache.commons.lang3.math.FractionTest.testPow":12,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":88,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":52,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":51,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":49,"org.apache.commons.lang3.math.FractionTest.testDivide":14,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":21,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":46,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":30,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":2,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":72,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":65,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":84,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":87,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":3,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":39,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":34,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":41,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":18}}]
