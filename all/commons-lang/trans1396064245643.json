[{"failures":[],"variableMapping":{"objectToTest":"rhs","fieldName":"fieldName","lhs":"rhs","this":"this","rhs":"rhs"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:831","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:838","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, (int + int))","position":"org.apache.commons.lang3.text.StrBuilder:1894","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(java.lang.String)","position":"org.apache.commons.lang3.exception.ContextedException:197","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.lang3.mutable.MutableInt:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 2","position":"org.apache.commons.lang3.CharSet:193","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:760","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.isFieldSeparatorAtEnd()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:394","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:3578","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (this == org.apache.commons.lang3.math.Fraction) {\n    return 0;\n} ","position":"org.apache.commons.lang3.math.Fraction:884","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (java.lang.Object instanceof long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof int[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof char[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof double[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof float[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof boolean[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    int = ((int) * (int)) + (java.lang.Object.hashCode());\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:820","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:1078","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause())","position":"org.apache.commons.lang3.ObjectUtils:634","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:5926","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:294","type":"CtIfImpl"},"status":-2},{"failures":[0],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.Conversion:880","type":"mutation","status":-1},{"failures":[1,2,3],"variableMapping":{"this":"eventSource"},"name":"replace","transplant":{"sourceCode":"java.lang.Object.notifyAll()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.event.EventUtils.org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object, java.lang.Class<L>, L)","position":"org.apache.commons.lang3.event.EventUtils:79","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 1)","position":"org.apache.commons.lang3.time.DurationFormatUtils:371","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.nio.charset.Charset.java.nio.charset.Charset.defaultCharset()","position":"org.apache.commons.lang3.StringUtils:7637","type":"CtInvocationImpl"},"status":-2},{"failures":[4,5],"binaryOperator":"int < 0","name":"removeConditional","position":"org.apache.commons.lang3.ArrayUtils:2171","type":"mutation","status":-1},{"failures":[],"variableMapping":{"this":"this","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1434","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n    for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n            return true;\n        } \n    }\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:692","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1115","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:346","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(long[], long[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Long[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(long[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Long[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(long[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtIfImpl"},"status":-2},{"failures":[6,7],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = java.lang.Character.java.lang.Character.isWhitespace(char)","position":"org.apache.commons.lang3.text.WordUtils:475","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} else {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n}","position":"org.apache.commons.lang3.text.WordUtils:468","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"lhs":"this","rhs":"this"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.NullPointerException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:278","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * An invocation handler used to dispatch the event(s) to all the listeners.\n */\nprotected class ProxyInvocationHandler implements java.lang.reflect.InvocationHandler {\n    /** \n     * Propagates the method call to all registered listeners in place of\n     * the proxy listener object.\n     * \n     * @param unusedProxy the proxy object representing a listener on which the\n     * invocation was called; not used\n     * @param method the listener method that will be called on all of the\n     * listeners.\n     * @param args event arguments to propagate to the listeners.\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object unusedProxy, final java.lang.reflect.Method method, final java.lang.Object[] args) throws java.lang.Throwable {\n        for (final L L : java.util.List<L>) {\n            java.lang.reflect.Method.invoke(L, java.lang.Object[]);\n        }\n        return null;\n    }\n}","position":"org.apache.commons.lang3.event.EventListenerSupport:296","type":"CtClassImpl"},"status":-2},{"failures":[8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n    T = T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:470","type":"CtIfImpl"},"status":-1},{"failures":[9],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3992","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = java.lang.Integer[][int].intValue()","position":"org.apache.commons.lang3.ArrayUtils:3101","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:797","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.text.MessageFormat.hashCode()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:295","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object = java.lang.Object","position":"org.apache.commons.lang3.builder.DiffBuilder:809","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , false , false , false }","position":"org.apache.commons.lang3.Conversion:223","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"private static class EventBindingInvocationHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.Object target;\n\n    private final java.lang.String methodName;\n\n    private final java.util.Set<java.lang.String> eventTypes;\n\n    /** \n     * Creates a new instance of {@code EventBindingInvocationHandler}.\n     * \n     * @param target the target object for method invocations\n     * @param methodName the name of the method to be invoked\n     * @param eventTypes the names of the supported event types\n     */\nEventBindingInvocationHandler(final java.lang.Object target ,final java.lang.String methodName ,final java.lang.String[] eventTypes) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.lang.String = java.lang.String;\n        this.java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n    }\n\n    /** \n     * Handles a method invocation on the proxy object.\n     * \n     * @param proxy the proxy instance\n     * @param method the method to be invoked\n     * @param parameters the parameters for the method invocation\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n            if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n            } else {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n            }\n        } \n        return null;\n    }\n\n    /** \n     * Checks whether a method for the passed in parameters can be found.\n     * \n     * @param method the listener method invoked\n     * @return a flag whether the parameters could be matched\n     */\nprivate boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n        return org.apache.commons.lang3.reflect.MethodUtils.(org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.reflect.Method.getParameterTypes())) != null;\n    }\n}","position":"org.apache.commons.lang3.event.EventUtils:82","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"java.util.Calendar.MINUTE":"java.util.Calendar.WEEK_OF_MONTH"},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:825","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][0] = int;\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[]);\n    int = int[][0];\n    final int int = java.lang.String.length();\n    if (int == 0) {\n        break;\n    } \n    org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule;\n    final char char = java.lang.String.charAt(0);\n    switch (char) {\n        case 'G' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'y' :\n            if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n            }\n            break;\n        case 'M' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 3) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n            }\n            break;\n        case 'd' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'h' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'H' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'm' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 's' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'S' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'E' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n            break;\n        case 'D' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'F' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'w' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'W' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'a' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'k' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'K' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'z' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            }\n            break;\n        case 'Z' :\n            if (int == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            }\n            break;\n        case '\\'' :\n            final java.lang.String java.lang.String = java.lang.String.substring(1);\n            if ((java.lang.String.length()) == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n            }\n            break;\n        default :\n            throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n    }\n    java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.add(org.apache.commons.lang3.time.FastDatePrinter.Rule);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:182","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean)","position":"org.apache.commons.lang3.ClassUtils:837","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) > org.apache.commons.lang3.text.StrBuilder.(length())) {\n    final char[] char[] = char[];\n    char[] = new char[org.apache.commons.lang3.text.StrBuilder.length()];\n    java.lang.System.java.lang.System.arraycopy(char[], 0, char[], 0, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:248","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"u":"csLength","v":"csLength"},"name":"add","transplant":{"sourceCode":"int int = (int & 1) == 1 ? int : -(int / 2)","position":"org.apache.commons.lang3.math.Fraction:604","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1624","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.1\")","position":"org.apache.commons.lang3.SystemUtils:865","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OS/2\")","position":"org.apache.commons.lang3.SystemUtils:1079","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0)","position":"org.apache.commons.lang3.time.DateUtils:367","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1954","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append('\\n')","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:135","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(\".\")","position":"org.apache.commons.lang3.ClassPathUtils:85","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object[][int])","position":"org.apache.commons.lang3.StringUtils:4012","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:180","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.exception.ContextedException.getFormattedExceptionMessage(java.lang.Exception.getMessage())","position":"org.apache.commons.lang3.exception.ContextedException:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:664","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSetUtils.org.apache.commons.lang3.CharSetUtils.modify(java.lang.String, java.lang.String[], true)","position":"org.apache.commons.lang3.CharSetUtils:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = java.lang.reflect.Array.((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)))","position":"org.apache.commons.lang3.ArrayUtils:889","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == \"true\") {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1722","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"pos"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt(int++)","position":"org.apache.commons.lang3.text.StrBuilder:2866","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.(java.util.Arrays.binarySearch(char[], char[][int])) >= 0 ? 1 : 0","position":"org.apache.commons.lang3.text.StrMatcher:301","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-2135791679L","position":"org.apache.commons.lang3.mutable.MutableShort:35","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long -= java.lang.Number.longValue()","position":"org.apache.commons.lang3.mutable.MutableLong:170","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:676","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Double)","position":"org.apache.commons.lang3.ArrayUtils:5896","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"items"},"name":"replace","transplant":{"sourceCode":"return T[].clone()","position":"org.apache.commons.lang3.ArrayUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.ArrayUtils:304","type":"CtReturnImpl"},"status":0},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:4179","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.charMatcher(char))","position":"org.apache.commons.lang3.text.StrSubstitutor:993","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:183","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.StopWatch.SplitState()","position":"org.apache.commons.lang3.time.StopWatch:126","type":"CtNewClassImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"variableMapping":{"str":"fieldName"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String.charAt(3)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:120","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(char[], char, 0, char[].int)","position":"org.apache.commons.lang3.StringUtils:3467","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isInstance(java.lang.Object)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, java.lang.Class<?>.getName(), (java.lang.Object == null ? \"null\" : java.lang.Object.getClass().getName())));\n} ","position":"org.apache.commons.lang3.Validate:1176","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"className"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.text.StrBuilder.this.toString();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2830","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.ClassUtils:976","type":"CtReturnImpl"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"variableMapping":{"s":"input"},"name":"replace","transplant":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6763","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int)","position":"org.apache.commons.lang3.text.translate.CodePointTranslator:37","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    continue;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:525","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n}","position":"org.apache.commons.lang3.ClassUtils:130","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + int))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:455","type":"CtInvocationImpl"},"status":-2},{"failures":[62],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2128","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (int < 0)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2459","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Strings must not be null\")","position":"org.apache.commons.lang3.StringUtils:6852","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.hasNext() ; ) {\n    final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.next();\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n        java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.remove();\n    } \n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:63","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","position":"org.apache.commons.lang3.Conversion:948","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.concurrent.LazyInitializer:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getComponentType()","position":"org.apache.commons.lang3.AnnotationUtils:228","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1062","type":"CtAssignmentImpl"},"status":-2},{"failures":[63],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.EnumUtils:96","type":"CtReturnImpl"},"status":-1},{"failures":[64],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3343","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.get(java.lang.String)","position":"org.apache.commons.lang3.JavaVersion:119","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new java.util.Locale(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:131","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.ArrayList<java.text.Format> java.util.ArrayList<java.text.Format> = new java.util.ArrayList<java.text.Format>()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:809","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"comparison"},"name":"add","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:688","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:938","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1547","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.time.StopWatch:341","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"style":"style"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, char)","position":"org.apache.commons.lang3.builder.ToStringBuilder:618","type":"CtInvocationImpl"},"status":0},{"failures":[48,49,65],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int >= (java.lang.Character.char)) && (int <= (java.lang.Character.char))) {\n    return true;\n} else {\n    return false;\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:34","type":"CtIfImpl"},"status":-1},{"failures":[66],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:488","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:151","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (float[] == null) || ((float[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3576","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '2'","position":"org.apache.commons.lang3.Conversion:455","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:373","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.StopWatch.(getNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","position":"org.apache.commons.lang3.time.StopWatch:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2378","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.addAll(java.lang.Object[], java.lang.Integer.java.lang.Integer.valueOf(int))","position":"org.apache.commons.lang3.Validate:572","type":"CtLocalVariableImpl"},"status":-2},{"failures":[67,68,69,70],"variableMapping":{"len":"comparison","pos":"comparison"},"name":"replace","transplant":{"sourceCode":"this.int += int","position":"org.apache.commons.lang3.text.StrBuilder:2886","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = short < short ? -1 : short > short ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:498","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"lastMatch"},"name":"add","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.mutable.MutableBoolean:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:3117","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:912","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:1082","type":"CtThrowImpl"},"status":-2},{"failures":[71],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.StringUtils:5813","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"trace":"causeFrames","frames":"causeFrames"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:535","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:551","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.RandomUtils.java.util.Random.nextBytes(byte[])","position":"org.apache.commons.lang3.RandomUtils:66","type":"CtInvocationImpl"},"status":-2},{"failures":[72,73,74],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n} catch (final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException) {\n    throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause());\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:300","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>.get())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:278","type":"CtReturnImpl"},"status":-1},{"failures":[75],"variableMapping":{"fieldName":"fieldName","lhs":"lhs","this":"this","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:841","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:832","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.lang3.text.WordUtils:457","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces()","position":"org.apache.commons.lang3.reflect.MethodUtils:425","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1554","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    int = (int * 7) + (java.lang.Object.hashCode());\n} ","position":"org.apache.commons.lang3.time.FormatCache:256","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1276","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, boolean[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:560","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int[] int[]","position":"org.apache.commons.lang3.StringUtils:6923","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>> = org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()","position":"org.apache.commons.lang3.builder.EqualsBuilder:196","type":"CtLocalVariableImpl"},"status":-2},{"failures":[76,77,78,79,80],"binaryOperator":"org.apache.commons.lang3.builder.ToStringStyle == null","name":"removeConditional","position":"org.apache.commons.lang3.builder.ToStringBuilder:253","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return T[].clone()","position":"org.apache.commons.lang3.ArrayUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.ArrayUtils:304","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return java.nio.charset.Charset.java.nio.charset.Charset.isSupported(java.lang.String);\n} catch (final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException) {\n    return false;\n}","position":"org.apache.commons.lang3.CharEncoding:98","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:827","type":"CtThrowImpl"},"status":-2},{"failures":[81,82],"binaryOperator":"char == '0'","name":"removeConditional","position":"org.apache.commons.lang3.math.NumberUtils:470","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:321","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:707","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case '4' :\n    return 2;","position":"org.apache.commons.lang3.Conversion:110","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3443","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (float[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1163","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5419","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return V","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:280","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"nHex","denominator":"dstPos","numerator":"dstPos"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    if ((int == int) || (int == int)) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:974","type":"CtIfImpl"},"status":-2},{"failures":[83,84,85],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers())) && (!org.apache.commons.lang3.builder.ReflectionToStringBuilder.(isAppendTransients()))) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:484","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((this.java.lang.String[]) != null) && (java.util.Arrays.(java.util.Arrays.binarySearch(this.java.lang.String[], java.lang.reflect.Field.getName())) >= 0)) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:492","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (byte[] == null) {\n    int = (int) * (int);\n} else {\n    for (final byte byte : byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(byte);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:623","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    int = (int) * (int);\n} else {\n    for (final long long : long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(long);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:796","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"ret":"org.apache.commons.lang3.StringUtils.EMPTY","lastIdx":"pos"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.substring(0, (int - 1))","position":"org.apache.commons.lang3.StringUtils:5091","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2339","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:468","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(float[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5770","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object) == (org.apache.commons.lang3.builder.IDKey.java.lang.Object)","position":"org.apache.commons.lang3.builder.IDKey:72","type":"CtReturnImpl"},"status":-2},{"failures":[86],"variableMapping":{"str":"chars"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.StringMatcher(java.lang.String)","position":"org.apache.commons.lang3.text.StrMatcher:209","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(java.lang.String.toCharArray())","position":"org.apache.commons.lang3.text.StrMatcher:196","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"current":"current","range":"range","end":"current"},"name":"add","transplant":{"sourceCode":"char = ((char)((org.apache.commons.lang3.CharRange.char) + 1))","position":"org.apache.commons.lang3.CharRange:312","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char) < (org.apache.commons.lang3.CharRange.char)) {\n    char = ((char)((char) + 1));\n} else {\n    boolean = false;\n}","position":"org.apache.commons.lang3.CharRange:317","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:804","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:234","type":"CtReturnImpl"},"status":-2},{"failures":[76,87,88,89,90,90,91,91,92,93,79,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,108,109,110,111,112,113,113,114,115,116,117,117,118,118,119,120,121,122,122,123,124,125,126,127,127,128,129,130,131,132,133,134,135,136,137,138,138,139,140,141,142,143,144,144,145,146,147,147,148,149,149,150,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"variableMapping":{"pattern":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:301","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:558","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"this","this":"str"},"name":"replace","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder, int, int).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:969","type":"CtReturnImpl"},"status":-2},{"failures":[26],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Integer getLeft() {\n        return java.lang.Integer.java.lang.Integer.valueOf(int);\n    }\n\n    @java.lang.Override\n    public java.lang.Integer getRight() {\n        return java.lang.Integer.java.lang.Integer.valueOf(int);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:557","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int >= (int) ? (int) - 1 : int","position":"org.apache.commons.lang3.text.StrBuilder:2423","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:339","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:535","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int[] int[]","position":"org.apache.commons.lang3.StringUtils:6783","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[1]","position":"org.apache.commons.lang3.time.FastDatePrinter:180","type":"CtLocalVariableImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":148,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":91,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":25,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":80,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentKeyNotPresent":72,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":96,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":98,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":111,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":122,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":161,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":50,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":99,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":70,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":78,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses2D":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":117,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":167,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":133,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":49,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":85,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":37,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":3,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfIntWithStartIndex":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":134,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":157,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":138,"org.apache.commons.lang3.ArrayUtilsTest.testToString":76,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":118,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":128,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":47,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testInvalidCharacters":65,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":34,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":105,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":54,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedSuccess":74,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":69,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":164,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":141,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":136,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShort":67,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":17,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":147,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":18,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":89,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":84,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":32,"org.apache.commons.lang3.ObjectUtilsTest.testMax":8,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":162,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":52,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":124,"org.apache.commons.lang3.text.StrTokenizerTest.test8":175,"org.apache.commons.lang3.text.StrTokenizerTest.test5":172,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_String":13,"org.apache.commons.lang3.text.StrTokenizerTest.test4":171,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":125,"org.apache.commons.lang3.text.StrTokenizerTest.test7":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":126,"org.apache.commons.lang3.text.StrTokenizerTest.test6":173,"org.apache.commons.lang3.text.StrTokenizerTest.test1":168,"org.apache.commons.lang3.text.StrTokenizerTest.test3":170,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":31,"org.apache.commons.lang3.text.StrTokenizerTest.test2":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":101,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":90,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":144,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":46,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":159,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":131,"org.apache.commons.lang3.StringUtilsTest.testDeleteWhitespace_String":22,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":102,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":42,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":56,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":129,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":40,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":68,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Class":15,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":20,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":11,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":28,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":12,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":83,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":112,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":143,"org.apache.commons.lang3.ClassUtilsTest.testGetClassWithArrayClasses":14,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":107,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":33,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":160,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":100,"org.apache.commons.lang3.EnumUtilsTest.test_isEnum":63,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int":9,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":163,"org.apache.commons.lang3.JavaVersionTest.testGetJavaVersion":64,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":106,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":108,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":137,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":153,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":82,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":166}}]
