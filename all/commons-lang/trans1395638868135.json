[{"transplant":{"position":"org.apache.commons.lang3.CharSet:250","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharSet) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:246","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableShort) {\n    return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue());\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:422","sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return '3';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:335","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:530","sourceCode":"if (int == (int - 1)) {\n    java.util.List<java.lang.String>.add(java.lang.Throwable[][int].toString());\n} else {\n    java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())));\n}","type":"CtIfImpl"},"failures":[3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.CopyQuotedStrategy:538","sourceCode":"char = java.lang.String.charAt(1)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:469","sourceCode":"char = java.lang.String.charAt(int)","type":"CtAssignmentImpl"},"failures":[6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"c":"firstSigDigit","formatField":"str"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:522","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:530","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'd';\n} else {\n    return 'c';\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:160","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:561","sourceCode":"return java.lang.Double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:614","sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"d":"d"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:178","sourceCode":"return new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object , org.apache.commons.lang3.builder.ToStringStyle).append(java.lang.Object).toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:165","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle)","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.builder.ToStringStyle.SIMPLE_STYLE":"style","array":"object"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:170","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.Class<? extends java.lang.annotation.Annotation>.getDeclaredMethods()) {\n    try {\n        final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method));\n        } \n        int += org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.reflect.Method.getName(), java.lang.Object);\n    } catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n        throw java.lang.RuntimeException;\n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n}","type":"CtForEachImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:434","sourceCode":"java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2099","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"formatField":"summaryObjectEndText"}},{"position":"org.apache.commons.lang3.time.FastDateParser:433","failures":[12,13,14,15],"status":-1,"binaryOperator":"(java.lang.String.length()) > 2","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:412","sourceCode":"/** \n * Class used to match whitespace as per trim().\n */\nstatic final class TrimMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * Constructs a new instance of <code>TrimMatcher<\/code>.\n     */\nTrimMatcher() {\n        org.apache.commons.lang3.text.StrMatcher.super();\n    }\n\n    /** \n     * Returns whether or not the given character matches.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return (char[][int]) <= 32 ? 1 : 0;\n    }\n}","type":"CtClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1152","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" 9\"), \"4.0\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","sourceCode":"int = (int + int) - (int - int)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:289","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"startPos":"count","change":"count","endPos":"count","varLen":"count"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:166","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:212","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:103","sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.min(double, double);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.MapStrLookup:166","sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:219","sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object, java.util.Map<java.lang.String, java.lang.String>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"source"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"(this.double)--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:157","sourceCode":"this.double += double","type":"CtOperatorAssignmentImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:709","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:646","sourceCode":"int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1023","sourceCode":"if (int == (java.util.Calendar.int)) {\n    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n        java.util.Calendar.add(java.util.Calendar.int, 12);\n    } else {\n        java.util.Calendar.add(java.util.Calendar.int, -12);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n} else {\n    java.util.Calendar.add(int[][0], 1);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1047","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n            if (int >= 15) {\n                int -= 15;\n            } \n            boolean = int > 7;\n            boolean = true;\n        } \n        break;\n    case java.util.Calendar.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            if (int >= 12) {\n                int -= 12;\n            } \n            boolean = int >= 6;\n            boolean = true;\n        } \n        break;\n}","type":"CtSwitchImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1346","failures":[46],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:651","sourceCode":"java.util.Calendar.setLenient(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:668","sourceCode":"java.util.Calendar.setTime(java.util.Date)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:762","sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1592","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (int >> int)) != 0;\n}","type":"CtForImpl"},"failures":[47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"src","dstPos":"srcPos"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:126","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int))","type":"CtInvocationImpl"},"failures":[48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:226","sourceCode":"if ((org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler()) != null) {\n    java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:221","sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getNamingPattern()) != null) {\n    final java.lang.Long java.lang.Long = java.lang.Long.java.lang.Long.valueOf(java.util.concurrent.atomic.AtomicLong.incrementAndGet());\n    java.lang.Thread.setName(java.lang.String.java.lang.String.format(org.apache.commons.lang3.concurrent.BasicThreadFactory.getNamingPattern(), java.lang.Long));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"t":"t","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:133","sourceCode":"return java.lang.Character.charValue()","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:294","sourceCode":"throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:798","sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:671","sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:554","sourceCode":"throw new java.util.NoSuchElementException()","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4143","sourceCode":"float[][(int - 1)] = float","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:917","sourceCode":"float = float[][int]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"element":"min","newArray":"array","length":"i"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:212","sourceCode":"org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getFuture()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","type":"CtAssignmentImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1213","sourceCode":"int -= 7","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1192","sourceCode":"int = int - 1","type":"CtAssignmentImpl"},"failures":[80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:529","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:499","sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","type":"CtReturnImpl"},"failures":[81,82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1190","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:816","sourceCode":"if ((int[][int]) < int) {\n    int = int[][int];\n} ","type":"CtIfImpl"},"failures":[84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"j","nInts":"j"}},{"transplant":{"position":"org.apache.commons.lang3.CsvUnescaper:311","sourceCode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:688","sourceCode":"while (int < int) {\n    final int int = java.lang.Math.java.lang.Math.max(org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int), org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int));\n    if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n        break;\n    } \n    int += int;\n}","type":"CtWhileImpl"},"failures":[20,85,86,87,88,89,52,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,21,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"start"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:2476","sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1987","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"open":"sizeStartText","str":"sizeStartText","close":"sizeStartText"}},{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testToString":92,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":31,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":20,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":87,"org.apache.commons.lang3.ConversionTest.testIntToBinary":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":24,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":78,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":73,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":55,"org.apache.commons.lang3.time.DateUtilsTest.testRound":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":28,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":42,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":90,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":37,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":80,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":89,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":112,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":23,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":67,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":21,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":49,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":121,"org.apache.commons.lang3.math.FractionTest.testInvert":83,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":26,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":13,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":71,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":77,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":65,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":11,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":124,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":123,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":122,"org.apache.commons.lang3.math.FractionTest.testPow":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":100,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":34,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValuePrimitive":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":99,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":98,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":84,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":95,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":85,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":3,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":128,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":59,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":29,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":66,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":76,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":19,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":15,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":9,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":4,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":68,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":43,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":64,"org.apache.commons.lang3.text.StrTokenizerTest.test1":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":126,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":127,"org.apache.commons.lang3.text.StrTokenizerTest.test3":106,"org.apache.commons.lang3.text.StrTokenizerTest.test2":105,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":1,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":48,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":45,"org.apache.commons.lang3.text.StrTokenizerTest.test8":111,"org.apache.commons.lang3.text.StrTokenizerTest.test5":108,"org.apache.commons.lang3.text.StrTokenizerTest.test4":107,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":70,"org.apache.commons.lang3.text.StrTokenizerTest.test7":110,"org.apache.commons.lang3.text.StrTokenizerTest.test6":109,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":117,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":118,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":119,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":113,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":116,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":6,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":30,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":8,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":102,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":35,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":93,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":94,"org.apache.commons.lang3.math.FractionTest.testMultiply":51,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":14,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":103,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":46,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":88,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":40,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":16,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":54,"org.apache.commons.lang3.mutable.MutableShortTest.testEquals":0,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":2,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":17,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":115,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":57,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":72,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":62,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":44,"org.apache.commons.lang3.math.FractionTest.testDivide":82,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":60,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":18,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":69,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":120,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":114,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":75,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":63,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":52,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":56,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":91}}]
