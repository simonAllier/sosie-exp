[{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1065","sourceCode":"return org.apache.commons.lang3.text.StrMatcher.setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1135","sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"suffix":"valueDelimiter","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1087","sourceCode":"java.util.Calendar.set(int[][0], ((java.util.Calendar.get(int[][0])) - int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1077","sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:262","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:912","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1391","sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:210","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[67,68,32,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"denominator","nHexs":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:240","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1011","sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","type":"CtTryImpl"},"failures":[70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:143","sourceCode":"float += 0.25F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:146","sourceCode":"(float)--","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:837","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + int) + \"]\"))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1030","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1001","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"suffixMatcher":"trimmerMatcher"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:408","sourceCode":"throw new java.lang.IllegalArgumentException((((\"src.length-srcPos<4: src.length=\" + (boolean[].int)) + \", srcPos=\") + int))","type":"CtThrowImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:125","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.random(int, false, true)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:330","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:481","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:478","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","type":"CtReturnImpl"},"failures":[75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:530","sourceCode":"if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:527","sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","type":"CtSwitchImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exp":"numeric","dec":"str","numeric":"exp","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:157","sourceCode":"this.double += double","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:168","sourceCode":"this.double += java.lang.Number.doubleValue()","type":"CtOperatorAssignmentImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:884","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:263","sourceCode":"return true","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:125","sourceCode":"if (int >= 0) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n    java.lang.StringBuilder.append(java.lang.String);\n    int = int + 1;\n} else {\n    java.lang.StringBuilder.append(java.lang.String.substring(int));\n    int = int;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:588","failures":[],"status":0,"binaryOperator":"(((char == 'y') || (char == 'Y')) && ((char == 'e') || (char == 'E')))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:651","sourceCode":"java.util.Calendar.setLenient(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:668","sourceCode":"java.util.Calendar.setTime(java.util.Date)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"c":"c"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:482","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:545","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[38,38,80,80,81,81,82,83,84,42,85,86,43,87,44,88,89,90,91,45,92,46,93,47,94,95,96,97,98,99,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"double--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:257","sourceCode":"double -= int","type":"CtOperatorAssignmentImpl"},"failures":[32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:651","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1369","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"traceStarted":"allowSigns"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:604","sourceCode":"final char char = java.lang.String.charAt(3)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:463","sourceCode":"final char char = java.lang.String.charAt(int)","type":"CtLocalVariableImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2049","sourceCode":"if (int < int) {\n    org.apache.commons.lang3.text.StrBuilder.delete(int, int);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,0,124,125,126,127,128,129,130,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"len":"startMatchLen","this":"buf","size":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:490","sourceCode":"if (char == char) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:112","sourceCode":"if (org.apache.commons.lang3.CharSet.contains(char)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delimiter":"c","ch":"c"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:539","sourceCode":"return 'b'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:176","sourceCode":"return java.lang.String.charAt(0)","type":"CtReturnImpl"},"failures":[132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1186","sourceCode":"return 5","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:289","sourceCode":"return java.lang.Float.java.lang.Float.floatToIntBits(float)","type":"CtReturnImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1577","sourceCode":"boolean boolean","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:373","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:198","sourceCode":"java.text.DateFormat = java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:204","sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"formatter":"formatter","locale":"locale","timeStyle":"dateStyle","this":"formatter"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:396","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:444","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":41,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValueObject":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":39,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":73,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":86,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":90,"org.apache.commons.lang3.math.FractionTest.testFactory_double":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":93,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":123,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":36,"org.apache.commons.lang3.time.DateUtilsTest.testRound":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":98,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":45,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":4,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":18,"org.apache.commons.lang3.time.DateUtilsTest.testToCalendar":79,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":103,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":47,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":21,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":129,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":121,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":94,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":102,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":95,"org.apache.commons.lang3.math.FractionTest.testPow":68,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":131,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":17,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":113,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":109,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":25,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":81,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":20,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":108,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":126,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":100,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":52,"org.apache.commons.lang3.mutable.MutableFloatTest.testHashCode":133,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":24,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":92,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":55,"org.apache.commons.lang3.ArrayUtilsTest.testToString":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":127,"org.apache.commons.lang3.math.FractionTest.testMultiply":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":97,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":91,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":10,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":74,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":42,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":57,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":2,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":110,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":112,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":61,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":101}}]
