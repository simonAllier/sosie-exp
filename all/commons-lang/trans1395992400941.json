[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int > 8) || ((int == 8) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:480","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.Class<?>)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.RandomStringUtils:284","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1502","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:696","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.SerializationException(java.io.IOException)","position":"org.apache.commons.lang3.SerializationUtils:157","type":"CtThrowImpl"},"status":-2},{"failures":[0,1,2],"binaryOperator":"int < int","name":"negateConditional","position":"org.apache.commons.lang3.StringUtils:5434","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule : org.apache.commons.lang3.time.FastDatePrinter.Rule[]) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(java.lang.StringBuffer, java.util.Calendar);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:474","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3231","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:295","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 4) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Set<org.apache.commons.lang3.builder.IDKey> != null) && (java.util.Set<org.apache.commons.lang3.builder.IDKey>.isEmpty())) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove();\n} ","position":"org.apache.commons.lang3.builder.HashCodeBuilder:494","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vm.vendor\")","position":"org.apache.commons.lang3.SystemUtils:630","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:420","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:732","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.text.StrSubstitutor:758","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","position":"org.apache.commons.lang3.text.StrTokenizer:861","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\")","position":"org.apache.commons.lang3.time.DateUtils:959","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:1432","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(4 , 5)","position":"org.apache.commons.lang3.math.Fraction:91","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:977","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String[] == null) {\n    java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case 13 :\n    return 'b';","position":"org.apache.commons.lang3.Conversion:656","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"val":"val","offset":"java.util.Calendar.HOUR_OF_DAY","aField":"aField","offsetSet":"offsetSet","roundUp":"offsetSet"},"name":"add","transplant":{"sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","position":"org.apache.commons.lang3.time.DateUtils:1080","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int >= 12) {\n        int -= 12;\n    } \n    boolean = int >= 6;\n    boolean = true;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1066","type":"CtIfImpl"},"status":-2},{"failures":[3],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:1036","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion","position":"org.apache.commons.lang3.JavaVersion:141","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1053","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.translate.CharSequenceTranslator[] org.apache.commons.lang3.text.translate.CharSequenceTranslator[] = new org.apache.commons.lang3.text.translate.CharSequenceTranslator[(org.apache.commons.lang3.text.translate.CharSequenceTranslator[].int) + 1]","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:108","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object","clone":"object"},"name":"replace","transplant":{"sourceCode":"return T == null ? T : T","position":"org.apache.commons.lang3.ObjectUtils:664","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream = new org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream(java.io.ByteArrayInputStream , T.getClass().getClassLoader());\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.readObject()));\n    return T;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new org.apache.commons.lang3.SerializationException(\"ClassNotFoundException while reading cloned object data\" , java.lang.ClassNotFoundException);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new org.apache.commons.lang3.SerializationException(\"IOException while reading cloned object data\" , java.io.IOException);\n} finally {\n    try {\n        if (org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream != null) {\n            org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close();\n        } \n    } catch (final java.io.IOException java.io.IOException) {\n        throw new org.apache.commons.lang3.SerializationException(\"IOException on closing cloned object data InputStream.\" , java.io.IOException);\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:86","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:952","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= (int) ; int--) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence(int, (int + int));\n    final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(java.lang.CharSequence.toString());\n    if (java.lang.CharSequence != null) {\n        java.io.Writer.write(java.lang.CharSequence.toString());\n        return int;\n    } \n}","position":"org.apache.commons.lang3.text.translate.LookupTranslator:75","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:629","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2563","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"token":"searchChars"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(\"at\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:649","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(char)","position":"org.apache.commons.lang3.StringUtils:4890","type":"CtLocalVariableImpl"},"status":-2},{"failures":[4],"variableMapping":{"field":"field"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:383","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"The field must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:509","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match either specified value\")","position":"org.apache.commons.lang3.BooleanUtils:740","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:798","type":"CtIfImpl"},"status":-2},{"failures":[5],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return 0;\n} ","position":"org.apache.commons.lang3.StringUtils:5812","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:598","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    java.lang.Class<?> = java.lang.Class<?>.getComponentType();\n} ","position":"org.apache.commons.lang3.AnnotationUtils:227","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"toProperString":"toProperString"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"1\"","position":"org.apache.commons.lang3.math.Fraction:935","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:944","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","padStr":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:236","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:875","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.ArrayUtils.int)) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5163","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.StopWatch:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(char[]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1619","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method.invoke(null, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:295","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.lang3.mutable.MutableBoolean:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    return int + int;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:708","type":"CtIfImpl"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"binaryOperator":"(char[]) == null","name":"negateConditional","position":"org.apache.commons.lang3.text.StrTokenizer:604","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:840","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields()","position":"org.apache.commons.lang3.builder.CompareToBuilder:313","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"arraySeparator","padStr":"arraySeparator"},"name":"add","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1780","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.text.WordUtils:547","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:66","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:645","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1998","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.builder.EqualsBuilder:397","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    org.apache.commons.lang3.builder.ReflectionToStringBuilder.reflectionAppendArray(org.apache.commons.lang3.builder.ToStringBuilder.getObject());\n    return ;\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:514","type":"CtIfImpl"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\")\")","position":"org.apache.commons.lang3.AnnotationUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object[])","position":"org.apache.commons.lang3.builder.ToStringStyle:878","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache<F>.org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer, java.lang.Integer, java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:124","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int[][int]","position":"org.apache.commons.lang3.StringUtils:6974","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:1124","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.endorsed.dirs\")","position":"org.apache.commons.lang3.SystemUtils:282","type":"CtInvocationImpl"},"status":-2},{"failures":[177,178,179,180],"variableMapping":{"ch":"ch","this":"this","i":"i","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char)","position":"org.apache.commons.lang3.StringUtils:5783","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} ","position":"org.apache.commons.lang3.text.WordUtils:293","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:3623","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.reflect.InheritanceUtils:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:586","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:688","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"fromIndex":"start"},"name":"replace","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:391","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:624","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(boolean[], boolean)","position":"org.apache.commons.lang3.ArrayUtils:4707","type":"CtLocalVariableImpl"},"status":-2},{"failures":[181],"variableMapping":{"allZeros":"allZeros","this":"this","numeric":"numeric"},"name":"add","transplant":{"sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:558","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:544","type":"CtTryImpl"},"status":-1},{"failures":[182],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Double.isNaN(double)","position":"org.apache.commons.lang3.mutable.MutableDouble:118","type":"CtReturnImpl"},"status":-1},{"failures":[183],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:675","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:654","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())","position":"org.apache.commons.lang3.ClassUtils:131","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean))","position":"org.apache.commons.lang3.builder.ToStringStyle:445","type":"CtInvocationImpl"},"status":-2},{"failures":[184],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Long java.lang.Long = java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(long[], java.lang.Long.longValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5726","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.event.EventListenerSupport:229","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, int, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:1157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(int, org.apache.commons.lang3.math.Fraction.int)","position":"org.apache.commons.lang3.math.Fraction:756","type":"CtLocalVariableImpl"},"status":-2},{"failures":[185,186,187,188,189,190,191,192,193],"binaryOperator":"(boolean) == false","name":"negateConditional","position":"org.apache.commons.lang3.builder.EqualsBuilder:522","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return this.T","position":"org.apache.commons.lang3.mutable.MutableObject:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T instanceof java.lang.Cloneable) {\n    final java.lang.Object java.lang.Object;\n    if (T.getClass().isArray()) {\n        final java.lang.Class<?> java.lang.Class<?> = T.getClass().getComponentType();\n        if (!(java.lang.Class<?>.isPrimitive())) {\n            java.lang.Object = ((java.lang.Object[])(T)).clone();\n        } else {\n            int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(T);\n            java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int);\n            while ((int--) > 0) {\n                java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int));\n            }\n        }\n    } else {\n        try {\n            final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\");\n            java.lang.Object = java.lang.reflect.Method.invoke(T);\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Cannot clone Cloneable type \" + (T.getClass().getName())) , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause());\n        }\n    }\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(java.lang.Object));\n    return T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:609","type":"CtIfImpl"},"status":-2},{"failures":[194,195,196,197,198,199,200,201],"variableMapping":{"cs1":"cs","cs2":"cs"},"name":"add","transplant":{"sourceCode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:795","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (char[] == null)) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1875","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int >= int), \"Start value must be smaller or equal to end value.\")","position":"org.apache.commons.lang3.RandomUtils:85","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? 1 : 0","position":"org.apache.commons.lang3.text.StrSubstitutor:878","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4878","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableSet(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.keySet())","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:320","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = null","position":"org.apache.commons.lang3.AnnotationUtils:73","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.ClassUtils:823","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"delimiters":"buffer","length":"size"},"name":"add","transplant":{"sourceCode":"if ((char[] != null) && ((this.int) == 0)) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.text.WordUtils:539","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2181","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:268","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:2491","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = 1 << int","position":"org.apache.commons.lang3.Conversion:1127","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.lang.Class<L>.isInterface(), \"Class {0} is not an interface\", java.lang.Class<L>.getName())","position":"org.apache.commons.lang3.event.EventListenerSupport:142","type":"CtInvocationImpl"},"status":-2},{"failures":[202,203,204,205,206,207,208],"variableMapping":{"startCutoff":"i"},"name":"add","transplant":{"sourceCode":"int -= 7","position":"org.apache.commons.lang3.time.DateUtils:1212","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ++int","position":"org.apache.commons.lang3.StringUtils:3101","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"sep"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1185","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.Map<java.lang.String, E> java.util.Map<java.lang.String, E> = new java.util.LinkedHashMap<java.lang.String, E>()","position":"org.apache.commons.lang3.EnumUtils:59","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Math.java.lang.Math.max(1, (int - int))","position":"org.apache.commons.lang3.StringUtils:6941","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Class<?>.equals(java.lang.Class<?>))","position":"org.apache.commons.lang3.reflect.InheritanceUtils:59","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"long long = 0","position":"org.apache.commons.lang3.EnumUtils:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:667","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.CharSequence java.lang.CharSequence : java.lang.CharSequence[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence, java.lang.CharSequence)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:7393","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3049","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.TypeUtils:1306","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"suffix":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1038","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(char[][1])","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:130","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1267","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrSubstitutor:960","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.List<java.lang.String> == null) || (java.util.List<java.lang.String> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The List must not be null\");\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= int ; int++) {\n    if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, int)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1481","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:497","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = int >= 6","position":"org.apache.commons.lang3.time.DateUtils:1073","type":"CtAssignmentImpl"},"status":-2},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\Q\")","position":"org.apache.commons.lang3.time.FastDateParser:335","type":"CtInvocationImpl"},"status":-1},{"failures":[325],"variableMapping":{"ch":"c1","this":"this"},"name":"replace","transplant":{"sourceCode":"return java.lang.Character.isWhitespace(char)","position":"org.apache.commons.lang3.text.WordUtils:571","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char != char) && (java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2661","type":"CtIfImpl"},"status":-1},{"failures":[326],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    final int int = (255 & (byte[][(int + int)])) << int;\n    final int int = 255 << int;\n    short = ((short)((short & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:878","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2401","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2439","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.builder.Diff:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return null;\n}","position":"org.apache.commons.lang3.reflect.MethodUtils:393","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.math.Fraction == null) {\n    throw new java.lang.IllegalArgumentException(\"The fraction must not be null\");\n} ","position":"org.apache.commons.lang3.math.Fraction:823","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = java.lang.Math.java.lang.Math.abs((double - double))","position":"org.apache.commons.lang3.math.Fraction:283","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.ContextedException:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int + int","position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl"},"status":-2},{"failures":[327],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2296","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","position":"org.apache.commons.lang3.ArrayUtils:5547","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","position":"org.apache.commons.lang3.math.NumberUtils:573","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.char","position":"org.apache.commons.lang3.text.StrSubstitutor:934","type":"CtReturnImpl"},"status":-2},{"failures":[328],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], 0, double[].int)","position":"org.apache.commons.lang3.ArrayUtils:3972","type":"CtInvocationImpl"},"status":-1},{"failures":[329],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \")","position":"org.apache.commons.lang3.time.StopWatch:303","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"))","position":"org.apache.commons.lang3.time.DateUtils:1206","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.CharSetUtils:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.int","position":"org.apache.commons.lang3.text.StrBuilder:114","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > (int)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Integer)","position":"org.apache.commons.lang3.ArrayUtils:5540","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = (int) / 2","position":"org.apache.commons.lang3.text.StrBuilder:2022","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String[] == null ? 0 : java.lang.String[].int","position":"org.apache.commons.lang3.StringUtils:4632","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (float[].int) ; int++) {\n    if (float == (float[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2772","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","position":"org.apache.commons.lang3.ObjectUtils:528","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:864","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"len":"years","pos":"years"},"name":"replace","transplant":{"sourceCode":"int = (org.apache.commons.lang3.text.StrBuilder.this.size()) - int","position":"org.apache.commons.lang3.text.StrBuilder:2883","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:330","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:6600","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"_mask":"start","holder":"start"},"name":"add","transplant":{"sourceCode":"return int | int","position":"org.apache.commons.lang3.BitField:216","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, 0, 0)","position":"org.apache.commons.lang3.text.StrTokenizer:718","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\")","position":"org.apache.commons.lang3.Conversion:1657","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.ArrayUtils:3262","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":114,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":111,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":272,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":199,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":209,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":212,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":17,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":170,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArrayHiddenByObject":190,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":279,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":135,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":126,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":268,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":219,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":271,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":16,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":247,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":92,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":286,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":318,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":163,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":270,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":151,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":165,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":87,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":283,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":152,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":224,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":275,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":41,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":296,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":101,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":134,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":255,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":105,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":171,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":234,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":319,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":241,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":231,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":306,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":95,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":205,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":287,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":323,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":145,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":269,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":0,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloat":187,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":188,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":76,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":149,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":236,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":107,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":15,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":261,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":254,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":183,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":206,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":148,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":267,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":215,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":200,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":284,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":120,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":208,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":130,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":230,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":290,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":315,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":260,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":239,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":90,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":122,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":137,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":210,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":280,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":50,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":237,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":228,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":245,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":201,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":61,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":244,"org.apache.commons.lang3.builder.EqualsBuilderTest.testInt":186,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":51,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":83,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":235,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":54,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":242,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":295,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":110,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":159,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":294,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":288,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":166,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":252,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":326,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":218,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":43,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":216,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":325,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":243,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":44,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":238,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":291,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":309,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":282,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":141,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":297,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":78,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":217,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":160,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":303,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":115,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":91,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":71,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":329,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBefore_StringString":327,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":277,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":289,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":310,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":308,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":164,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":154,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":6,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":162,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":328,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":181,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":133,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":79,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":104,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":198,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":85,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":207,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":62,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":251,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":144,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":168,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":317,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":67,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":225,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":106,"org.apache.commons.lang3.mutable.MutableDoubleTest.testNanInfinite":182,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":69,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":259,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":250,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":81,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":169,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":222,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":214,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":299,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":70,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":316,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":158,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":226,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":100,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":194,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":312,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":273,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":293,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":89,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":124,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":320,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":140,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":7,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":172,"org.apache.commons.lang3.ArrayUtilsTest.testToString":176,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":274,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":56,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":138,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":57,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":213,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":253,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":155,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":196,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":266,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":276,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":304,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":11,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":324,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":113,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":147,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":249,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":14,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":128,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":60,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":102,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":185,"org.apache.commons.lang3.text.StrTokenizerTest.test8":39,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":139,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":292,"org.apache.commons.lang3.text.StrTokenizerTest.test5":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":305,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":311,"org.apache.commons.lang3.text.StrTokenizerTest.test4":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":313,"org.apache.commons.lang3.StringUtilsSubstringTest.testCountMatches_String":5,"org.apache.commons.lang3.text.StrTokenizerTest.test7":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":281,"org.apache.commons.lang3.text.StrTokenizerTest.test6":37,"org.apache.commons.lang3.text.StrTokenizerTest.test1":32,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":30,"org.apache.commons.lang3.text.StrTokenizerTest.test3":34,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":195,"org.apache.commons.lang3.text.StrTokenizerTest.test2":33,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":72,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":136,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":175,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":4,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":263,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":9,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":240,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":150,"org.apache.commons.lang3.ConversionTest.testByteToBinary":184,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":264,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":314,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":59,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":221,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":307,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":180,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":258,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":96,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":125,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":167,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":21,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":22,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":256,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":109,"org.apache.commons.lang3.time.FastDateParserTest.testParses":257,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":58,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":285,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":84,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":146,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":262,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":298,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":75,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":321,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":223,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":45,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":142,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":42,"org.apache.commons.lang3.JavaVersionTest.testGetJavaVersion":3,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":197,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":77,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":143,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":278,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":265,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":301,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":302,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":220,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":300,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":74,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":204,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":233,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":322,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":118,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":153}}]
