[{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:432","sourceCode":"return (this.int) / (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:192","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numerator":"value","denominator":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2021","sourceCode":"for (int int = 0, int int = int - 1 ; int < int ; int++ , int--) {\n    final char char = char[][int];\n    char[][int] = char[][int];\n    char[][int] = char;\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:264","sourceCode":"if ((char >= 56320) && (char <= 57343)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = char;\n        int--;\n        char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n    }\n} else if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"half":"count","buf":"buffer","size":"count"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1186","sourceCode":"return 5","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:358","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:620","failures":[],"status":-2,"binaryOperator":"(int - int) / 2","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:110","sourceCode":"java.lang.System.java.lang.System.arraycopy(org.apache.commons.lang3.text.translate.CharSequenceTranslator[], 0, org.apache.commons.lang3.text.translate.CharSequenceTranslator[], 1, org.apache.commons.lang3.text.translate.CharSequenceTranslator[].int)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Range:272","failures":[14],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:152","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.getCSVClone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:230","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"tok"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:794","sourceCode":"if (int > 0) {\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1056","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ignoredLen":"i","pos":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:343","sourceCode":"if (boolean[][int]) {\n    return '5';\n} else {\n    return '4';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:413","sourceCode":"if (boolean[][(int + 3)]) {\n    if (boolean[][(int + 2)]) {\n        if (boolean[][(int + 1)]) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return '7';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return '3';\n            }\n        }\n    } else {\n        if (boolean[][(int + 1)]) {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return '5';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '1';\n            }\n        }\n    }\n} else {\n    if (boolean[][(int + 2)]) {\n        if (boolean[][(int + 1)]) {\n            if (boolean[][int]) {\n                return 'e';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'a';\n            } else {\n                return '2';\n            }\n        }\n    } else {\n        if (boolean[][(int + 1)]) {\n            if (boolean[][int]) {\n                return 'c';\n            } else {\n                return '4';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '8';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"i","shift":"shift","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:308","sourceCode":"return 'f'","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1348","sourceCode":"if (int == int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:139","sourceCode":"return (int & (int)) == (int)","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"sz":"_mask","i":"holder"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:294","sourceCode":"throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:40","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:387","sourceCode":"return java.util.Date","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:538","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","type":"CtReturnImpl"},"failures":[32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:295","sourceCode":"if (int == 25) {\n    throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:813","sourceCode":"if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + int));\n    break;\n} ","type":"CtIfImpl"},"failures":[33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:957","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:780","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:470","sourceCode":"if (char == '0') {\n    int++;\n} else {\n    break;\n}","type":"CtIfImpl"},"failures":[49,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:285","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1472","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1123","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:345","sourceCode":"return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(java.lang.Object).setExcludeFieldNames(java.lang.String[]).toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:404","sourceCode":"return long","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1828","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"startTimeMillis":"result"}},{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","failures":[51],"status":-1,"binaryOperator":"int + 3","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:543","sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:429","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6066","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:480","sourceCode":"if ((int > 8) || ((int == 8) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:308","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"failures":[52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:547","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())","type":"CtInvocationImpl"},"failures":[54,55,56,57,34,35,58,59,37,39,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":18,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":58,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValuePrimitive":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":21,"org.apache.commons.lang3.text.StrTokenizerTest.test1":42,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":8,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":7,"org.apache.commons.lang3.mutable.MutableIntTest.testAddValuePrimitive":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":60,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":29,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":32,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":56,"org.apache.commons.lang3.text.StrTokenizerTest.test5":44,"org.apache.commons.lang3.text.StrTokenizerTest.test4":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":37,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":45,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":49,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":17,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":15,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":53,"org.apache.commons.lang3.mutable.MutableIntTest.testIncrement":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":11,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":54,"org.apache.commons.lang3.mutable.MutableIntTest.testDecrement":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":61,"org.apache.commons.lang3.RangeTest.testIsBefore":14,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":20,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":16,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":34,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":25,"org.apache.commons.lang3.mutable.MutableIntTest.testAddValueObject":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":39,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":22,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":6,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":33,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":36,"org.apache.commons.lang3.mutable.MutableIntTest.testSubtractValueObject":3,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":28}}]
