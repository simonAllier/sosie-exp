[{"failures":[0,1,2,3,4,5,6,7,8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:482","type":"CtInvocationImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","position":"org.apache.commons.lang3.Conversion:629","type":"CtSwitchImpl"},"status":-2},{"failures":[9],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:2035","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final char[] char[] = this.char[]","position":"org.apache.commons.lang3.text.StrBuilder:2682","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(char[], java.lang.Character.java.lang.Class<java.lang.Character>)))","position":"org.apache.commons.lang3.ArrayUtils:4098","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Short[]","position":"org.apache.commons.lang3.ArrayUtils:736","type":"CtReturnImpl"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"variableMapping":{"buf":"regex"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append('^')","position":"org.apache.commons.lang3.CharRange:239","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","position":"org.apache.commons.lang3.time.FastDateParser:370","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:1447","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this.T","position":"org.apache.commons.lang3.mutable.MutableObject:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter()","position":"org.apache.commons.lang3.exception.ExceptionUtils:583","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.float[]","position":"org.apache.commons.lang3.ArrayUtils:1166","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.tokenize(org.apache.commons.lang3.text.StrBuilder.this.char[], 0, org.apache.commons.lang3.text.StrBuilder.this.size())","position":"org.apache.commons.lang3.text.StrBuilder:2821","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:391","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.ParameterizedType, \"superType is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:960","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((java.lang.reflect.Type instanceof java.lang.Class<?>) || (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) || (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) || (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:705","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"method":"method"},"name":"add","transplant":{"sourceCode":"return java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:477","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Method))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-2587890625525655916L","position":"org.apache.commons.lang3.builder.ToStringStyle:71","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1699","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>.isInstance(java.lang.Object)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, java.lang.Class<?>.getName(), (java.lang.Object == null ? \"null\" : java.lang.Object.getClass().getName())));\n} ","position":"org.apache.commons.lang3.Validate:1176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1833","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (int) < int ? -1 : (int) == int ? 0 : 1","position":"org.apache.commons.lang3.mutable.MutableInt:262","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (long) < long ? -1 : (long) == long ? 0 : 1","position":"org.apache.commons.lang3.mutable.MutableLong:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(long[], int, long[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:930","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '5'","position":"org.apache.commons.lang3.Conversion:651","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.DiffResult.OBJECTS_SAME_STRING":"str1"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.DiffResult:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:6507","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"calendar":"calendar","buf":"buf","printer":"printer"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.time.FastDatePrinter.applyRules(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:601","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:475","type":"CtReturnImpl"},"status":0},{"failures":[92,93,94,95,96,97,98,0,99,100,101,101,102,102,103,103,104,105,105,106,106,107,107,1,1,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,116,116,117,118,119,120,121,122,123,124,125,126,127,127,128,128,129,130,131,132,132,133,133,134,134,135,136,137,138,138,139,139,140,141,142,143,144,145,146,146,147,148,148,149,149,150,150,151,151,152,152,153,154,155,155,156,156,157,158,159,159,160,161,161,162,163,163,164,164,2,2,165,165,166,167,168,169,169,170,170,171,171,172,173,174,175,3,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,4,195,196,197,198,199,5,200,201,202,203,204,6,205,206,207,208,209,7,210,211,212,213,214,8,215,216],"variableMapping":{"fieldName":"fieldName","this":"this","buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:554","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean))","position":"org.apache.commons.lang3.builder.ToStringStyle:445","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:999","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:453","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:538","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","position":"org.apache.commons.lang3.event.EventUtils:52","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= 0 ; int--) {\n    if (float == (float[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2817","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) == char) {\n        if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n            if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n                continue outer;\n            } \n        } else {\n            continue outer;\n        }\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1720","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1157","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int[] int[]","position":"org.apache.commons.lang3.StringUtils:6783","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[] int[] = new int[int + 1]","position":"org.apache.commons.lang3.StringUtils:6782","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setUseShortClassName(true)","position":"org.apache.commons.lang3.AnnotationUtils:59","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:562","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    int += 1;\n    if (int == int) {\n        int = int;\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n    } else {\n        java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n    }\n} ","position":"org.apache.commons.lang3.StringUtils:2848","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2339","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:820","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class<?>)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:688","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 8","position":"org.apache.commons.lang3.Conversion:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:859","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.io.ObjectInputStream != null) {\n    java.io.ObjectInputStream.close();\n} ","position":"org.apache.commons.lang3.SerializationUtils:235","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:236","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:453","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:689","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > (int)) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) != (char[][int])) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2685","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"startIndex"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:6557","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (short[].int)) {\n    int = (short[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2274","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"valid":"valid","cs":"cs"},"name":"add","transplant":{"sourceCode":"if ((char[] == null) || (java.lang.CharSequence == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1807","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence, char[])) == (org.apache.commons.lang3.StringUtils.int)","position":"org.apache.commons.lang3.StringUtils:1816","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:150","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String","position":"org.apache.commons.lang3.exception.ExceptionUtils:642","type":"CtLocalVariableImpl"},"status":-2},{"failures":[217],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final boolean[] boolean[] = new boolean[4]","position":"org.apache.commons.lang3.Conversion:517","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean[] boolean[] = new boolean[int]","position":"org.apache.commons.lang3.StringUtils:4713","type":"CtLocalVariableImpl"},"status":-1},{"failures":[218],"variableMapping":{"milliseconds":"value","days":"value","org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY":"value"},"name":"replace","transplant":{"sourceCode":"long = long - (long * (this.long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:138","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(long)++","position":"org.apache.commons.lang3.mutable.MutableLong:118","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE":"this","this":"quote"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.tabMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:102","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrTokenizer:316","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.reflect.TypeUtils:1771","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'D' :\n    try {\n        final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n        if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n            return java.lang.Double;\n        } \n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }","position":"org.apache.commons.lang3.math.NumberUtils:557","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, boolean, boolean)","position":"org.apache.commons.lang3.RandomStringUtils:143","type":"CtReturnImpl"},"status":-2},{"failures":[219],"variableMapping":{"toClass":"cls","cls":"cls"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.ClassUtils:647","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:636","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:490","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:94","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:171","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence != null) {\n    java.io.Writer.write(java.lang.CharSequence.toString());\n    return int;\n} ","position":"org.apache.commons.lang3.text.translate.LookupTranslator:78","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (T != null) {\n    java.lang.Class<?> = T.getClass();\n} else {\n    throw new java.lang.IllegalArgumentException(\"Arguments cannot both be null\");\n}","position":"org.apache.commons.lang3.ArrayUtils:4010","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:544","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1749","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.AnnotationUtils:80","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1405","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Character.java.lang.Class<java.lang.Character>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((char[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:354","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (int <= 7) {\n        final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n        if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n            return java.lang.Float;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:601","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (this.long) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.text.StrBuilder:2900","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:545","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '5'","position":"org.apache.commons.lang3.Conversion:433","type":"CtReturnImpl"},"status":-2},{"failures":[220],"variableMapping":{"str":"str","this":"this","separator":"str"},"name":"add","transplant":{"sourceCode":"if ((org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (java.lang.String == null)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2290","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String, java.lang.CharSequence, true, java.lang.CharSequence[])","position":"org.apache.commons.lang3.StringUtils:7600","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.util.Iterator<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:4081","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.Iterator<?>.hasNext())) {\n    @java.lang.SuppressWarnings(value = \"deprecation\")\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.toString(java.lang.Object);\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4088","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Void.java.lang.Class<java.lang.Void>, java.lang.Void.java.lang.Class<java.lang.Void>)","position":"org.apache.commons.lang3.ClassUtils:89","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.Range:460","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, org.apache.commons.lang3.math.Fraction.int)","position":"org.apache.commons.lang3.math.Fraction:753","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.text.StrBuilder:377","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"file.separator\")","position":"org.apache.commons.lang3.SystemUtils:134","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1431","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.add(new org.apache.commons.lang3.tuple.ImmutablePair<java.lang.String, java.lang.Object>(java.lang.String , java.lang.Object))","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.WordUtils:205","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3761","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1193","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:281","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String, int);\n} ","position":"org.apache.commons.lang3.StringUtils:5179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:368","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"array2":"array","this":"this","array1":"array"},"name":"add","transplant":{"sourceCode":"if (T[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.clone(T[]);\n} else if (T[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.clone(T[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3716","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(T[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5233","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1559","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.CharSetUtils:243","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:937","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ false , false , false , false }","position":"org.apache.commons.lang3.Conversion:223","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.ArrayUtils:1211","type":"CtReturnImpl"},"status":-2},{"failures":[221],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:5853","type":"CtReturnImpl"},"status":-1},{"failures":[222],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"char = ((char)((char) + 1))","position":"org.apache.commons.lang3.CharRange:315","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = ((char)((org.apache.commons.lang3.CharRange.char) + 1))","position":"org.apache.commons.lang3.CharRange:291","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Date, java.lang.String, org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:166","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:163","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));","position":"org.apache.commons.lang3.time.FastDatePrinter:281","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue();\n    if (int == int) {\n        T = null;\n    } else if (int > int) {\n        int = int;\n        T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    } \n}","position":"org.apache.commons.lang3.ObjectUtils:583","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:424","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.StringBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtIfImpl"},"status":-2},{"failures":[223],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:358","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"java.util.Calendar.WEEK_OF_MONTH":"java.util.TimeZone.LONG"},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:807","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case 'G' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        break;\n    case 'y' :\n        if (int == 2) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n        }\n        break;\n    case 'M' :\n        if (int >= 4) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        } else if (int == 3) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        } else if (int == 2) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n        }\n        break;\n    case 'd' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'h' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n        break;\n    case 'H' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'm' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 's' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'S' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'E' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n        break;\n    case 'D' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'F' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'w' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'W' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'a' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        break;\n    case 'k' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n        break;\n    case 'K' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'z' :\n        if (int >= 4) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n        }\n        break;\n    case 'Z' :\n        if (int == 1) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n        }\n        break;\n    case '\\'' :\n        final java.lang.String java.lang.String = java.lang.String.substring(1);\n        if ((java.lang.String.length()) == 1) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:195","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"date"},"name":"replace","transplant":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:775","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"t":"dstPos"},"name":"replace","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int /= 2;\n}","position":"org.apache.commons.lang3.math.Fraction:610","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    short[][(int + int)] = ((short)(65535 & (long >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1229","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:310","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.math.NumberUtils:520","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ClassUtils:399","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1154","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:375","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final byte[] byte[] = org.apache.commons.lang3.SerializationUtils.org.apache.commons.lang3.SerializationUtils.serialize(T)","position":"org.apache.commons.lang3.SerializationUtils:82","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.BooleanUtils:466","type":"CtIfImpl"},"status":-2},{"failures":[224],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5729","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = 65535 << int","position":"org.apache.commons.lang3.Conversion:771","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:995","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:654","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.SplitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.org.apache.commons.lang3.time.StopWatch.SplitState)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:382","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"search":"replace","size":"size","replace":"search","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"if (char != char) {\n    for (int int = 0 ; int < (int) ; int++) {\n        if ((char[][int]) == char) {\n            char[][int] = char;\n            break;\n        } \n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1868","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        char[][int] = char;\n        break;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1869","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.reflect.TypeUtils:280","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.tuple.ImmutableTriple<L, M, R>(L , M , R)","position":"org.apache.commons.lang3.tuple.Triple:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"prior":"sep","value":"sep"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1185","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"The field must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:509","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:494","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:613","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = java.lang.reflect.Method.invoke(T)","position":"org.apache.commons.lang3.ObjectUtils:625","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2125","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:511","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unterminated quoted string at position \" + int))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:506","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.StopWatch.SplitState()","position":"org.apache.commons.lang3.time.StopWatch:126","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:293","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrLookup<java.lang.String> = new org.apache.commons.lang3.text.StrLookup.MapStrLookup<java.lang.String>(java.util.Map<java.lang.String, java.lang.String>)","position":"org.apache.commons.lang3.text.StrLookup:54","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:609","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6908","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < (float[].int) ; int++) {\n    java.lang.Float[][int] = java.lang.Float.java.lang.Float.valueOf(float[][int]);\n}","position":"org.apache.commons.lang3.ArrayUtils:3416","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    java.lang.Short[][int] = java.lang.Short.java.lang.Short.valueOf(short[][int]);\n}","position":"org.apache.commons.lang3.ArrayUtils:3212","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:979","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int + 1","position":"org.apache.commons.lang3.math.NumberUtils:1368","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (short[] == null) {\n    int = (int) * (int);\n} else {\n    for (final short short : short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(short);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:894","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    int = (int) * (int);\n} else {\n    for (final boolean boolean : boolean[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:585","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = char == char","position":"org.apache.commons.lang3.builder.EqualsBuilder:555","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1372","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:754","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Short[]","position":"org.apache.commons.lang3.ArrayUtils:3209","type":"CtReturnImpl"},"status":-2},{"failures":[225,226],"variableMapping":{"milliseconds":"wrapLength","seconds":"wrapLength"},"name":"replace","transplant":{"sourceCode":"int += 1000 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:393","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 1","position":"org.apache.commons.lang3.text.WordUtils:180","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:652","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.StrBuilder:1248","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":165,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":163,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":184,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":10,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":22,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":176,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":7,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":69,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":224,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":140,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":198,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":195,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":5,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":213,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":188,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":135,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":26,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":196,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":185,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":174,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":167,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":3,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":156,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":220,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":71,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":97,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":60,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":146,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":30,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":192,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":123,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":194,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":159,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":88,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":67,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":193,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":134,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":172,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":33,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":223,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":56,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":138,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":202,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":11,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":112,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":81,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":1,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":80,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":179,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":131,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":162,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":216,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":149,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":120,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":200,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":86,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":17,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":187,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":34,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":74,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":145,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":40,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":204,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":125,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":46,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":197,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":139,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":32,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":51,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":199,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":175,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":126,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":214,"org.apache.commons.lang3.mutable.MutableLongTest.testIncrement":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":150,"org.apache.commons.lang3.CharRangeTest.testIterator":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":108,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":85,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":206,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":215,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":58,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":116,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":84,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":128,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":178,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":43,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":117,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":57,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":94,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":36,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":208,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":203,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":70,"org.apache.commons.lang3.ArrayUtilsTest.testToString":92,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":104,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":14,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":226,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":87,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":157,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":19,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":127,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":107,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":142,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":53,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":119,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":191,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":177,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":65,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":76,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":225,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":55,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":106,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":147,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":209,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":180,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":201,"org.apache.commons.lang3.time.FastDateParserTest.testParses":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":161,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":105,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":132,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":168,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":122,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":124,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":205,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":21,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":45,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlpha":221,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":121,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":41,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":170,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":212}}]
