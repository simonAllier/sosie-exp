[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.add(byte[], int, java.lang.Byte.java.lang.Byte.valueOf(byte), java.lang.Byte.java.lang.Class<java.lang.Byte>)))","position":"org.apache.commons.lang3.ArrayUtils:4390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4011","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.time.FastDatePrinter:858","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:3665","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","position":"org.apache.commons.lang3.ClassUtils:936","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence[][0].length()","position":"org.apache.commons.lang3.text.translate.LookupTranslator:52","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.math.NumberUtils:514","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:218","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1511","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '8';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:466","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.lang.String.length()) - 1","position":"org.apache.commons.lang3.StringUtils:5009","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:5085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Callable must not be null!\")","position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:123","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.NoSuchFieldException java.lang.NoSuchFieldException","position":"org.apache.commons.lang3.reflect.FieldUtils:697","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","position":"org.apache.commons.lang3.reflect.FieldUtils:180","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0,1,2],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (char < 32) || (char == 127)","position":"org.apache.commons.lang3.CharUtils:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char >= 'A') && (char <= 'Z')","position":"org.apache.commons.lang3.CharUtils:479","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (float[].int) ; int++) {\n    java.lang.Float[][int] = java.lang.Float.java.lang.Float.valueOf(float[][int]);\n}","position":"org.apache.commons.lang3.ArrayUtils:3416","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V> , java.lang.String , java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:198","type":"CtNewClassImpl"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,203,204,205,206,207,208,209,210,211,212],"variableMapping":{"className":"contentEnd"},"name":"add","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtIfImpl"},"status":-1},{"failures":[213],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.StrMatcher:369","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? java.lang.Boolean.java.lang.Boolean.hashCode() : java.lang.Boolean.java.lang.Boolean.hashCode()","position":"org.apache.commons.lang3.mutable.MutableBoolean:186","type":"CtReturnImpl"},"status":-1},{"failures":[214],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:763","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.4\")","position":"org.apache.commons.lang3.SystemUtils:895","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((float[][int]) < float) {\n    float = float[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:918","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:642","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 14","position":"org.apache.commons.lang3.Conversion:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.ConstructorUtils:290","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String);\n    java.lang.StringBuilder.append(\" not in (\");\n    for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n        java.lang.StringBuilder.append(java.lang.String).append(' ');\n    }\n    java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n    throw new java.lang.IllegalArgumentException(java.lang.StringBuilder.toString());\n} ","position":"org.apache.commons.lang3.time.FastDateParser:620","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDateFormat) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.time.FastDateFormat:563","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FormatCache:208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int >= 0) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int);\n    int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1744","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"dstPos":"length","nHex":"length"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1008","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Character[].int) ; int++) {\n    final java.lang.Character java.lang.Character = java.lang.Character[][int];\n    char[][int] = java.lang.Character == null ? char : java.lang.Character.charValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:2986","type":"CtForImpl"},"status":-2},{"failures":[215],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:968","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:734","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(java.lang.StringBuffer, java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDatePrinter:475","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object.getClass().getName().equals(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ArrayUtils:1421","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:744","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Long)","position":"org.apache.commons.lang3.ArrayUtils:5718","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:615","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > int) {\n    int = int;\n    T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n} ","position":"org.apache.commons.lang3.ObjectUtils:587","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:2005","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.ClassUtils:626","type":"mutation","return":"return false","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), (java.lang.Class<?>.isArray() ? java.lang.Class<?>.getComponentType() : java.lang.Class<?>), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:806","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:801","type":"CtIfImpl"},"status":-2},{"failures":[216,217,218,219,220,221,222,223,224,225,226,227],"binaryOperator":"(int) + int","name":"math","position":"org.apache.commons.lang3.time.FastDateParser:392","type":"mutation","status":-1},{"failures":[],"variableMapping":{"this":"this","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:380","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object[])","position":"org.apache.commons.lang3.builder.ToStringStyle:881","type":"CtInvocationImpl"},"status":0},{"failures":[228],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} else if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtIfImpl"},"status":-1},{"failures":[229,230,231],"variableMapping":{"size":"size","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"this.char[][(this.int)++] = 't'","position":"org.apache.commons.lang3.text.StrBuilder:772","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][(int)++] = 'r'","position":"org.apache.commons.lang3.text.StrBuilder:773","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:713","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtIfImpl"},"status":-2},{"failures":[232],"binaryOperator":"((((java.lang.String.length()) / ((double)(java.lang.String.length()))) + ((java.lang.String.length()) / ((double)(java.lang.String.length())))) + (((java.lang.String.length()) - int) / ((double)(java.lang.String.length())))) / 3.0","name":"math","position":"org.apache.commons.lang3.StringUtils:7070","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.java.util.List<L> = new java.util.concurrent.CopyOnWriteArrayList<L>(L[])","position":"org.apache.commons.lang3.event.EventListenerSupport:252","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1549","type":"CtReturnImpl"},"status":-2},{"failures":[233,234],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.StringUtils:4775","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((((boolean[][int]) || ((java.lang.String[][int]) == null)) || (java.lang.String[][int].isEmpty())) || ((java.lang.String[][int]) == null)) {\n        continue;\n    } \n    int = java.lang.String.indexOf(java.lang.String[][int]);\n    if (int == (-1)) {\n        boolean[][int] = true;\n    } else {\n        if ((int == (-1)) || (int < int)) {\n            int = int;\n            int = int;\n        } \n    }\n}","position":"org.apache.commons.lang3.StringUtils:4722","type":"CtForImpl"},"status":-1},{"failures":[235,236],"variableMapping":{"className":"pattern"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2))","position":"org.apache.commons.lang3.ClassUtils:965","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.time.DateUtils:374","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String)","position":"org.apache.commons.lang3.time.FastDatePrinter:278","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0))","position":"org.apache.commons.lang3.time.FastDatePrinter:276","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T != null) {\n    java.lang.Class<?> = T.getClass();\n} else {\n    throw new java.lang.IllegalArgumentException(\"Array and element cannot both be null\");\n}","position":"org.apache.commons.lang3.ArrayUtils:4290","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int < 0) {\n        int -= 1;\n    } \n    while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n        int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n        if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n            int += 1;\n        } \n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        int += java.util.Calendar.get(java.util.Calendar.int);\n    }\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:336","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.emptyList()","position":"org.apache.commons.lang3.LocaleUtils:294","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Class used to define a set of characters for matching purposes.\n */\nstatic final class StringMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * The string to match, as a character array.\n     */\nprivate final char[] chars;\n\n    /** \n     * Constructor that creates a matcher from a String.\n     * \n     * @param str  the string to match, must not be null\n     */\nStringMatcher(final java.lang.String str) {\n        org.apache.commons.lang3.text.StrMatcher.super();\n        char[] = java.lang.String.toCharArray();\n    }\n\n    /** \n     * Returns whether or not the given text matches the stored string.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, int pos, final int bufferStart, final int bufferEnd) {\n        final int int = char[].int;\n        if ((int + int) > int) {\n            return 0;\n        } \n        for (int int = 0 ; int < (char[].int) ; int++ , int++) {\n            if ((char[][int]) != (char[][int])) {\n                return 0;\n            } \n        }\n        return int;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:342","type":"CtClassImpl"},"status":-2},{"failures":[237,238,239,240,241,242,243,244,245],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:54","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n    throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:184","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:531","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"strLen"},"name":"add","transplant":{"sourceCode":"return int > 4 ? 4 : int","position":"org.apache.commons.lang3.StringUtils:7134","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.CharSequence.charAt(int);\n    final boolean boolean = org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, char, 0)) >= 0;\n    if (((int + 1) < int) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n        final char char = java.lang.CharSequence.charAt((int + 1));\n        if (boolean && (org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, char, 0)) < 0)) {\n            return int;\n        } \n    } else {\n        if (!boolean) {\n            return int;\n        } \n    }\n}","position":"org.apache.commons.lang3.StringUtils:1764","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","src":"src"},"name":"add","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:357","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","position":"org.apache.commons.lang3.Conversion:553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:394","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n    return java.lang.reflect.Method;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"org.apache.commons.lang3.reflect.MethodUtils:474","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(org.apache.commons.lang3.builder.ToStringStyle.getShortClassName(java.lang.Object.getClass()));\n} else {\n    java.lang.StringBuffer.append(java.lang.Object.getClass().getName());\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1454","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1741","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"execFinally":"exec"},"name":"add","transplant":{"sourceCode":"java.util.concurrent.ExecutorService.shutdown()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:330","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"private class InitializationTask implements java.util.concurrent.Callable<T> {\n    /** \n     * Stores the executor service to be destroyed at the end.\n     */\nprivate final java.util.concurrent.ExecutorService execFinally;\n\n    /** \n     * Creates a new instance of {@code InitializationTask} and initializes\n     * it with the {@code ExecutorService} to be destroyed at the end.\n     * \n     * @param exec the {@code ExecutorService}\n     */\npublic InitializationTask(final java.util.concurrent.ExecutorService exec) {\n        java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService;\n    }\n\n    /** \n     * Initiates initialization and returns the result.\n     * \n     * @return the result object\n     * @throws Exception if an error occurs\n     */\n@java.lang.Override\n    public T call() throws java.lang.Exception {\n        try {\n            return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.initialize();\n        } finally {\n            if ((java.util.concurrent.ExecutorService) != null) {\n                java.util.concurrent.ExecutorService.shutdown();\n            } \n        }\n    }\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:304","type":"CtClassImpl"},"status":-2},{"failures":[153],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \")","position":"org.apache.commons.lang3.time.StopWatch:262","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"List of differences cannot be null\")","position":"org.apache.commons.lang3.builder.DiffResult:84","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T = java.util.concurrent.atomic.AtomicReference<T>.get()","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output an unpadded number.<\/p>\n */\nprivate static class UnpaddedNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    /** \n     * Constructs an instance of {@code UnpadedNumberField} with the specified field.\n     * \n     * @param field the field\n     */\nUnpaddedNumberField(final int field) {\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 4;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 10) {\n            java.lang.StringBuffer.append(((char)(int + '0')));\n        } else if (int < 100) {\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:720","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.Set<java.util.Locale>","position":"org.apache.commons.lang3.LocaleUtils:236","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.lang3.math.Fraction.(getNumerator()) == (org.apache.commons.lang3.math.Fraction.getNumerator())) && (org.apache.commons.lang3.math.Fraction.(getDenominator()) == (org.apache.commons.lang3.math.Fraction.getDenominator()))","position":"org.apache.commons.lang3.math.Fraction:852","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    if (java.lang.Class<?>.isArray()) {\n        org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != java.lang.Class<?>)) {\n            java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n            org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        }\n    }\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:356","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:637","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char[][int++] = 'u'","position":"org.apache.commons.lang3.text.StrBuilder:1580","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1559","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String)","position":"org.apache.commons.lang3.LocaleUtils:310","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte","position":"org.apache.commons.lang3.mutable.MutableByte:259","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:257","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:3081","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'f' :","position":"org.apache.commons.lang3.Conversion:197","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:650","type":"CtReturnImpl"},"status":-2},{"failures":[246,247],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.charAt(int)) == int) {\n    return int;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:128","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:718","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"codepoint":"i","below":"i","above":"i"},"name":"replace","transplant":{"sourceCode":"if ((int < int) || (int > int)) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[][int], java.lang.reflect.Type[][int]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1642","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4290","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.strip(java.lang.String, null)","position":"org.apache.commons.lang3.StringUtils:498","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:447","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:569","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrSubstitutor:639","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1787","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","position":"org.apache.commons.lang3.reflect.ConstructorUtils:295","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>[][int]","position":"org.apache.commons.lang3.reflect.MemberUtils:117","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2654","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(java.lang.String)","position":"org.apache.commons.lang3.exception.ExceptionUtils:652","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:1044","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array"},"name":"add","transplant":{"sourceCode":"return T[].clone()","position":"org.apache.commons.lang3.ArrayUtils:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:323","type":"CtIfImpl"},"status":-2},{"failures":[248],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:6140","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = 15 << int","position":"org.apache.commons.lang3.Conversion:1017","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(double[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1683","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Writer must not be null\")","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:77","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on class: \") + (java.lang.Class<?>.getName())))","position":"org.apache.commons.lang3.reflect.MethodUtils:223","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:295","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.ClassUtils:637","type":"mutation","return":"return false","status":0},{"failures":[],"variableMapping":{"bit_pattern":"rhs"},"name":"replace","transplant":{"sourceCode":"int >>= 1","position":"org.apache.commons.lang3.BitField:45","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","position":"org.apache.commons.lang3.math.Fraction:697","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\")","position":"org.apache.commons.lang3.Conversion:1657","type":"CtThrowImpl"},"status":0},{"failures":[249],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:447","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:539","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"array2":"value","array1":"value"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.ArrayUtils:1418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:512","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, (java.lang.Class<?> == null ? \"null\" : java.lang.Class<?>.getName()), java.lang.Class<?>.getName()))","position":"org.apache.commons.lang3.Validate:1228","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"list":"list"},"name":"add","transplant":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.StringUtils:3250","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2541","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"final char char = java.lang.String.charAt(3)","position":"org.apache.commons.lang3.BooleanUtils:606","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.StringUtils:5141","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2284","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Date, java.lang.String, null, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (-int) * (1 << int)","position":"org.apache.commons.lang3.math.Fraction:624","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2601","type":"CtReturnImpl"},"status":-2},{"failures":[250,251,252],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = (char[].int) < (char[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:823","type":"CtAssignmentImpl"},"status":-1},{"failures":[253],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Calendar.getTime().getTime()) == (java.util.Calendar.getTime().getTime())","position":"org.apache.commons.lang3.time.DateUtils:222","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:710","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:783","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tokenPos":"sz"},"name":"add","transplant":{"sourceCode":"return int > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((org.apache.commons.lang3.time.DurationFormatUtils.Token[][int].getValue()) == java.lang.Object) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:568","type":"CtForImpl"},"status":-2},{"failures":[58],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float)","position":"org.apache.commons.lang3.builder.ToStringBuilder:710","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((int[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(int[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:5003","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.EqualsBuilder:337","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new java.util.Locale(\"\" , \"\")","position":"org.apache.commons.lang3.LocaleUtils:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.LocaleUtils:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.set(int, int)","position":"org.apache.commons.lang3.time.DateUtils:654","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Boolean = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:366","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"offset":"i","length":"i"},"name":"add","transplant":{"sourceCode":"int int = int + int","position":"org.apache.commons.lang3.text.StrSubstitutor:761","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (255 & (byte[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:843","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"dstInit"},"name":"add","transplant":{"sourceCode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()","position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.Conversion:1389","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5643","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1491","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int > 0 ? int + 1 : -1","position":"org.apache.commons.lang3.reflect.InheritanceUtils:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1040","type":"CtIfImpl"},"status":-2},{"failures":[3,14,17,22,25,30,33,42,44,50,51,60,65,72,89,92,94,99,101,112,115,143,146,186,189,194,197],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.ToStringStyle:900","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '9';\n} else {\n    return '1';\n}","position":"org.apache.commons.lang3.Conversion:436","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:622","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" NT\"))","position":"org.apache.commons.lang3.SystemUtils:1215","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","position":"org.apache.commons.lang3.reflect.TypeUtils:855","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"threshold":"length","m":"startIndex","n":"startIndex"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6908","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[].getClass().getComponentType().isInstance(java.lang.Object)) {\n    for (int int = int ; int < (java.lang.Object[].int) ; int++) {\n        if (java.lang.Object.equals(java.lang.Object[][int])) {\n            return int;\n        } \n    }\n} ","position":"org.apache.commons.lang3.ArrayUtils:1915","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrTokenizer:1061","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":20,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":102,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":104,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":101,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":249,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":126,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":164,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":16,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":36,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":155,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":199,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Cal":253,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":78,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":220,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":189,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":229,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":149,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":191,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":115,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":172,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":251,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":130,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":73,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":150,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":161,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":127,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":33,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":159,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":106,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArray":250,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":94,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":242,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":84,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":147,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":97,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":252,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":226,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_char":247,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":72,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":111,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":31,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":132,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":195,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":50,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":6,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":45,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":121,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":69,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":222,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":239,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":100,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetNullText":134,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":119,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":174,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":58,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":192,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":0,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":234,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":180,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":235,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":231,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":4,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":129,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentEnd":131,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":223,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_charInt":246,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":68,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":166,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":185,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":83,"org.apache.commons.lang3.builder.DiffResultTest.testNullList":153,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":63,"org.apache.commons.lang3.builder.DiffBuilderTest.testStylePassedToDiffResult":170,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":186,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":56,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":190,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":113,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":188,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":228,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":34,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":64,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":157,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":167,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":93,"org.apache.commons.lang3.builder.DiffResultTest.testNoDifferencesString":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":160,"org.apache.commons.lang3.mutable.MutableBooleanTest.testHashCode":213,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":46,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":225,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":29,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":118,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":162,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":52,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":181,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":54,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":202,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":173,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":66,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":120,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":123,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":216,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":55,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":151,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":89,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":243,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":176,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":40,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":197,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":158,"org.apache.commons.lang3.ArrayUtilsTest.testToString":3,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":18,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":232,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":133,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":238,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":23,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullLhs":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":41,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectEndText":142,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":171,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testSameObjectIgnoresAppends":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":92,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":240,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":138,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":103,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":145,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":224,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":140,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":201,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":44,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":124,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":91,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":80,"org.apache.commons.lang3.text.StrTokenizerTest.test8":212,"org.apache.commons.lang3.text.StrTokenizerTest.test5":209,"org.apache.commons.lang3.text.StrTokenizerTest.test4":208,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":81,"org.apache.commons.lang3.text.StrTokenizerTest.test7":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":82,"org.apache.commons.lang3.text.StrTokenizerTest.test6":210,"org.apache.commons.lang3.text.StrTokenizerTest.test1":205,"org.apache.commons.lang3.text.StrTokenizerTest.test3":207,"org.apache.commons.lang3.text.StrTokenizerTest.test2":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":57,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":139,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":204,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":245,"org.apache.commons.lang3.AnnotationUtilsTest.testIsValidAnnotationMemberType":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":21,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":178,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":241,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":43,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":85,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":165,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":198,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":122,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":193,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":137,"org.apache.commons.lang3.builder.DiffBuilderTest.testNullRhs":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":99,"org.apache.commons.lang3.time.FastDateParserTest.testParses":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":70,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":60,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":221,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":141,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":136,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":27,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArray":215,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":108,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":62,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":217,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":244,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":59,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeEndText":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":109,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaUpper_char":1,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":112}}]
