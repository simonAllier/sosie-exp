[{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:905","sourceCode":"org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.5\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:971","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Irix\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:586","sourceCode":"return 1","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:748","sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:459","sourceCode":"if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n    T = T;\n} ","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:933","sourceCode":"this.java.lang.String = \"0\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1899","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toProperString":"fieldSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3229","sourceCode":"if (int == int) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1117","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"i","currentType":"i"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:211","sourceCode":"char[][int] = '\u0000'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:378","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","type":"CtAssignmentImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:106","failures":[14,15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:310","sourceCode":"int += 24","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:732","sourceCode":"int = 1","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"hours":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1060","sourceCode":"if (char[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:292","sourceCode":"return new java.lang.String(char[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"chars":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:361","sourceCode":"if (java.lang.Integer == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.CharEncoding:101","failures":[17],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:179","sourceCode":"java.util.concurrent.ExecutorService java.util.concurrent.ExecutorService","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:561","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    java.util.List<java.lang.String>.remove(int);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1044","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1115","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:146","sourceCode":"if ((int == int) || (int == int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:173","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"denominator","numerator":"denominator","denominator":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.CharSet:189","sourceCode":"int += 3","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pos":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:354","sourceCode":"if ((java.lang.String == null) || (java.lang.String[] == null)) {\n    throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\");\n} ","type":"CtIfImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"str"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1055","inlineConstant":"int int = 0","failures":[26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:265","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = char;\n    int--;\n    char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:264","sourceCode":"if ((char >= 56320) && (char <= 57343)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = char;\n        int--;\n        char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n    }\n} else if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","count":"count","random":"random","ch":"ch"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateIterator:1859","sourceCode":"return java.util.Calendar.before(java.util.Calendar)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:162","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar, java.util.Calendar)","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"endFinal":"cal1","spot":"cal2"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:618","sourceCode":"final char char = java.lang.String.charAt(4)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:485","sourceCode":"final char char = java.lang.String.charAt(((java.lang.String.length()) - 1))","type":"CtLocalVariableImpl"},"failures":[38,39,40,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharUtils:357","failures":[],"status":0,"binaryOperator":"char < 4096","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:559","sourceCode":"return org.apache.commons.lang3.math.Fraction.pow((int / 2))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:561","sourceCode":"return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this)","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1190","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:97","sourceCode":"if (int < 2) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"len","nInts":"len"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:388","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char)","type":"CtAssignmentImpl"},"failures":[12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1264","failures":[47,48],"status":-1,"binaryOperator":"(int * 16) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"(this.short)--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:97","sourceCode":"this.short = short","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:338","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterChar(char)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:302","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String, char)","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this","delim":"delim"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:217","sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.CharSet:189","sourceCode":"int += 3","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1091","sourceCode":"int = (int & (~int)) | int","type":"CtAssignmentImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pos":"out"}},{"position":"org.apache.commons.lang3.Conversion:841","inlineConstant":"int int = 0","failures":[60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:285","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:936","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":29,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":32,"org.apache.commons.lang3.math.FractionTest.testFactory_double":4,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":15,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":37,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":0,"org.apache.commons.lang3.math.FractionTest.testSubtract":3,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":36,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":43,"org.apache.commons.lang3.math.FractionTest.testAdd":1,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":41,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":55,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":45,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":47,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":49,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":28,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":58,"org.apache.commons.lang3.math.FractionTest.testGets":19,"org.apache.commons.lang3.math.FractionTest.testToString":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":30,"org.apache.commons.lang3.math.FractionTest.testMultiply":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":9,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":40,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":48,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":33,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":16,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":39,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":21,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":31,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":57,"org.apache.commons.lang3.ObjectUtilsTest.testMax":8,"org.apache.commons.lang3.math.FractionTest.testPow":2,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":53,"org.apache.commons.lang3.math.FractionTest.testDivide":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":10,"org.apache.commons.lang3.math.FractionTest.testCompareTo":22,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":50,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":13,"org.apache.commons.lang3.math.FractionTest.testConversions":18,"org.apache.commons.lang3.math.FractionTest.testToProperString":23,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":56,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":25,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":38,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":42,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":44,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":59,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":17}}]
