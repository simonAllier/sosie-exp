[{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:780","sourceCode":"char[][int++] = 'l'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:271","sourceCode":"char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))))","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","size":"count"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:203","sourceCode":"return (java.util.Date.getTime()) == (java.util.Date.getTime())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1755","sourceCode":"return org.apache.commons.lang3.time.DateUtils.(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date, java.util.Date, int)) == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6031","sourceCode":"final int int = (int - int) - 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:983","sourceCode":"final int int = 15 << int","type":"CtLocalVariableImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"shift","end":"shift"}},{"position":"org.apache.commons.lang3.Conversion:948","failures":[2],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:498","sourceCode":"return (char >= 'a') && (char <= 'z')","type":"CtReturnImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:911","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:939","sourceCode":"if ((java.lang.Boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:492","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[], 0)","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:40","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"returnValue","return":"return 1","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:122","sourceCode":"org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:958","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"ignoredMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:113","sourceCode":"return 10","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:205","sourceCode":"return java.lang.Object == null ? 0 : java.lang.Object.hashCode()","type":"CtReturnImpl"},"failures":[17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:102","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.tabMatcher())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:96","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:855","sourceCode":"java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:1133","failures":[76],"status":-1,"binaryOperator":"short < short","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:577","sourceCode":"return '0'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:463","sourceCode":"return '4'","type":"CtReturnImpl"},"failures":[77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:789","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1056","sourceCode":"if (int >= 15) {\n    int -= 15;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:530","sourceCode":"if (int == (int - 1)) {\n    java.util.List<java.lang.String>.add(java.lang.Throwable[][int].toString());\n} else {\n    java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"offset":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1154","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1262","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:489","sourceCode":"if ((org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int]) == null) {\n    org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:490","sourceCode":"org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:463","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:1395","failures":[80],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:516","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"items":"items","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:138","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:879","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"shift","operand":"dstPos"}},{"transplant":{"position":"org.apache.commons.lang3.event.EventListenerSupport:252","sourceCode":"this.java.util.List<L> = new java.util.concurrent.CopyOnWriteArrayList<L>(L[])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:210","sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:7470","sourceCode":"java.nio.charset.Charset.java.nio.charset.Charset.defaultCharset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:173","sourceCode":"return (java.util.Map<java.lang.Object, java.lang.Object> != null) && (java.util.Map<java.lang.Object, java.lang.Object>.containsKey(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1353","sourceCode":"if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1400","sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:490","failures":[81,82,83],"status":-1,"binaryOperator":"(int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:803","sourceCode":"long long = long","type":"CtLocalVariableImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","failures":[],"status":0,"binaryOperator":"int > 255","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:592","sourceCode":"int = -int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:597","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:485","sourceCode":"final char char = java.lang.String.charAt(((java.lang.String.length()) - 1))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:121","sourceCode":"final char char = java.lang.String.charAt(1)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1123","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":12,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":75,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":31,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":79,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":16,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNotSupportedException":41,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":20,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumShort":76,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":56,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":71,"org.apache.commons.lang3.text.StrTokenizerTest.test1":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":73,"org.apache.commons.lang3.text.StrTokenizerTest.test3":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":23,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":24,"org.apache.commons.lang3.text.StrTokenizerTest.test2":47,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":10,"org.apache.commons.lang3.text.StrTokenizerTest.test8":53,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":30,"org.apache.commons.lang3.text.StrTokenizerTest.testChaining":74,"org.apache.commons.lang3.text.StrTokenizerTest.test5":50,"org.apache.commons.lang3.text.StrTokenizerTest.test4":49,"org.apache.commons.lang3.text.StrTokenizerTest.test7":52,"org.apache.commons.lang3.text.StrTokenizerTest.test6":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":63,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":60,"org.apache.commons.lang3.ConversionTest.testHexToShort":1,"org.apache.commons.lang3.ObjectUtilsTest.testHashCode":18,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":28,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":9,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":42,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":11,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":26,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":6,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":32,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":54,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":15,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":65,"org.apache.commons.lang3.math.FractionTest.testInvert":83,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":8,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":80,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":44,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":4,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":25,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":77,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaLower_char":5,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":58,"org.apache.commons.lang3.ConversionTest.testHexToInt":2,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":66,"org.apache.commons.lang3.math.FractionTest.testPow":81,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":37,"org.apache.commons.lang3.math.FractionTest.testDivide":82,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":34,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":70,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":43,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":84,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":64,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":57,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":22,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":29,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":78}}]
