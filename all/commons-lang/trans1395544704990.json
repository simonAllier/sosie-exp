[{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:945","sourceCode":"this.java.lang.String = java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole())","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this","toProperString":"toProperString"}},{"position":"org.apache.commons.lang3.text.WordUtils:99","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:333","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5631","sourceCode":"return java.lang.String.toLowerCase()","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1436","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:489","sourceCode":"final int int = java.lang.String.indexOf('.')","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:351","sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)))","type":"CtLocalVariableImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:572","sourceCode":"for (final java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue();\n    if (int == int) {\n        T = null;\n    } else if (int > int) {\n        int = int;\n        T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    } \n}","type":"CtForEachImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:574","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:304","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:54","sourceCode":"java.lang.Byte.java.lang.Byte.valueOf(((byte)(1)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:303","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:774","sourceCode":"java.lang.StringBuffer.append(char)","type":"CtInvocationImpl"},"failures":[16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:845","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:799","sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:116","sourceCode":"java.io.Writer.write(org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int))","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"codepoint","nBytes":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1609","sourceCode":"int int = int < 0 ? 0 : int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1440","sourceCode":"final int int = 15 & (int >> int)","type":"CtLocalVariableImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndexInclusive":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1433","sourceCode":"return (!boolean) && boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:581","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"foundDigit":"appendStatics","allowSigns":"appendStatics"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:290","sourceCode":"throw new java.lang.NullPointerException(\"Element is null\")","type":"CtThrowImpl"},"failures":[34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1042","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2871","sourceCode":"throw new java.lang.IndexOutOfBoundsException()","type":"CtThrowImpl"},"failures":[35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:373","sourceCode":"return short[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1233","sourceCode":"return short[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"position":"org.apache.commons.lang3.Conversion:1194","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:135","sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(java.lang.Object)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.IDKey:67","sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lhs":"other"}},{"position":"org.apache.commons.lang3.BooleanUtils:981","failures":[38,39,40,41],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:516","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:506","sourceCode":"int = java.lang.String.length()","type":"CtAssignmentImpl"},"failures":[42,43,44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dec":"dec"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:500","sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.getPattern()","type":"CtReturnImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:143","sourceCode":"float += 0.25F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:154","sourceCode":"float += 1.5F","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:260","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1480","sourceCode":"final int int = 15 & (short >> int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":35,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":19,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":48,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":29,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":32,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":54,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":21,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":55,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":27,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":52,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":0,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":6,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":46,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":14,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":17,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":43,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":8,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":36,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":37,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":18,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":4,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":3,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":1,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":25,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":45,"org.apache.commons.lang3.ConversionTest.testIntToHex":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":23,"org.apache.commons.lang3.RangeTest.testElementCompareTo":34,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":44,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":22,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":47,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":49,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":26,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":40,"org.apache.commons.lang3.ObjectUtilsTest.testMode":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":9,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":2,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":53,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":15,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":42,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":50,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":20}}]
