[{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:814","sourceCode":"int int = int[][0]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:482","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StringMatcher:368","sourceCode":"if ((int + int) > int) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","sourceCode":"if (int != 0) {\n    return int;\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bufferEnd":"consumed","len":"consumed","pos":"consumed"}},{"position":"org.apache.commons.lang3.Conversion:139","failures":[25],"status":-1,"name":"returnValue","return":"return 15","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","sourceCode":"return false","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:279","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"failures":[27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"count","shift":"count","i":"count"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:134","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"${\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:214","sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(java.util.concurrent.ExecutionException)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:72","sourceCode":"char char = ' '","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:70","sourceCode":"final char char = char","type":"CtLocalVariableImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:216","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.WordUtils:107","failures":[40,41],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1031","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OpenBSD\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1140","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" Server 2008\"), \"6.1\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:210","failures":[42,43,44,45,46,47,48,49,50,51,52,53,3,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"java.util.Map<java.lang.Object, java.lang.Object> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1224","sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1069","sourceCode":"if (int >= 12) {\n    int -= 12;\n} ","type":"CtIfImpl"},"failures":[69,70,71,72,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"offset","srcPos":"offset"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:910","sourceCode":"return false","type":"CtReturnImpl"},"failures":[74,75,76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:518","sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:331","sourceCode":"return java.util.List<java.lang.String>.toArray(org.apache.commons.lang3.ArrayUtils.java.lang.String[])","type":"CtReturnImpl"},"failures":[78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1687","sourceCode":"if (int > 16) {\n    throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:116","sourceCode":"java.io.Writer.write(org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int))","type":"CtInvocationImpl"},"failures":[8,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"nBytes":"codepoint"}},{"position":"org.apache.commons.lang3.Range:433","failures":[],"status":0,"binaryOperator":"(37 * int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1483","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1525","sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:461","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:619","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1170","failures":[82],"status":-1,"binaryOperator":"int == (org.apache.commons.lang3.time.DateUtils.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:533","sourceCode":"return 'c'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:469","sourceCode":"return '0'","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1053","failures":[84],"status":-1,"binaryOperator":"(boolean[][(int + int)] ? 1L : 0) << int","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:434","sourceCode":"java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:128","sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","type":"CtEnumImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:82","sourceCode":"private static class EventBindingInvocationHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.Object target;\n\n    private final java.lang.String methodName;\n\n    private final java.util.Set<java.lang.String> eventTypes;\n\n    /** \n     * Creates a new instance of {@code EventBindingInvocationHandler}.\n     * \n     * @param target the target object for method invocations\n     * @param methodName the name of the method to be invoked\n     * @param eventTypes the names of the supported event types\n     */\nEventBindingInvocationHandler(final java.lang.Object target ,final java.lang.String methodName ,final java.lang.String[] eventTypes) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.lang.String = java.lang.String;\n        this.java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n    }\n\n    /** \n     * Handles a method invocation on the proxy object.\n     * \n     * @param proxy the proxy instance\n     * @param method the method to be invoked\n     * @param parameters the parameters for the method invocation\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n            if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n            } else {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n            }\n        } \n        return null;\n    }\n\n    /** \n     * Checks whether a method for the passed in parameters can be found.\n     * \n     * @param method the listener method invoked\n     * @return a flag whether the parameters could be matched\n     */\nprivate boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n        return org.apache.commons.lang3.reflect.MethodUtils.(org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.reflect.Method.getParameterTypes())) != null;\n    }\n}","type":"CtClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:48","sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double)","type":"CtAssignmentImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:433","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"short--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1128","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:54","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","sourceCode":"if ((java.lang.Class<?> == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","type":"CtIfImpl"},"failures":[100,101,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:455","sourceCode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")","type":"CtThrowImpl"},"failures":[105],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:124","sourceCode":"if (T != null) {\n    return T;\n} ","type":"CtIfImpl"},"failures":[106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:983","failures":[107],"status":-1,"binaryOperator":"15 << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:196","sourceCode":"if ((java.util.Locale.getCountry().length()) > 0) {\n    java.util.List<java.util.Locale>.add(new java.util.Locale(java.util.Locale.getLanguage() , \"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:199","sourceCode":"if ((java.util.List<java.util.Locale>.contains(java.util.Locale)) == false) {\n    java.util.List<java.util.Locale>.add(java.util.Locale);\n} ","type":"CtIfImpl"},"failures":[108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"locale":"defaultLocale","list":"list"}},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testByteToHex":81,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceDisjoint":104,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":51,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":73,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":6,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":9,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":86,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":8,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":77,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":24,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":58,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":78,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":4,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":33,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":0,"org.apache.commons.lang3.time.DateUtilsTest.testRound":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":46,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":72,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":79,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":20,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":90,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":97,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":71,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":53,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":96,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":39,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":93,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":50,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":38,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":1,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":3,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":76,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":94,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":32,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":43,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":27,"org.apache.commons.lang3.ConversionTest.testBinaryToLong":84,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":95,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":35,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":91,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":5,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":26,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":56,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParentNullChild":102,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullChild":100,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":17,"org.apache.commons.lang3.CharSetTest.testContains_Char":34,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":31,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":16,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":28,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":89,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceReverseParentChild":101,"org.apache.commons.lang3.CharRangeTest.testContains_Char":37,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":42,"org.apache.commons.lang3.text.StrTokenizerTest.test1":61,"org.apache.commons.lang3.text.StrTokenizerTest.test3":63,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":99,"org.apache.commons.lang3.text.StrTokenizerTest.test2":62,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":45,"org.apache.commons.lang3.text.StrTokenizerTest.test8":68,"org.apache.commons.lang3.text.StrTokenizerTest.test5":65,"org.apache.commons.lang3.text.StrTokenizerTest.test4":64,"org.apache.commons.lang3.text.StrTokenizerTest.test7":67,"org.apache.commons.lang3.text.StrTokenizerTest.test6":66,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":18,"org.apache.commons.lang3.ConversionTest.testHexToShort":107,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":88,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":29,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":44,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":69,"org.apache.commons.lang3.ArrayUtilsTest.testToString":60,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":92,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":2,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":55,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":85,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":105,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":54,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":36,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":83,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":57,"org.apache.commons.lang3.ObjectUtilsTest.testMin":98,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":11,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":106,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceNullParent":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":47,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":21,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":22,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":59,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":75,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":82,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":74}}]
