[{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1403","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:756","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:573","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:260","sourceCode":"for (java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.reflect.Constructor<?>[]) {\n    if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Constructor<?>.getParameterTypes(), true)) {\n        java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>);\n        if (java.lang.reflect.Constructor<?> != null) {\n            org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n            if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n                java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n            } \n        } \n    } \n}","type":"CtForEachImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","sourceCode":"this.byte += byte","type":"CtOperatorAssignmentImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3522","sourceCode":"return (short[] == null) || ((short[].int) == 0)","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharSetUtils:225","inlineConstant":"int int = 0","failures":[7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:974","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:539","sourceCode":"return 'b'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:568","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '3';\n} else {\n    return '2';\n}","type":"CtIfImpl"},"failures":[12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:624","failures":[14,15,16,17,18,19],"status":-1,"binaryOperator":"(1 << int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:97","sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:193","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.time.FastDateParser)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"obj"}},{"position":"org.apache.commons.lang3.CharRange:188","failures":[21],"status":-1,"binaryOperator":"((char) <= (org.apache.commons.lang3.CharRange.char))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1423","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:111","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, true)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:311","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2871","sourceCode":"throw new java.lang.IndexOutOfBoundsException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:67","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:896","failures":[],"status":0,"binaryOperator":"long < long","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:314","sourceCode":"return 'd'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:446","sourceCode":"if (boolean[][int]) {\n    return 'e';\n} else {\n    return '6';\n}","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:211","sourceCode":"char[][int] = '\u0000'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:468","sourceCode":"char[][int++] = char","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buf","i":"count"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:373","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:263","sourceCode":"java.util.concurrent.ScheduledFuture<?>.cancel(false)","type":"CtInvocationImpl"},"failures":[27,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1340","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:461","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:514","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, short[], null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:789","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, int[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:226","sourceCode":"int = -int","type":"CtAssignmentImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:729","inlineConstant":"boolean boolean = false","failures":[29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:176","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:210","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"denominator":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:806","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1015","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:171","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:146","sourceCode":"float++","type":"CtUnaryOperatorImpl"},"failures":[1,3,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.math.FractionTest.testMultiply":18,"org.apache.commons.lang3.ConversionTest.testHexToByte":33,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":27,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_emptyInput":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":24,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":23,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":9,"org.apache.commons.lang3.math.FractionTest.testFactory_double":17,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":26,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":14,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":1,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":20,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":32,"org.apache.commons.lang3.mutable.MutableByteTest.testAddValuePrimitive":4,"org.apache.commons.lang3.math.FractionTest.testAdd":15,"org.apache.commons.lang3.math.FractionTest.testPow":16,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":31,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":12,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":36,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":8,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":22,"org.apache.commons.lang3.math.FractionTest.testReduce":19,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":5,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":30,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":28,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":35,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":25,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":2,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":3,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":13,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":10,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":34,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":29,"org.apache.commons.lang3.ConversionTest.testLongToHex":0,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":6}}]
