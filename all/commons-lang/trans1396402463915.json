[{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + int) + \"]\"))","position":"org.apache.commons.lang3.ObjectUtils:854","type":"CtThrowImpl"},"status":-1},{"failures":[1,2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:1504","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"HashCodeBuilder requires an odd initial value\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:540","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"java.lang.Integer.MIN_VALUE","srcPos":"java.lang.Integer.MAX_VALUE"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long < (java.lang.Integer.int)) || (long > (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\");\n} ","position":"org.apache.commons.lang3.math.Fraction:188","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:436","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, (int - 1));\n} else {\n    int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, (int + 1));\n}","position":"org.apache.commons.lang3.StringUtils:1035","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"bool":"bool","this":"this"},"name":"add","transplant":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isFalse(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isTrue(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:105","type":"CtReturnImpl"},"status":-2},{"failures":[3,4,5],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:1560","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (int)) {\n    int = int;\n} else if (int > (int)) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n    final int int = int;\n    final int int = int;\n    int = int;\n    for (int int = int ; int < int ; int++) {\n        char[][int] = '\u0000';\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:203","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException()","position":"org.apache.commons.lang3.time.FastDatePrinter:824","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\")","position":"org.apache.commons.lang3.exception.ExceptionUtils:493","type":"CtThrowImpl"},"status":-2},{"failures":[6,7,8],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Class<?>.getSimpleName()","position":"org.apache.commons.lang3.ClassUtils:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.Class<?>)","position":"org.apache.commons.lang3.builder.ToStringStyle:1590","type":"CtReturnImpl"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:316","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2876","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.JavaVersion(1.5F , \"0.9\")","position":"org.apache.commons.lang3.JavaVersion:29","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"length"},"name":"add","transplant":{"sourceCode":"this.int += 5","position":"org.apache.commons.lang3.text.StrBuilder:1591","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (float[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2815","type":"CtAssignmentImpl"},"status":-2},{"failures":[27,28],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:522","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","position":"org.apache.commons.lang3.Conversion:306","type":"CtIfImpl"},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField(int)","position":"org.apache.commons.lang3.time.FastDatePrinter:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField(int)","position":"org.apache.commons.lang3.time.FastDatePrinter:362","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new boolean[]{ true , true , true , false }","position":"org.apache.commons.lang3.Conversion:256","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:41","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"length":"i","i":"i","chars":"chars"},"name":"replace","transplant":{"sourceCode":"for ( ; int < int ; int++) {\n    if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1359","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1420","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:781","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int + 2","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:44","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.Class<T>.getConstructor(java.lang.Class<?>[]))","position":"org.apache.commons.lang3.reflect.ConstructorUtils:200","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>);\n    return java.lang.reflect.Constructor<T>;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"org.apache.commons.lang3.reflect.ConstructorUtils:246","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Field.getModifiers())) {\n        java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.getDeclaredField(\"modifiers\");\n        final boolean boolean = boolean && (!(java.lang.reflect.Field.isAccessible()));\n        if (boolean) {\n            java.lang.reflect.Field.setAccessible(true);\n        } \n        try {\n            java.lang.reflect.Field.setInt(java.lang.reflect.Field, ((java.lang.reflect.Field.getModifiers()) & (~(java.lang.reflect.Modifier.int))));\n        } finally {\n            if (boolean) {\n                java.lang.reflect.Field.setAccessible(false);\n            } \n        }\n    } \n} catch (java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:681","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTimeZone(java.util.TimeZone)","position":"org.apache.commons.lang3.time.FastDateParser:795","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>An enum representing all the versions of the Java specification.\n * This is intended to mirror available values from the\n * <em>java.specification.version<\/em> System property. <\/p>\n * \n * @since 3.0\n * @version $Id$\n */\npublic enum JavaVersion {\nJAVA_0_9(1.5F,\"0.9\"), JAVA_1_1(1.1F,\"1.1\"), JAVA_1_2(1.2F,\"1.2\"), JAVA_1_3(1.3F,\"1.3\"), JAVA_1_4(1.4F,\"1.4\"), JAVA_1_5(1.5F,\"1.5\"), JAVA_1_6(1.6F,\"1.6\"), JAVA_1_7(1.7F,\"1.7\"), JAVA_1_8(1.8F,\"1.8\");\n    /** \n     * The float value.\n     */\nprivate final float value;\n    /** \n     * The standard name.\n     */\nprivate final java.lang.String name;\n    /** \n     * Constructor.\n     * \n     * @param value  the float value\n     * @param name  the standard name, not null\n     */\nJavaVersion(final float value ,final java.lang.String name) {\n        this.float = float;\n        this.java.lang.String = java.lang.String;\n    }\n    /** \n     * <p>Whether this version of Java is at least the version of Java passed in.<\/p>\n     * \n     * <p>For example:<br />\n     * {@code myVersion.atLeast(JavaVersion.JAVA_1_4)}<p>\n     * \n     * @param requiredVersion  the version to check against, not null\n     * @return true if this version is equal to or greater than the specified version\n     */\npublic boolean atLeast(final org.apache.commons.lang3.JavaVersion requiredVersion) {\n        return (this.float) >= (org.apache.commons.lang3.JavaVersion.float);\n    }\n\n    /** \n     * Transforms the given string with a Java version number to the\n     * corresponding constant of this enumeration class. This method is used\n     * internally.\n     * \n     * @param nom the Java version as string\n     * @return the corresponding enumeration constant or <b>null<\/b> if the\n     * version is unknown\n     */\nstatic org.apache.commons.lang3.JavaVersion getJavaVersion(final java.lang.String nom) {\n        return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.get(java.lang.String);\n    }\n\n    /** \n     * Transforms the given string with a Java version number to the\n     * corresponding constant of this enumeration class. This method is used\n     * internally.\n     * \n     * @param nom the Java version as string\n     * @return the corresponding enumeration constant or <b>null<\/b> if the\n     * version is unknown\n     */\nstatic org.apache.commons.lang3.JavaVersion get(final java.lang.String nom) {\n        if (\"0.9\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.1\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.2\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.3\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.4\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.5\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.6\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.7\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.8\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else {\n            return null;\n        }\n    }\n\n    /** \n     * <p>The string value is overridden to return the standard name.<\/p>\n     * \n     * <p>For example, <code>\"1.5\"<\/code>.<\/p>\n     * \n     * @return the name, not null\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return java.lang.String;\n    }\n}","position":"org.apache.commons.lang3.JavaVersion:27","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5516","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCause(java.lang.Throwable, org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[])","position":"org.apache.commons.lang3.exception.ExceptionUtils:124","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        int++;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:7115","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int >= (int)) && (int <= (int))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2102","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","org.apache.commons.lang3.StringUtils.EMPTY":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:6453","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"array":"array"},"name":"add","transplant":{"sourceCode":"return java.lang.Byte[]","position":"org.apache.commons.lang3.ArrayUtils:776","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Byte[] == null) || ((java.lang.Byte[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:773","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case java.util.Calendar.int :\n    long += java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1698","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>, java.util.HashSet<java.lang.Class<?>>)","position":"org.apache.commons.lang3.ClassUtils:375","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.time.StopWatch:341","type":"mutation","return":"return 0","status":0},{"failures":[45,46,31,47,48,49,50,51,52,53,54,40,55],"variableMapping":{"className":"pattern"},"name":"replace","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(1, (java.lang.String.endsWith(\";\") ? (java.lang.String.length()) - 1 : java.lang.String.length()))","position":"org.apache.commons.lang3.ClassUtils:1121","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern()","position":"org.apache.commons.lang3.time.FormatCache:206","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrBuilder:2103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"float float","position":"org.apache.commons.lang3.ArrayUtils:1719","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:783","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.substring(((java.lang.String.length()) - int))","position":"org.apache.commons.lang3.StringUtils:2216","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.Conversion:1428","type":"CtIfImpl"},"status":-2},{"failures":[56],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:1225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, 0)","position":"org.apache.commons.lang3.StringUtils:930","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(char[], char)","position":"org.apache.commons.lang3.ArrayUtils:4837","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"tz"},"name":"add","transplant":{"sourceCode":"java.util.TimeZone.getTimeZone(\"GMT\")","position":"org.apache.commons.lang3.time.DateFormatUtils:42","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String)","position":"org.apache.commons.lang3.time.FastDateParser:787","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"toType":"type","this":"this","type":"toType","typeVarAssigns":"typeVarAssigns"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:343","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:331","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Double.java.lang.Double.valueOf(0.0)","position":"org.apache.commons.lang3.math.NumberUtils:58","type":"CtInvocationImpl"},"status":-2},{"failures":[57],"variableMapping":{"type":"toType"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:514","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:334","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.CompareToBuilder, boolean, java.lang.String[])","position":"org.apache.commons.lang3.builder.CompareToBuilder:289","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"trueValue":"length","value":"length"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((int[] == null) && (int[] != null)) && ((int[].int) > 0)) || (((int[] == null) && (int[] != null)) && ((int[].int) > 0))) || (((int[] != null) && (int[] != null)) && ((int[].int) != (int[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1264","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = int > 7","position":"org.apache.commons.lang3.time.DateUtils:1061","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:1499","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final boolean boolean : boolean[]) {\n    if (boolean) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.BooleanUtils:980","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean[][int] = boolean[][int]","position":"org.apache.commons.lang3.ArrayUtils:1582","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean[][(int + int)] = (1 & (short >> int)) != 0","position":"org.apache.commons.lang3.Conversion:1629","type":"CtAssignmentImpl"},"status":-2},{"failures":[58],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:2542","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, int, false)","position":"org.apache.commons.lang3.StringUtils:2724","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.CharSet:197","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.NumberUtils:1320","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) || ((java.lang.reflect.Type instanceof java.lang.Class<?>) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1336","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1434","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers())) {\n    try {\n        return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        return null;\n    }\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:392","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} ","position":"org.apache.commons.lang3.LocaleUtils:297","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.time.FastDatePrinter:302","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"excludeFieldNames"},"name":"replace","transplant":{"sourceCode":"return java.lang.String[]","position":"org.apache.commons.lang3.ArrayUtils:516","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.java.lang.String[].clone()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:543","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:147","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:204","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Object.wait()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:305","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A specialized {@code Future} implementation which wraps a constant value.\n * @param <T> the type of the value wrapped by this class\n */\nstatic final class ConstantFuture<T> implements java.util.concurrent.Future<T> {\n    /** \n     * The constant value.\n     */\nprivate final T value;\n\n    /** \n     * Creates a new instance of {@code ConstantFuture} and initializes it\n     * with the constant value.\n     * \n     * @param value the value (may be <b>null<\/b>)\n     */\nConstantFuture(final T value) {\n        this.T = T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>true<\/b> because\n     * the constant object managed by this {@code Future} implementation is\n     * always available.\n     */\n@java.lang.Override\n    public boolean isDone() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value.\n     */\n@java.lang.Override\n    public T get() {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value; it\n     * does not block, therefore the timeout has no meaning.\n     */\n@java.lang.Override\n    public T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>false<\/b>; there\n     * is no background process which could be cancelled.\n     */\n@java.lang.Override\n    public boolean isCancelled() {\n        return false;\n    }\n\n    /** \n     * {@inheritDoc} The cancel operation is not supported. This\n     * implementation always returns <b>false<\/b>.\n     */\n@java.lang.Override\n    public boolean cancel(final boolean mayInterruptIfRunning) {\n        return false;\n    }\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:331","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.StringUtils:2822","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = char","position":"org.apache.commons.lang3.CharRange:70","type":"CtLocalVariableImpl"},"status":0},{"failures":[59,60,61,62,63],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.unregister(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(long[][int], long[][int])","position":"org.apache.commons.lang3.builder.CompareToBuilder:707","type":"CtInvocationImpl"},"status":-1},{"failures":[31,35,40,44],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.appendTo(java.lang.StringBuffer, ((java.util.Calendar.get(java.util.Calendar.int)) % 100))","position":"org.apache.commons.lang3.time.FastDatePrinter:944","type":"CtInvocationImpl"},"status":-1},{"failures":[64,65],"variableMapping":{"dstPos":"type","nHex":"currentType"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:940","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3234","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field, true)","position":"org.apache.commons.lang3.reflect.FieldUtils:662","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float.java.lang.Float.valueOf(this.float)","position":"org.apache.commons.lang3.mutable.MutableFloat:88","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:688","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:1050","type":"CtReturnImpl"},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74],"name":"returnValue","position":"org.apache.commons.lang3.math.Fraction:586","type":"mutation","return":"return 1","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method))","position":"org.apache.commons.lang3.AnnotationUtils:174","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.valueOf(byte)","position":"org.apache.commons.lang3.mutable.MutableByte:283","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","close":"str","open":"str"},"name":"add","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:626","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:641","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:944","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"char = 'Q'","position":"org.apache.commons.lang3.time.FastDateParser:362","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == (java.lang.Character.char)) {\n    throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n} ","position":"org.apache.commons.lang3.Conversion:604","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType, java.lang.Class<?>, null)","position":"org.apache.commons.lang3.reflect.TypeUtils:970","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double[]>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Double[] getLeft() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(double[]);\n    }\n\n    @java.lang.Override\n    public java.lang.Double[] getRight() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(double[]);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:431","type":"CtInvocationImpl"},"status":-2},{"failures":[75,76,77,78],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","position":"org.apache.commons.lang3.math.NumberUtils:573","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.text.ParseException((\"Unable to parse the date: \" + java.lang.String) , -1)","position":"org.apache.commons.lang3.time.DateUtils:391","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:858","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double), java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.EqualsBuilder:591","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"chars":"buffer"},"name":"add","transplant":{"sourceCode":"this.char[] = null","position":"org.apache.commons.lang3.text.StrTokenizer:256","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[] = new char[int * 2]","position":"org.apache.commons.lang3.text.StrBuilder:236","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.StringUtils:6946","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrSubstitutor:675","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object[][0], java.lang.Object[][1])","position":"org.apache.commons.lang3.ArrayUtils:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short[]>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Short[] getLeft() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(short[]);\n    }\n\n    @java.lang.Override\n    public java.lang.Short[] getRight() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(short[]);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:767","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"className must not be null.\");\n} else if (java.lang.String.endsWith(\"[]\")) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    while (java.lang.String.endsWith(\"[]\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2));\n        java.lang.StringBuilder.append(\"[\");\n    }\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } else {\n        java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\");\n    }\n    java.lang.String = java.lang.StringBuilder.toString();\n} ","position":"org.apache.commons.lang3.ClassUtils:960","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7089","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (long[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1784","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (char[][0]) == '-' ? 1 : 0","position":"org.apache.commons.lang3.math.NumberUtils:1348","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(java.lang.Integer , java.lang.Integer , java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:191","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1855","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.regex.Matcher.regionStart()) != (java.util.regex.Matcher.regionEnd())) {\n    throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())));\n} ","position":"org.apache.commons.lang3.time.FastDateParser:166","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:2861","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.WildcardType, \"wildcardType is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1195","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.double = java.lang.Number.doubleValue()","position":"org.apache.commons.lang3.mutable.MutableDouble:108","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(java.util.concurrent.ExecutionException.getMessage() , java.util.concurrent.ExecutionException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:88","type":"CtReturnImpl"},"status":-2},{"failures":[79],"variableMapping":{"numerator":"found"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5642","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\");\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:155","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(T[], T, int)","position":"org.apache.commons.lang3.ArrayUtils:5282","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:214","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.WildcardType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(java.lang.Object)))))","position":"org.apache.commons.lang3.reflect.TypeUtils:268","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:468","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final org.apache.commons.lang3.builder.CompareToBuilder org.apache.commons.lang3.builder.CompareToBuilder = new org.apache.commons.lang3.builder.CompareToBuilder()","position":"org.apache.commons.lang3.builder.CompareToBuilder:285","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>.get(java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:534","type":"CtLocalVariableImpl"},"status":-2},{"failures":[80,81,82,83],"variableMapping":{"k":"iConstant"},"name":"replace","transplant":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    int = (int) * (int);\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:860","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object[][0], java.lang.Object[][1])","position":"org.apache.commons.lang3.ArrayUtils:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1759","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[84],"binaryOperator":"int >= 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.text.StrBuilder:1762","type":"mutation","status":-1},{"failures":[85,86,87],"variableMapping":{"offsetSet":"roundUp"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.time.DateUtils:1062","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","position":"org.apache.commons.lang3.time.DateUtils:1080","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1392","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"found an unhandled type: \" + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:833","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"buffer":"toAppendTo"},"name":"add","transplant":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.builder.ToStringBuilder:1031","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.lang.Long) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.lang.Long)(java.lang.Object)).longValue(), java.lang.StringBuffer);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (java.lang.Object == null ? \"<null>\" : java.lang.Object.getClass().getName())));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:385","type":"CtIfImpl"},"status":-2},{"failures":[3,4,5],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Need at least 16 bytes for UUID\")","position":"org.apache.commons.lang3.Conversion:1712","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (int)) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n    final int int = int;\n    final int int = int;\n    int = int;\n    for (int int = int ; int < int ; int++) {\n        char[][int] = '\u0000';\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:205","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","position":"org.apache.commons.lang3.math.Fraction:336","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Strings must not be null\")","position":"org.apache.commons.lang3.StringUtils:6743","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"prefix":"toProperString"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:934","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:1205","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:433","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","position":"org.apache.commons.lang3.math.Fraction:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) > 8) {\n    throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (boolean[].int)));\n} ","position":"org.apache.commons.lang3.Conversion:404","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:774","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(boolean[])","position":"org.apache.commons.lang3.builder.DiffBuilder:190","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char < 128) {\n    return org.apache.commons.lang3.CharUtils.java.lang.String[][char];\n} ","position":"org.apache.commons.lang3.CharUtils:308","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1117","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6169","type":"CtReturnImpl"},"status":-2},{"failures":[88,89,90,91,92,93,94,95,96],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1995","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException()","position":"org.apache.commons.lang3.builder.CompareToBuilder:279","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1622","type":"CtThrowImpl"},"status":-2},{"failures":[97],"binaryOperator":"int < (short[].int)","name":"negateConditional","position":"org.apache.commons.lang3.math.NumberUtils:840","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"char char","position":"org.apache.commons.lang3.ArrayUtils:1649","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt((int + 1))","position":"org.apache.commons.lang3.StringUtils:1768","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":84,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":93,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL":78,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":36,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":37,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":41,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringWithWhitespacesShouldThrow":25,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":92,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":30,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":52,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":89,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":51,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":6,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":46,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterType":64,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":81,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":7,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":18,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":86,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":54,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":79,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":3,"org.apache.commons.lang3.math.FractionTest.testFactory_double":70,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort":97,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":63,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOf_String":56,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":9,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":16,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":61,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":53,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":62,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":38,"org.apache.commons.lang3.math.FractionTest.testMultiply":74,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":90,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":76,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithNewlinesShouldThrow":24,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":50,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":48,"org.apache.commons.lang3.math.FractionTest.testAdd":67,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_FAIL":77,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":22,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":75,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":39,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":58,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":49,"org.apache.commons.lang3.math.FractionTest.testDivide":73,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":12,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":88,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":35,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":91,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":21,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":95,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":60,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":28,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":15,"org.apache.commons.lang3.time.DateUtilsTest.testRound":85,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":19,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":2,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":55,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":17,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":13,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":82,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":43,"org.apache.commons.lang3.math.FractionTest.testSubtract":69,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":32,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException4":10,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":8,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringShouldThrow":23,"org.apache.commons.lang3.math.FractionTest.testToProperString":71,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":4,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":40,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":96,"org.apache.commons.lang3.math.FractionTest.testPow":68,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":44,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":57,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException4":11,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":80,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":87,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":72,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":59,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":47,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":5,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":33,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":27,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":66,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":94,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":42,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":20,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":83,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithWhitespacesShouldThrow":26,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":14,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":65,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":31,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":1,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":29}}]
