[{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:453","sourceCode":"java.lang.StringBuilder.append(\"..\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:2069","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:133","sourceCode":"if (java.lang.Object instanceof java.util.Map.Entry<?, ?>) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    return org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getKey(), java.util.Map.Entry<?, ?>.getKey())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Pair<L, R>.getValue(), java.util.Map.Entry<?, ?>.getValue()));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:573","sourceCode":"final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:857","sourceCode":"return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:780","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","date":"date","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:331","sourceCode":"char = 'Q'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:353","sourceCode":"boolean = !java.lang.Character.(java.lang.Character.isDigit(char))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c"}},{"position":"org.apache.commons.lang3.ObjectUtils:231","inlineConstant":"int int = 1","failures":[22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1156","sourceCode":"java.util.Calendar java.util.Calendar = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:831","sourceCode":"final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtLocalVariableImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:135","sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(java.lang.Object)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.IDKey:67","sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = ((org.apache.commons.lang3.builder.IDKey)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[3,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lhs":"other"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:320","sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return 'a';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '8';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:574","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","type":"CtIfImpl"},"failures":[40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:2288","sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:328","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str","separator":"str"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:180","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, null, null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:257","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, null, java.util.Locale)","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:599","sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1221","sourceCode":"if (int > int) {\n    int = int;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"k":"b"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:705","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,45,21,46,47,48,49,50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:127","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:915","sourceCode":"final long long = 15L << int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:226","sourceCode":"return java.lang.Float.java.lang.Float.parseFloat(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:199","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String, 0.0F)","type":"CtReturnImpl"},"failures":[54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:41","sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:237","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.MultipartKey:254","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1151","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:861","inlineConstant":"int int = 1","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:822","sourceCode":"try {\n    java.lang.Class<?> java.lang.Class<?>;\n    if (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)) {\n        final java.lang.String java.lang.String = \"[\" + (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String));\n        java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader).getComponentType();\n    } else {\n        java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String), boolean, java.lang.ClassLoader);\n    }\n    return java.lang.Class<?>;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    final int int = java.lang.String.lastIndexOf(org.apache.commons.lang3.ClassUtils.char);\n    if (int != (-1)) {\n        try {\n            return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        }\n    } \n    throw java.lang.ClassNotFoundException;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:471","sourceCode":"return org.apache.commons.lang3.math.Fraction.equals(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:433","sourceCode":"if ((java.lang.String.length()) > 2) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:102","sourceCode":"while ((int - int) > int) {\n    if ((java.lang.String.charAt(int)) == ' ') {\n        int++;\n        continue;\n    } \n    int int = java.lang.String.lastIndexOf(' ', (int + int));\n    if (int >= int) {\n        java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n        java.lang.StringBuilder.append(java.lang.String);\n        int = int + 1;\n    } else {\n        if (boolean) {\n            java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)));\n            java.lang.StringBuilder.append(java.lang.String);\n            int += int;\n        } else {\n            int = java.lang.String.indexOf(' ', (int + int));\n            if (int >= 0) {\n                java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n                java.lang.StringBuilder.append(java.lang.String);\n                int = int + 1;\n            } else {\n                java.lang.StringBuilder.append(java.lang.String.substring(int));\n                int = int;\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"formatField":"newLineStr"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4224","sourceCode":"short[][((short[].int) - 1)] = short","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1457","sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName())","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:147","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuilder.append(\"null\");\n} else {\n    java.lang.String java.lang.String;\n    try {\n        java.lang.String = java.lang.Object.toString();\n    } catch (final java.lang.Exception java.lang.Exception) {\n        java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception));\n    }\n    java.lang.StringBuilder.append(java.lang.String);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:140","sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation)","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:939","sourceCode":"return org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:859","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","date":"date","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":19,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_likeList":24,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":31,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":25,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":51,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":44,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":9,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_emptyArray":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":20,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":53,"org.apache.commons.lang3.RangeTest.testToString":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":29,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":33,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":40,"org.apache.commons.lang3.time.DateUtilsTest.testRound":21,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":10,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":32,"org.apache.commons.lang3.ObjectUtilsTest.testHashCodeMulti_multiple_nullArray":22,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":45,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":38,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":3,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":39,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":37,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":41,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSummaryObjectStartText":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":11,"org.apache.commons.lang3.math.NumberUtilsTest.testToFloatString":54,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":15,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":34,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":35,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":52,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":8,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":28,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":43,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":49,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":4,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":5,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":26}}]
