[{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:357","sourceCode":"if (java.lang.Integer == null) {\n    if (java.lang.Integer == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.Integer == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.Integer == null) {\n        return null;\n    } \n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.BooleanUtils:266","failures":[1],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:157","sourceCode":"this.double += double","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"(double)--","type":"CtUnaryOperatorImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:539","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1041","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[3,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1713","sourceCode":"float float","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1059","sourceCode":"float float = float[][0]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:333","sourceCode":"java.lang.String = java.lang.String.substring((int + 1))","type":"CtAssignmentImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arrayEnd":"str"}},{"position":"org.apache.commons.lang3.Conversion:945","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:226","sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getUncaughtExceptionHandler()) != null) {\n    java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler());\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:252","sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:173","sourceCode":"final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.Class<T>, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:517","sourceCode":"org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"items":"items","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneDisplayKey:1238","sourceCode":"int |= -2147483648","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:766","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"style":"bufEnd"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:688","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:117","sourceCode":"if (boolean) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)));\n    java.lang.StringBuilder.append(java.lang.String);\n    int += int;\n} else {\n    int = java.lang.String.indexOf(' ', (int + int));\n    if (int >= 0) {\n        java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n        java.lang.StringBuilder.append(java.lang.String);\n        int = int + 1;\n    } else {\n        java.lang.StringBuilder.append(java.lang.String.substring(int));\n        int = int;\n    }\n}","type":"CtIfImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"wrapLength","nInts":"inputLineLength"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1156","sourceCode":"java.util.Calendar java.util.Calendar = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:886","sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2784","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:219","sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentException(java.lang.InterruptedException)","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:268","sourceCode":"double double = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:108","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1098","sourceCode":"long = long","type":"CtAssignmentImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.StrTokenizer:794","failures":[],"status":-2,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:530","sourceCode":"if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || (org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:480","sourceCode":"if ((int > 8) || ((int == 8) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exp":"str","dec":"str","numeric":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:106","sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:193","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.time.FastDateParser)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:778","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:789","sourceCode":"if (int == 0) {\n    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n    if (boolean) {\n        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n    } \n    int += int;\n    final int int = int;\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String java.lang.String = null;\n    if (org.apache.commons.lang3.text.StrMatcher != null) {\n        final char[] char[] = java.lang.String.toCharArray();\n        int int = 0;\n        for (int int = 0 ; int < (char[].int) ; int++) {\n            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                break;\n            } \n            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n                java.lang.String = java.lang.String.substring((int + int));\n                break;\n            } \n        }\n    } \n    if (java.util.List<java.lang.String> == null) {\n        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n    } \n    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n    java.util.List<java.lang.String>.add(java.lang.String);\n    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n    if (java.lang.String == null) {\n        java.lang.String = java.lang.String;\n    } \n    if (java.lang.String != null) {\n        final int int = java.lang.String.length();\n        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n        boolean = true;\n        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n        int = (int + int) - (int - int);\n        int += int;\n        int += int;\n        int += int;\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    } \n    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n    break;\n} else {\n    int--;\n    int += int;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nestedVarCount":"bufEnd"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:452","sourceCode":"int += 1000","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:778","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"milliseconds":"nestedVarCount"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:436","sourceCode":"if (boolean[][int]) {\n    return '9';\n} else {\n    return '1';\n}","type":"CtIfImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1366","sourceCode":"while ((int < int) || (((int < (int + 1)) && boolean) && (!boolean))) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        boolean = true;\n        boolean = false;\n    } else if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        boolean = true;\n    } else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        if (boolean) {\n            return false;\n        } \n        if (!boolean) {\n            return false;\n        } \n        boolean = true;\n        boolean = true;\n    } else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n        if (!boolean) {\n            return false;\n        } \n        boolean = false;\n        boolean = false;\n    } else {\n        return false;\n    }\n    int++;\n}","type":"CtWhileImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:861","inlineConstant":"int int = 1","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1204","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:493","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:211","sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","type":"CtThrowImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:551","failures":[24],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.apache.commons.lang3.time.DateUtils:1695","failures":[25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:451","sourceCode":"return this.org.apache.commons.lang3.time.StopWatch.State.isStarted()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:465","sourceCode":"return org.apache.commons.lang3.time.StopWatch.State.isSuspended()","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"runningState":"runningState"}},{"position":"org.apache.commons.lang3.Range:248","failures":[34],"status":-1,"binaryOperator":"(java.util.Comparator<T>.compare(T, T)) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1116","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.0\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1191","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" NT\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:521","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.version\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:60","sourceCode":"java.lang.Double.java.lang.Double.valueOf(1.0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:382","sourceCode":"if (!org.apache.commons.lang3.Range<T>.(isOverlappedBy(org.apache.commons.lang3.Range<T>))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>));\n} ","type":"CtIfImpl"},"failures":[35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":7,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":22,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":35,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":0,"org.apache.commons.lang3.RangeTest.testIsStartedBy":34,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":8,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":20,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":26,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int":1,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":23,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumLong":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":11,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":12,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":17,"org.apache.commons.lang3.mutable.MutableDoubleTest.testDecrement":2,"org.apache.commons.lang3.math.FractionTest.testPow":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":19,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":10,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":29,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":16,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":36,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":9,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian_emptyItems":6,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":4,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":33,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":31,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":27,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":18,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":21}}]
