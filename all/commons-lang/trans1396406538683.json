[{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getShortWeekdays()","position":"org.apache.commons.lang3.time.FastDatePrinter:176","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getEras()","position":"org.apache.commons.lang3.time.FastDatePrinter:172","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0],"variableMapping":{"start":"i"},"name":"replace","transplant":{"sourceCode":"int = ' '","position":"org.apache.commons.lang3.RandomStringUtils:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1830","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[1,2,3,4,5,6],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \")","position":"org.apache.commons.lang3.time.StopWatch:262","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(java.util.concurrent.ExecutionException.getCause()))","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:160","type":"CtThrowImpl"},"status":-1},{"failures":[7],"name":"returnValue","position":"org.apache.commons.lang3.text.StrBuilder:2099","type":"mutation","return":"return false","status":-1},{"failures":[8,9,10,11,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,48,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,75,75,76,76,77,77,78,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"variableMapping":{"buffer":"buffer","value":"object"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:595","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:1472","type":"CtInvocationImpl"},"status":-1},{"failures":[111,112,113,114,115],"variableMapping":{"calendarField":"offset","amount":"offset","c":"val"},"name":"replace","transplant":{"sourceCode":"java.util.Calendar.set(int, int)","position":"org.apache.commons.lang3.time.DateUtils:654","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1050","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:624","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (java.lang.Integer.int)) {\n    return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n} ","position":"org.apache.commons.lang3.math.Fraction:552","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = (java.lang.String[][int].length()) - (java.lang.String[][int].length())","position":"org.apache.commons.lang3.StringUtils:4756","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4171","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"start","shift":"i","i":"start"},"name":"add","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ++int","position":"org.apache.commons.lang3.StringUtils:3101","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","position":"org.apache.commons.lang3.text.StrTokenizer:107","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:567","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int + int) == int) {\n    ++int;\n    java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n} else {\n    java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n}","position":"org.apache.commons.lang3.Conversion:1481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:898","type":"CtIfImpl"},"status":-2},{"failures":[116,117,118,119],"variableMapping":{"buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append(int)","position":"org.apache.commons.lang3.builder.ToStringStyle:690","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)((int % 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:953","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.CharSequenceUtils:192","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:935","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) == 1) {\n    final char char = java.lang.String.charAt(0);\n    while (int < int) {\n        if ((java.lang.String.charAt(int)) == char) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n} else {\n    while (int < int) {\n        if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n            if (boolean || boolean) {\n                boolean = true;\n                if ((int++) == int) {\n                    int = int;\n                    boolean = false;\n                } \n                java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n                boolean = false;\n            } \n            int = ++int;\n            continue;\n        } \n        boolean = false;\n        boolean = true;\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:3108","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String, null, java.lang.String[], false)","position":"org.apache.commons.lang3.time.DateUtils:333","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.hashCode()) + (13 * ((java.util.TimeZone.hashCode()) + (13 * (java.util.Locale.hashCode()))))","position":"org.apache.commons.lang3.time.FastDateParser:238","type":"CtReturnImpl"},"status":-2},{"failures":[120,121],"variableMapping":{"comparison":"hours"},"name":"add","transplant":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:594","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 24 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:381","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:448","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"newArray":"array"},"name":"add","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.ArrayUtils:4019","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(T[])","position":"org.apache.commons.lang3.ArrayUtils:4644","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The OutputStream must not be null\")","position":"org.apache.commons.lang3.SerializationUtils:148","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","position":"org.apache.commons.lang3.time.StopWatch:383","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = int + 2","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:44","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.ObjectUtils:830","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3765","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int = (java.util.Calendar.getMaximum(java.util.Calendar.int)) + 1;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1071","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"className","stripChars":"className","org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"dim","end":"dim"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != 0) && ((java.lang.String.indexOf(java.lang.String.charAt((int - 1)))) != int)) {\n        int--;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:671","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 1) {\n    return java.lang.String;\n} else {\n    if (java.lang.String.startsWith(\"L\")) {\n        java.lang.String = java.lang.String.substring(1, (java.lang.String.endsWith(\";\") ? (java.lang.String.length()) - 1 : java.lang.String.length()));\n    } else {\n        if ((java.lang.String.length()) > 0) {\n            java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.substring(0, 1));\n        } \n    }\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String);\n    for (int int = 0 ; int < int ; int++) {\n        java.lang.StringBuilder.append(\"[]\");\n    }\n    return java.lang.StringBuilder.toString();\n}","position":"org.apache.commons.lang3.ClassUtils:1117","type":"CtIfImpl"},"status":-2},{"failures":[122,123,124,125,126,127,128,129,130],"variableMapping":{"pos":"size"},"name":"add","transplant":{"sourceCode":"if ((this.int) >= (org.apache.commons.lang3.text.StrBuilder.this.size())) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2879","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (int)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2300","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.text.StrMatcher.NoMatcher()","position":"org.apache.commons.lang3.text.StrMatcher:71","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:762","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(int[], int, 0)","position":"org.apache.commons.lang3.ArrayUtils:2107","type":"CtReturnImpl"},"status":-2},{"failures":[131,132,133,134,135],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:240","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    this.long = java.lang.System.java.lang.System.nanoTime();\n} ","position":"org.apache.commons.lang3.time.StopWatch:206","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"srcPos":"length","nShorts":"length"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:182","type":"CtIfImpl"},"status":-2},{"failures":[136,137,138,139,140,141],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:409","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:670","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"interfaces":"parameterTypes","parameterTypes":"interfaces","i":"i","methodName":"methodName"},"name":"add","transplant":{"sourceCode":"try {\n    return java.lang.Class<?>[][int].getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"org.apache.commons.lang3.reflect.MethodUtils:432","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:433","type":"CtReturnImpl"},"status":0},{"failures":[142],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:463","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE"},"name":"replace","transplant":{"sourceCode":"this.org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","position":"org.apache.commons.lang3.text.StrTokenizer:99","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final double double = 0.1","position":"org.apache.commons.lang3.StringUtils:7012","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double[][0]","position":"org.apache.commons.lang3.math.IEEE754rUtils:46","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Class<?>.getTypeParameters()","position":"org.apache.commons.lang3.reflect.TypeUtils:1503","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1479","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"osNamePrefix":"osVersionPrefix","osName":"osVersion"},"name":"add","transplant":{"sourceCode":"return java.lang.String.startsWith(java.lang.String)","position":"org.apache.commons.lang3.SystemUtils:1467","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.startsWith(java.lang.String)) && (java.lang.String.startsWith(java.lang.String))","position":"org.apache.commons.lang3.SystemUtils:1450","type":"CtReturnImpl"},"status":-2},{"failures":[143],"binaryOperator":"((long)(int)) - ((long)(int))","name":"math","position":"org.apache.commons.lang3.math.Fraction:694","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.lang3.time.FastDateParser.Strategy) != null) && (org.apache.commons.lang3.time.FastDateParser.Strategy.isNumber())","position":"org.apache.commons.lang3.time.FastDateParser:401","type":"CtReturnImpl"},"status":-2},{"failures":[144,145],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.put(java.util.Map.Entry<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.getKey(), org.apache.commons.lang3.concurrent.ConcurrentException)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:210","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1391","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","type":"CtThrowImpl"},"status":-2},{"failures":[146],"binaryOperator":"((int) - int)","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:2205","type":"mutation","status":-1},{"failures":[147,148,149],"variableMapping":{"numerator":"digit"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} ","position":"org.apache.commons.lang3.math.Fraction:490","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n} ","position":"org.apache.commons.lang3.Conversion:80","type":"CtIfImpl"},"status":-1},{"failures":[150],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.double = double","position":"org.apache.commons.lang3.mutable.MutableDouble:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double -= java.lang.Number.doubleValue()","position":"org.apache.commons.lang3.mutable.MutableDouble:189","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int[]","position":"org.apache.commons.lang3.ArrayUtils:4181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer[] == null) {\n    return null;\n} else if ((java.lang.Integer[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new boolean[]{ false , false , true , false }","position":"org.apache.commons.lang3.Conversion:227","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3443","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:3665","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float","position":"org.apache.commons.lang3.reflect.MemberUtils:183","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:166","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean, false, null)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:188","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.CharSetUtils:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:664","type":"CtReturnImpl"},"status":0},{"failures":[151,152,137,153,138,154,155,156,157],"name":"returnValue","position":"org.apache.commons.lang3.ClassUtils:515","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = org.apache.commons.lang3.time.DurationFormatUtils.Token[][int]","position":"org.apache.commons.lang3.time.DurationFormatUtils:421","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float","position":"org.apache.commons.lang3.math.NumberUtils:605","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"childType":"owner","this":"this","parentType":"owner"},"name":"add","transplant":{"sourceCode":"if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n    continue hierarchyTraversal;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:538","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", java.lang.reflect.Type, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1497","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ false , false , true , true }","position":"org.apache.commons.lang3.Conversion:229","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , false , false , true }","position":"org.apache.commons.lang3.Conversion:225","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, double[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:374","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:736","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"raw class is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1489","type":"CtInvocationImpl"},"status":0},{"failures":[158],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1124","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:6509","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"currentType":"destinationIndex","type":"destinationIndex"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3234","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, (int - int))","position":"org.apache.commons.lang3.text.StrBuilder:421","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY":"array"},"name":"replace","transplant":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:387","type":"CtIfImpl"},"status":-2},{"failures":[159,160,161],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:628","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1864","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:1036","type":"CtReturnImpl"},"status":-2},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"variableMapping":{"sz":"strLen","i":"strLen"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:311","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((double[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:159","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:47","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.isNextNumber()) {\n    java.lang.StringBuilder.append(\"(\\\\p{Nd}{\").append(org.apache.commons.lang3.time.FastDateParser.getFieldWidth()).append(\"}+)\");\n} else {\n    java.lang.StringBuilder.append(\"(\\\\p{Nd}++)\");\n}","position":"org.apache.commons.lang3.time.FastDateParser:662","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:675","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.util.Iterator<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:4035","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.Iterator<?>.hasNext())) {\n    @java.lang.SuppressWarnings(value = \"deprecation\")\n    java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.toString(java.lang.Object);\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4042","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = T.getClass().getComponentType()","position":"org.apache.commons.lang3.ObjectUtils:612","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1587","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((!java.lang.Character.(java.lang.Character.isDigit(char))) && (char != '.')) {\n    if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n        java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n    } else {\n        java.lang.String = null;\n    }\n    final java.lang.String java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String));\n    switch (char) {\n        case 'l' :\n        case 'L' :\n            if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n                } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n                }\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n            } \n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        case 'f' :\n        case 'F' :\n            try {\n                final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n                if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                    return java.lang.Float;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        case 'd' :\n        case 'D' :\n            try {\n                final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n                if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                    return java.lang.Double;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        default :\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    }\n} ","position":"org.apache.commons.lang3.math.NumberUtils:518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.concurrent.ThreadFactory","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.StopWatch:83","type":"CtReturnImpl"},"status":-2},{"failures":[180],"variableMapping":{"m":"org.apache.commons.lang3.ClassUtils.reverseAbbreviationMap"},"name":"add","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(\"long\", \"J\")","position":"org.apache.commons.lang3.ClassUtils:123","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:213","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int = java.util.BitSet.nextSetBit(int)) != (-1)) {\n    int = int - int;\n    if (int > 0) {\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int);\n        int += int;\n    } \n    int = java.util.BitSet.nextClearBit(int);\n}","position":"org.apache.commons.lang3.ArrayUtils:6076","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == short[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:736","type":"CtIfImpl"},"status":-2},{"failures":[181,182],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:4780","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.EnumUtils:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double)","position":"org.apache.commons.lang3.builder.ToStringBuilder:664","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(long[])","position":"org.apache.commons.lang3.ArrayUtils:3911","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:679","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"s":"cs"},"name":"add","transplant":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6763","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6037","type":"CtLocalVariableImpl"},"status":-2},{"failures":[183],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.SerializationUtils:79","type":"CtIfImpl"},"status":-1},{"failures":[184,185,186,187,188,189,190,191],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 'f'","position":"org.apache.commons.lang3.Conversion:525","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.char","position":"org.apache.commons.lang3.CharRange:147","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.NoSuchMethodException((\"No such accessible constructor on object: \" + (java.lang.Class<T>.getName())));\n} ","position":"org.apache.commons.lang3.reflect.ConstructorUtils:114","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.StringUtils:5432","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.regex.Matcher.lookingAt())) {\n    org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:154","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 1) {\n    return org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String.charAt(0), int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2340","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:726","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"b","b":"b"},"name":"add","transplant":{"sourceCode":"if (byte > byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1259","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte < byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int[] int[] = new int[java.lang.Integer[].int]","position":"org.apache.commons.lang3.ArrayUtils:3099","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = ((((java.lang.String.length()) / ((double)(java.lang.String.length()))) + ((java.lang.String.length()) / ((double)(java.lang.String.length())))) + (((java.lang.String.length()) - int) / ((double)(java.lang.String.length())))) / 3.0","position":"org.apache.commons.lang3.StringUtils:7069","type":"CtLocalVariableImpl"},"status":-2},{"failures":[192],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setContentStart(\"(\")","position":"org.apache.commons.lang3.AnnotationUtils:61","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n} ","position":"org.apache.commons.lang3.StringUtils:6742","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3433","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int != 0) {\n    java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n    org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:526","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","position":"org.apache.commons.lang3.math.Fraction:742","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 1 minutes\", \" 1 minute\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:214","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this)","position":"org.apache.commons.lang3.reflect.TypeUtils:260","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"typeArguments":"typeVarAssigns","parameterizedTypeArguments":"typeVarAssigns"},"name":"replace","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1377","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, \"typeVarAssigns is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:552","type":"CtIfImpl"},"status":-2},{"failures":[193,194,195],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , -(int))","position":"org.apache.commons.lang3.math.Fraction:497","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(((int) / int), ((org.apache.commons.lang3.math.Fraction.int) / int)), org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / int), ((org.apache.commons.lang3.math.Fraction.int) / int)))","position":"org.apache.commons.lang3.math.Fraction:807","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:2025","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = ((char)((java.util.Random.nextInt(int)) + int))","position":"org.apache.commons.lang3.RandomStringUtils:257","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4879","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((java.text.ParsePosition.getIndex()) < (java.lang.String.length()))","name":"removeConditional","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:456","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, null, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:195","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, char[].int)","position":"org.apache.commons.lang3.text.StrSubstitutor:438","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < 0) {\n    int += 60;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:306","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.float[]","position":"org.apache.commons.lang3.ArrayUtils:3369","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:2067","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int))","position":"org.apache.commons.lang3.text.WordUtils:210","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, int)","position":"org.apache.commons.lang3.StringUtils:970","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String, java.util.regex.Pattern.int).matcher(java.lang.String).replaceAll(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4442","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output one of a set of values.<\/p>\n */\nprivate static class TextField implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final int mField;\n\n    private final java.lang.String[] mValues;\n\n    /** \n     * Constructs an instance of {@code TextField}\n     * with the specified field and values.\n     * \n     * @param field the field\n     * @param values the field values\n     */\nTextField(final int field ,final java.lang.String[] values) {\n        int = int;\n        java.lang.String[] = java.lang.String[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        int int = 0;\n        for (int int = java.lang.String[].int ; (--int) >= 0 ; ) {\n            final int int = java.lang.String[][int].length();\n            if (int > int) {\n                int = int;\n            } \n        }\n        return int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String[][java.util.Calendar.get(int)]);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:677","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    int = int;\n    java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n} else {\n    java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:2850","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:463","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"=\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"start":"count"},"name":"add","transplant":{"sourceCode":"int = ' '","position":"org.apache.commons.lang3.RandomStringUtils:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.RandomStringUtils:284","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"binaryOperator":"int > (java.util.Calendar.int)","name":"negateConditional","position":"org.apache.commons.lang3.time.DateUtils:1211","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrSubstitutor:632","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"continue","position":"org.apache.commons.lang3.StringUtils:2968","type":"CtContinueImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":69,"org.apache.commons.lang3.SerializationUtilsTest.testCloneNull":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":71,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":68,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_char":126,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":1,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":185,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":93,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":125,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringWithWhitespacesShouldThrow":168,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":45,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":152,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":5,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":82,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":112,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":138,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":186,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":90,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValueObject":150,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":57,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":92,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException4":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":61,"org.apache.commons.lang3.text.StrBuilderTest.testRightString":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":41,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":190,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":51,"org.apache.commons.lang3.math.FractionTest.testMultiply":195,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":64,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Widening":139,"org.apache.commons.lang3.math.FractionTest.testDivide":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":46,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":39,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":78,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":88,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":119,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":144,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":161,"org.apache.commons.lang3.ConversionTest.testHexDigitToInt":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":43,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":96,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":103,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":154,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":172,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":36,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":67,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":86,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":25,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringShouldThrow":166,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":184,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":116,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":182,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":117,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":136,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccessIllegalArgumentException4":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":20,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":50,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":156,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":44,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":101,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":153,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":23,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":158,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":80,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":145,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithWhitespacesShouldThrow":169,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":91,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":31,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":124,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":83,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":60,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Unboxing_Widening":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":13,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":110,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":191,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":19,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":33,"org.apache.commons.lang3.ConversionTest.testHexToInt":148,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":22,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":120,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":180,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":56,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":42,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":160,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":106,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":173,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":188,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":104,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":7,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithNewlinesShouldThrow":167,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":81,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_char_int":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":62,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":179,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":59,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldAccessIllegalArgumentException4":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":70,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":122,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":135,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":58,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":178,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":47,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":105,"org.apache.commons.lang3.time.DateUtilsTest.testRound":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":94,"org.apache.commons.lang3.time.StopWatchTest.testLang315":132,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":137,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":121,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":159,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":174,"org.apache.commons.lang3.math.FractionTest.testSubtract":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":10,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccessIllegalArgumentException4":163,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":52,"org.apache.commons.lang3.math.FractionTest.testPow":193,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":99,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":187,"org.apache.commons.lang3.ConversionTest.testHexToLong":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":9,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":27,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":155,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":177,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":108,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArray":142,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":29,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":109,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":151,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":192,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":76,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":79}}]
