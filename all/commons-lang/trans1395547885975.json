[{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1305","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:479","sourceCode":"if ((java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.isAppendTransients()))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:483","sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (!org.apache.commons.lang3.builder.ReflectionToStringBuilder.(isAppendStatics()))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1870","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1522","sourceCode":"if ((boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"fieldNameValueSeparator":"fieldNameValueSeparator"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:413","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:845","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:236","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableLong) {\n    return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue());\n} ","type":"CtIfImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.MutableTriple:113","sourceCode":"this.M = M","type":"CtAssignmentImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:610","failures":[40,41,42,43,44,45,46],"status":-1,"binaryOperator":"(int & 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:127","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())));\n} ","type":"CtIfImpl"},"failures":[47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:138","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"}\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"(short)--","type":"CtUnaryOperatorImpl"},"failures":[49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:766","sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:976","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSuper(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[7,50,27,33,35,37,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"superToString"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6388","sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:117","sourceCode":"if (int > 4095) {\n    java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 255) {\n    java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"maxWidth":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:594","sourceCode":"int = +1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:284","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"comparison":"count"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1356","sourceCode":"return false","type":"CtReturnImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:148","sourceCode":"if ((java.lang.String.charAt(5)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:497","sourceCode":"java.io.PrintWriter.println(java.lang.String)","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"element"}},{"position":"org.apache.commons.lang3.time.StopWatch:181","failures":[54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"(this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1079","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:119","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, null, null)","type":"CtReturnImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:97","failures":[95],"status":-1,"binaryOperator":"T == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:625","sourceCode":"boolean = boolean == boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:338","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"isEquals":"uncapitalizeNext","rhs":"uncapitalizeNext","lhs":"uncapitalizeNext"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:846","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1090","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1029","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1218","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[])","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1675","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1522","sourceCode":"if ((boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"useFieldNames":"useFieldNames"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:818","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1656","sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:254","sourceCode":"while ((int--) != 0) {\n    char char;\n    if (char[] == null) {\n        char = ((char)((java.util.Random.nextInt(int)) + int));\n    } else {\n        char = char[][((java.util.Random.nextInt(int)) + int)];\n    }\n    if (((boolean && java.lang.Character.(java.lang.Character.isLetter(char))) || (boolean && java.lang.Character.(java.lang.Character.isDigit(char)))) || ((!boolean) && (!boolean))) {\n        if ((char >= 56320) && (char <= 57343)) {\n            if (int == 0) {\n                int++;\n            } else {\n                char[][int] = char;\n                int--;\n                char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n            }\n        } else if ((char >= 55296) && (char <= 56191)) {\n            if (int == 0) {\n                int++;\n            } else {\n                char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n                int--;\n                char[][int] = char;\n            }\n        } else if ((char >= 56192) && (char <= 56319)) {\n            int++;\n        } else {\n            char[][int] = char;\n        }\n    } else {\n        int++;\n    }\n}","type":"CtWhileImpl"},"failures":[101,102,103,104,105,106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"start","nBools":"gap"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:608","sourceCode":"java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int))","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:615","sourceCode":"int = -int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:620","sourceCode":"int = (int - int) / 2","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1440","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    char[][((int + int) + int)] = char;\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"chars","padLen":"lengthChange","padChar":"escape","strLen":"offset","size":"bufEnd"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:539","sourceCode":"return 'b'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:346","sourceCode":"return '4'","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5402","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:593","sourceCode":"if ((((char == 'o') || (char == 'O')) && ((char == 'f') || (char == 'F'))) && ((char == 'f') || (char == 'F'))) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[109],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:282","sourceCode":"double = ((double)(int)) / ((double)(int))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:257","sourceCode":"double -= int","type":"CtOperatorAssignmentImpl"},"failures":[44,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"fraction":"value","denom2":"wholeNumber","numer2":"wholeNumber"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":11,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":47,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGet":95,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":21,"org.apache.commons.lang3.math.FractionTest.testFactory_double":44,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":76,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":81,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":89,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":66,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":84,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":3,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":71,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":28,"org.apache.commons.lang3.math.FractionTest.testPow":42,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":90,"org.apache.commons.lang3.mutable.MutableShortTest.testDecrement":49,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":18,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":32,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":34,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":97,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":35,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":23,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":69,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":15,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":20,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":111,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":106,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":68,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":1,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":40,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":85,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":108,"org.apache.commons.lang3.time.StopWatchTest.testGetStartTime":55,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":109,"org.apache.commons.lang3.math.FractionTest.testSubtract":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":24,"org.apache.commons.lang3.math.FractionTest.testAdd":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":2,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":7,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":62,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":26,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":58,"org.apache.commons.lang3.time.StopWatchTest.testBooleanStates":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":25,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfPrimitiveArray":107,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":19,"org.apache.commons.lang3.math.FractionTest.testMultiply":46,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":50,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":60,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":0,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":12,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":91,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":99,"org.apache.commons.lang3.tuple.MutableTripleTest.testMutate":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":5,"org.apache.commons.lang3.math.FractionTest.testDivide":45,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":75,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":92,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":105,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":93,"org.apache.commons.lang3.math.FractionTest.testToProperString":110,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":22,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":6,"org.apache.commons.lang3.time.StopWatchTest.testLang315":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":31}}]
