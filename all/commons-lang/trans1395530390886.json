[{"transplant":{"position":"org.apache.commons.lang3.Conversion:903","sourceCode":"if (0 == int) {\n    return long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1042","sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nHex":"nBools","dstInit":"dstInit"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1215","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:543","sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"position":"org.apache.commons.lang3.math.Fraction:432","failures":[3],"status":-1,"binaryOperator":"((long)(int)) / (int)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.builder.ToStringStyle:414","failures":[4,5,5,6,7,0,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,1,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"((int - 1) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","sourceCode":"if (java.lang.Double.isNaN(double)) {\n    return double;\n} else if (java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.max(double, double);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:109","sourceCode":"return java.lang.Math.java.lang.Math.min(double, double)","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"b","a":"a","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:468","sourceCode":"char[][int++] = char","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:337","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","type":"CtAssignmentImpl"},"failures":[74,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"i","ch":"ch","buf":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:93","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1819","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"contentStart","newLineStr":"contentStart"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:47","sourceCode":"new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<java.util.Locale>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:734","sourceCode":"final long long = 65535L << int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6588","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:452","sourceCode":"return (java.lang.String.length()) >= 3 ? org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:383","sourceCode":"return org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[], 0)","type":"CtReturnImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2873","sourceCode":"if (int == 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:937","sourceCode":"if (0 == int) {\n    return int;\n} ","type":"CtIfImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"len":"nHex"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:326","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:663","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:807","failures":[116,117],"status":-1,"binaryOperator":"(255L & (byte[][(int + int)]))","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:488","sourceCode":"if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n    java.lang.reflect.Method = java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:176","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:136","sourceCode":"while ((java.lang.Class<?> != null) && (!(java.lang.Class<?>.equals(java.lang.Class<?>)))) {\n    if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n        float += 0.25F;\n        break;\n    } \n    float++;\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cost":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:486","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, java.lang.Object[], null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:723","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:154","sourceCode":"return java.lang.Throwable","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:153","sourceCode":"if (java.lang.Throwable != null) {\n    return java.lang.Throwable;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cause":"cause"}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:518","sourceCode":"java.lang.Class<?>[] = java.lang.Class<?>[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:112","sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"classArray":"parameterTypes","org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:349","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterString(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:166","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","type":"CtInvocationImpl"},"failures":[128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"tok","delim":"input"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1042","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.Builder:347","sourceCode":"throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\")","type":"CtThrowImpl"},"failures":[130],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:355","sourceCode":"final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:156","sourceCode":"java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.StrTokenizer:786","failures":[],"status":-2,"binaryOperator":"(int > 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:485","sourceCode":"if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"methodName"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"short--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1128","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:126","sourceCode":"if ((java.lang.annotation.Annotation == null) || (java.lang.annotation.Annotation == null)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[132,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1192","sourceCode":"int = int - 1","type":"CtAssignmentImpl"},"failures":[134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"endCutoff","shift":"startCutoff","i":"startCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:139","sourceCode":"return 15","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:249","sourceCode":"return ((int)((long) ^ ((long) >>> 32)))","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":9,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":26,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":118,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":78,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":51,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":56,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":65,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":14,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":74,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":83,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":11,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":77,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":62,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":53,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":69,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":24,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":122,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":129,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":57,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":94,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":12,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":87,"org.apache.commons.lang3.ConversionTest.testHexToInt":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":59,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":80,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":109,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":66,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":38,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":75,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":116,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":10,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":32,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":71,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testBuildUncaughtExceptionHandlerNull":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":39,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":132,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":112,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":23,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":131,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":16,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":79,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":99,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":17,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":121,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":54,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":106,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":50,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":108,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":61,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":86,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":22,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":19,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":43,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":13,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":111,"org.apache.commons.lang3.mutable.MutableLongTest.testHashCode":135,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":60,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":123,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":100,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":63,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":8,"org.apache.commons.lang3.math.FractionTest.testConversions":3,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":46,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":68,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":125,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":2,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":110}}]
