[{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:775","sourceCode":"char[][int++] = 'e'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:388","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char)","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:742","sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:192","sourceCode":"return byte","type":"CtReturnImpl"},"failures":[2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:972","sourceCode":"long long = java.util.Date.getTime()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:52","sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:925","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1379","sourceCode":"if (boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1167","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"hasExp":"enableSubstitutionInVariables"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:113","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, null, false, false, null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:296","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(java.lang.Object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"object","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:877","inlineConstant":"int int = 0","failures":[],"status":-2,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:232","sourceCode":"if (java.lang.Object[] != null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        int = (int * 31) + org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object));\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:233","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    int = (int * 31) + org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object));\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:136","failures":[38],"status":-1,"name":"returnValue","return":"return 7","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:146","sourceCode":"if ((int == int) || (int == int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:526","sourceCode":"if (int != 0) {\n    java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n    org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n} ","type":"CtIfImpl"},"failures":[39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"i","numerator":"i","denominator":"i"}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:804","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.mutable.MutableObject:126","failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"(T) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:885","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.List<java.lang.String>.remove(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:756","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[56,42,43,57,44,58,45,46,59,47,60,61,62,48,49,63,35,64,65,50,66,67,51,68,69,52,36,53,70,71,54,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1480","failures":[75],"status":-1,"binaryOperator":"(short >> int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:142","sourceCode":"if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:398","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:649","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"position":"org.apache.commons.lang3.CharRange:195","failures":[82],"status":-1,"binaryOperator":"((char) >= (org.apache.commons.lang3.CharRange.char))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:952","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, java.lang.Object[].int)","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,29,88,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:143","sourceCode":"float += 0.25F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:137","sourceCode":"(float)++","type":"CtUnaryOperatorImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:133","sourceCode":"return 11","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","sourceCode":"return 1","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:283","sourceCode":"throw new java.lang.ClassCastException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:827","sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","type":"CtThrowImpl"},"failures":[56,91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1015","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringEscapeUtils:53","sourceCode":"new org.apache.commons.lang3.text.translate.LookupTranslator(new java.lang.String[][]{ { \"\\\"\" , \"\\\\\\\"\" } , { \"\\\\\" , \"\\\\\\\\\" } }).with(new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_ESCAPE()))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1008","sourceCode":"byte byte = byte[][0]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:588","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1702","sourceCode":"return java.lang.StringBuilder.append(':').append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable<?>)).toString()","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:83","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:475","sourceCode":"if ((java.lang.reflect.Field.getName().indexOf(org.apache.commons.lang3.ClassUtils.char)) != (-1)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.RandomStringUtils:273","failures":[],"status":0,"binaryOperator":"(char <= 56191)","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.BooleanUtils:653","failures":[95,96],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1264","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:522","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:525","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.List<java.lang.String>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1524","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[98,77,83,99,100,78,84,101,102,79,85,103,104,105,87,106,107,108,109,110,111,112,80,113,114,115,116,117,118,119,120,22,28,121,29,30,122,123,31,32,33,34],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToByte":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":9,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":5,"org.apache.commons.lang3.mutable.MutableObjectTest.testToString":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":116,"org.apache.commons.lang3.reflect.TypeUtilsTest.testToLongString":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":20,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":84,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":121,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":50,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":87,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":114,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":12,"org.apache.commons.lang3.mutable.MutableFloatTest.testIncrement":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":79,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":29,"org.apache.commons.lang3.mutable.MutableByteTest.testIncrement":2,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":86,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":54,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":66,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":25,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":85,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":93,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":62,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":17,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":95,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":117,"org.apache.commons.lang3.mutable.MutableByteTest.testPrimitiveValues":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":65,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":34,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":14,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":16,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":43,"org.apache.commons.lang3.mutable.MutableByteTest.testDecrement":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":19,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":106,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":49,"org.apache.commons.lang3.ConversionTest.testShortToHex":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":112,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":23,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":63,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":118,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":113,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":31,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":59,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":80,"org.apache.commons.lang3.math.FractionTest.testDivide":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":60,"org.apache.commons.lang3.math.FractionTest.testToProperString":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":21,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":27}}]
