[{"transplant":{"position":"org.apache.commons.lang3.event.ProxyInvocationHandler:315","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:295","sourceCode":"return java.lang.reflect.Method.invoke(null, java.lang.Object[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:873","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:317","sourceCode":"return org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T)) && org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:577","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:113","sourceCode":"return 10","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:39","sourceCode":"if (boolean) {\n    return 1;\n} else {\n    return 0;\n}","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1594","failures":[20],"status":-1,"binaryOperator":"(1 & (int >> int)) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:123","sourceCode":"return this.java.lang.Boolean.java.lang.Boolean.equals(java.lang.Boolean)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:706","sourceCode":"return org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)) == (java.lang.Boolean.java.lang.Boolean)","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Boolean.FALSE":"java.lang.Boolean.TRUE","bool":"java.lang.Boolean.TRUE"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1065","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int >= 12) {\n        int -= 12;\n    } \n    boolean = int >= 6;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.event.EventUtils:82","sourceCode":"private static class EventBindingInvocationHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.Object target;\n\n    private final java.lang.String methodName;\n\n    private final java.util.Set<java.lang.String> eventTypes;\n\n    /** \n     * Creates a new instance of {@code EventBindingInvocationHandler}.\n     * \n     * @param target the target object for method invocations\n     * @param methodName the name of the method to be invoked\n     * @param eventTypes the names of the supported event types\n     */\nEventBindingInvocationHandler(final java.lang.Object target ,final java.lang.String methodName ,final java.lang.String[] eventTypes) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.lang.String = java.lang.String;\n        this.java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n    }\n\n    /** \n     * Handles a method invocation on the proxy object.\n     * \n     * @param proxy the proxy instance\n     * @param method the method to be invoked\n     * @param parameters the parameters for the method invocation\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n            if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n            } else {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n            }\n        } \n        return null;\n    }\n\n    /** \n     * Checks whether a method for the passed in parameters can be found.\n     * \n     * @param method the listener method invoked\n     * @return a flag whether the parameters could be matched\n     */\nprivate boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n        return org.apache.commons.lang3.reflect.MethodUtils.(org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.reflect.Method.getParameterTypes())) != null;\n    }\n}","type":"CtClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.EntityArrays:349","sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:538","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1242","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharRange:210","failures":[22],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:80","sourceCode":"F F = this.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.get(org.apache.commons.lang3.time.FormatCache.MultipartKey)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:83","sourceCode":"final F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, F)","type":"CtLocalVariableImpl"},"failures":[23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cInstanceCache":"cInstanceCache","key":"key"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:301","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:144","sourceCode":"break","type":"CtBreakImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1635","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:905","sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4553","sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:490","sourceCode":"if ((int) == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} ","type":"CtIfImpl"},"failures":[28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:479","sourceCode":"return (char >= 'A') && (char <= 'Z')","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:422","sourceCode":"return (char >= 32) && (char < 127)","type":"CtReturnImpl"},"failures":[31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:595","inlineConstant":"int int = 0","failures":[33,34,28,35,36,37,29,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1245","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1244","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Calendar)(java.lang.Object)), int);\n} else {\n    throw new java.lang.ClassCastException((\"Could not iterate based on \" + java.lang.Object));\n}","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:117","sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1043","sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3080","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1009","sourceCode":"if (int == int) {\n    if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                java.util.Calendar.add(java.util.Calendar.int, 15);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -15);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else if (int == (java.util.Calendar.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                java.util.Calendar.add(java.util.Calendar.int, 12);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -12);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else {\n            java.util.Calendar.add(int[][0], 1);\n        }\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.StrTokenizer:701","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"int >= int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1815","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:379","sourceCode":"java.lang.String java.lang.String = java.lang.String","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:767","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:221","sourceCode":"return char - 48","type":"CtReturnImpl"},"failures":[91,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:54","sourceCode":"if (java.lang.CharSequence == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[4,93,94,5,6,11,95,96,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1372","sourceCode":"if (boolean || boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1167","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"hasExp":"enableSubstitutionInVariables","hasDecPoint":"enableSubstitutionInVariables"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:690","sourceCode":"java.lang.StringBuffer.append(int)","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:885","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:399","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Throwable[][int].getClass())) {\n    return int;\n} ","type":"CtIfImpl"},"failures":[118,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:935","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1079","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if (java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","type":"CtIfImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"date":"array"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:147","sourceCode":"return this.char","type":"CtReturnImpl"},"failures":[133,134,135,136,137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:301","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:307","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[141,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:326","sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Double.java.lang.Double.parseDouble(java.lang.String))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:335","sourceCode":"if (int < 0) {\n    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int);\n}","type":"CtIfImpl"},"failures":[143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:201","sourceCode":"return ((int)(double))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:301","sourceCode":"return java.lang.Double.java.lang.Double.compare(double, double)","type":"CtReturnImpl"},"failures":[144],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1615","sourceCode":"byte[][int] = byte","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:863","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"failures":[145,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"tmp":"min","array":"array","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1081","sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:465","sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int++] = char;\n    boolean = false;\n} else {\n    continue;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"count","nBools":"count"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:384","sourceCode":"int += 60 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:44","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[147,148,149,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minutes":"count","hours":"count"}},{"transplant":{"position":"org.apache.commons.lang3.Range:455","sourceCode":"java.lang.StringBuilder.append(']')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:671","sourceCode":"java.lang.StringBuilder.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtInvocationImpl"},"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buf":"source"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:346","sourceCode":"return java.util.Arrays.hashCode(((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:352","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"o","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:510","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:450","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.HOUR_STRATEGY"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:524","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:568","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '3';\n} else {\n    return '2';\n}","type":"CtIfImpl"},"failures":[165,166],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":17,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_emptyArray":128,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":53,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":42,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":103,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":111,"org.apache.commons.lang3.math.FractionTest.testFactory_double":36,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":88,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":45,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":46,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":15,"org.apache.commons.lang3.ConversionTest.testIntToBinary":20,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte":145,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":97,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":18,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":112,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":160,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":165,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":148,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":159,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":105,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":4,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":11,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":50,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":40,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":14,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":16,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":48,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":143,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":140,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":73,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":77,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":135,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_emptyArray":132,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":93,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":83,"org.apache.commons.lang3.math.FractionTest.testInvert":30,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":13,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":163,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":142,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_emptyArray":121,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":115,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":87,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":84,"org.apache.commons.lang3.math.FractionTest.testPow":28,"org.apache.commons.lang3.ObjectUtilsTest.testMode":2,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_emptyArray":125,"org.apache.commons.lang3.BitFieldTest.testSetValue":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":62,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":61,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_emptyArray":131,"org.apache.commons.lang3.math.FractionTest.testReduce":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":59,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":164,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":56,"org.apache.commons.lang3.mutable.MutableDoubleTest.testCompareTo":144,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":149,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_emptyArray":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":155,"org.apache.commons.lang3.HashSetvBitSetTest.testTimes":146,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_emptyArray":122,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":44,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":95,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":108,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":10,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":23,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":92,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":37,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":158,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":91,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_emptyArray":123,"org.apache.commons.lang3.text.StrTokenizerTest.test1":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":154,"org.apache.commons.lang3.text.StrTokenizerTest.test3":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":90,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":33,"org.apache.commons.lang3.text.StrTokenizerTest.test2":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":162,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_emptyArray":126,"org.apache.commons.lang3.math.FractionTest.testSubtract":35,"org.apache.commons.lang3.text.StrTokenizerTest.test8":72,"org.apache.commons.lang3.BitFieldTest.testGetValue":147,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":119,"org.apache.commons.lang3.math.FractionTest.testAdd":34,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiPrintable_char":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":153,"org.apache.commons.lang3.text.StrTokenizerTest.test5":69,"org.apache.commons.lang3.text.StrTokenizerTest.test4":68,"org.apache.commons.lang3.text.StrTokenizerTest.test7":71,"org.apache.commons.lang3.text.StrTokenizerTest.test6":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":81,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":22,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":118,"org.apache.commons.lang3.RangeTest.testContainsRange":1,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":9,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":129,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":78,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":138,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":27,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":106,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":166,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":54,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":5,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":109,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":7,"org.apache.commons.lang3.math.FractionTest.testMultiply":38,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":101,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":151,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_emptyArray":120,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":64,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":117,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":47,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":133,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":110,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":100,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_emptyArray":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":156,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":136,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":161,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":157,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_emptyArray":127,"org.apache.commons.lang3.math.FractionTest.testDivide":29,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":12,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":134,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":107,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":104,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":26,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":98,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":49,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":139,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":51,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":21}}]
