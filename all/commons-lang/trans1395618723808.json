[{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1093","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[0,0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pattern":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:510","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:450","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.HOUR_STRATEGY"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:322","sourceCode":"return 'b'","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:292","sourceCode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"languageCode"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:280","sourceCode":"int = (int * int) + int","type":"CtAssignmentImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"numer2","shift":"numer1","i":"numer0"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:477","sourceCode":"this.char[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:254","sourceCode":"char[] = java.lang.String.toCharArray()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"chars":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6012","sourceCode":"while ((--int) >= 0) {\n    final int int = int[][int];\n    if ((int < 0) || (int >= int)) {\n        throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n    } \n    if (int >= int) {\n        continue;\n    } \n    int++;\n    int = int;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:964","sourceCode":"if ((int[][int]) > int) {\n    int = int[][int];\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"diff":"j","length":"max","indices":"array","prevIndex":"j","i":"max"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1819","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:347","sourceCode":"throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:775","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:433","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:457","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n            T = T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:906","sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:653","sourceCode":"java.util.Calendar.set(int, int)","type":"CtInvocationImpl"},"failures":[37,38,39,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nHex":"calendarField","dstPos":"amount"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:539","sourceCode":"return 'b'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:463","sourceCode":"return '4'","type":"CtReturnImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1398","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = ((int)(15 & (long >> int)));\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6632","sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:406","sourceCode":"return int","type":"CtReturnImpl"},"failures":[44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"firstDiff":"i","shortestStrLen":"i","longestStrLen":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:458","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, long[], null)","type":"CtInvocationImpl"},"failures":[46,47,48,22,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.time.FastDateParser:209","failures":[],"status":0,"binaryOperator":"((java.util.TimeZone.hashCode()) + (13 * (java.util.Locale.hashCode())))","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:55","failures":[52,53],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1074","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:845","sourceCode":"int = (int & (~int)) | int","type":"CtAssignmentImpl"},"failures":[54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:171","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:168","sourceCode":"this.float += java.lang.Number.floatValue()","type":"CtOperatorAssignmentImpl"},"failures":[55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:815","sourceCode":"for (int int = 1 ; int < (int[].int) ; int++) {\n    if ((int[][int]) < int) {\n        int = int[][int];\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:72","sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float);\n}","type":"CtForImpl"},"failures":[56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:738","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:1313","failures":[57],"status":-1,"binaryOperator":"int < (java.lang.String.length())","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1029","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:605","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:47","sourceCode":"new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<java.util.Locale>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:292","sourceCode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.WildcardTypeImpl:275","sourceCode":"int int = 73 << 8","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:944","sourceCode":"int int = int","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:144","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:95","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:94","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","type":"CtInvocationImpl"},"failures":[59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1659","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:614","sourceCode":"java.lang.Object = java.lang.reflect.Method.invoke(T)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:153","sourceCode":"if (java.lang.Class<?> == null) {\n    float += 1.5F;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:137","sourceCode":"if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    float += 0.25F;\n    break;\n} ","type":"CtIfImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcClass":"srcClass","cost":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:957","sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1011","sourceCode":"if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n    if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n        if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n            java.util.Calendar.add(java.util.Calendar.int, 15);\n        } else {\n            java.util.Calendar.add(java.util.Calendar.int, -15);\n            java.util.Calendar.add(java.util.Calendar.int, 1);\n        }\n    } else if (int == (java.util.Calendar.int)) {\n        if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n            java.util.Calendar.add(java.util.Calendar.int, 12);\n        } else {\n            java.util.Calendar.add(java.util.Calendar.int, -12);\n            java.util.Calendar.add(java.util.Calendar.int, 1);\n        }\n    } else {\n        java.util.Calendar.add(int[][0], 1);\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:175","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:387","sourceCode":"return java.util.Date","type":"CtReturnImpl"},"failures":[62,63,64,65,66,67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:455","sourceCode":"java.lang.StringBuilder.append(']')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:3569","sourceCode":"if ((java.lang.Object[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.Object[][int]);\n} ","type":"CtIfImpl"},"failures":[68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1398","inlineConstant":"int int = 0","failures":[43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:848","sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:900","sourceCode":"return org.apache.commons.lang3.text.StrMatcher","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"delimMatcher":"quoteMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6632","sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:870","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"firstDiff":"lengthChange","shortestStrLen":"lengthChange","longestStrLen":"lengthChange"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:180","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:190","sourceCode":"return new boolean[]{ false , false , true , true }","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:305","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:335","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[1,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:259","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1156","sourceCode":"java.util.Calendar java.util.Calendar = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:806","sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","type":"CtLocalVariableImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,39,84,85,86,87,88,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:602","sourceCode":"return false","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1480","failures":[90],"status":-1,"binaryOperator":"15 & (short >> int)","name":"math","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":21,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":77,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":24,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":83,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":13,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":28,"org.apache.commons.lang3.ConversionTest.testShortToHex":90,"org.apache.commons.lang3.math.FractionTest.testFactory_double":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":11,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":1,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":75,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":79,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayCharSeparator":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":35,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqualObject":53,"org.apache.commons.lang3.time.DateUtilsTest.testRound":6,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":10,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":61,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":56,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":86,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":37,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":29,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":46,"org.apache.commons.lang3.mutable.MutableFloatTest.testAddValueObject":55,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":15,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":30,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":82,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":38,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":51,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_OK":63,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":60,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":27,"org.apache.commons.lang3.ConversionTest.testLongToHex":43,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":20,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":50,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":39,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":32,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_OK":64,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":9,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":70,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":58,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":80,"org.apache.commons.lang3.ObjectUtilsTest.testMax":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":33,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_WITH_DE_LOCALE":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":81,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":88,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceEqual":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":74,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":44,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":25,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":72,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":47,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":18,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":42}}]
