[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = (int) - 1 ; int >= 0 ; int--) {\n    if ((char[][int]) != (char[][int])) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2684","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:383","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{"str":"str","pfxLen":"pos"},"name":"replace","transplant":{"sourceCode":"final int int = (java.lang.String.length()) - int","position":"org.apache.commons.lang3.math.NumberUtils:476","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)))","position":"org.apache.commons.lang3.math.Fraction:351","type":"CtLocalVariableImpl"},"status":-1},{"failures":[1,2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:346","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"requiredVersion":"org.apache.commons.lang3.JavaVersion.JAVA_1_5","org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION_AS_ENUM":"org.apache.commons.lang3.JavaVersion.JAVA_1_5"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.atLeast(org.apache.commons.lang3.JavaVersion)","position":"org.apache.commons.lang3.SystemUtils:1412","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.Class<?>[], org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion))","position":"org.apache.commons.lang3.ClassUtils:478","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"daemonFlag":"this"},"name":"replace","transplant":{"sourceCode":"java.lang.Boolean = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:366","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(boolean)","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:319","type":"CtAssignmentImpl"},"status":-2},{"failures":[3],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Illegal running state has occurred.\")","position":"org.apache.commons.lang3.time.StopWatch:345","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long))","position":"org.apache.commons.lang3.Validate:1084","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:452","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));","position":"org.apache.commons.lang3.Conversion:140","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"result","values":"values","this":"this"},"name":"add","transplant":{"sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n            T = T;\n        } \n    }\n} ","position":"org.apache.commons.lang3.ObjectUtils:468","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","position":"org.apache.commons.lang3.ObjectUtils:444","type":"CtForEachImpl"},"status":0},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:955","failures":[4],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > (int)) {\n    int = int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2783","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int >= 3) && ((java.lang.String.charAt((int + 1))) == '-')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isIn(java.lang.String.charAt(int), java.lang.String.charAt((int + 2))));\n    int += 3;\n} else if ((int >= 2) && ((java.lang.String.charAt(int)) == '^')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isNot(java.lang.String.charAt((int + 1))));\n    int += 2;\n} else {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.is(java.lang.String.charAt(int)));\n    int += 1;\n}","position":"org.apache.commons.lang3.CharSet:186","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'Z' :","position":"org.apache.commons.lang3.time.FastDateParser:503","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","position":"org.apache.commons.lang3.time.DateUtils:161","type":"CtLocalVariableImpl"},"status":-2},{"failures":[5,6],"variableMapping":{"str":"str","middle":"str","length":"size"},"name":"add","transplant":{"sourceCode":"if ((int >= (java.lang.String.length())) || (int < ((java.lang.String.length()) + 2))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6456","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (int <= 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5510","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.length();\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int));\n    java.lang.System.java.lang.System.arraycopy(char[], 0, char[], int, int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:726","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, E>.put(E.name(), E)","position":"org.apache.commons.lang3.EnumUtils:61","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != 0) && ((java.lang.String.indexOf(java.lang.String.charAt((int - 1)))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int--;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:671","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || ((int = java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5688","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:427","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.put(\"\", org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet)","position":"org.apache.commons.lang3.CharSet:83","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int);\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:715","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int + int) == int) {\n    ++int;\n    java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n} else {\n    java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n}","position":"org.apache.commons.lang3.Conversion:1441","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \")","position":"org.apache.commons.lang3.time.StopWatch:262","type":"CtThrowImpl"},"status":-2},{"failures":[7],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:941","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.lang3.text.StrBuilder.toString())","position":"org.apache.commons.lang3.text.StrSubstitutor:898","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:309","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4997","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:3881","failures":[8],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:6113","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.String = java.lang.Object.toString();\n} catch (final java.lang.Exception java.lang.Exception) {\n    java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception));\n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:151","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.byte = java.lang.Number.byteValue()","position":"org.apache.commons.lang3.mutable.MutableByte:108","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(\"%s[]\", org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.GenericArrayType.getGenericComponentType()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1826","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setTrimmerMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.trimMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:97","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.EnumUtils:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:840","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true)","position":"org.apache.commons.lang3.builder.CompareToBuilder:314","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:478","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:299","type":"CtIfImpl"},"status":-2},{"failures":[9],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")","position":"org.apache.commons.lang3.math.Fraction:253","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:1078","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:970","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Enumeration type which indicates the status of stopwatch.\n */\nprivate enum State {\nUNSTARTED {\n        @java.lang.Override\n        boolean isStarted() {\n            return false;\n        }\n\n        @java.lang.Override\n        boolean isStopped() {\n            return true;\n        }\n\n        @java.lang.Override\n        boolean isSuspended() {\n            return false;\n        }\n    }, RUNNING {\n        @java.lang.Override\n        boolean isStarted() {\n            return true;\n        }\n\n        @java.lang.Override\n        boolean isStopped() {\n            return false;\n        }\n\n        @java.lang.Override\n        boolean isSuspended() {\n            return false;\n        }\n    }, STOPPED {\n        @java.lang.Override\n        boolean isStarted() {\n            return false;\n        }\n\n        @java.lang.Override\n        boolean isStopped() {\n            return true;\n        }\n\n        @java.lang.Override\n        boolean isSuspended() {\n            return false;\n        }\n    }, SUSPENDED {\n        @java.lang.Override\n        boolean isStarted() {\n            return true;\n        }\n\n        @java.lang.Override\n        boolean isStopped() {\n            return false;\n        }\n\n        @java.lang.Override\n        boolean isSuspended() {\n            return true;\n        }\n    };\n    /** \n     * <p>\n     * The method is used to find out if the StopWatch is started. A suspended\n     * StopWatch is also started watch.\n     * <\/p>\n     * \n     * @return boolean\n     * If the StopWatch is started.\n     */\nabstract boolean isStarted();\n\n    /** \n     * <p>\n     * This method is used to find out whether the StopWatch is stopped. The\n     * stopwatch which's not yet started and explicitly stopped stopwatch is\n     * considered as stopped.\n     * <\/p>\n     * \n     * @return boolean\n     * If the StopWatch is stopped.\n     */\nabstract boolean isStopped();\n\n    /** \n     * <p>\n     * This method is used to find out whether the StopWatch is suspended.\n     * <\/p>\n     * \n     * @return boolean\n     * If the StopWatch is suspended.\n     */\nabstract boolean isSuspended();\n}","position":"org.apache.commons.lang3.time.StopWatch:65","type":"CtEnumImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:837","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:312","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1965","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String, int)","position":"org.apache.commons.lang3.StringUtils:2534","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"wrapLength":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"if (int < 1) {\n    int = 1;\n} ","position":"org.apache.commons.lang3.text.WordUtils:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int != (org.apache.commons.lang3.StringUtils.int)) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, int)).append(java.lang.String);\n    int = int + int;\n    if ((--int) == 0) {\n        break;\n    } \n    int = java.lang.String.indexOf(java.lang.String, int);\n}","position":"org.apache.commons.lang3.StringUtils:4530","type":"CtWhileImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:1660","failures":[10],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.Conversion:520","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrTokenizer:386","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = int >= 6","position":"org.apache.commons.lang3.time.DateUtils:1073","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.JavaVersion(1.5F , \"0.9\")","position":"org.apache.commons.lang3.JavaVersion:29","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (long[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3613","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object , org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle).append(java.lang.Object).toString()","position":"org.apache.commons.lang3.ArrayUtils:178","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"dstPos":"value","nHex":"value"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 100) {\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:755","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int[] == int[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:731","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2183","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"milliseconds":"length","seconds":"length"},"name":"replace","transplant":{"sourceCode":"while (int < 0) {\n    int += 1000;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:298","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], 0, double[].int)","position":"org.apache.commons.lang3.ArrayUtils:3972","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.Conversion:1301","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.reflect.TypeUtils:138","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.text.WordUtils:224","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1183","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:370","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], byte)","position":"org.apache.commons.lang3.ArrayUtils:4772","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:174","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:107","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrTokenizer:834","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:298","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final long long = (4294967295L & (int[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:696","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.CharSequence[][0].charAt(int);\n    for (int int = 1 ; int < int ; int++) {\n        if ((java.lang.CharSequence[][int].charAt(int)) != char) {\n            int = int;\n            break;\n        } \n    }\n    if (int != (-1)) {\n        break;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6628","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:732","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Integer.java.lang.Integer.decode(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:694","type":"CtReturnImpl"},"status":-2},{"failures":[11],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:5192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, (int + 1), (int - int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4575","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:2066","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(long)++","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:418","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.math.NumberUtils:485","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 1) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:267","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.text.StrTokenizer:1026","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(int[], java.lang.Integer.intValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5551","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:877","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Double.compare(double, double)","position":"org.apache.commons.lang3.mutable.MutableDouble:301","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1741","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1498","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.List<java.lang.reflect.TypeVariable<java.lang.Class<T>>>.contains(java.lang.reflect.Type)) && (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.TypeVariable<?>))) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1029","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2358","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String))","position":"org.apache.commons.lang3.Validate:1151","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:727","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"value","buffer":"buffer","mValue":"fieldName","value":"fieldName"},"name":"add","transplant":{"sourceCode":"/** \n * <p>Inner class to output a constant string.<\/p>\n */\nprivate static class StringLiteral implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final java.lang.String mValue;\n\n    /** \n     * Constructs a new instance of {@code StringLiteral}\n     * to hold the specified value.\n     * \n     * @param value the string literal\n     */\nStringLiteral(final java.lang.String value) {\n        java.lang.String = java.lang.String;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return java.lang.String.length();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:644","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:545","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.short = short","position":"org.apache.commons.lang3.mutable.MutableShort:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = short","position":"org.apache.commons.lang3.math.NumberUtils:1245","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:229","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())));\n}","position":"org.apache.commons.lang3.time.DateUtils:941","type":"CtIfImpl"},"status":-2},{"failures":[12],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:5961","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * ParameterizedType implementation class.\n * @since 3.2\n */\nprivate static final class ParameterizedTypeImpl implements java.lang.reflect.ParameterizedType {\n    private final java.lang.Class<?> raw;\n\n    private final java.lang.reflect.Type useOwner;\n\n    private final java.lang.reflect.Type[] typeArguments;\n\n    /** \n     * Constructor\n     * @param raw type\n     * @param useOwner owner type to use, if any\n     * @param typeArguments formal type arguments\n     */\nprivate ParameterizedTypeImpl(java.lang.Class<?> raw ,java.lang.reflect.Type useOwner ,java.lang.reflect.Type[] typeArguments) {\n        this.java.lang.Class<?> = java.lang.Class<?>;\n        this.java.lang.reflect.Type = java.lang.reflect.Type;\n        this.java.lang.reflect.Type[] = java.lang.reflect.Type[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type getRawType() {\n        return java.lang.Class<?>;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type getOwnerType() {\n        return java.lang.reflect.Type;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type[] getActualTypeArguments() {\n        return java.lang.reflect.Type[].clone();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(java.lang.Object obj) {\n        return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.ParameterizedType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(java.lang.Object)))));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.SuppressWarnings(value = \"deprecation\")\n    @java.lang.Override\n    public int hashCode() {\n        int int = 71 << 4;\n        int |= java.lang.Class<?>.hashCode();\n        int <<= 4;\n        int |= org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.reflect.Type);\n        int <<= 8;\n        int |= java.util.Arrays.java.util.Arrays.hashCode(java.lang.reflect.Type[]);\n        return int;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:146","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:727","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalStateException(org.apache.commons.lang3.Validate.java.lang.String);\n} ","position":"org.apache.commons.lang3.Validate:803","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:932","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLetter(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5851","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.ClassUtils:647","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:387","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.StopWatch:83","type":"CtReturnImpl"},"status":-2},{"failures":[13],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5637","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrBuilder:2689","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.NumberRule.appendTo(java.lang.StringBuffer, int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1029","type":"CtInvocationImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:470","failures":[14],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[15],"variableMapping":{"style":"offset","mStyle":"offset"},"name":"add","transplant":{"sourceCode":"int = int | -2147483648","position":"org.apache.commons.lang3.time.FastDatePrinter:1239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.WordUtils:188","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","position":"org.apache.commons.lang3.ObjectUtils:633","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2654","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(java.lang.reflect.Type[], \"null type argument at index %s\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1501","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float.java.lang.Float.isNaN(float)","position":"org.apache.commons.lang3.mutable.MutableFloat:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1371","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float[]","position":"org.apache.commons.lang3.ArrayUtils:4154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"srcPos","src":"src","length":"srcPos"},"name":"add","transplant":{"sourceCode":"if ((int > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","position":"org.apache.commons.lang3.Conversion:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'e';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'a';\n    } else {\n        return '2';\n    }\n}","position":"org.apache.commons.lang3.Conversion:445","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int <= 16) {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} ","position":"org.apache.commons.lang3.math.NumberUtils:612","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n    java.lang.StringBuilder.append(java.lang.String);\n    int = int + 1;\n} else {\n    if (boolean) {\n        java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)));\n        java.lang.StringBuilder.append(java.lang.String);\n        int += int;\n    } else {\n        int = java.lang.String.indexOf(' ', (int + int));\n        if (int >= 0) {\n            java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n            java.lang.StringBuilder.append(java.lang.String);\n            int = int + 1;\n        } else {\n            java.lang.StringBuilder.append(java.lang.String.substring(int));\n            int = int;\n        }\n    }\n}","position":"org.apache.commons.lang3.text.WordUtils:193","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[], java.lang.Object, java.lang.Integer.int)","position":"org.apache.commons.lang3.ArrayUtils:1936","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?> == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((int != int) && (int >= 0)) && (int >= 0)) {\n    final java.lang.String java.lang.String = java.lang.String.substring(int, int);\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n    } \n    java.lang.StringBuffer.append(java.lang.String);\n    org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:359","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1050","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"startIndex","endIndex":"endIndex"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2786","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:588","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:474","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"hours":"years"},"name":"add","transplant":{"sourceCode":"int += 24","position":"org.apache.commons.lang3.time.DurationFormatUtils:311","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:358","type":"CtAssignmentImpl"},"status":0},{"failures":[16,17,18,19,20,21,22],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.ArrayUtils:1233","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Comparator<T>.compare(T, T)) > (-1)) && ((java.util.Comparator<T>.compare(T, T)) < 1)","position":"org.apache.commons.lang3.Range:223","type":"CtReturnImpl"},"status":-1},{"failures":[23,24],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1689","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short[][int] = short[][int]","position":"org.apache.commons.lang3.ArrayUtils:1862","type":"CtAssignmentImpl"},"status":-1},{"failures":[25,26],"variableMapping":{"codepointLow":"codepoint","codepointHigh":"codepoint"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.translate.NumericEntityEscaper(int , int , false)","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.NumericEntityEscaper.org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(0, int)","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:74","type":"CtReturnImpl"},"status":-1},{"failures":[27],"variableMapping":{"dstPos":"found","nHex":"found"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1008","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5909","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((int)(long))","position":"org.apache.commons.lang3.math.Fraction:681","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.reflect.Method.getName(), java.lang.reflect.Method.invoke(java.lang.annotation.Annotation))","position":"org.apache.commons.lang3.AnnotationUtils:202","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:7238","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:834","type":"CtReturnImpl"},"status":-2},{"failures":[28],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.boolean[]","position":"org.apache.commons.lang3.ArrayUtils:674","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(boolean[])","position":"org.apache.commons.lang3.ArrayUtils:5976","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrSubstitutor:639","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2567","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String.substring(((java.lang.String.length()) - int))","position":"org.apache.commons.lang3.StringUtils:2216","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1386","type":"CtIfImpl"},"status":-2},{"failures":[29],"variableMapping":{"replaceLen":"count","i":"pos"},"name":"replace","transplant":{"sourceCode":"int = (int + int) - 1","position":"org.apache.commons.lang3.text.StrBuilder:2002","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>)","position":"org.apache.commons.lang3.text.StrTokenizer:646","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3411","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:7316","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:828","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:379","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.math.NumberUtils:1379","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:1164","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext = new org.apache.commons.lang3.exception.DefaultExceptionContext()","position":"org.apache.commons.lang3.exception.ContextedException:148","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:320","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:940","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int >= 0) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int);\n    int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1744","type":"CtWhileImpl"},"status":-2},{"failures":[30,31,32],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:1246","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()));\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        java.util.Calendar.add(java.util.Calendar.int, -1);\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            int = java.util.Calendar.int;\n            int = java.util.Calendar.int;\n        } \n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        switch (int) {\n            case org.apache.commons.lang3.time.DateUtils.int :\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.int;\n                int = java.util.Calendar.int;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.get(java.util.Calendar.int);\n                int = int - 1;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n                int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n                break;\n            default :\n                break;\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"));\n}","position":"org.apache.commons.lang3.time.DateUtils:1163","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.lang.Class<?> != null) {\n    java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","position":"org.apache.commons.lang3.ClassUtils:332","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(boolean[], java.lang.Boolean.java.lang.Class<java.lang.Boolean>)))","position":"org.apache.commons.lang3.ArrayUtils:4044","type":"CtLocalVariableImpl"},"status":-2},{"failures":[33,34],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:675","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>.isPrimitive()) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:651","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * WildcardType implementation class.\n * @since 3.2\n */\nprivate static final class WildcardTypeImpl implements java.lang.reflect.WildcardType {\n    private static final java.lang.reflect.Type[] EMPTY_BOUNDS = new java.lang.reflect.Type[0];\n\n    private final java.lang.reflect.Type[] upperBounds;\n\n    private final java.lang.reflect.Type[] lowerBounds;\n\n    /** \n     * Constructor\n     * @param upperBounds of this type\n     * @param lowerBounds of this type\n     */\nprivate WildcardTypeImpl(java.lang.reflect.Type[] upperBounds ,java.lang.reflect.Type[] lowerBounds) {\n        this.java.lang.reflect.Type[] = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.defaultIfNull(java.lang.reflect.Type[], org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.java.lang.reflect.Type[]);\n        this.java.lang.reflect.Type[] = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.defaultIfNull(java.lang.reflect.Type[], org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.java.lang.reflect.Type[]);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type[] getUpperBounds() {\n        return java.lang.reflect.Type[].clone();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type[] getLowerBounds() {\n        return java.lang.reflect.Type[].clone();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(java.lang.Object obj) {\n        return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.WildcardType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(java.lang.Object)))));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        int int = 73 << 8;\n        int |= java.util.Arrays.java.util.Arrays.hashCode(java.lang.reflect.Type[]);\n        int <<= 8;\n        int |= java.util.Arrays.java.util.Arrays.hashCode(java.lang.reflect.Type[]);\n        return int;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:223","type":"CtClassImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":7,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":11,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":28,"org.apache.commons.lang3.RangeTest.testRangeOfChars":18,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":17,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":12,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":19,"org.apache.commons.lang3.RangeTest.testContainsRange":20,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShortRange":23,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_noMatch":33,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testTrimToEmpty":14,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":26,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":32,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":15,"org.apache.commons.lang3.ConversionTest.testByteToBinary":10,"org.apache.commons.lang3.ValidateTest.testNotEmptyMap1":1,"org.apache.commons.lang3.ValidateTest.testNotEmptyMap2":2,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":29,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":31,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":25,"org.apache.commons.lang3.math.FractionTest.testFactory_String_improper":0,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_emptyInput":9,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":30,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":27,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong":3,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayInt":4,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringInt":6,"org.apache.commons.lang3.RangeTest.testIsWithCompare":16,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":34,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShort":24,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":22,"org.apache.commons.lang3.RangeTest.testContains":21,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntChar":5}}]
