[{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight()).append(')')","position":"org.apache.commons.lang3.tuple.Triple:142","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1,2],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.mutable.MutableShort:192","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.lang3.time.FastDateParser.Strategy[].int) ; ) {\n    final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][int++];\n    org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int));\n}","position":"org.apache.commons.lang3.time.FastDateParser:316","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(2 , 3)","position":"org.apache.commons.lang3.math.Fraction:63","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'a'","position":"org.apache.commons.lang3.Conversion:541","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"throwable":"throwable","this":"this"},"name":"add","transplant":{"sourceCode":"final java.util.List<java.lang.Throwable> java.util.List<java.lang.Throwable> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:180","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Throwable[] java.lang.Throwable[] = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:393","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:495","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1620","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:6401","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.StringUtils:5133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = java.lang.Math.(java.lang.Math.round(((double + ((double * int) * (1.0 - double))) * 100.0))) / 100.0","position":"org.apache.commons.lang3.StringUtils:7020","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1586","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"srcPos","src":"src"},"name":"add","transplant":{"sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return 'e';\n}","position":"org.apache.commons.lang3.Conversion:307","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    return '7';\n} else {\n    return '6';\n}","position":"org.apache.commons.lang3.Conversion:337","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION()","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:781","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int]) == null) {\n    org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:519","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:658","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long[][int] = java.lang.Long[][int].longValue()","position":"org.apache.commons.lang3.ArrayUtils:3033","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:526","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>)) {\n    if (java.lang.annotation.Annotation.java.lang.annotation.Annotation.isAssignableFrom(java.lang.Class<?>)) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(java.lang.Class<?>));\n        java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.Class<? extends java.lang.annotation.Annotation>;\n        break;\n    } \n}","position":"org.apache.commons.lang3.AnnotationUtils:74","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (java.lang.String.length()) + int","position":"org.apache.commons.lang3.StringUtils:2070","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.StringBuilder(int).append(java.lang.Character.java.lang.Character.toLowerCase(char)).append(java.lang.String.substring(1)).toString()","position":"org.apache.commons.lang3.StringUtils:5736","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl"},"status":0},{"failures":[3,4],"variableMapping":{"spot":"c","endFinal":"c"},"name":"replace","transplant":{"sourceCode":"if (java.util.Calendar.equals(java.util.Calendar)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.lang3.time.DateUtils:1846","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTimeInMillis(long)","position":"org.apache.commons.lang3.time.FastDatePrinter:399","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5080","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} else if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6906","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * An invocation handler used to dispatch the event(s) to all the listeners.\n */\nprotected class ProxyInvocationHandler implements java.lang.reflect.InvocationHandler {\n    /** \n     * Propagates the method call to all registered listeners in place of\n     * the proxy listener object.\n     * \n     * @param unusedProxy the proxy object representing a listener on which the\n     * invocation was called; not used\n     * @param method the listener method that will be called on all of the\n     * listeners.\n     * @param args event arguments to propagate to the listeners.\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object unusedProxy, final java.lang.reflect.Method method, final java.lang.Object[] args) throws java.lang.Throwable {\n        for (final L L : java.util.List<L>) {\n            java.lang.reflect.Method.invoke(L, java.lang.Object[]);\n        }\n        return null;\n    }\n}","position":"org.apache.commons.lang3.event.EventListenerSupport:296","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY","array":"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY","length":"length"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Byte[] == null) || ((java.lang.Byte[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:773","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3276","type":"CtIfImpl"},"status":-2},{"failures":[5],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:910","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((((short[] == null) && (short[] != null)) && ((short[].int) > 0)) || (((short[] == null) && (short[] != null)) && ((short[].int) > 0))) || (((short[] != null) && (short[] != null)) && ((short[].int) != (short[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1282","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.validIndex(T[], int, org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(int))","position":"org.apache.commons.lang3.Validate:660","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"separator","separator":"separator"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2296","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat((java.lang.String + java.lang.String), int)","position":"org.apache.commons.lang3.StringUtils:5183","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)","position":"org.apache.commons.lang3.text.StrBuilder:1812","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])","position":"org.apache.commons.lang3.CharSetUtils:144","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendCyclicObject(java.lang.StringBuffer, java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:473","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int[] == int[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:705","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:124","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:2029","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:731","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:705","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction.invert())","position":"org.apache.commons.lang3.math.Fraction:829","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.Conversion:1128","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{"str":"str","close":"str","open":"str"},"name":"replace","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5130","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1415","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field = java.lang.reflect.Field","position":"org.apache.commons.lang3.reflect.FieldUtils:127","type":"CtAssignmentImpl"},"status":-2},{"failures":[6],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1297","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float, float), float)","position":"org.apache.commons.lang3.math.IEEE754rUtils:124","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:490","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:466","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.startsWith(\"0x\", int)) || (java.lang.String.startsWith(\"0x\", int))) {\n    int = 16;\n    int += 2;\n} else if (java.lang.String.startsWith(\"#\", int)) {\n    int = 16;\n    int++;\n} else if ((java.lang.String.startsWith(\"0\", int)) && ((java.lang.String.length()) > (int + 1))) {\n    int = 8;\n    int++;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:736","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.java.lang.String.format(org.apache.commons.lang3.text.FormattableUtils.java.lang.String, java.util.Formattable)","position":"org.apache.commons.lang3.text.FormattableUtils:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.lang3.ArrayUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int int = java.util.Calendar.get(java.util.Calendar.int);\n    if (int < 0) {\n        int -= 1;\n    } \n    while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n        int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n        if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n            int += 1;\n        } \n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        int += java.util.Calendar.get(java.util.Calendar.int);\n    }\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.this(java.lang.Object, null, null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    java.util.List<java.lang.String>.add(java.lang.Object.toString());\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:332","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + 1))","position":"org.apache.commons.lang3.text.StrBuilder:797","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayContentDetail(boolean)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:179","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:4179","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1161","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.String[])","position":"org.apache.commons.lang3.StringUtils:6687","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, int, int, null)) > 0","position":"org.apache.commons.lang3.text.StrSubstitutor:735","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>[][int]","position":"org.apache.commons.lang3.reflect.MemberUtils:118","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:543","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int / 2","position":"org.apache.commons.lang3.StringUtils:7120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:6767","type":"CtReturnImpl"},"status":-2},{"failures":[7,8],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1483","type":"CtReturnImpl"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"variableMapping":{"parameterizedType":"parameterizedType"},"name":"replace","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType()","position":"org.apache.commons.lang3.reflect.TypeUtils:1003","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getRawType()","position":"org.apache.commons.lang3.reflect.TypeUtils:1240","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3911","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"a1":"a2","a2":"a1"},"name":"add","transplant":{"sourceCode":"if ((java.lang.annotation.Annotation == null) || (java.lang.annotation.Annotation == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:126","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.Class<? extends java.lang.annotation.Annotation>.getDeclaredMethods()) {\n    if (((java.lang.reflect.Method.getParameterTypes().int) == 0) && org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.reflect.Method.getReturnType()))) {\n        final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n        final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n        if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n            return false;\n        } \n    } \n}","position":"org.apache.commons.lang3.AnnotationUtils:137","type":"CtForEachImpl"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , 0 , int)","position":"org.apache.commons.lang3.text.StrBuilder:2734","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:233","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:981","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"_mask":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","holder":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return int & (this.org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.BitField:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2570","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.charAt(int)) == ' ') {\n    int++;\n    continue;\n} ","position":"org.apache.commons.lang3.text.WordUtils:187","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int ^ (java.lang.Object.hashCode())","position":"org.apache.commons.lang3.AnnotationUtils:250","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:161","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","holder":"holder","value":"holder"},"name":"add","transplant":{"sourceCode":"return ((short)(org.apache.commons.lang3.BitField.setValue(short, short)))","position":"org.apache.commons.lang3.BitField:167","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? org.apache.commons.lang3.BitField.setShort(short) : org.apache.commons.lang3.BitField.clearShort(short)","position":"org.apache.commons.lang3.BitField:267","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:892","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.strip(java.lang.String, null)","position":"org.apache.commons.lang3.StringUtils:555","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter()","position":"org.apache.commons.lang3.exception.ExceptionUtils:583","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((java.lang.CharSequence.length()) * 2))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:58","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > 0) {\n    int = -int;\n} else {\n    int = int;\n}","position":"org.apache.commons.lang3.math.Fraction:614","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean || boolean) {\n    boolean = true;\n    if ((int++) == int) {\n        int = int;\n        boolean = false;\n    } \n    java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3133","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte > byte) {\n    byte = byte;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} else if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3879","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"length":"length","index":"length"},"name":"add","transplant":{"sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Float[].int) ; int++) {\n    float[][int] = java.lang.Float[][int].floatValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3372","type":"CtForImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:3812","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"field":"field","this":"this"},"name":"add","transplant":{"sourceCode":"if ((java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers())) && (!(org.apache.commons.lang3.builder.ReflectionToStringBuilder.isAppendTransients()))) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:484","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (!org.apache.commons.lang3.builder.ReflectionToStringBuilder.(isAppendStatics()))) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:488","type":"CtIfImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:66","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.StringUtils:1980","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (java.lang.String.length())) {\n    int = java.lang.String.length();\n} ","position":"org.apache.commons.lang3.StringUtils:2132","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} else if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3879","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2169","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n    java.util.Calendar.add(java.util.Calendar.int, 15);\n} else {\n    java.util.Calendar.add(java.util.Calendar.int, -15);\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1017","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:1084","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[])","position":"org.apache.commons.lang3.ArrayUtils:5891","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.math.Fraction:617","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"buf":"regex","start":"c","end":"c"},"name":"add","transplant":{"sourceCode":"if (char != char) {\n    java.lang.StringBuilder.append('-');\n    java.lang.StringBuilder.append(char);\n} ","position":"org.apache.commons.lang3.CharRange:242","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == 'E') {\n    java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n    char = 'Q';\n} ","position":"org.apache.commons.lang3.time.FastDateParser:360","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"hours":"width"},"name":"add","transplant":{"sourceCode":"int += 24","position":"org.apache.commons.lang3.time.DurationFormatUtils:311","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:1400","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int[] int[] = new int[(int[].int) + (int[].int)]","position":"org.apache.commons.lang3.ArrayUtils:3884","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.StrSubstitutor:396","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:433","type":"CtReturnImpl"},"status":0},{"failures":[163,164,165,166,167,168,169],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrTokenizer:958","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.length();\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int));\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:754","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][(int)++] = 'e'","position":"org.apache.commons.lang3.text.StrBuilder:775","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n        if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n            return false;\n        } \n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:613","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey(java.util.TimeZone , boolean , int , java.util.Locale)","position":"org.apache.commons.lang3.time.FastDatePrinter:1100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Calendar.set(int, int)","position":"org.apache.commons.lang3.time.DateUtils:654","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) == 0) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1813","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.List<java.lang.Class<?>> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ClassUtils:425","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.Class<?>>","position":"org.apache.commons.lang3.ClassUtils:336","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"name":"str","i":"expPos","desc":"str"},"name":"replace","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(0, int).trim()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:313","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.math.NumberUtils:520","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.CharSet:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.WordUtils:555","type":"CtContinueImpl"},"status":-2},{"failures":[170,171,172,173,174,175],"variableMapping":{"rangeStyle":"iValue","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"iValue","endCutoff":"iValue","startCutoff":"iValue","java.util.Calendar.MONDAY":"iValue","java.util.Calendar.SUNDAY":"iValue"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 100) {\n    int = org.apache.commons.lang3.time.FastDateParser.adjustYear(int);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:696","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:344","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Short.java.lang.Class<java.lang.Short>.equals(java.lang.Class<?>)) {\n    return (((java.lang.Integer.java.lang.Class<java.lang.Integer>.equals(java.lang.Class<?>)) || (java.lang.Long.java.lang.Class<java.lang.Long>.equals(java.lang.Class<?>))) || (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>))) || (java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>));\n} ","position":"org.apache.commons.lang3.ClassUtils:678","type":"CtIfImpl"},"status":-2},{"failures":[176,177,178,179,180],"variableMapping":{"lhs":"rhs","rhs":"rhs"},"name":"add","transplant":{"sourceCode":"if (long[] == long[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:691","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:698","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:526","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int])","position":"org.apache.commons.lang3.reflect.MethodUtils:537","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:3861","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == (org.apache.commons.lang3.StringUtils.int)) || (int == ((java.lang.String.length()) - (java.lang.String.length())))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2420","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.BooleanUtils:584","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"))","position":"org.apache.commons.lang3.time.FastDateParser:792","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"char = ((char)((char) + 1))","position":"org.apache.commons.lang3.CharRange:315","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = char[][((java.util.Random.nextInt(int)) + int)]","position":"org.apache.commons.lang3.RandomStringUtils:259","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(java.lang.Object, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:768","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:867","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:672","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:301","type":"CtReturnImpl"},"status":-2},{"failures":[181],"variableMapping":{"ch":"ch"},"name":"replace","transplant":{"sourceCode":"return new java.lang.String(new char[]{ char })","position":"org.apache.commons.lang3.CharUtils:311","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","position":"org.apache.commons.lang3.CharUtils:358","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1690","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:811","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :","position":"org.apache.commons.lang3.time.DateUtils:1164","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'w' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:244","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:176","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return new java.util.Locale(\"\" , java.lang.String.substring(1, 3) , java.lang.String.substring(4))","position":"org.apache.commons.lang3.LocaleUtils:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String)) && ((int == 2) || (int == 3))) {\n    return new java.util.Locale(java.lang.String);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n}","position":"org.apache.commons.lang3.LocaleUtils:130","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:394","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.Object[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:1960","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((short[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:348","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:438","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(4 , 5)","position":"org.apache.commons.lang3.math.Fraction:91","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","position":"org.apache.commons.lang3.ClassUtils:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1763","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence[][0].length()","position":"org.apache.commons.lang3.text.translate.LookupTranslator:52","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.text.StrSubstitutor:846","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((java.lang.reflect.Type instanceof java.lang.Class<?>) || (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) || (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) || (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:705","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((((boolean[] == null) && (boolean[] != null)) && ((boolean[].int) > 0)) || (((boolean[] == null) && (boolean[] != null)) && ((boolean[].int) > 0))) || (((boolean[] != null) && (boolean[] != null)) && ((boolean[].int) != (boolean[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1372","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.StringUtils:5321","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":72,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":76,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":19,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":24,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":149,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":86,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":21,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":82,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":172,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":23,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":159,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":130,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":10,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":36,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":67,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":143,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":41,"org.apache.commons.lang3.text.StrBuilderTest.testToString":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":146,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":73,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":133,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":138,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":152,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_StringString":7,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":116,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":132,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":74,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":92,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":173,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":32,"org.apache.commons.lang3.builder.DiffResultTest.testNullStyle":42,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsInstance":13,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":39,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":5,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Object":104,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":105,"org.apache.commons.lang3.mutable.MutableShortTest.testDecrement":2,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_char":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":22,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":155,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Collection":93,"org.apache.commons.lang3.builder.DiffResultTest.testNullRhs":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":180,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":160,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":88,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_char":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":157,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":118,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":136,"org.apache.commons.lang3.builder.DiffResultTest.testNullLhs":44,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":178,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":127,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_FormattedString":129,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_char":80,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder_int_int":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":139,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":89,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":179,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":141,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":65,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":140,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":56,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":11,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char_int":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":137,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":31,"org.apache.commons.lang3.mutable.MutableShortTest.testIncrement":0,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetRawType":18,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":59,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":9,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":120,"org.apache.commons.lang3.builder.DiffTest.testGetFieldName":46,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":110,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int":111,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":20,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":70,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":52,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":54,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":147,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":4,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":84,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":101,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":68,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStrBuilder":50,"org.apache.commons.lang3.builder.DiffTest.testGetType":49,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder":124,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":175,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":106,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":30,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Right":71,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":79,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":161,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArrayHiddenByObject":177,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence":8,"org.apache.commons.lang3.text.StrTokenizerTest.test5":165,"org.apache.commons.lang3.text.StrTokenizerTest.test4":164,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_char_char":69,"org.apache.commons.lang3.text.StrTokenizerTest.test1":163,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":144,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":29,"org.apache.commons.lang3.builder.DiffTest.testToString":47,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":95,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":162,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":145,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuilder":94,"org.apache.commons.lang3.text.StrBuilderTest.testSetCharAt":75,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":100,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":57,"org.apache.commons.lang3.builder.DiffTest.testCannotModify":48,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Iterator":98,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":102,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":37,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":62,"org.apache.commons.lang3.mutable.MutableShortTest.testPrimitiveValues":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":35,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":119,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":142,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":81,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":26,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":171,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":3,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":15,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":63,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":114,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":38,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_FormattedString":117,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_char_char":64,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":176,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder":103,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":150,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":122,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":128,"org.apache.commons.lang3.reflect.TypeUtilsTest.testTypesSatisfyVariables":16,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":151,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":168,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":167,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":169,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":181,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":134,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":51,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":40,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_char":112,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":126,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":61,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":174,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":28,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":43,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":154,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":83,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":97,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_int":115,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":148,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":156}}]
