[{"position":"org.apache.commons.lang3.time.DateUtils:828","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"java.util.Calendar == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:531","sourceCode":"return 'd'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:444","sourceCode":"if (boolean[][(int + 2)]) {\n    if (boolean[][(int + 1)]) {\n        if (boolean[][int]) {\n            return 'e';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'a';\n        } else {\n            return '2';\n        }\n    }\n} else {\n    if (boolean[][(int + 1)]) {\n        if (boolean[][int]) {\n            return 'c';\n        } else {\n            return '4';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '8';\n        } else {\n            return '0';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:99","inlineConstant":"int int = 0","failures":[16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:637","sourceCode":"for (int int = (java.lang.String.length()) - 1 ; int >= 0 ; int--) {\n    if ((java.lang.String.charAt(int)) != '0') {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:121","failures":[19],"status":-1,"name":"returnValue","return":"return 9","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:327","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:329","sourceCode":"if (char == 'E') {\n    java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n    char = 'Q';\n} ","type":"CtIfImpl"},"failures":[20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:839","failures":[],"status":0,"binaryOperator":"(short[][int]) < short","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:305","sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:206","sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","type":"CtIfImpl"},"failures":[22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:98","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:229","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(char[])","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"tok"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:221","sourceCode":"return (java.util.Calendar.getTime().getTime()) == (java.util.Calendar.getTime().getTime())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1738","sourceCode":"return org.apache.commons.lang3.time.DateUtils.(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar, java.util.Calendar, int)) == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:178","sourceCode":"if ((java.lang.String.isEmpty()) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","type":"CtIfImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1296","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1246","sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Calendar)(java.lang.Object)), int);\n} else {\n    throw new java.lang.ClassCastException((\"Could not iterate based on \" + java.lang.Object));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1245","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.iterator(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"rangeStyle":"rangeStyle","focus":"focus","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:886","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(\": \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1019","sourceCode":"java.util.Calendar.add(java.util.Calendar.int, -15)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1049","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[0,28,12,29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:97","sourceCode":"if (int < 2) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1056","sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:169","sourceCode":"final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.annotation.Annotation.annotationType()","type":"CtLocalVariableImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:307","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"acquireCount":"i"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:552","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:494","sourceCode":"if (java.lang.Object instanceof long[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[34,35,36,37,37,38,39,40,41,42,42,43,44,45],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharEncoding:96","sourceCode":"return false","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:186","sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.CharRange.boolean) {\n        return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n    } \n    return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:192","sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) == 0) && ((char) == (java.lang.Character.char));\n} ","type":"CtIfImpl"},"failures":[47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:423","sourceCode":"return 'b'","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6190","sourceCode":"return java.lang.String == null ? this.java.lang.String : java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1858","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"fieldNameValueSeparator","str":"fieldNameValueSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:256","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:143","sourceCode":"return java.lang.Math.java.lang.Math.min(float, float)","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:121","sourceCode":"return 9","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:101","sourceCode":"switch (char) {\n    case '0' :\n        return 0;\n    case '1' :\n        return 8;\n    case '2' :\n        return 4;\n    case '3' :\n        return 12;\n    case '4' :\n        return 2;\n    case '5' :\n        return 10;\n    case '6' :\n        return 6;\n    case '7' :\n        return 14;\n    case '8' :\n        return 1;\n    case '9' :\n        return 9;\n    case 'a' :\n    case 'A' :\n        return 5;\n    case 'b' :\n    case 'B' :\n        return 13;\n    case 'c' :\n    case 'C' :\n        return 3;\n    case 'd' :\n    case 'D' :\n        return 11;\n    case 'e' :\n    case 'E' :\n        return 7;\n    case 'f' :\n    case 'F' :\n        return 15;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}","type":"CtSwitchImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:859","sourceCode":"return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:777","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not round \" + java.lang.Object));\n}","type":"CtIfImpl"},"failures":[50,51,52,53,54,28,55,56,57,58,59,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","date":"date","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:798","sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:310","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(int)","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:935","sourceCode":"this.char = char","type":"CtAssignmentImpl"},"failures":[61,62,63,64,65,66,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:488","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parseObject(java.lang.String, java.text.ParsePosition)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.CompositeFormat:84","sourceCode":"return java.text.Format.parseObject(java.lang.String, java.text.ParsePosition)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:912","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[68,69,34,70,71,35,72,73,36,74,75,37,76,77,78,79,80,81,82,83,84,85,42,86,87,43,88,89,44,90,91,45,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:327","sourceCode":"while (int != 0) {\n    int += 12 * int;\n    int = 0;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1422","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[77,77,93,93,94,94,95,96,97,81,98,99,82,100,83,101,102,103,104,84,105,85,106,42,107,108,109,110,111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"months":"i","years":"i"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1472","sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[70,115,116,71,117,35,118,119,120,74,121,75,37,38,39,40,76,77,122,123,124,125,126,127,128,129,78,130,131,132,133,79,134,135,136,137,93,80,138,139,140,141,142,143,144,145,146,94,95,96,97,81,98,99,82,100,83,102,103,104,84,105,85,106,42,107,108,109,111,112,113,114,86,147,148,87,149,43,150,151,88,152,153,89,154,44,155,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2871","sourceCode":"throw new java.lang.IndexOutOfBoundsException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:764","sourceCode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")","type":"CtThrowImpl"},"failures":[157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSequenceUtils:124","sourceCode":"if (int >= int) {\n    int = int - 1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"start":"lengthChange","sz":"startMatchLen"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:128","sourceCode":"int = int + 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:111","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int))","type":"CtInvocationImpl"},"failures":[16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offset":"spaceToWrapAt","spaceToWrapAt":"spaceToWrapAt"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:481","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:537","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[122,122,80,80,138,139,140,141,142,143,144,158,114,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":142,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":6,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":99,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":93,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":59,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":54,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":148,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":4,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":35,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":126,"org.apache.commons.lang3.time.DateUtilsTest.testRound":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":137,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":55,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":21,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":111,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":84,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":149,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":31,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":138,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":136,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":26,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":154,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":51,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":53,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":42,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":45,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":28,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":121,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":22,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":155,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":108,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":36,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":52,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":90,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":144,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":32,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":146,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":115,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":153,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":1,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":89,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":117,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":143,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":150,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":140,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":85,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":94,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":0,"org.apache.commons.lang3.text.StrBuilderTest.testCharAt":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":63,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":113,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":75,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":12,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":71,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":27,"org.apache.commons.lang3.ArrayUtilsTest.testToString":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":102,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":110,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":96,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":134,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":116,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":24,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":40,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":122,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":109,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":123,"org.apache.commons.lang3.math.FractionTest.testToProperString":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":82,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":87,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":11,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":18,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":114,"org.apache.commons.lang3.CharEncodingTest.testNotSupported":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":41}}]
