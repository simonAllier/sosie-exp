[{"failures":[0,0],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:591","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:762","type":"CtInvocationImpl"},"status":-1},{"failures":[1],"variableMapping":{"value":"startIndex"},"name":"replace","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.mutable.MutableInt:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2443","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:349","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder, \", \", java.lang.Class<?>.getTypeParameters())","position":"org.apache.commons.lang3.reflect.TypeUtils:1752","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"escapeChar":"ch","escapeCharacter":"ch"},"name":"add","transplant":{"sourceCode":"char = char","position":"org.apache.commons.lang3.text.StrSubstitutor:945","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","position":"org.apache.commons.lang3.StringUtils:5781","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.delete(0, int)","position":"org.apache.commons.lang3.text.StrBuilder:2056","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n    throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:284","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"u":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","k":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return (-int) * (1 << int)","position":"org.apache.commons.lang3.math.Fraction:624","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2275","type":"CtReturnImpl"},"status":-2},{"failures":[2,3],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.String) == null) {\n    return this;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.java.lang.String.valueOf(double))","position":"org.apache.commons.lang3.text.StrBuilder:839","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.String.equals(java.util.Locale.getCountry())) && (java.util.Locale.getVariant().isEmpty())) {\n    java.util.List<java.util.Locale>.add(java.util.Locale);\n} ","position":"org.apache.commons.lang3.LocaleUtils:270","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:2812","type":"CtReturnImpl"},"status":-2},{"failures":[4,5,6,7,8,9,10,11],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int);\n    int += int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:6078","type":"CtIfImpl"},"status":-1},{"failures":[12,13],"binaryOperator":"((E.ordinal()) % (java.lang.Long.int))","name":"math","position":"org.apache.commons.lang3.EnumUtils:273","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(java.lang.CharSequence[])) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:259","type":"CtIfImpl"},"status":-2},{"failures":[14,15],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean.equals(java.lang.Boolean)","position":"org.apache.commons.lang3.BooleanUtils:123","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"classArray":"parameterTypes","org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY":"parameterTypes"},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?>[] = java.lang.Class<?>[]","position":"org.apache.commons.lang3.ClassUtils:518","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:172","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"parser":"this","pos":"pos","source":"source"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parseObject(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateFormat:503","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateParser:299","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be reset before being restarted. \")","position":"org.apache.commons.lang3.time.StopWatch:179","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:42","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.ArrayUtils:4073","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.reflect.FieldUtils:426","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return '1'","position":"org.apache.commons.lang3.Conversion:575","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","position":"org.apache.commons.lang3.Conversion:553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1993","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1521","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][(int + 1)] = char","position":"org.apache.commons.lang3.StringUtils:5146","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:658","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1507","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(int).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:1028","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:548","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtIfImpl"},"status":-2},{"failures":[16,17],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.AnnotationUtils:124","type":"CtReturnImpl"},"status":-1},{"failures":[18,19],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'c';\n    } else {\n        return '4';\n    }\n} else {\n    if (boolean[][int]) {\n        return '8';\n    } else {\n        return '0';\n    }\n}","position":"org.apache.commons.lang3.Conversion:459","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    return 'd';\n} else {\n    return '5';\n}","position":"org.apache.commons.lang3.Conversion:430","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.StringUtils:4725","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.translate.LookupTranslator:70","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4011","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.DurationFormatUtils:203","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(double)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:694","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:589","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:607","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) == char) {\n        if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n            if (int == int) {\n                return true;\n            } \n            if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n                return true;\n            } \n        } else {\n            return true;\n        }\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1628","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final short short : short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(short);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:897","type":"CtForEachImpl"},"status":-2},{"failures":[20,21,22],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:39","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new boolean[]{ true , false , false , false }","position":"org.apache.commons.lang3.Conversion:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.boolean[]","position":"org.apache.commons.lang3.ArrayUtils:1206","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"stream":"stream"},"name":"add","transplant":{"sourceCode":"if (java.io.PrintStream == null) {\n    throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\");\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:459","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.PrintStream.flush()","position":"org.apache.commons.lang3.exception.ExceptionUtils:466","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"duration","separator":"tmp"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:3994","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = java.lang.String;\n        java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\");\n        java.lang.String = java.lang.String;\n        if ((java.lang.String.length()) != (java.lang.String.length())) {\n            java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 seconds\", \"\");\n        } \n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:180","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","position":"org.apache.commons.lang3.text.WordUtils:421","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Integer : java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:508","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? java.lang.Integer : java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:486","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.ArrayList<L>.toArray(L[]))","position":"org.apache.commons.lang3.event.EventListenerSupport:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1754","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (int)) {\n    return new java.lang.String(char[] , 0 , int);\n} else {\n    return new java.lang.String(char[] , 0 , int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = \"1\"","position":"org.apache.commons.lang3.math.Fraction:935","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","position":"org.apache.commons.lang3.ClassUtils:83","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()","position":"org.apache.commons.lang3.StringUtils:4087","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toString(java.lang.Object, \"{}\")","position":"org.apache.commons.lang3.ArrayUtils:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.CharSequence instanceof java.lang.String) {\n    return ((java.lang.String)(java.lang.CharSequence)).lastIndexOf(int, int);\n} else {\n    final int int = java.lang.CharSequence.length();\n    if (int < 0) {\n        return -1;\n    } \n    if (int >= int) {\n        int = int - 1;\n    } \n    for (int int = int ; int >= 0 ; --int) {\n        if ((java.lang.CharSequence.charAt(int)) == int) {\n            return int;\n        } \n    }\n    return -1;\n}","position":"org.apache.commons.lang3.CharSequenceUtils:117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder) {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.(org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n    } \n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:467","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.StopWatch.SplitState()","position":"org.apache.commons.lang3.time.StopWatch:126","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2805","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1507","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:395","type":"CtReturnImpl"},"status":-2},{"failures":[23,24,25,26,27],"variableMapping":{"chars":"chars"},"name":"replace","transplant":{"sourceCode":"this.char[] = null","position":"org.apache.commons.lang3.text.StrTokenizer:256","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.char[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[])","position":"org.apache.commons.lang3.text.StrTokenizer:492","type":"CtAssignmentImpl"},"status":-1},{"failures":[28,29,30,31],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:7317","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(java.lang.Object)).java.lang.Object[])","position":"org.apache.commons.lang3.time.FormatCache:245","type":"CtReturnImpl"},"status":-1},{"failures":[32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (short >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1478","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    if ((char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else if (((char) + 1) == (org.apache.commons.lang3.CharRange.char)) {\n        if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n            boolean = false;\n        } else {\n            char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n        }\n    } else {\n        char = ((char)((char) + 1));\n    }\n} else if ((char) < (org.apache.commons.lang3.CharRange.char)) {\n    char = ((char)((char) + 1));\n} else {\n    boolean = false;\n}","position":"org.apache.commons.lang3.CharRange:305","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Double[].int) ; int++) {\n    double[][int] = java.lang.Double[][int].doubleValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3304","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final long long = ((long)(int)) * ((long)(org.apache.commons.lang3.math.Fraction.int))","position":"org.apache.commons.lang3.math.Fraction:892","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(org.apache.commons.lang3.math.Fraction.int)) * ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:893","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"fieldName":"fieldName","lhs":"lhs","this":"this","rhs":"lhs"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:823","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:820","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:423","type":"CtReturnImpl"},"status":-2},{"failures":[23,26],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.commaMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:94","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = java.lang.Math.java.lang.Math.min(java.lang.CharSequence[][int].length(), int)","position":"org.apache.commons.lang3.StringUtils:6611","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:360","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableLong:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-2362048321261811743L","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:71","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long[][int] = long","position":"org.apache.commons.lang3.ArrayUtils:1793","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return '1'","position":"org.apache.commons.lang3.Conversion:439","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Need at least 16 bytes for UUID\")","position":"org.apache.commons.lang3.Conversion:1712","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove()","position":"org.apache.commons.lang3.builder.ToStringStyle:213","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"nInts":"org.apache.commons.lang3.concurrent.TimedSemaphore.NO_LIMIT","srcPos":"org.apache.commons.lang3.concurrent.TimedSemaphore.NO_LIMIT"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1190","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"do {\n    boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()));\n    if (!boolean) {\n        java.lang.Object.wait();\n    } else {\n        (int)++;\n    }\n} while (!boolean )","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:302","type":"CtDoImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:756","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)));\n    java.lang.StringBuilder.append(java.lang.String);\n    int += int;\n} else {\n    int = java.lang.String.indexOf(' ', (int + int));\n    if (int >= 0) {\n        java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n        java.lang.StringBuilder.append(java.lang.String);\n        int = int + 1;\n    } else {\n        java.lang.StringBuilder.append(java.lang.String.substring(int));\n        int = int;\n    }\n}","position":"org.apache.commons.lang3.text.WordUtils:201","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:880","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.lang.String.indexOf(' ')","position":"org.apache.commons.lang3.math.Fraction:330","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int + int) == int) {\n    ++int;\n    java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n} else {\n    java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n}","position":"org.apache.commons.lang3.Conversion:1521","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(int < int)","name":"conditionalBoundary","position":"org.apache.commons.lang3.text.StrBuilder:2046","type":"mutation","status":0},{"failures":[],"binaryOperator":"int > 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:312","type":"mutation","status":0},{"failures":[33],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, java.lang.String, org.apache.commons.lang3.StringUtils.java.lang.String, -1)","position":"org.apache.commons.lang3.StringUtils:4356","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasPrevious()) {\n    return java.lang.String[][--(int)];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:551","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char) < (org.apache.commons.lang3.CharRange.char)) {\n    char = ((char)((char) + 1));\n} else {\n    boolean = false;\n}","position":"org.apache.commons.lang3.CharRange:317","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.char[]","position":"org.apache.commons.lang3.text.StrBuilder:379","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:806","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int + int","position":"org.apache.commons.lang3.StringUtils:4532","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.math.Fraction.ZERO":"org.apache.commons.lang3.math.Fraction.ONE"},"name":"add","transplant":{"sourceCode":"return this.org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:214","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} else if (int < 0) {\n    if (int == (java.lang.Integer.int)) {\n        return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n    } \n    return org.apache.commons.lang3.math.Fraction.invert().pow(-int);\n} else {\n    final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(this);\n    if ((int % 2) == 0) {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n    } else {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n    }\n}","position":"org.apache.commons.lang3.math.Fraction:549","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\")","position":"org.apache.commons.lang3.StringEscapeUtils:262","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int |= java.lang.Class<?>.hashCode()","position":"org.apache.commons.lang3.reflect.TypeUtils:210","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (this == org.apache.commons.lang3.text.StrBuilder) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2650","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character.charValue(), int)","position":"org.apache.commons.lang3.CharUtils:289","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:225","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.concat(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.StringUtils:5318","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"o1":"o2","o2":"o1","this":"this"},"name":"add","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:295","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:307","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int)","position":"org.apache.commons.lang3.text.StrBuilder:2894","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.lastIndexOf(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:358","type":"CtLocalVariableImpl"},"status":-2},{"failures":[34],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (short) < short ? -1 : (short) == short ? 0 : 1","position":"org.apache.commons.lang3.mutable.MutableShort:272","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String.toUpperCase()","position":"org.apache.commons.lang3.StringUtils:5591","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2119","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3480","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\")","position":"org.apache.commons.lang3.ObjectUtils:624","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2339","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == (org.apache.commons.lang3.StringUtils.int)) || (int == ((java.lang.String.length()) - (java.lang.String.length())))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2420","type":"CtIfImpl"},"status":0},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule : org.apache.commons.lang3.time.FastDatePrinter.Rule[]) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(java.lang.StringBuffer, java.util.Calendar);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:474","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char = java.lang.String.charAt(java.text.ParsePosition.getIndex())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:340","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'l' :","position":"org.apache.commons.lang3.math.NumberUtils:528","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDateParser:611","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:335","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.Range<T> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:369","type":"CtIfImpl"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,4],"variableMapping":{"index":"i"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1040","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:1918","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1359","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2594","type":"CtIfImpl"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,75,47,55,57,58,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,28,59,108,109,110,111,112,113,114,60,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,61],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3)","position":"org.apache.commons.lang3.time.FastDateParser:520","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < 0) {\n    int += 1000;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:298","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Short[] == null) {\n    return null;\n} else if ((java.lang.Short[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3184","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5421","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"b":"java.lang.Float.NaN"},"name":"replace","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.IEEE754rUtils:256","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    if (java.lang.Float.java.lang.Float.isNaN(float[][int])) {\n        return java.lang.Float.float;\n    } \n    if ((float[][int]) < float) {\n        float = float[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:914","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :","position":"org.apache.commons.lang3.time.DateUtils:1164","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != (-1)) {\n    try {\n        return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    }\n} ","position":"org.apache.commons.lang3.ClassUtils:835","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 1) {\n    return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String.charAt(0), int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2464","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:918","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (boolean) == true","position":"org.apache.commons.lang3.mutable.MutableBoolean:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 4 :\n    return '2';","position":"org.apache.commons.lang3.Conversion:638","type":"CtCaseImpl"},"status":-2},{"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:796","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"formatter":"formatter"},"name":"add","transplant":{"sourceCode":"return java.util.Formatter","position":"org.apache.commons.lang3.text.FormattableUtils:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.FormattableUtils.org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence, java.util.Formatter, int, int, int, char, null)","position":"org.apache.commons.lang3.text.FormattableUtils:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:607","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:606","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence[][int].charAt(int)) != char) {\n    int = int;\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6631","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ true , false , false , false }","position":"org.apache.commons.lang3.Conversion:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.reflect.Type[].int) == 0 ? new java.lang.reflect.Type[]{ null } : java.lang.reflect.Type[]","position":"org.apache.commons.lang3.reflect.TypeUtils:1198","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.NumberUtils:459","type":"CtLocalVariableImpl"},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:939","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"replaceCount":"prio"},"name":"replace","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>\n * A <em>builder<\/em> class for creating instances of {@code\n * BasicThreadFactory}.\n * <\/p>\n * <p>\n * Using this builder class instances of {@code BasicThreadFactory} can be\n * created and initialized. The class provides methods that correspond to\n * the configuration options supported by {@code BasicThreadFactory}. Method\n * chaining is supported. Refer to the documentation of {@code\n * BasicThreadFactory} for a usage example.\n * <\/p>\n * \n * @version $Id$\n */\npublic static class Builder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.concurrent.BasicThreadFactory> {\n    /** \n     * The wrapped factory.\n     */\nprivate java.util.concurrent.ThreadFactory wrappedFactory;\n\n    /** \n     * The uncaught exception handler.\n     */\nprivate java.lang.Thread.UncaughtExceptionHandler exceptionHandler;\n\n    /** \n     * The naming pattern.\n     */\nprivate java.lang.String namingPattern;\n\n    /** \n     * The priority.\n     */\nprivate java.lang.Integer priority;\n\n    /** \n     * The daemon flag.\n     */\nprivate java.lang.Boolean daemonFlag;\n\n    /** \n     * Sets the {@code ThreadFactory} to be wrapped by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param factory the wrapped {@code ThreadFactory} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the passed in {@code ThreadFactory}\n     * is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder wrappedFactory(final java.util.concurrent.ThreadFactory factory) {\n        if (java.util.concurrent.ThreadFactory == null) {\n            throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\");\n        } \n        java.util.concurrent.ThreadFactory = java.util.concurrent.ThreadFactory;\n        return this;\n    }\n\n    /** \n     * Sets the naming pattern to be used by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param pattern the naming pattern (must not be <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the naming pattern is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n        if (java.lang.String == null) {\n            throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n        } \n        java.lang.String = java.lang.String;\n        return this;\n    }\n\n    /** \n     * Sets the daemon flag for the new {@code BasicThreadFactory}. If this\n     * flag is set to <b>true<\/b> the new thread factory will create daemon\n     * threads.\n     * \n     * @param f the value of the daemon flag\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n        java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(boolean);\n        return this;\n    }\n\n    /** \n     * Sets the priority for the threads created by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param prio the priority\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder priority(final int prio) {\n        java.lang.Integer = java.lang.Integer.java.lang.Integer.valueOf(int);\n        return this;\n    }\n\n    /** \n     * Sets the uncaught exception handler for the threads created by the\n     * new {@code BasicThreadFactory}.\n     * \n     * @param handler the {@code UncaughtExceptionHandler} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the exception handler is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder uncaughtExceptionHandler(final java.lang.Thread.UncaughtExceptionHandler handler) {\n        if (java.lang.Thread.UncaughtExceptionHandler == null) {\n            throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\");\n        } \n        java.lang.Thread.UncaughtExceptionHandler = java.lang.Thread.UncaughtExceptionHandler;\n        return this;\n    }\n\n    /** \n     * Resets this builder. All configuration options are set to default\n     * values. Note: If the {@link #build()} method was called, it is not\n     * necessary to call {@code reset()} explicitly because this is done\n     * automatically.\n     */\npublic void reset() {\n        java.util.concurrent.ThreadFactory = null;\n        java.lang.Thread.UncaughtExceptionHandler = null;\n        java.lang.String = null;\n        java.lang.Integer = null;\n        java.lang.Boolean = null;\n    }\n\n    /** \n     * Creates a new {@code BasicThreadFactory} with all configuration\n     * options that have been specified by calling methods on this builder.\n     * After creating the factory {@link #reset()} is called.\n     * \n     * @return the new {@code BasicThreadFactory}\n     */\n@java.lang.Override\n    public org.apache.commons.lang3.concurrent.BasicThreadFactory build() {\n        final org.apache.commons.lang3.concurrent.BasicThreadFactory org.apache.commons.lang3.concurrent.BasicThreadFactory = new org.apache.commons.lang3.concurrent.BasicThreadFactory(this);\n        org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.reset();\n        return org.apache.commons.lang3.concurrent.BasicThreadFactory;\n    }\n}","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:254","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()","position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:2291","type":"CtReturnImpl"},"status":-2},{"failures":[179,180,181],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:511","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((short[].int) != (short[].int)) {\n    int = (short[].int) < (short[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:782","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((long[])(org.apache.commons.lang3.ArrayUtils.removeAll(long[], java.util.BitSet)))","position":"org.apache.commons.lang3.ArrayUtils:5737","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt((int)++)","position":"org.apache.commons.lang3.text.StrBuilder:2866","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int += 3","position":"org.apache.commons.lang3.CharSet:189","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) {\n    switch (char[][java.text.ParsePosition.getIndex()]) {\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String, java.text.ParsePosition, java.lang.StringBuilder, true);\n            break;\n        case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n            int++;\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            final int int = java.text.ParsePosition.getIndex();\n            final int int = org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n            java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(int);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n            java.text.Format java.text.Format = null;\n            java.lang.String java.lang.String = null;\n            if ((char[][java.text.ParsePosition.getIndex()]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                java.lang.String = org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition));\n                java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String);\n                if (java.text.Format == null) {\n                    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n                } \n            } \n            java.util.ArrayList<java.text.Format>.add(java.text.Format);\n            java.util.ArrayList<java.lang.String>.add((java.text.Format == null ? null : java.lang.String));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.text.Format>.size()) == int));\n            org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.util.ArrayList<java.lang.String>.size()) == int));\n            if ((char[][java.text.ParsePosition.getIndex()]) != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) {\n                throw new java.lang.IllegalArgumentException((\"Unreadable format element at position \" + int));\n            } \n        default :\n            java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n            org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n    }\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:158","type":"CtWhileImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":137,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":168,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":30,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":178,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":84,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":35,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":38,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":171,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":170,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":102,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":45,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":118,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":90,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":83,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":167,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":29,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":5,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":51,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":112,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":174,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":19,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":62,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectBuild":156,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":161,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":125,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":40,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":111,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":24,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":172,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":101,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":181,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":12,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":122,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":20,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":169,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":8,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":114,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":21,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":141,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":135,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":173,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":132,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":88,"org.apache.commons.lang3.ConversionTest.testShortToHex":32,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":9,"org.apache.commons.lang3.BooleanUtilsTest.test_isFalse_Boolean":15,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":23,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":73,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":113,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":140,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":104,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":95,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":126,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":39,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":13,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":86,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":106,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":6,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":110,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArray":165,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":108,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":180,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":115,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":147,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":148,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":47,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":107,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":155,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":43,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":87,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":66,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":109,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":41,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":33,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":143,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":123,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":138,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":3,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":82,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":10,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":70,"org.apache.commons.lang3.CharSetTest.testStatics":67,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":145,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":58,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":129,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":100,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":91,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":77,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":64,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":157,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":131,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":119,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":120,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":16,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":71,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":76,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":81,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":37,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":49,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":150,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":17,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":74,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfByteWithStartIndex":1,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":18,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":59,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":79,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArray":164,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":134,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":133,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":151,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":48,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":99,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":53,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":96,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":127,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":149,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":153,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":146,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":142,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":176,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":44,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":85,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":60,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":175,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":179,"org.apache.commons.lang3.ArrayUtilsTest.testContains":72,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":42,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":80,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotFalse_Boolean":14,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":130,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":50,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":63,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArray":162,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":69,"org.apache.commons.lang3.builder.EqualsBuilderTest.testAccessors":158,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":177,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":11,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArray":159,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArray":154,"org.apache.commons.lang3.time.FastDateParserTest.testParses":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":121,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":124,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":136,"org.apache.commons.lang3.mutable.MutableShortTest.testCompareTo":34,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":75,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":93,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":57,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":28,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testValidCharacters":22,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":152,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":105,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":54,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":68,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":139,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":163,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":128,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":65,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReset":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":117,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":92,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObject":166,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":2,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":52,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":144,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":61}}]
