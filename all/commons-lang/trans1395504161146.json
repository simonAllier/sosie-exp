[{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:206","sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:284","sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:433","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, true)) < 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"object":"result"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:544","sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:558","sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","numeric":"numeric","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:222","sourceCode":"return short","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:231","sourceCode":"return double","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:107","failures":[2],"status":-1,"name":"returnValue","return":"return 4","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:817","sourceCode":"return -1","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:184","failures":[3,4,5,6,7],"status":-1,"binaryOperator":"(int * ((long)(int)))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:980","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[8,9,10,10,11,12,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:980","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:473","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendCyclicObject(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,11,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1016","failures":[24],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:221","sourceCode":"return (java.util.Calendar.getTime().getTime()) == (java.util.Calendar.getTime().getTime())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:162","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar, java.util.Calendar)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cal1":"cal1","cal2":"cal2"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:447","sourceCode":"return boolean ? int : int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:469","sourceCode":"return java.lang.Boolean.booleanValue() ? int : int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:477","failures":[25,26,27,28,29,30],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:178","sourceCode":"this.double -= double","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:157","sourceCode":"this.double += double","type":"CtOperatorAssignmentImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1400","sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1367","sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    boolean = true;\n    boolean = false;\n} else if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    boolean = true;\n} else if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    if (boolean) {\n        return false;\n    } \n    if (!boolean) {\n        return false;\n    } \n    boolean = true;\n    boolean = true;\n} else if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:479","sourceCode":"try {\n    if (java.lang.Object instanceof java.util.Collection<?>) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n        }\n    } else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n        }\n    } else if (java.lang.Object instanceof long[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof int[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof short[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof byte[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof char[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof double[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof float[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object instanceof boolean[]) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n        }\n    } else if (java.lang.Object.getClass().isArray()) {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n        }\n    } else {\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n        } else {\n            org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n        }\n    }\n} finally {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object);\n}","type":"CtTryImpl"},"failures":[33,34,35,8,36,37,38,39,40,9,41,42,43,44,45,45,46,46,47,48,48,49,49,50,50,51,51,16,16,52,52,17,17,53,54,54,55,55,56,56,57,58,58,18,59,59,60,61,62,19,19,63,64,65,66,66,67,67,68,69,70,70,71,71,25,25,72,72,73,73,74,74,75,75,76,76,26,26,27,27,77,77,78,78,79,80,81,82,82,20,20,83,83,10,10,11,84,84,85,85,28,28,86,86,21,21,87,87,22,22,88,89,89,90,90,91,92,92,93,93,94,94,23,95,95,96,96,97,97,98,98,99,29,29,30,30,100,100,101,101,102,103,12,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,13,120,121,122,123,124,14,125,126,127,128,129,15,130,131,132,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:728","sourceCode":"int int = 10","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1476","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:61","sourceCode":"try {\n    java.lang.reflect.AccessibleObject.setAccessible(true);\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:59","sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isPublic(java.lang.reflect.Member.getModifiers())) && org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(java.lang.reflect.Member.getDeclaringClass().getModifiers()))) {\n    try {\n        java.lang.reflect.AccessibleObject.setAccessible(true);\n    } catch (final java.lang.SecurityException java.lang.SecurityException) {\n    }\n} ","type":"CtIfImpl"},"failures":[134,135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:370","sourceCode":"if (short[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1255","sourceCode":"if (0 == int) {\n    return short[];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1396","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1423","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[55,72,83],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:138","sourceCode":"return false","type":"CtReturnImpl"},"failures":[136,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:186","sourceCode":"long = (int * ((long)(int))) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:184","sourceCode":"long = (int * ((long)(int))) - int","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:95","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.ObjectUtils:545","failures":[139],"status":-1,"binaryOperator":"(((java.util.TreeSet<T>.size()) - 1) / 2)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:289","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, java.util.Locale)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:227","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, java.util.TimeZone, java.util.Locale)","type":"CtReturnImpl"},"failures":[140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:865","failures":[],"status":0,"binaryOperator":"(37 * 17)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:689","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","type":"CtThrowImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:895","failures":[142,143],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToByte":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":19,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteField":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":27,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":72,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":90,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":23,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":112,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":135,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":128,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":35,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":55,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":51,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":59,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":15,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":110,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":74,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":71,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian_emptyItems":138,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":12,"org.apache.commons.lang3.math.FractionTest.testGets":3,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":95,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":41,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":102,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":60,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":49,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":5,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":97,"org.apache.commons.lang3.math.FractionTest.testPow":142,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":36,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":39,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValuePrimitive":31,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":125,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":78,"org.apache.commons.lang3.math.FractionTest.testCompareTo":143,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":20,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":122,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":141,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":87,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":106,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":103,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":76,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":83,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":100,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":40,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":8,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":93,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":119,"org.apache.commons.lang3.ArrayUtilsTest.testToString":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":89,"org.apache.commons.lang3.math.FractionTest.testToString":4,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":54,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":126,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":99,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":69,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":43,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":32,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":48,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":56,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":61,"org.apache.commons.lang3.ObjectUtilsTest.testMin":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":65,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.math.FractionTest.testToProperString":6,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":21,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":129,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":53}}]
