[{"failures":[0,1,2,3],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 4","position":"org.apache.commons.lang3.time.FastDatePrinter:835","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2767","type":"CtReturnImpl"},"status":-1},{"failures":[4],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.Future<T>) == null) {\n    throw new java.lang.IllegalStateException(\"start() must be called first!\");\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:232","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1550","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.text.WordUtils:414","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return '2'","position":"org.apache.commons.lang3.Conversion:571","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:328","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(false)","position":"org.apache.commons.lang3.text.StrTokenizer:98","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.ClassUtils:1014","type":"CtReturnImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13],"variableMapping":{"result":"array","array":"array","this":"this","index":"srcIndex","end":"srcIndex","dest":"destIndex"},"name":"replace","transplant":{"sourceCode":"if ((int - int) > 1) {\n    final int int = (int - int) - 1;\n    int -= int;\n    java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, int);\n} ","position":"org.apache.commons.lang3.ArrayUtils:6038","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.System.java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int);\n} ","position":"org.apache.commons.lang3.ArrayUtils:6085","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.math.Fraction.ZERO":"org.apache.commons.lang3.math.Fraction.ZERO"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:801","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.equals(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:471","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:539","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:437","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","pos":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return java.lang.String.substring(int)","position":"org.apache.commons.lang3.StringUtils:2255","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == (org.apache.commons.lang3.StringUtils.int)) || (int == ((java.lang.String.length()) - (java.lang.String.length())))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2420","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final long long = (65535L & (short[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:733","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Float java.lang.Float = java.lang.Float[][int]","position":"org.apache.commons.lang3.ArrayUtils:3395","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:1131","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:968","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char == '0') {\n    int++;\n} else {\n    break;\n}","position":"org.apache.commons.lang3.math.NumberUtils:470","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1611","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1361","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(org.apache.commons.lang3.concurrent.ConstantInitializer.java.lang.String, java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(this)), java.lang.String.java.lang.String.valueOf(org.apache.commons.lang3.concurrent.ConstantInitializer<T>.getObject()))","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:127","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:335","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:2535","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>[][int], (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.Type) ? java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type) : java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:876","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1443","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.byte += byte","position":"org.apache.commons.lang3.mutable.MutableByte:138","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: too large to negate\")","position":"org.apache.commons.lang3.math.Fraction:513","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\")","position":"org.apache.commons.lang3.text.StrSubstitutor:976","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int[][int] = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:1757","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5514","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.String java.lang.String = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:310","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String)","position":"org.apache.commons.lang3.time.FormatCache:207","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","position":"org.apache.commons.lang3.reflect.TypeUtils:910","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.TypeUtils:966","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.time.FormatCache:254","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.TypeUtils:1299","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"map":"map","key":"key"},"name":"add","transplant":{"sourceCode":"final V V = java.util.concurrent.ConcurrentMap<K, V>.get(K)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final V V = java.util.concurrent.ConcurrentMap<K, V>.putIfAbsent(K, V)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:246","type":"CtLocalVariableImpl"},"status":-2},{"failures":[14,15,16,17,18,19,20,21],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.CharSequence.charAt(int);\n    for (int int = 0 ; int < int ; int++) {\n        if ((char[][int]) == char) {\n            if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n                if (int == int) {\n                    return false;\n                } \n                if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n                    return false;\n                } \n            } else {\n                return false;\n            }\n        } \n    }\n}","position":"org.apache.commons.lang3.StringUtils:1882","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5516","type":"CtReturnImpl"},"status":-2},{"failures":[22,22,23,24,25,25,26,27,28,29,30,31,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:512","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:517","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = \"1\"","position":"org.apache.commons.lang3.math.Fraction:935","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(((java.lang.reflect.Type[].int) == 1) && (java.lang.Object.java.lang.Object.equals(java.lang.reflect.Type[][0])))) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" extends \"), \" & \", java.lang.reflect.Type[]);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1813","type":"CtIfImpl"},"status":-2},{"failures":[46,47],"variableMapping":{"this":"t"},"name":"replace","transplant":{"sourceCode":"java.lang.Thread.currentThread().interrupt()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getUncaughtExceptionHandler()) != null) {\n    java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler());\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:226","type":"CtIfImpl"},"status":-1},{"failures":[48,49,50],"variableMapping":{"index":"size","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"this.char[][int] = 'e'","position":"org.apache.commons.lang3.text.StrBuilder:1581","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][((int) + int)] = char","position":"org.apache.commons.lang3.text.StrBuilder:1396","type":"CtAssignmentImpl"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"variableMapping":{"c":"calendar"},"name":"add","transplant":{"sourceCode":"java.util.Calendar.setLenient(false)","position":"org.apache.commons.lang3.time.DateUtils:652","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(java.lang.StringBuffer, java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDatePrinter:475","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T = T","position":"org.apache.commons.lang3.concurrent.LazyInitializer:99","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int","position":"org.apache.commons.lang3.StringUtils:5687","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0)","position":"org.apache.commons.lang3.time.FastDateParser:289","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 1 :\n    return new org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField(int);","position":"org.apache.commons.lang3.time.FastDatePrinter:359","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","t1":"type","t2":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.lang.reflect.Type);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1575","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:556","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:418","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.Class<? extends java.lang.annotation.Annotation>.getDeclaredMethods()) {\n    if (((java.lang.reflect.Method.getParameterTypes().int) == 0) && org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.reflect.Method.getReturnType()))) {\n        final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n        final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n        if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n            return false;\n        } \n    } \n}","position":"org.apache.commons.lang3.AnnotationUtils:137","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.byte += byte","position":"org.apache.commons.lang3.mutable.MutableByte:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte = ((byte)((byte & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:1164","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = int >= 6","position":"org.apache.commons.lang3.time.DateUtils:1073","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(double, double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:227","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.math.NumberUtils:971","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:602","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.ArrayUtils:6019","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return char","position":"org.apache.commons.lang3.Conversion:607","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 10","position":"org.apache.commons.lang3.Conversion:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5551","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(java.lang.Class<T>, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:113","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1120","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String.charAt(0), int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2340","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" Server 2008\"), \"6.1\")","position":"org.apache.commons.lang3.SystemUtils:1164","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(T[])","position":"org.apache.commons.lang3.ArrayUtils:3719","type":"CtReturnImpl"},"status":-2},{"failures":[73,74],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Arguments cannot both be null\")","position":"org.apache.commons.lang3.ArrayUtils:4013","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:631","type":"CtThrowImpl"},"status":-1},{"failures":[],"binaryOperator":"((char)((org.apache.commons.lang3.CharRange.char) + 1))","name":"math","position":"org.apache.commons.lang3.CharacterIterator:291","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2210","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableByte) {\n    return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(java.lang.Object)).byteValue());\n} ","position":"org.apache.commons.lang3.mutable.MutableByte:246","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.math.Fraction:897","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Calendar.compareTo(java.util.Calendar)","position":"org.apache.commons.lang3.time.DateUtils:1784","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.util.List<java.lang.Class<?>>) {\n    if (java.lang.Class<?> == null) {\n        java.util.List<java.lang.String>.add(null);\n    } else {\n        java.util.List<java.lang.String>.add(java.lang.Class<?>.getName());\n    }\n}","position":"org.apache.commons.lang3.ClassUtils:429","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.DiffResult.OBJECTS_SAME_STRING":"this"},"name":"replace","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.DiffResult:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.valueOf(double)","position":"org.apache.commons.lang3.mutable.MutableDouble:312","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Custom specialization of the standard JDK {@link java.io.ObjectInputStream}\n * that uses a custom  <code>ClassLoader<\/code> to resolve a class.\n * If the specified <code>ClassLoader<\/code> is not able to resolve the class,\n * the context classloader of the current thread will be used.\n * This way, the standard deserialization work also in web-application\n * containers and application servers, no matter in which of the\n * <code>ClassLoader<\/code> the particular class that encapsulates\n * serialization/deserialization lives. <\/p>\n * \n * <p>For more in-depth information about the problem for which this\n * class here is a workaround, see the JIRA issue LANG-626. <\/p>\n */\nstatic class ClassLoaderAwareObjectInputStream extends java.io.ObjectInputStream {\n    private static final java.util.Map<java.lang.String, java.lang.Class<?>> primitiveTypes = new java.util.HashMap<java.lang.String, java.lang.Class<?>>();\n\n    private final java.lang.ClassLoader classLoader;\n\n    /** \n     * Constructor.\n     * @param in The <code>InputStream<\/code>.\n     * @param classLoader classloader to use\n     * @throws IOException if an I/O error occurs while reading stream header.\n     * @see java.io.ObjectInputStream\n     */\npublic ClassLoaderAwareObjectInputStream(final java.io.InputStream in ,final java.lang.ClassLoader classLoader) throws java.io.IOException {\n        java.io.ObjectInputStream.super(java.io.InputStream);\n        this.java.lang.ClassLoader = java.lang.ClassLoader;\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"byte\", byte.byte);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"short\", short.short);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"int\", int.int);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"long\", long.long);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"float\", float.float);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"double\", double.double);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"boolean\", boolean.boolean);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"char\", char.char);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"void\", void.void);\n    }\n\n    /** \n     * Overriden version that uses the parametrized <code>ClassLoader<\/code> or the <code>ClassLoader<\/code>\n     * of the current <code>Thread<\/code> to resolve the class.\n     * @param desc An instance of class <code>ObjectStreamClass<\/code>.\n     * @return A <code>Class<\/code> object corresponding to <code>desc<\/code>.\n     * @throws IOException Any of the usual Input/Output exceptions.\n     * @throws ClassNotFoundException If class of a serialized object cannot be found.\n     */\n@java.lang.Override\n    protected java.lang.Class<?> resolveClass(final java.io.ObjectStreamClass desc) throws java.io.IOException, java.lang.ClassNotFoundException {\n        final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName();\n        try {\n            return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.ClassLoader);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n            try {\n                return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n            } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n                if (java.lang.Class<?> != null) {\n                    return java.lang.Class<?>;\n                } else {\n                    throw java.lang.ClassNotFoundException;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:284","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case '3' :\n    return new boolean[]{ false , false , true , true };","position":"org.apache.commons.lang3.Conversion:228","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((this.java.lang.Object.getClass()) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.getClass())) {\n    return false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:636","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:898","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"numeric","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:478","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:567","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, long)","position":"org.apache.commons.lang3.builder.ToStringBuilder:444","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.tuple.ImmutablePair:101","type":"CtThrowImpl"},"status":-2},{"failures":[75,76],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:5151","type":"mutation","status":-1},{"failures":[77],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.SplitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.org.apache.commons.lang3.time.StopWatch.SplitState)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:382","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:694","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.this(org.apache.commons.lang3.text.StrBuilder.int)","position":"org.apache.commons.lang3.text.StrBuilder:103","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int))","position":"org.apache.commons.lang3.text.StrBuilder:1557","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1628","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrSubstitutor:475","type":"CtReturnImpl"},"status":-2},{"failures":[78],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<L>.add(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:228","type":"CtInvocationImpl"},"status":-1},{"failures":[79],"name":"returnValue","position":"org.apache.commons.lang3.Range:298","type":"mutation","return":"return 0","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 2) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:211","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; (--int) >= int ; ) {\n    java.lang.StringBuffer.append('0');\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:865","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String)","position":"org.apache.commons.lang3.time.FormatCache:207","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:913","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.ArrayUtils:3742","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[].getClass().getComponentType().isInstance(java.lang.Object)) {\n    for (int int = int ; int >= 0 ; int--) {\n        if (java.lang.Object.equals(java.lang.Object[][int])) {\n            return int;\n        } \n    }\n} ","position":"org.apache.commons.lang3.ArrayUtils:1968","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = 16","position":"org.apache.commons.lang3.math.NumberUtils:737","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + byte","position":"org.apache.commons.lang3.builder.HashCodeBuilder:607","type":"CtAssignmentImpl"},"status":-2},{"failures":[80],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:4149","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (char[].int) < (char[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:823","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, org.apache.commons.lang3.time.DateFormatUtils.java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuilder, java.lang.Object)","position":"org.apache.commons.lang3.ObjectUtils:272","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'f' :","position":"org.apache.commons.lang3.Conversion:197","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(char).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:1017","type":"CtReturnImpl"},"status":0},{"failures":[81,82],"binaryOperator":"(1 << ((E.ordinal()) % (java.lang.Long.int)))","name":"math","position":"org.apache.commons.lang3.EnumUtils:273","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String.toUpperCase()","position":"org.apache.commons.lang3.StringUtils:5591","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1884","type":"CtReturnImpl"},"status":-2},{"failures":[83,84],"variableMapping":{"str":"str","startIndex":"startIndex","size":"startIndex"},"name":"add","transplant":{"sourceCode":"if ((java.lang.String == null) || (int >= int)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || (int < 0)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2459","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1506","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(boolean[], int)","position":"org.apache.commons.lang3.ArrayUtils:4711","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(boolean[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4678","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)))","position":"org.apache.commons.lang3.math.Fraction:351","type":"CtLocalVariableImpl"},"status":-2},{"failures":[85],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4284","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4253","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (char[] == null) || ((char[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3543","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Long.java.lang.Long.valueOf(-1L)","position":"org.apache.commons.lang3.math.NumberUtils:38","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"assert ((int - 1) * 1) < (16 - int)","position":"org.apache.commons.lang3.Conversion:1626","type":"CtAssertImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Long[].int) ; int++) {\n    final java.lang.Long java.lang.Long = java.lang.Long[][int];\n    long[][int] = java.lang.Long == null ? long : java.lang.Long.longValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3054","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"value"},"name":"add","transplant":{"sourceCode":"if (java.lang.Integer == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:369","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:470","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtIfImpl"},"status":-2},{"failures":[86,87],"variableMapping":{"fieldName":"org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.CSV_QUOTE_STR"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, ((org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String) + (org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String)), org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.java.lang.String))","position":"org.apache.commons.lang3.StringEscapeUtils:409","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(long[], 0, long[].int)","position":"org.apache.commons.lang3.ArrayUtils:1453","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> != null) {\n    return java.lang.Class<?>;\n} else {\n    throw java.lang.ClassNotFoundException;\n}","position":"org.apache.commons.lang3.SerializationUtils:329","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return ((java.lang.Class<?>)(java.lang.reflect.Type));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1267","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1272","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.math.Fraction.ZERO":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:214","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int)","position":"org.apache.commons.lang3.math.Fraction:340","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedException:169","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (-1)) {\n    if ((int < int) || (int > (java.lang.String.length()))) {\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    } \n    java.lang.String = java.lang.String.substring((int + 1), int);\n} else {\n    java.lang.String = java.lang.String.substring((int + 1));\n}","position":"org.apache.commons.lang3.math.NumberUtils:497","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream java.io.ObjectInputStream = null","position":"org.apache.commons.lang3.SerializationUtils:219","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence","position":"org.apache.commons.lang3.StringUtils:6774","type":"CtLocalVariableImpl"},"status":0},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"variableMapping":{"replaceCount":"trimStart"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n    org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n    int += int * 2;\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:756","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.CharRange(char , char , true)","position":"org.apache.commons.lang3.CharRange:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = 65535L << int","position":"org.apache.commons.lang3.Conversion:734","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"hierarchyTraversal : while (java.util.Iterator<java.lang.Class<?>>.hasNext()) {\n    final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next();\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.Class<?>[]);\n    if (java.lang.reflect.Method == null) {\n        continue;\n    } \n    if (java.util.Arrays.java.util.Arrays.equals(java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) {\n        java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n        continue;\n    } \n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass());\n    for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n            continue hierarchyTraversal;\n        } \n    }\n    java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","position":"org.apache.commons.lang3.reflect.MethodUtils:522","type":"CtWhileImpl"},"status":-2},{"failures":[103],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case 'B' :\n    return 13;","position":"org.apache.commons.lang3.Conversion:126","type":"CtCaseImpl"},"status":-1},{"failures":[104,105,105,106,107,108,109,110,111,112,113,114,115,116,117,118,22,23,24,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,25,26,26,27,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayContentDetail(true)","position":"org.apache.commons.lang3.AnnotationUtils:57","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:399","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3487","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.Object.getClass(), java.lang.Object.getClass())) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:274","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.CharSetUtils:71","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this.T.equals(org.apache.commons.lang3.mutable.MutableObject<?>.?)","position":"org.apache.commons.lang3.mutable.MutableObject:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte byte = byte","position":"org.apache.commons.lang3.Conversion:1158","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"pattern":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:301","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int >= 4) && ((java.lang.String.charAt(int)) == '^')) && ((java.lang.String.charAt((int + 2))) == '-')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isNotIn(java.lang.String.charAt((int + 1)), java.lang.String.charAt((int + 3))));\n    int += 4;\n} else if ((int >= 3) && ((java.lang.String.charAt((int + 1))) == '-')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isIn(java.lang.String.charAt(int), java.lang.String.charAt((int + 2))));\n    int += 3;\n} else if ((int >= 2) && ((java.lang.String.charAt(int)) == '^')) {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.isNot(java.lang.String.charAt((int + 1))));\n    int += 2;\n} else {\n    java.util.Set<org.apache.commons.lang3.CharRange>.add(org.apache.commons.lang3.CharRange.org.apache.commons.lang3.CharRange.is(java.lang.String.charAt(int)));\n    int += 1;\n}","position":"org.apache.commons.lang3.CharSet:182","type":"CtIfImpl"},"status":0},{"failures":[153,154],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.MemberUtils:173","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:914","type":"CtAssignmentImpl"},"status":-1},{"failures":[155],"variableMapping":{"result":"start"},"name":"replace","transplant":{"sourceCode":"int = 17","position":"org.apache.commons.lang3.Range:431","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:4949","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char < 256) {\n    return \"\\\\u00\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} else if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:758","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(java.lang.String + \" is not a supported timezone name\")","name":"math","position":"org.apache.commons.lang3.time.TimeZoneStrategy:792","type":"mutation","status":-2},{"failures":[156,157,158,159,160,161,162,163],"variableMapping":{"type":"clazz"},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getComponentType()","position":"org.apache.commons.lang3.AnnotationUtils:228","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:342","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.throwCause(java.util.concurrent.ExecutionException)","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:65","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = ((char)((java.util.Random.nextInt(int)) + int))","position":"org.apache.commons.lang3.RandomStringUtils:257","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":111,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":7,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":77,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_String":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":117,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":22,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":6,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":76,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":128,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":140,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloatWithStartIndex":3,"org.apache.commons.lang3.concurrent.AtomicSafeInitializerTest.testNumberOfInitializeInvocations":47,"org.apache.commons.lang3.ValidateTest.testValidIndex_array":73,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":23,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":83,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":135,"org.apache.commons.lang3.ArrayUtilsTest.testContainsFloat":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":58,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":75,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":151,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":152,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":28,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":136,"org.apache.commons.lang3.StringUtilsTest.testOverlay_StringStringIntInt":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":146,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":62,"org.apache.commons.lang3.StringUtilsTest.testJoin_IterableString":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":106,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":82,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_array":74,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":8,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":16,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":123,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfFloat":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":26,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":9,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":134,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":45,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":109,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":25,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":138,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":84,"org.apache.commons.lang3.text.StrTokenizerTest.test8":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":142,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":66,"org.apache.commons.lang3.text.StrTokenizerTest.test5":98,"org.apache.commons.lang3.text.StrTokenizerTest.test4":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":55,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":56,"org.apache.commons.lang3.text.StrTokenizerTest.test7":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":144,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":159,"org.apache.commons.lang3.text.StrTokenizerTest.test1":94,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":15,"org.apache.commons.lang3.text.StrTokenizerTest.test3":96,"org.apache.commons.lang3.text.StrTokenizerTest.test2":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":119,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":160,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":131,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetBeforeStart":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":147,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":65,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":154,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":88,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":162,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":130,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":92,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":118,"org.apache.commons.lang3.event.EventListenerSupportTest.testSerialization":78,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":145,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":125,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":41,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":122,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":101,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":153,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":161,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":63,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":17,"org.apache.commons.lang3.RangeTest.testElementCompareTo":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":42,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":124,"org.apache.commons.lang3.StringUtilsTest.testRemoveStartIgnoreCase":85,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":53,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":126,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":121,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":114}}]
