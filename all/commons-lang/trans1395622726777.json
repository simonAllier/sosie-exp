[{"transplant":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:109","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:237","sourceCode":"return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(java.lang.Object)).intValue())","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:235","sourceCode":"org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return java.lang.Float.float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:124","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float, float), float)","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1635","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:939","sourceCode":"long long = long[][0]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:481","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:527","sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","type":"CtSwitchImpl"},"failures":[21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"dec","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:232","sourceCode":"if ((java.util.concurrent.Future<T>) == null) {\n    throw new java.lang.IllegalStateException(\"start() must be called first!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,30,31,3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:496","sourceCode":"if (java.lang.reflect.Method != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:485","sourceCode":"if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1808","sourceCode":"long long = this.long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:261","sourceCode":"final long long = org.apache.commons.lang3.mutable.MutableLong.long","type":"CtLocalVariableImpl"},"failures":[60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Long.MAX_VALUE":"value"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1070","sourceCode":"int -= 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"offset":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:516","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1653","sourceCode":"if (0 == int) {\n    return boolean[];\n} ","type":"CtIfImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:683","sourceCode":"java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:174","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.NoSuchMethodException((\"No such accessible constructor on object: \" + (java.lang.Class<T>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1478","inlineConstant":"int int = 0","failures":[67],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:118","sourceCode":"short++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:984","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:153","sourceCode":"if (java.lang.Class<?> == null) {\n    float += 1.5F;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:137","sourceCode":"if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    float += 0.25F;\n    break;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"srcClass":"srcClass","cost":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:132","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    return org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class<?>, java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:133","sourceCode":"return org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class<?>, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"destClass":"destClass","srcClass":"srcClass","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:139","sourceCode":"return 15","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"failures":[69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:905","sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n}","type":"CtIfImpl"},"failures":[70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:547","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:564","sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","type":"CtIfImpl"},"failures":[83],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1399","sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:2962","sourceCode":"int = ++int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:281","sourceCode":"int = (int * int) + int","type":"CtAssignmentImpl"},"failures":[84,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"start":"a1","i":"a1"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:181","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(char[])","type":"CtInvocationImpl"},"failures":[87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cloned":"tok"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:103","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":8,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":30,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":36,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":63,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":86,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":44,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":46,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":77,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":38,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":50,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":34,"org.apache.commons.lang3.math.FractionTest.testFactory_double":84,"org.apache.commons.lang3.ConversionTest.testShortToHex":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":81,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":73,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":48,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":16,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":79,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":59,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":3,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":78,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":20,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":19,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":12,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":6,"org.apache.commons.lang3.ConversionTest.testHexToShort":68,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":17,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":53,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":2,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":65,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":54,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":51,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":37,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":88,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":15,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":52,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":23,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":9,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":71,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":7,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":49,"org.apache.commons.lang3.ConversionTest.testByteToBinary":66,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":22,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":82,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":4,"org.apache.commons.lang3.mutable.MutableLongTest.testCompareToNull":61,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":41,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":25,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":47,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":35,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":5,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":28,"org.apache.commons.lang3.ObjectUtilsTest.testMode":83,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":42,"org.apache.commons.lang3.mutable.MutableLongTest.testCompareTo":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":75,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":55,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":32,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":10,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":76,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":31,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":39,"org.apache.commons.lang3.math.FractionTest.testToProperString":85,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":13,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":29,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":45,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":57,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":74,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":58,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":33,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":14,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":62,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":1,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":27}}]
