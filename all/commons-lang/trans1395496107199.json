[{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:678","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:770","failures":[7],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:239","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(((org.apache.commons.lang3.text.StrLookup<?>)(null)), org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrSubstitutor.char)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:982","failures":[14],"status":-1,"binaryOperator":"(15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:206","sourceCode":"org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:226","sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getUncaughtExceptionHandler()) != null) {\n    java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler());\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:138","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:563","sourceCode":"return '4'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:538","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'b';\n} else {\n    return 'a';\n}","type":"CtIfImpl"},"failures":[26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:231","sourceCode":"java.lang.Thread.setPriority(org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority().intValue())","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1264","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.mutable.MutableLong:237","failures":[29],"status":-1,"binaryOperator":"(long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:327","sourceCode":"while (int != 0) {\n    int += 12 * int;\n    int = 0;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1398","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = ((int)(15 & (long >> int)));\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"months":"shift","years":"shift"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1203","sourceCode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:580","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:98","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1157","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[])","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","failures":[33,34],"status":-1,"binaryOperator":"(int < (int))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:152","sourceCode":"final java.util.ArrayList<java.lang.String> java.util.ArrayList<java.lang.String> = new java.util.ArrayList<java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:157","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.ArrayUtils:1245","failures":[35],"status":-1,"binaryOperator":"((((long[] == null) && (long[] != null)) && ((long[].int) > 0)) || (((long[] == null) && (long[] != null)) && ((long[].int) > 0)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1687","sourceCode":"if (int > 16) {\n    throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nBytes":"lengthChange"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:537","sourceCode":"if ((int > (int + 2)) && (boolean[][(int + 2)])) {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return 'b';\n    } else {\n        return 'a';\n    }\n} else {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return '9';\n    } else {\n        return '8';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:357","sourceCode":"if (boolean[][int]) {\n    return '1';\n} else {\n    return '0';\n}","type":"CtIfImpl"},"failures":[36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"srcPos","src":"src"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1118","sourceCode":"if (int < int) {\n    int = int;\n} ","type":"CtIfImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1049","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1230","failures":[44],"status":-1,"binaryOperator":"(int * 16)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:419","sourceCode":"int = 0","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:417","sourceCode":"long += int","type":"CtOperatorAssignmentImpl"},"failures":[45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:543","sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:491","sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:955","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:311","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"builder","this":"builder"}},{"position":"org.apache.commons.lang3.time.FastDateParser:289","failures":[],"status":0,"binaryOperator":"(int + (java.util.regex.Matcher.end()))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1663","sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1000","sourceCode":"if ((java.util.Date.getTime()) != long) {\n    java.util.Date.setTime(long);\n    java.util.Calendar.setTime(java.util.Date);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"date":"date"}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:141","sourceCode":"java.lang.StringBuilder.append(\"\\t[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:241","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:935","sourceCode":"java.lang.String = \"1\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:936","sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toProperString":"toProperString"}},{"position":"org.apache.commons.lang3.text.WordUtils:202","failures":[57,58,59,60],"status":-1,"binaryOperator":"(int == 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:265","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = char;\n    int--;\n    char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:274","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","count":"count","random":"random","ch":"ch"}},{"position":"org.apache.commons.lang3.Conversion:880","failures":[62],"status":-1,"binaryOperator":"(255 & (byte[][(int + int)]))","name":"math","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":34,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":57,"org.apache.commons.lang3.CharSetTest.testContains_Char":47,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoNamingPattern":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":32,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthLong":35,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":13,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":3,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":33,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":24,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":36,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":6,"org.apache.commons.lang3.time.DateUtilsTest.testRound":40,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":38,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":54,"org.apache.commons.lang3.ConversionTest.testHexToShort":14,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":62,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":28,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":31,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":41,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonFalse":19,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":27,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":39,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":56,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoExHandler":18,"org.apache.commons.lang3.ConversionTest.testLongToHex":30,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":46,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":58,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":51,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":25,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":4,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":29,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":43,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":22,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":59,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":49,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":37,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":1,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":61,"org.apache.commons.lang3.ConversionTest.testLongToShortArray":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":8,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":20,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":52,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":53,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoPriority":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":10,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoDaemonFlag":15,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":21,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":50,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":0,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":48,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":60,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAverageCallsPerPeriod":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":9,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":16,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":55,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":5}}]
