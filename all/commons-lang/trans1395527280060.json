[{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:865","sourceCode":"org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.1\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1104","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(org.apache.commons.lang3.SystemUtils.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:174","sourceCode":"throw new java.lang.IllegalArgumentException(\"The String must not be empty\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:510","sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:525","sourceCode":"return 'f'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:439","sourceCode":"return '1'","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:335","failures":[3,4],"status":-1,"binaryOperator":"(int + 2)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:858","sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:939","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","date":"date","this":"this"}},{"position":"org.apache.commons.lang3.math.NumberUtils:1371","failures":[6],"status":-1,"binaryOperator":"(char[][int]) == '.'","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:146","sourceCode":"float++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:168","sourceCode":"this.float += java.lang.Number.floatValue()","type":"CtOperatorAssignmentImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cost":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:205","sourceCode":"final char[] char[] = java.lang.String.toCharArray()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:505","sourceCode":"java.lang.String = java.lang.String.substring(0, int)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:222","failures":[8,9,10,11,12,13,14],"status":-1,"binaryOperator":"((java.util.Comparator<T>.compare(T, T)) > (-1)) && ((java.util.Comparator<T>.compare(T, T)) < 1)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:762","sourceCode":"org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1))","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Range:383","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"Cannot calculate intersection with non-overlapping range %s\", org.apache.commons.lang3.Range<T>))","type":"CtThrowImpl"},"failures":[21,14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:895","failures":[22,23],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1295","sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","type":"CtReturnImpl"},"failures":[24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:166","sourceCode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double[][int], double)","type":"CtAssignmentImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1359","sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:737","sourceCode":"if (java.lang.String.startsWith(\"#\", int)) {\n    int = 16;\n    int++;\n} else if ((java.lang.String.startsWith(\"0\", int)) && ((java.lang.String.length()) > (int + 1))) {\n    int = 8;\n    int++;\n} ","type":"CtIfImpl"},"failures":[27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"radix","nBytes":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:48","sourceCode":"java.lang.Short.java.lang.Short.valueOf(((short)(1)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:181","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][0] = int;\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[]);\n    int = int[][0];\n    final int int = java.lang.String.length();\n    if (int == 0) {\n        break;\n    } \n    org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule;\n    final char char = java.lang.String.charAt(0);\n    switch (char) {\n        case 'G' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'y' :\n            if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n            }\n            break;\n        case 'M' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 3) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n            }\n            break;\n        case 'd' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'h' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'H' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'm' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 's' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'S' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'E' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n            break;\n        case 'D' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'F' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'w' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'W' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'a' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'k' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'K' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'z' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            }\n            break;\n        case 'Z' :\n            if (int == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            }\n            break;\n        case '\\'' :\n            final java.lang.String java.lang.String = java.lang.String.substring(1);\n            if ((java.lang.String.length()) == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n            }\n            break;\n        default :\n            throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n    }\n    java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.add(org.apache.commons.lang3.time.FastDatePrinter.Rule);\n}","type":"CtForImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateFormatUtils:42","sourceCode":"java.util.TimeZone.java.util.TimeZone.getTimeZone(\"GMT\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:74","sourceCode":"java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getDefault()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:117","sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.org.apache.commons.lang3.builder.ToStringStyle","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1043","sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2784","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:123","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:751","sourceCode":"int int = int + int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:252","sourceCode":"final int int = int - int","type":"CtLocalVariableImpl"},"failures":[59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"end","offset":"end"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:226","sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getUncaughtExceptionHandler()) != null) {\n    java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:231","sourceCode":"java.lang.Thread.setPriority(org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority().intValue())","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4722","sourceCode":"boolean[][int] = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1560","sourceCode":"boolean[][(int + int)] = (1 & (long >> int)) != 0","type":"CtAssignmentImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"noMoreMatchesForReplIndex":"dst","i":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:935","sourceCode":"char = char","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:331","sourceCode":"char = 'Q'","type":"CtAssignmentImpl"},"failures":[65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"escapeChar":"c","escapeCharacter":"c"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:742","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:450","sourceCode":"do {\n    int = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(char[], java.text.ParsePosition.getIndex());\n    java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + int));\n} while ((int > 0) && ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"pos":"len"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1042","sourceCode":"return double","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Double.NaN":"max"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:789","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"yes\", \"no\", null)","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:481","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:483","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)","type":"CtReturnImpl"},"failures":[27,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:409","sourceCode":"final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1092","sourceCode":"if (short[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[]);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1054","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1691","sourceCode":"if (int >= 8) {\n    org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getLeastSignificantBits(), 0, byte[], (int + 8), (int - 8));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1692","sourceCode":"org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getLeastSignificantBits(), 0, byte[], (int + 8), (int - 8))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"dstPos","src":"src","dst":"dst","nBytes":"nBytes","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1999","sourceCode":"int = (int + int) - 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:865","sourceCode":"int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator())","type":"CtAssignmentImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"replaceLen":"hashCode","i":"hashCode"}},{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":70,"org.apache.commons.lang3.ConversionTest.testLongToBinary":64,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":32,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":62,"org.apache.commons.lang3.RangeTest.testRangeOfChars":10,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":42,"org.apache.commons.lang3.RangeTest.testIntersectionWithNull":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":73,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":17,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":39,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":3,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":46,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":50,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":41,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":51,"org.apache.commons.lang3.RangeTest.testContainsRange":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":65,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":27,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":58,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":26,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":30,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumFloat":25,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":57,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":31,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":14,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":5,"org.apache.commons.lang3.mutable.MutableFloatTest.testAddValueObject":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":69,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":56,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":59,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":49,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":71,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_3":1,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":35,"org.apache.commons.lang3.math.FractionTest.testHashCode":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":15,"org.apache.commons.lang3.RangeTest.testIsWithCompare":8,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":66,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":6,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":78,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":33,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":63,"org.apache.commons.lang3.RangeTest.testContains":13,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":52,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":2,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":4,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":67,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":72,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":68,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":11,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":20,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":29,"org.apache.commons.lang3.math.FractionTest.testPow":22,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":38,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":28,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":19,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.math.FractionTest.testCompareTo":23,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":9,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":54,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":34,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":48,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":40,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":47,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":18,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":44,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":37,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":0,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":60,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":53,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":55}}]
