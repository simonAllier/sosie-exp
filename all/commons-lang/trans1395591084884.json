[{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1819","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:119","sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:103","sourceCode":"if ((java.lang.String.charAt(int)) == ' ') {\n    int++;\n    continue;\n} ","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:981","failures":[3,4,5,6],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1690","sourceCode":"org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getMostSignificantBits(), 0, byte[], int, (int > 8 ? 8 : int))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:42","failures":[8],"status":-1,"binaryOperator":"(int > 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.math.NumberUtils:912","inlineConstant":"int int = 1","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:137","sourceCode":"(double)++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:157","sourceCode":"this.double += double","type":"CtOperatorAssignmentImpl"},"failures":[9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1015","failures":[10],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:373","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:302","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String, char)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:515","failures":[21],"status":-1,"binaryOperator":"((boolean[].int) - 1) - int","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:998","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[][int])","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1062","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:733","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte)","type":"CtInvocationImpl"},"failures":[37,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"suffix":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:545","sourceCode":"return '9'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:659","sourceCode":"return '7'","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:297","sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) == null) {\n    java.util.concurrent.ScheduledFuture<?> = org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:255","sourceCode":"if (!(boolean)) {\n    if (boolean) {\n        org.apache.commons.lang3.concurrent.TimedSemaphore.getExecutorService().shutdownNow();\n    } \n    if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n        java.util.concurrent.ScheduledFuture<?>.cancel(false);\n    } \n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"task":"task","this":"this"}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:385","failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, java.lang.String.length())) == false","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Range:455","sourceCode":"java.lang.StringBuilder.append(']')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:246","sourceCode":"java.lang.String = java.lang.StringBuilder.toString()","type":"CtAssignmentImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:142","sourceCode":"org.apache.commons.lang3.text.StrMatcher.stringMatcher(\":-\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1002","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"trimmerMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:650","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:646","sourceCode":"int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>)","type":"CtAssignmentImpl"},"failures":[72,73,74,75,14,15,16,17,76,77,78,79,80,81,82,83,84,85,18,19,86,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"tokenList":"tokenList","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:541","sourceCode":"return 'a'","type":"CtReturnImpl"},"failures":[21,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:182","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be reset before being restarted. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:140","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1400","failures":[],"status":0,"binaryOperator":"((char[][int]) <= '9')","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:355","sourceCode":"return java.util.Arrays.hashCode(((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:346","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"o","this":"this"}},{"position":"org.apache.commons.lang3.math.NumberUtils:729","inlineConstant":"boolean boolean = false","failures":[93,94,95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:932","sourceCode":"if ((int) == 0) {\n    java.lang.String = \"0\";\n} else if ((int) == (int)) {\n    java.lang.String = \"1\";\n} else if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharacterIterator:357","sourceCode":"throw new java.lang.UnsupportedOperationException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:460","sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char))","type":"CtReturnImpl"},"failures":[98,99],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testHexToByte":10,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":3,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":72,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":74,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":52,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":21,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":29,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":91,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":12,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":23,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":75,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":57,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":68,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":82,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":63,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":51,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":20,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":95,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValuePrimitive":9,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":16,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":92,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":43,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":35,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":41,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":4,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":33,"org.apache.commons.lang3.CharSetTest.testContains_Char":70,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":47,"org.apache.commons.lang3.text.StrTokenizerTest.test1":76,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":86,"org.apache.commons.lang3.text.StrTokenizerTest.test3":78,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":87,"org.apache.commons.lang3.text.StrTokenizerTest.test2":77,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":42,"org.apache.commons.lang3.text.StrTokenizerTest.test5":79,"org.apache.commons.lang3.text.StrTokenizerTest.test7":81,"org.apache.commons.lang3.text.StrTokenizerTest.test6":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":83,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":32,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":24,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":88,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":69,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":40,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":99,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":11,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":60,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":44,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":64,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":54,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":62,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":71,"org.apache.commons.lang3.math.FractionTest.testToProperString":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":45,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":19,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":22,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":48,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":90,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":38}}]
