[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int % 12","position":"org.apache.commons.lang3.time.FastDateParser:821","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.text.StrBuilder:2341","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:706","type":"mutation","status":0},{"failures":[0,1,2,3,4,5],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.apache.commons.lang3.SerializationException(java.io.IOException)","position":"org.apache.commons.lang3.SerializationUtils:232","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(java.util.concurrent.ExecutionException.getCause()))","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:160","type":"CtThrowImpl"},"status":-1},{"failures":[6,7,8,9,10,11,12],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean || (boolean && boolean)) {\n    java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n} ","position":"org.apache.commons.lang3.StringUtils:3150","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if (java.lang.Character.java.lang.Character.isWhitespace(java.lang.String.charAt(int))) {\n        if (boolean || boolean) {\n            boolean = true;\n            if ((int++) == int) {\n                int = int;\n                boolean = false;\n            } \n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:3090","type":"CtWhileImpl"},"status":-1},{"failures":[13],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.byte[]","position":"org.apache.commons.lang3.ArrayUtils:614","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.Conversion:1368","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1238","type":"CtForImpl"},"status":-2},{"failures":[14,15,16,17,18,19,20,21],"variableMapping":{"this":"builder","object":"fieldValue"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:841","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:187","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:569","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.CharRange(char , char , false)","position":"org.apache.commons.lang3.CharRange:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:300","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[22],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:558","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:544","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"tok"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.getCSVClone()","position":"org.apache.commons.lang3.text.StrTokenizer:152","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","position":"org.apache.commons.lang3.text.StrTokenizer:230","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Double[].int) ; int++) {\n    final java.lang.Double java.lang.Double = java.lang.Double[][int];\n    double[][int] = java.lang.Double == null ? double : java.lang.Double.doubleValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3326","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Long[].int) ; int++) {\n    final java.lang.Long java.lang.Long = java.lang.Long[][int];\n    long[][int] = java.lang.Long == null ? long : java.lang.Long.longValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3054","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy)","position":"org.apache.commons.lang3.time.FastDateParser:170","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"outer : for (int int = int ; int < int ; int++) {\n    for (int int = 0 ; int < int ; int++) {\n        if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n            continue outer;\n        } \n    }\n    return int;\n}","position":"org.apache.commons.lang3.text.StrBuilder:2352","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"lhsClass":"cls","testClass":"cls"},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:340","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.MemberUtils:173","type":"CtAssignmentImpl"},"status":0},{"failures":[22,23,24,25,26,27],"variableMapping":{"pfxLen":"pfxLen"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.math.NumberUtils:471","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    int += java.lang.String.length();\n    break;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:461","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int >= 15) {\n    int -= 15;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1057","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    if ((java.lang.Object[][int]) != null) {\n        java.lang.StringBuilder.append(java.lang.Object[][int]);\n    } \n}","position":"org.apache.commons.lang3.StringUtils:3570","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (short >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1478","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(char[]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1619","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.int = int","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:246","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:1202","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1316","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Byte[].int) ; int++) {\n    byte[][int] = java.lang.Byte[][int].byteValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3236","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:847","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:332","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1556","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(float[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4938","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4941","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:501","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:550","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:240","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, double, double, double))","position":"org.apache.commons.lang3.Validate:990","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return long[]","position":"org.apache.commons.lang3.ArrayUtils:3058","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:989","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.util.Iterator<?>.hasNext())) {\n    @java.lang.SuppressWarnings(value = \"deprecation\")\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.toString(java.lang.Object);\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4088","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:1113","type":"CtIfImpl"},"status":-2},{"failures":[28],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.Conversion:1087","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5283","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(org.apache.commons.lang3.text.translate.CharSequenceTranslator[], 0, org.apache.commons.lang3.text.translate.CharSequenceTranslator[], 1, org.apache.commons.lang3.text.translate.CharSequenceTranslator[].int)","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Long.java.lang.Long.valueOf(0L)","position":"org.apache.commons.lang3.math.NumberUtils:34","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.RandomStringUtils:226","type":"CtReturnImpl"},"status":0},{"failures":[29],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:577","type":"CtInvocationImpl"},"status":-1},{"failures":[30,31,32,33,34,35,36],"binaryOperator":"(int + 1)","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:346","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharRange.contains(char)) {\n    return true;\n} ","position":"org.apache.commons.lang3.CharSet:225","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 15)","position":"org.apache.commons.lang3.time.DateUtils:1018","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (char[].int)) {\n    int = (char[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2383","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4716","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.add(org.apache.commons.lang3.time.FastDatePrinter.Rule)","position":"org.apache.commons.lang3.time.FastDatePrinter:285","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1228","type":"CtLocalVariableImpl"},"status":-2},{"failures":[37],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6903","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"Strings must not be null\");\n} ","position":"org.apache.commons.lang3.StringUtils:7014","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.CharSequence.toString(), java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.StringUtils:7131","type":"CtInvocationImpl"},"status":-2},{"failures":[38],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1304","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    T = org.apache.commons.lang3.concurrent.AtomicInitializer<T>.initialize();\n    if (!(java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n        T = java.util.concurrent.atomic.AtomicReference<T>.get();\n    } \n} ","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:84","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5811","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"short short","position":"org.apache.commons.lang3.ArrayUtils:1859","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short short = short","position":"org.apache.commons.lang3.Conversion:876","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:804","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.Conversion:1389","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrSubstitutor:789","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:419","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Enumeration<?> java.util.Enumeration<?> = java.util.Properties.propertyNames()","position":"org.apache.commons.lang3.text.StrSubstitutor:214","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1428","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1970","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append('^')","position":"org.apache.commons.lang3.CharRange:239","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"strLen":"size","size":"strLen"},"name":"add","transplant":{"sourceCode":"final int int = (int) + int","position":"org.apache.commons.lang3.text.StrBuilder:1500","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\");\n} ","position":"org.apache.commons.lang3.builder.HashCodeBuilder:335","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n    org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n    int += int * 2;\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:756","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"nBytes":"index","srcPos":"index"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char","position":"org.apache.commons.lang3.ObjectUtils:811","type":"CtReturnImpl"},"status":-2},{"failures":[28],"binaryOperator":"(int & (~int))","name":"math","position":"org.apache.commons.lang3.Conversion:1091","type":"mutation","status":-1},{"failures":[39,40],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.MemberUtils:173","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:521","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence, java.lang.String.toCharArray())","position":"org.apache.commons.lang3.StringUtils:1931","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd())","position":"org.apache.commons.lang3.time.FastDateParser:153","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(((int) / int), ((org.apache.commons.lang3.math.Fraction.int) / int)), org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((int) / int), ((org.apache.commons.lang3.math.Fraction.int) / int)))","position":"org.apache.commons.lang3.math.Fraction:807","type":"CtReturnImpl"},"status":-2},{"failures":[41],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:736","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:7241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)), java.lang.reflect.Type)","position":"org.apache.commons.lang3.reflect.TypeUtils:1579","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Object[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.Object[][int]);\n} ","position":"org.apache.commons.lang3.StringUtils:3574","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(double[][int])","position":"org.apache.commons.lang3.StringUtils:3870","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"isEquals":"roundUp"},"name":"add","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:939","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = int > ((int - int) / 2)","position":"org.apache.commons.lang3.time.DateUtils:1086","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults>.isStarted()) {\n    throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:145","type":"CtIfImpl"},"status":-2},{"failures":[42],"name":"inlineConstant","inlineConstant":"int int = 1","position":"org.apache.commons.lang3.math.NumberUtils:942","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.reflect.TypeUtils:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:678","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:213","type":"CtAssignmentImpl"},"status":-2},{"failures":[43,44,45],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append(':')","position":"org.apache.commons.lang3.time.FastDatePrinter:1209","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1298","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int++) == int) {\n    int = int;\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3115","type":"CtIfImpl"},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.text.WordUtils:478","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[] , int , (int - int))","position":"org.apache.commons.lang3.text.StrBuilder:2162","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:756","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:913","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:481","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:707","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, byte[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1160","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","size":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"if (int >= (this.org.apache.commons.lang3.ArrayUtils.int)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2300","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2822","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n    org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:189","type":"CtCaseImpl"},"status":-2},{"failures":[97],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:5776","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:461","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) > 8) {\n    throw new java.lang.IllegalArgumentException((\"src.length>8: src.length=\" + (boolean[].int)));\n} ","position":"org.apache.commons.lang3.Conversion:404","type":"CtIfImpl"},"status":-2},{"failures":[98],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    final int int = int;\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4957","type":"CtIfImpl"},"status":-1},{"failures":[99],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4216","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.EnumUtils:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:6021","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Invalid format argument index at position \" + int) + \": \") + (java.lang.String.substring(int, java.text.ParsePosition.getIndex())))","name":"math","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:359","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:658","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(char, int).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5384","type":"CtReturnImpl"},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case '8' :\n    return 1;","position":"org.apache.commons.lang3.Conversion:118","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) == boolean ? 0 : boolean ? 1 : -1","position":"org.apache.commons.lang3.mutable.MutableBoolean:200","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:121","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.Range:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.L = L","position":"org.apache.commons.lang3.tuple.MutablePair:90","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean))","position":"org.apache.commons.lang3.builder.ToStringStyle:445","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean boolean = (int & (java.util.FormattableFlags.int)) == (java.util.FormattableFlags.int)","position":"org.apache.commons.lang3.text.FormattableUtils:143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1559","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case '\\'' :\n    if ((java.lang.String.length()) > 2) {\n        return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(java.lang.String.substring(1, ((java.lang.String.length()) - 1)));\n    } ","position":"org.apache.commons.lang3.time.FastDateParser:462","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:6632","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'w' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:499","type":"CtCaseImpl"},"status":-2},{"failures":[112,113,114,115,116,117],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:648","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:346","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:208","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.ContextedRuntimeException:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.invert(org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][])","position":"org.apache.commons.lang3.text.translate.EntityArrays:371","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"valueIfNull"},"name":"replace","transplant":{"sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:252","type":"CtIfImpl"},"status":-2},{"failures":[118],"binaryOperator":"(1 & (int >> int))","name":"math","position":"org.apache.commons.lang3.Conversion:1594","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (int * 16) + int","position":"org.apache.commons.lang3.Conversion:769","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:773","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:1039","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:108","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.ObjectUtils:273","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readField(java.lang.reflect.Field, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:430","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n    java.util.Calendar.add(java.util.Calendar.int, 12);\n} else {\n    java.util.Calendar.add(java.util.Calendar.int, -12);\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1028","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Double, new org.apache.commons.lang3.mutable.MutableInt(1))","position":"org.apache.commons.lang3.ArrayUtils:5898","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"regex":"regex","value":"value","unquote":"unquote"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.String.length()) ; ++int) {\n    char char = java.lang.String.charAt(int);\n    switch (char) {\n        case '\\'' :\n            if (boolean) {\n                if ((++int) == (java.lang.String.length())) {\n                    return java.lang.StringBuilder;\n                } \n                char = java.lang.String.charAt(int);\n            } \n            break;\n        case '\\\\' :\n            if ((++int) == (java.lang.String.length())) {\n                break;\n            } \n            java.lang.StringBuilder.append(char);\n            char = java.lang.String.charAt(int);\n            if (char == 'E') {\n                java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\");\n                char = 'Q';\n            } \n            break;\n        default :\n            break;\n    }\n    java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.FastDateParser:336","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((++int) == (java.lang.String.length())) {\n        return java.lang.StringBuilder;\n    } \n    char = java.lang.String.charAt(int);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:340","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":109,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":11,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":106,"org.apache.commons.lang3.StringUtilsTest.testRemoveStart":99,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":5,"org.apache.commons.lang3.ConversionTest.testIntToBinary":118,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":24,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":60,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":101,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":61,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":30,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":59,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":42,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":0,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":3,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":56,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":25,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":7,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":28,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":111,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":70,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":50,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":96,"org.apache.commons.lang3.StringUtilsTest.testOverlay_StringStringIntInt":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":33,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":9,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":32,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":100,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":53,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":54,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":108,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":1,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":115,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":57,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":12,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":94,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":47,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":15,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":97,"org.apache.commons.lang3.text.StrTokenizerTest.test8":78,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":6,"org.apache.commons.lang3.text.StrTokenizerTest.test5":76,"org.apache.commons.lang3.text.StrTokenizerTest.test4":75,"org.apache.commons.lang3.text.StrTokenizerTest.test7":77,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":89,"org.apache.commons.lang3.text.StrTokenizerTest.test1":72,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":71,"org.apache.commons.lang3.text.StrTokenizerTest.test3":74,"org.apache.commons.lang3.text.StrTokenizerTest.test2":73,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":18,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":35,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":91,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":92,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":93,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":105,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":4,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":27,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":82,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":83,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":63,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":44,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":88,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":110,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":13,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":14,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":87,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":84,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":31,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":81,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":46,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":116,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":22,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_StringInt":38,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":34,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":29,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":8,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":23,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":26}}]
