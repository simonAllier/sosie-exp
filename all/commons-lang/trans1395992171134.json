[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.text.DateFormatSymbols java.text.DateFormatSymbols = new java.text.DateFormatSymbols(java.util.Locale)","position":"org.apache.commons.lang3.time.FastDatePrinter:169","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.set(int, org.apache.commons.lang3.time.FastDateParser.NumberStrategy.modify(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)))","position":"org.apache.commons.lang3.time.FastDateParser:676","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5563","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" Server 2008\"), \"6.1\")","position":"org.apache.commons.lang3.SystemUtils:1164","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:905","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A specialized {@code Future} implementation which wraps a constant value.\n * @param <T> the type of the value wrapped by this class\n */\nstatic final class ConstantFuture<T> implements java.util.concurrent.Future<T> {\n    /** \n     * The constant value.\n     */\nprivate final T value;\n\n    /** \n     * Creates a new instance of {@code ConstantFuture} and initializes it\n     * with the constant value.\n     * \n     * @param value the value (may be <b>null<\/b>)\n     */\nConstantFuture(final T value) {\n        this.T = T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>true<\/b> because\n     * the constant object managed by this {@code Future} implementation is\n     * always available.\n     */\n@java.lang.Override\n    public boolean isDone() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value.\n     */\n@java.lang.Override\n    public T get() {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value; it\n     * does not block, therefore the timeout has no meaning.\n     */\n@java.lang.Override\n    public T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>false<\/b>; there\n     * is no background process which could be cancelled.\n     */\n@java.lang.Override\n    public boolean isCancelled() {\n        return false;\n    }\n\n    /** \n     * {@inheritDoc} The cancel operation is not supported. This\n     * implementation always returns <b>false<\/b>.\n     */\n@java.lang.Override\n    public boolean cancel(final boolean mayInterruptIfRunning) {\n        return false;\n    }\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:331","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue hierarchyTraversal","position":"org.apache.commons.lang3.reflect.MethodUtils:539","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1655","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.min(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.ClassUtils:1118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.class.version\")","position":"org.apache.commons.lang3.SystemUtils:245","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:395","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(T[])","position":"org.apache.commons.lang3.Validate:506","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","position":"org.apache.commons.lang3.ObjectUtils:549","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.lang3.CharRange:209","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())","position":"org.apache.commons.lang3.text.StrSubstitutor:681","type":"CtInvocationImpl"},"status":-2},{"failures":[0],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.Conversion:1263","type":"mutation","status":-1},{"failures":[1,2,2,3,4,5,6,7,8,9,10,10,11,12,13,14,15,16,16,17,18,19,20,21,22,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"binaryOperator":"int < (int[].int)","name":"conditionalBoundary","position":"org.apache.commons.lang3.builder.ToStringStyle:1055","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:723","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:214","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    while ((int != int) && java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n        int++;\n    }\n} else if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:622","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int += 60 * int;\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:384","type":"CtIfImpl"},"status":-2},{"failures":[46],"binaryOperator":"(((java.lang.Class<E>.getEnumConstants().int) - 1) / (java.lang.Long.int))","name":"math","position":"org.apache.commons.lang3.EnumUtils:228","type":"mutation","status":-1},{"failures":[47,48,49],"binaryOperator":"(int % int)","name":"math","position":"org.apache.commons.lang3.StringUtils:5435","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.ConstructorUtils:293","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (float[] == null) || ((float[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3576","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:483","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.FastDatePrinter:427","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(T[], java.lang.Object)","position":"org.apache.commons.lang3.ArrayUtils:4642","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.exception.ExceptionUtils:644","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:916","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-2},{"failures":[50],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 'e'","position":"org.apache.commons.lang3.Conversion:527","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:547","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5299","type":"CtIfImpl"},"status":-2},{"failures":[51,52],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateParser:223","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (byte[] == null) || ((byte[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3554","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"stopTime":"dstInit","startTime":"dstInit"},"name":"replace","transplant":{"sourceCode":"return long - long","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return long;\n} ","position":"org.apache.commons.lang3.Conversion:903","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.replaceImpl(int, (int + int), int, java.lang.String, int)","position":"org.apache.commons.lang3.text.StrBuilder:2000","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1401","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:263","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 1 minutes\", \" 1 minute\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:214","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getEnclosingClass()","position":"org.apache.commons.lang3.reflect.TypeUtils:1495","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:518","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n} else {\n    throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type));\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1061","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","typeVarAssigns":"typeVarAssigns"},"name":"add","transplant":{"sourceCode":"for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.entrySet()) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.getKey();\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.getValue();\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(java.lang.reflect.TypeVariable<?>)) {\n        if (!(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n            return false;\n        } \n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1218","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.WildcardType)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:339","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = (int[].int) - 1 ; int >= 0 ; int--) {\n    final int int = int[][int];\n    if ((int - int) > 1) {\n        final int int = (int - int) - 1;\n        int -= int;\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, int);\n    } \n    int = int;\n}","position":"org.apache.commons.lang3.ArrayUtils:6036","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Solaris\")","position":"org.apache.commons.lang3.SystemUtils:1091","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n            return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    }\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:823","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:4892","type":"CtAssignmentImpl"},"status":-2},{"failures":[53,54],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(short)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:898","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","position":"org.apache.commons.lang3.StringUtils:6854","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n} ","position":"org.apache.commons.lang3.Conversion:80","type":"CtIfImpl"},"status":-2},{"failures":[55],"binaryOperator":"(int & (~int))","name":"math","position":"org.apache.commons.lang3.Conversion:772","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.stripStart(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:588","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (boolean[][(int + int)] ? 1 : 0) << int","position":"org.apache.commons.lang3.Conversion:1126","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"user.timezone\")","position":"org.apache.commons.lang3.SystemUtils:850","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.StopWatch:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:816","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:5556","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, boolean, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:7320","type":"CtReturnImpl"},"status":-2},{"failures":[56],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:918","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.math.NumberUtils:1141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"HP-UX\")","position":"org.apache.commons.lang3.SystemUtils:971","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"months":"value","years":"value"},"name":"add","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.Writer.write(((char)(int)))","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:54","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String.substring(java.lang.String.length())","position":"org.apache.commons.lang3.StringUtils:4219","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.StrSubstitutor:396","type":"CtReturnImpl"},"status":-2},{"failures":[57],"variableMapping":{"periodCount":"value"},"name":"add","transplant":{"sourceCode":"(this.long)++","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:418","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long -= long","position":"org.apache.commons.lang3.mutable.MutableLong:159","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.getInstance()","position":"org.apache.commons.lang3.time.DateUtils:159","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance(java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:264","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) <= (int + int)) {\n    return java.lang.String.substring(int);\n} ","position":"org.apache.commons.lang3.StringUtils:2254","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","enumClass":"enumClass"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.EnumUtils.asEnum(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:290","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.EnumUtils.org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:143","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","position":"org.apache.commons.lang3.math.Fraction:913","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Character.java.lang.Character.getType(char[][int])","position":"org.apache.commons.lang3.StringUtils:3233","type":"CtLocalVariableImpl"},"status":-2},{"failures":[58],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], 0, byte[].int)","position":"org.apache.commons.lang3.ArrayUtils:3827","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:668","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.isEmpty() ? null : java.lang.String","position":"org.apache.commons.lang3.StringUtils:529","type":"CtReturnImpl"},"status":-2},{"failures":[59,60,61],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 9","position":"org.apache.commons.lang3.Conversion:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2392","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.PrintStream.flush()","position":"org.apache.commons.lang3.exception.ExceptionUtils:466","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1334","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.ClassUtils:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 1 ; int < (java.lang.Object[].int) ; int++) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object[][int]);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1136","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    break;","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:392","type":"CtCaseImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(long[])","position":"org.apache.commons.lang3.EnumUtils:232","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:832","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:297","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_ARRAY":"array"},"name":"add","transplant":{"sourceCode":"return long[]","position":"org.apache.commons.lang3.ArrayUtils:534","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(long[])","position":"org.apache.commons.lang3.ArrayUtils:5099","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1819","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 1) {\n    return int;\n} else {\n    int += org.apache.commons.lang3.reflect.InheritanceUtils.org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class<?>, java.lang.Class<?>);\n    return int > 0 ? int + 1 : -1;\n}","position":"org.apache.commons.lang3.reflect.InheritanceUtils:61","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:1979","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2044","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:762","type":"CtIfImpl"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,70,71],"variableMapping":{"type":"t1"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1096","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1572","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.lang3.SerializationUtils:224","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.readObject()))","position":"org.apache.commons.lang3.SerializationUtils:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString()))","name":"math","position":"org.apache.commons.lang3.exception.ExceptionUtils:533","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, 0)","position":"org.apache.commons.lang3.StringUtils:930","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return boolean[];\n} ","position":"org.apache.commons.lang3.Conversion:1653","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"u":"length","java.lang.Integer.MIN_VALUE":"length","v":"length"},"name":"add","transplant":{"sourceCode":"if ((int == (this.int)) || (int == (this.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:579","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.annotation.Annotation.annotationType().getDeclaredMethods()) {\n    if ((java.lang.reflect.Method.getParameterTypes().int) > 0) {\n        continue;\n    } \n    try {\n        org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.reflect.Method.getName(), java.lang.reflect.Method.invoke(java.lang.annotation.Annotation));\n    } catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n        throw java.lang.RuntimeException;\n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n}","position":"org.apache.commons.lang3.AnnotationUtils:197","type":"CtForEachImpl"},"status":-2},{"failures":[72,73,74,75,76,77],"variableMapping":{"date":"org.apache.commons.lang3.time.DurationFormatUtils.m"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:936","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.time.DurationFormatUtils.Token.org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    long = long / (org.apache.commons.lang3.time.DateUtils.long);\n    long = long - (long * (org.apache.commons.lang3.time.DateUtils.long));\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:144","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(boolean[], boolean[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Boolean[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Boolean[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(boolean[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Boolean[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(boolean[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short != short) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Short getLeft() {\n            return java.lang.Short.java.lang.Short.valueOf(short);\n        }\n\n        @java.lang.Override\n        public java.lang.Short getRight() {\n            return java.lang.Short.java.lang.Short.valueOf(short);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:724","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"upToClass":"clazz","clazz":"clazz"},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:672","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:690","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLetterOrDigit(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5921","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\")","position":"org.apache.commons.lang3.math.Fraction:296","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.lang3.Range<T>.contains(T)) || (org.apache.commons.lang3.Range<T>.contains(T))) || org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T))","position":"org.apache.commons.lang3.Range:354","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1)","position":"org.apache.commons.lang3.math.Fraction:348","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.text.ExtendedMessageFormat org.apache.commons.lang3.text.ExtendedMessageFormat = ((org.apache.commons.lang3.text.ExtendedMessageFormat)(java.lang.Object))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:277","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Iterator<?> java.util.Iterator<?> = T.iterator() ; java.util.Iterator<?>.hasNext() ; int++) {\n    if ((java.util.Iterator<?>.next()) == null) {\n        final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.addAll(java.lang.Object[], java.lang.Integer.java.lang.Integer.valueOf(int));\n        throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n    } \n}","position":"org.apache.commons.lang3.Validate:570","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.CharSet(\"0-9\")","position":"org.apache.commons.lang3.CharSet:72","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    if ((java.util.List<java.lang.reflect.TypeVariable<java.lang.Class<T>>>.contains(java.lang.reflect.Type)) && (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.TypeVariable<?>))) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>));\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1024","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:802","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:586","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == float[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:931","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((int * 16))","position":"org.apache.commons.lang3.StringUtils:3816","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.max(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return short[].clone()","position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[]);\n} else if (short[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3850","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"source","separator":"source"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)) == false) {\n    return java.lang.String.substring(int, (int + int));\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:418","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:576","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.get(org.apache.commons.lang3.time.FormatCache.MultipartKey)","position":"org.apache.commons.lang3.time.FormatCache:80","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"style"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\")\")","position":"org.apache.commons.lang3.AnnotationUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:876","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"newArray":"array"},"name":"replace","transplant":{"sourceCode":"return float[]","position":"org.apache.commons.lang3.ArrayUtils:4154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1155","type":"CtIfImpl"},"status":-2},{"failures":[78,79,80,81],"variableMapping":{"hasExp":"element"},"name":"replace","transplant":{"sourceCode":"if (boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1395","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:981","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"synchronized(org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder) {\n    if (org.apache.commons.lang3.builder.EqualsBuilder.(org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()) == null) {\n        org.apache.commons.lang3.builder.EqualsBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>>.set(new java.util.HashSet<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>());\n    } \n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:172","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long))","position":"org.apache.commons.lang3.Validate:1084","type":"CtThrowImpl"},"status":-2},{"failures":[82,83],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.text.WordUtils:536","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:408","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.time.FastDateParser:337","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"start"},"name":"add","transplant":{"sourceCode":"int int = int + 3","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.CharSequenceUtils:193","type":"CtLocalVariableImpl"},"status":-2},{"failures":[84,85,86,12,87,88,89,90,91,92,93],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:858","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:648","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Float.java.lang.Float.floatToIntBits(float), java.lang.Float.java.lang.Float.floatToIntBits(float))","position":"org.apache.commons.lang3.builder.EqualsBuilder:611","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return null;\n} else if ((double[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Double[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3342","type":"CtIfImpl"},"status":-2},{"failures":[94,95,96],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case 'l' :\n    case 'L' :\n        if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n        } \n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    case 'f' :\n    case 'F' :\n        try {\n            final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n            if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                return java.lang.Float;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    case 'd' :\n    case 'D' :\n        try {\n            final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n            if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                return java.lang.Double;\n            } \n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n    default :\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n}","position":"org.apache.commons.lang3.math.NumberUtils:527","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:565","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:600","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getShortMonths()","position":"org.apache.commons.lang3.time.FastDatePrinter:174","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.InheritanceUtils.org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class<?>, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.InheritanceUtils:64","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object)","position":"org.apache.commons.lang3.ArrayUtils:4249","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:877","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","position":"org.apache.commons.lang3.builder.ToStringBuilder:605","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"parser":"parser","iValue":"iValue"},"name":"add","transplant":{"sourceCode":"if (int < 100) {\n    int = org.apache.commons.lang3.time.FastDateParser.adjustYear(int);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy that handles a number field in the parsing pattern\n */\nprivate static class NumberStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final int field;\n\n    /** \n     * Construct a Strategy that parses a Number field\n     * @param field The Calendar field\n     */\nNumberStrategy(final int field) {\n        this.int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean isNumber() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        if (org.apache.commons.lang3.time.FastDateParser.isNextNumber()) {\n            java.lang.StringBuilder.append(\"(\\\\p{Nd}{\").append(org.apache.commons.lang3.time.FastDateParser.getFieldWidth()).append(\"}+)\");\n        } else {\n            java.lang.StringBuilder.append(\"(\\\\p{Nd}++)\");\n        }\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.Calendar.set(int, org.apache.commons.lang3.time.FastDateParser.NumberStrategy.modify(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)));\n    }\n\n    /** \n     * Make any modifications to parsed integer\n     * @param iValue The parsed integer\n     * @return The modified value\n     */\nint modify(final int iValue) {\n        return int;\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:637","type":"CtClassImpl"},"status":-2},{"failures":[97,98,99,100,101,102,103,104],"variableMapping":{"cs":"cs","i":"i","j":"csLast","csLast":"searchLast","searchChars":"searchChars"},"name":"add","transplant":{"sourceCode":"if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n        if (int == int) {\n            return true;\n        } \n        if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n            return true;\n        } \n    } else {\n        return true;\n    }\n} ","position":"org.apache.commons.lang3.StringUtils:1629","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"startIndex":"start","length":"start","chars":"srcChars"},"name":"add","transplant":{"sourceCode":"if ((int < 0) || (int > int)) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = java.lang.Math.java.lang.Math.max(org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int), org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int));\n    if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n        break;\n    } \n    int += int;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:688","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","position":"org.apache.commons.lang3.time.DateUtils:651","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>.getTypeParameters()","position":"org.apache.commons.lang3.reflect.TypeUtils:1503","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.time.FastDatePrinter:331","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1161","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.StringUtils:1542","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((char[][int]) != (char[][int])) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:372","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], (int + int), int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:716","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":93,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":104,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":31,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":86,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":45,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":95,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":23,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":88,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":5,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":91,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWildcardType":68,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":16,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":49,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":17,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":51,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":21,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":11,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":82,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":66,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWrap":67,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":42,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectorsFromArray":46,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":47,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":22,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher_int":59,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":64,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":24,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":19,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":99,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":30,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":1,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":41,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":7,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":9,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":0,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":48,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":27,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":84,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":12,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValuePrimitive":57,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":77,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":26,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":79,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":103,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArray":53,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":4,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":34,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":98,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":87,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_StrMatcher":61,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":35,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":94,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":89,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":90,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":97,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":75,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":20,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":56,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":36,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":43,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":70}}]
