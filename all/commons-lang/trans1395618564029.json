[{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:575","sourceCode":"T = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:460","sourceCode":"T = T","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:518","sourceCode":"if ((!java.lang.Character.(java.lang.Character.isDigit(char))) && (char != '.')) {\n    if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n        java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n    } else {\n        java.lang.String = null;\n    }\n    final java.lang.String java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String));\n    switch (char) {\n        case 'l' :\n        case 'L' :\n            if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n                } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n                }\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n            } \n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        case 'f' :\n        case 'F' :\n            try {\n                final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n                if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                    return java.lang.Float;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        case 'd' :\n        case 'D' :\n            try {\n                final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n                if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                    return java.lang.Double;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        default :\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    }\n} ","type":"CtIfImpl"},"failures":[13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:122","sourceCode":"org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:914","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"quoteMatcher"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:858","sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:859","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:302","sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:936","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:515","sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(this.int) , this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:496","sourceCode":"if ((int) < 0) {\n    return new org.apache.commons.lang3.math.Fraction(-(int) , -(int));\n} else {\n    return new org.apache.commons.lang3.math.Fraction(int , int);\n}","type":"CtIfImpl"},"failures":[17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numerator":"denominator","denominator":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:706","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:835","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, long[], java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1303","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[][int])","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numerator":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.JavaVersion:105","sourceCode":"return (this.float) >= (org.apache.commons.lang3.JavaVersion.float)","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:138","sourceCode":"this.long += long","type":"CtOperatorAssignmentImpl"},"failures":[24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:208","sourceCode":"int int = 71 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:880","sourceCode":"final int int = (255 & (byte[][(int + int)])) << int","type":"CtLocalVariableImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1195","sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) - 3","type":"CtAssignmentImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.RandomStringUtils:241","failures":[27,28],"status":-1,"binaryOperator":"'z' + 1","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1524","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,0,1,2,3,4,5,42,6,7,43,44,8,9,45,10,46,11,12,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1204","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1222","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startCutoff":"a"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:228","sourceCode":"return ((short)(org.apache.commons.lang3.BitField.set(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:167","sourceCode":"return org.apache.commons.lang3.BitField.((short)(setValue(short, short)))","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"holder":"holder","this":"this"}},{"position":"org.apache.commons.lang3.math.Fraction:936","failures":[],"status":0,"binaryOperator":"((-1) * (int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1747","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:44","sourceCode":"int int = int + 2","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1438","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (int >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5419","sourceCode":"return java.lang.String.concat(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:213","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, null)","type":"CtReturnImpl"},"failures":[60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"pattern","padStr":"pattern"}},{"position":"org.apache.commons.lang3.AnnotationUtils:124","failures":[64,65],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:127","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:290","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[66,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"numer2"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:193","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.time.FastDateParser)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:209","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:330","sourceCode":"java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\")","type":"CtInvocationImpl"},"failures":[80,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:421","sourceCode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.initials(java.lang.String, null)","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1203","failures":[],"status":0,"binaryOperator":"long > long","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1310","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","falseString":"str","trueString":"str"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:885","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:243","sourceCode":"return char - 48","type":"CtReturnImpl"},"failures":[84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:380","sourceCode":"if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:383","sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","whitespace":"whitespace","ch":"ch","this":"this","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:792","sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) < long) {\n        long = long[][int];\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:47","sourceCode":"for (int int = 1 ; int < (double[].int) ; int++) {\n    double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double[][int], double);\n}","type":"CtForImpl"},"failures":[86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateFormatUtils:42","sourceCode":"java.util.TimeZone.java.util.TimeZone.getTimeZone(\"GMT\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:74","sourceCode":"java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getDefault()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:491","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"failures":[30,34,87,38,11,50,54,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1011","sourceCode":"if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n    if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n        if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n            java.util.Calendar.add(java.util.Calendar.int, 15);\n        } else {\n            java.util.Calendar.add(java.util.Calendar.int, -15);\n            java.util.Calendar.add(java.util.Calendar.int, 1);\n        }\n    } else if (int == (java.util.Calendar.int)) {\n        if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n            java.util.Calendar.add(java.util.Calendar.int, 12);\n        } else {\n            java.util.Calendar.add(java.util.Calendar.int, -12);\n            java.util.Calendar.add(java.util.Calendar.int, 1);\n        }\n    } else {\n        java.util.Calendar.add(int[][0], 1);\n    }\n} ","type":"CtIfImpl"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:339","failures":[101],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:242","sourceCode":"int = ' '","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1298","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"start":"i"}},{"failureDictionary":{"org.apache.commons.lang3.JavaVersionTest.testAtLeast":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":7,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":30,"org.apache.commons.lang3.CharSetTest.testStatics":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":35,"org.apache.commons.lang3.math.FractionTest.testFactory_double":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":92,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":1,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":34,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":38,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":51,"org.apache.commons.lang3.time.DateUtilsTest.testRound":100,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":94,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":81,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":47,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":86,"org.apache.commons.lang3.CharSetTest.testSerialization":73,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":99,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":16,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":26,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":91,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":49,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":82,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character_int":84,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":83,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":53,"org.apache.commons.lang3.ConversionTest.testIntToHex":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":11,"org.apache.commons.lang3.math.FractionTest.testInvert":19,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":87,"org.apache.commons.lang3.CharRangeTest.testSerialization":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":93,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":37,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":69,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValuePrimitive":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":12,"org.apache.commons.lang3.math.FractionTest.testPow":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":50,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":76,"org.apache.commons.lang3.ConversionTest.testLongToByteArray":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":90,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":36,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":60,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":9,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":97,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":39,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":21,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char_int":85,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":2,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":22,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":52,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":3,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":78,"org.apache.commons.lang3.CharSetTest.testEquals_Object":74,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":64,"org.apache.commons.lang3.ConversionTest.testByteArrayToShort":25,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":32,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":44,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":5,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":33,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":80,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":10,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":27,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":40,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":4,"org.apache.commons.lang3.math.FractionTest.testDivide":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":41,"org.apache.commons.lang3.math.FractionTest.testToProperString":67,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":62,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":75,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":13}}]
