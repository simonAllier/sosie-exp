[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:2211","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append('<'), \", \", java.lang.reflect.Type[])","position":"org.apache.commons.lang3.reflect.TypeUtils:1797","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:635","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (int) {\n    case 0 :\n        if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String)) && ((int == 2) || (int == 3))) {\n            return new java.util.Locale(java.lang.String);\n        } else {\n            throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n        }\n    case 1 :\n        if (((org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String[][0])) && (((java.lang.String[][0].length()) == 2) || ((java.lang.String[][0].length()) == 3))) && ((java.lang.String[][1].length()) == 2)) && org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.String[][1]))) {\n            return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1]);\n        } else {\n            throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n        }\n    case 2 :\n        if (((org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String[][0])) && (((java.lang.String[][0].length()) == 2) || ((java.lang.String[][0].length()) == 3))) && (((java.lang.String[][1].length()) == 0) || (((java.lang.String[][1].length()) == 2) && org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.String[][1]))))) && ((java.lang.String[][2].length()) > 0)) {\n            return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2]);\n        } \n    default :\n        throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n}","position":"org.apache.commons.lang3.LocaleUtils:128","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:622","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:586","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:399","type":"CtIfImpl"},"status":-2},{"failures":[0,1,2],"binaryOperator":"int > 0","name":"removeConditional","position":"org.apache.commons.lang3.builder.ToStringStyle:1117","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n    java.util.concurrent.ScheduledFuture<?>.cancel(false);\n} ","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:262","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>()","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:78","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n    java.lang.reflect.Method = java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:488","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , int)","position":"org.apache.commons.lang3.math.Fraction:515","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String))","position":"org.apache.commons.lang3.time.FastDatePrinter:282","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.text.StrBuilder:1435","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1507","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Boolean == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.BooleanUtils:427","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = ((java.lang.CharSequence.length()) - int) - 1","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:40","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","position":"org.apache.commons.lang3.reflect.TypeUtils:910","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType), null)","position":"org.apache.commons.lang3.reflect.TypeUtils:748","type":"CtReturnImpl"},"status":-2},{"failures":[3,4],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","position":"org.apache.commons.lang3.math.Fraction:679","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:297","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final boolean boolean : boolean[]) {\n    if (boolean) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.BooleanUtils:980","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.builder.HashCodeBuilder org.apache.commons.lang3.builder.HashCodeBuilder = new org.apache.commons.lang3.builder.HashCodeBuilder(int , int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:338","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","position":"org.apache.commons.lang3.reflect.TypeUtils:855","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[], double, java.lang.Integer.int, double)","position":"org.apache.commons.lang3.ArrayUtils:2635","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 8","position":"org.apache.commons.lang3.Conversion:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:858","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.WildcardType.equals(java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:601","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = (int) + int","position":"org.apache.commons.lang3.text.StrBuilder:1500","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:871","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:534","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:1013","type":"CtIfImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","position":"org.apache.commons.lang3.ClassUtils:996","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharSet:229","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.CharSetUtils:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt((int - 1))","position":"org.apache.commons.lang3.StringUtils:6937","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"obj"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n    return false;\n} ","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey) {\n    final org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey = ((org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey)(java.lang.Object));\n    return ((java.util.TimeZone.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.TimeZone)) && ((int) == (org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.int))) && (java.util.Locale.equals(org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.java.util.Locale));\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1262","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"chars":"buffer"},"name":"add","transplant":{"sourceCode":"char[] = null","position":"org.apache.commons.lang3.text.StrTokenizer:256","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.ContextedException:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = java.lang.reflect.Array.((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, 0)))","position":"org.apache.commons.lang3.ArrayUtils:884","type":"CtLocalVariableImpl"},"status":-2},{"failures":[18],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:7395","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharEncoding:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.CharSequence.equals(java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:802","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"toClass":"toClass","bound":"bound","subtypeVarAssigns":"subtypeVarAssigns","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:816","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:826","type":"CtIfImpl"},"status":-2},{"failures":[19,20,21,22,23,24,25],"variableMapping":{"this":"this","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:398","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long)","position":"org.apache.commons.lang3.builder.ToStringStyle:649","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > (int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if ((double[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","position":"org.apache.commons.lang3.math.IEEE754rUtils:157","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:288","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n        final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n        if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } \n    } \n}","position":"org.apache.commons.lang3.reflect.MethodUtils:483","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '7';\n} else {\n    return '6';\n}","position":"org.apache.commons.lang3.Conversion:554","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '3';\n} else {\n    return '2';\n}","position":"org.apache.commons.lang3.Conversion:568","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(2 , 5)","position":"org.apache.commons.lang3.math.Fraction:83","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Calendar.getDisplayNames(int, java.util.Calendar.int, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:383","type":"CtReturnImpl"},"status":-2},{"failures":[26],"binaryOperator":"(byte[] == null)","name":"removeConditional","position":"org.apache.commons.lang3.ArrayUtils:1318","type":"mutation","status":-1},{"failures":[],"variableMapping":{"size":"dstInit","len":"dstInit"},"name":"add","transplant":{"sourceCode":"int int = int - int","position":"org.apache.commons.lang3.text.StrBuilder:2108","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Conversion:839","type":"CtLocalVariableImpl"},"status":-2},{"failures":[27],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:1043","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(org.apache.commons.lang3.concurrent.ConcurrentException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:303","type":"CtThrowImpl"},"status":-1},{"failures":[28],"variableMapping":{"buffer":"buffer","list":"list"},"name":"add","transplant":{"sourceCode":"if (java.lang.StringBuilder == null) {\n    java.lang.StringBuilder = new java.lang.StringBuilder();\n    java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:529","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuilder = null;\n    boolean = false;\n} else {\n    java.lang.StringBuilder = new java.lang.StringBuilder();\n    java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n    boolean = true;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:498","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"lhs":"whitespace","isEquals":"whitespace","rhs":"whitespace"},"name":"replace","transplant":{"sourceCode":"boolean = boolean == boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:625","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = java.lang.Character.java.lang.Character.isWhitespace(char)","position":"org.apache.commons.lang3.text.WordUtils:475","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","position":"org.apache.commons.lang3.text.StrTokenizer:124","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String[][][int][0] = java.lang.String[][][int][1]","position":"org.apache.commons.lang3.text.translate.EntityArrays:419","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, boolean[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtIfImpl"},"status":-2},{"failures":[29,30],"binaryOperator":"((boolean[].int) - 1)","name":"math","position":"org.apache.commons.lang3.Conversion:515","type":"mutation","status":-1},{"failures":[31],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:1893","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.short = java.lang.Number.shortValue()","position":"org.apache.commons.lang3.mutable.MutableShort:108","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A specialized {@code Future} implementation which wraps a constant value.\n * @param <T> the type of the value wrapped by this class\n */\nstatic final class ConstantFuture<T> implements java.util.concurrent.Future<T> {\n    /** \n     * The constant value.\n     */\nprivate final T value;\n\n    /** \n     * Creates a new instance of {@code ConstantFuture} and initializes it\n     * with the constant value.\n     * \n     * @param value the value (may be <b>null<\/b>)\n     */\nConstantFuture(final T value) {\n        this.T = T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>true<\/b> because\n     * the constant object managed by this {@code Future} implementation is\n     * always available.\n     */\n@java.lang.Override\n    public boolean isDone() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value.\n     */\n@java.lang.Override\n    public T get() {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation just returns the constant value; it\n     * does not block, therefore the timeout has no meaning.\n     */\n@java.lang.Override\n    public T get(final long timeout, final java.util.concurrent.TimeUnit unit) {\n        return T;\n    }\n\n    /** \n     * {@inheritDoc} This implementation always returns <b>false<\/b>; there\n     * is no background process which could be cancelled.\n     */\n@java.lang.Override\n    public boolean isCancelled() {\n        return false;\n    }\n\n    /** \n     * {@inheritDoc} The cancel operation is not supported. This\n     * implementation always returns <b>false<\/b>.\n     */\n@java.lang.Override\n    public boolean cancel(final boolean mayInterruptIfRunning) {\n        return false;\n    }\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:331","type":"CtClassImpl"},"status":-2},{"failures":[32,33,34,35,36,37],"variableMapping":{"arrayEnd":"currentFormatField"},"name":"replace","transplant":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1769","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.time.FastDateParser:163","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Long getLeft() {\n        return java.lang.Long.java.lang.Long.valueOf(long);\n    }\n\n    @java.lang.Override\n    public java.lang.Long getRight() {\n        return java.lang.Long.java.lang.Long.valueOf(long);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:641","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.replaceImpl(int, (int + int), int, java.lang.String, int)","position":"org.apache.commons.lang3.text.StrBuilder:2000","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object, java.lang.Object, boolean, null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:167","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.RandomUtils:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((short)(65535 & (int >> int)))","name":"math","position":"org.apache.commons.lang3.Conversion:1265","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:556","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:559","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:292","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction((boolean ? org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addAndCheck(int, int) : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.subAndCheck(int, int)) , org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, org.apache.commons.lang3.math.Fraction.int))","position":"org.apache.commons.lang3.math.Fraction:758","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.max(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring((int + 1)).trim()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:314","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (int >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1330","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:773","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{"defaultValue":"collection","object":"collection"},"name":"replace","transplant":{"sourceCode":"return T != null ? T : T","position":"org.apache.commons.lang3.ObjectUtils:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:302","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"size":"size"},"name":"add","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (int) + int","position":"org.apache.commons.lang3.text.StrBuilder:1500","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","it":"it"},"name":"add","transplant":{"sourceCode":"if (java.util.Iterator<?> != null) {\n    while (java.util.Iterator<?>.hasNext()) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1112","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n}","position":"org.apache.commons.lang3.text.StrBuilder:1113","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.ArrayList<L>.add(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:228","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DateUtils:1727","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (0 == int) {\n    return short[];\n} ","position":"org.apache.commons.lang3.Conversion:1221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5994","type":"CtLocalVariableImpl"},"status":-2},{"failures":[38,39,40],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:479","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((short[].int) != (short[].int)) {\n    int = (short[].int) < (short[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:782","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:313","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Short.java.lang.Short.parseShort(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return short;\n}","position":"org.apache.commons.lang3.math.NumberUtils:376","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new boolean[]{ true , true , true , false }","position":"org.apache.commons.lang3.Conversion:256","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , false , false , true }","position":"org.apache.commons.lang3.Conversion:225","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(long[][int])","position":"org.apache.commons.lang3.StringUtils:3625","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring((int + 1))","position":"org.apache.commons.lang3.math.Fraction:333","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.Range<T> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:332","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2819","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}","position":"org.apache.commons.lang3.math.Fraction:596","type":"CtWhileImpl"},"status":-2},{"failures":[41,42],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append(((char)((int % 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:856","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:913","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.CharSequence[].int","position":"org.apache.commons.lang3.StringUtils:1967","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '5'","position":"org.apache.commons.lang3.Conversion:344","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.reflect.TypeUtils:1694","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[] = org.apache.commons.lang3.text.StrBuilder.char[]","position":"org.apache.commons.lang3.text.StrSubstitutor:860","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Comparator<T> = java.util.Comparator<T>","position":"org.apache.commons.lang3.Range:154","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"toType":"toType","this":"this","type":"type","typeVarAssigns":"typeVarAssigns"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:331","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:343","type":"CtReturnImpl"},"status":0},{"failures":[43,44],"variableMapping":{"str":"str","remove":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.endsWith(java.lang.String)) {\n    return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())));\n} ","position":"org.apache.commons.lang3.StringUtils:4287","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4290","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"bit_pattern":"codepoint","count":"codepoint"},"name":"add","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","position":"org.apache.commons.lang3.BitField:43","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 65535) {\n    java.io.Writer.write(org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int));\n} else if (int > 4095) {\n    java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 255) {\n    java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtIfImpl"},"status":-2},{"failures":[45,46],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.ClassNotFoundException","position":"org.apache.commons.lang3.ClassUtils:845","type":"CtThrowImpl"},"status":-1},{"failures":[47],"variableMapping":{"str":"resourceName","remove":"resourceName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassPathUtils.org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(java.lang.Class<?>.getPackage(), java.lang.String)","position":"org.apache.commons.lang3.ClassPathUtils:61","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(double, double)","position":"org.apache.commons.lang3.math.IEEE754rUtils:227","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey> = org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.double","position":"org.apache.commons.lang3.math.NumberUtils:1037","type":"CtReturnImpl"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrSubstitutor:1043","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup<?>, org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher, char, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrSubstitutor:358","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (255 & (byte[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:880","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Byte java.lang.Byte = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], java.lang.Byte.byteValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5370","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>))) {\n    throw new java.lang.IllegalArgumentException((((\"Cannot store \" + (java.lang.Class<?>.getName())) + \" in an array of \") + (java.lang.Class<?>.getName())) , java.lang.ArrayStoreException);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3736","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char char = char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:2660","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    byte = ((byte)((byte & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:1160","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5274","type":"CtInvocationImpl"},"status":-2},{"failures":[79,80,81,82],"binaryOperator":"org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (int == 0)","name":"removeConditional","position":"org.apache.commons.lang3.text.WordUtils:286","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, char[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:631","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>, java.util.HashSet<java.lang.Class<?>>)","position":"org.apache.commons.lang3.ClassUtils:375","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.Object.getClass())","position":"org.apache.commons.lang3.ClassUtils:271","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:342","type":"CtThrowImpl"},"status":-2},{"failures":[83,84,85,86,87,20,88,89,90,91,92,93,94,95,96,97,98,99,100,101,1,102,103,104,105,106,2,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,25,130,131,132,133],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\")\")","position":"org.apache.commons.lang3.AnnotationUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float)","position":"org.apache.commons.lang3.builder.ToStringStyle:817","type":"CtInvocationImpl"},"status":-1},{"failures":[134],"variableMapping":{"cs":"prefix"},"name":"add","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence, java.lang.CharSequence, true)","position":"org.apache.commons.lang3.StringUtils:7189","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1259","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2065","type":"CtIfImpl"},"status":-2},{"failures":[135],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object instanceof long[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:834","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof char[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:822","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.ArrayUtils.char[]","position":"org.apache.commons.lang3.text.StrBuilder:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:2982","type":"CtIfImpl"},"status":-2},{"failures":[136],"variableMapping":{"replaceLen":"found","i":"found"},"name":"replace","transplant":{"sourceCode":"int = (int + int) - 1","position":"org.apache.commons.lang3.text.StrBuilder:2002","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(int[], java.lang.Integer.intValue(), int)","position":"org.apache.commons.lang3.ArrayUtils:5552","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Class<?> != null), \"The class must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:212","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int)","position":"org.apache.commons.lang3.time.FastDatePrinter:862","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableObject:95","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return new java.lang.StringBuilder(java.lang.String).reverse().toString()","position":"org.apache.commons.lang3.StringUtils:6287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4998","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1808","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.StringUtils:5089","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher();\n} else {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:860","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrTokenizer org.apache.commons.lang3.text.StrTokenizer = ((org.apache.commons.lang3.text.StrTokenizer)(java.lang.Object.clone()))","position":"org.apache.commons.lang3.text.StrTokenizer:1092","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long","position":"org.apache.commons.lang3.Conversion:729","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ true , true , false , true }","position":"org.apache.commons.lang3.Conversion:253","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , false , false , false }","position":"org.apache.commons.lang3.Conversion:163","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5731","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final T T : T[]) {\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ObjectUtils:573","type":"CtForEachImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\")","name":"math","position":"org.apache.commons.lang3.time.FastDateParser:286","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:3081","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.DurationFormatUtils:637","type":"CtReturnImpl"},"status":-2},{"failures":[137,138,139],"variableMapping":{"org.apache.commons.lang3.Validate.DEFAULT_VALID_STATE_EX_MESSAGE":"token","expression":"traceStarted"},"name":"replace","transplant":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","position":"org.apache.commons.lang3.Validate:803","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int != (-1)) && (java.lang.String.substring(0, int).trim().isEmpty())) {\n    boolean = true;\n    java.util.List<java.lang.String>.add(java.lang.String);\n} else if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:650","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Character.java.lang.Character.valueOf(char)","position":"org.apache.commons.lang3.builder.DiffBuilder:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:2257","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":118,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":74,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":90,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":101,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":130,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":96,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":71,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":112,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":35,"org.apache.commons.lang3.StringUtilsTest.testChomp":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":55,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":53,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":8,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":25,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":137,"org.apache.commons.lang3.ValidateTest.testNotEmptyCollection1":3,"org.apache.commons.lang3.ValidateTest.testNotEmptyCollection2":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":86,"org.apache.commons.lang3.StringUtilsTest.testRemoveEnd":44,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArray":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":114,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":110,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":27,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":95,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":15,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":127,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":42,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":28,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":36,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthByte":26,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":99,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":24,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":13,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":72,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithIgnoreCase":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":57,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":92,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":58,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":117,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":10,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":79,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":106,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":6,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":83,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":82,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":139,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":37,"org.apache.commons.lang3.ClassUtilsTest.testToClass_object":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":104,"org.apache.commons.lang3.builder.CompareToBuilderTest.testShortArrayHiddenByObject":38,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedNameClassString":47,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":41,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":91,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeExactConstructor":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":122,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":100,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":66,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":49,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":129,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":81,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":87,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":88,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":68,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":131,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":111,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":70,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":128}}]
