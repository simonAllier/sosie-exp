[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.reflect.TypeUtils:1694","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Class used to define a set of characters for matching purposes.\n */\nstatic final class CharSetMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * The set of characters to match.\n     */\nprivate final char[] chars;\n\n    /** \n     * Constructor that creates a matcher from a character array.\n     * \n     * @param chars  the characters to match, must not be null\n     */\nCharSetMatcher(final char[] chars) {\n        org.apache.commons.lang3.text.StrMatcher.super();\n        this.char[] = char[].clone();\n        java.util.Arrays.java.util.Arrays.sort(this.char[]);\n    }\n\n    /** \n     * Returns whether or not the given character matches.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return java.util.Arrays.(java.util.Arrays.binarySearch(char[], char[][int])) >= 0 ? 1 : 0;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:275","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.SystemUtils:1448","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:1918","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * A data class for storing the results of the background initialization\n * performed by {@code MultiBackgroundInitializer}. Objects of this inner\n * class are returned by {@link MultiBackgroundInitializer#initialize()}.\n * They allow access to all result objects produced by the\n * {@link BackgroundInitializer} objects managed by the owning instance. It\n * is also possible to retrieve status information about single\n * {@link BackgroundInitializer}s, i.e. whether they completed normally or\n * caused an exception.\n */\npublic static class MultiBackgroundInitializerResults {\n    /** \n     * A map with the child initializers.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> initializers;\n\n    /** \n     * A map with the result objects.\n     */\nprivate final java.util.Map<java.lang.String, java.lang.Object> resultObjects;\n\n    /** \n     * A map with the exceptions.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> exceptions;\n\n    /** \n     * Creates a new instance of {@code MultiBackgroundInitializerResults}\n     * and initializes it with maps for the {@code BackgroundInitializer}\n     * objects, their result objects and the exceptions thrown by them.\n     * \n     * @param inits the {@code BackgroundInitializer} objects\n     * @param results the result objects\n     * @param excepts the exceptions\n     */\nprivate MultiBackgroundInitializerResults(final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> inits ,final java.util.Map<java.lang.String, java.lang.Object> results ,final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> excepts) {\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>;\n        java.util.Map<java.lang.String, java.lang.Object> = java.util.Map<java.lang.String, java.lang.Object>;\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>;\n    }\n\n    /** \n     * Returns the {@code BackgroundInitializer} with the given name. If the\n     * name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the {@code BackgroundInitializer} with this name\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(final java.lang.String name) {\n        return org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n    }\n\n    /** \n     * Returns the result object produced by the {@code\n     * BackgroundInitializer} with the given name. This is the object\n     * returned by the initializer's {@code initialize()} method. If this\n     * {@code BackgroundInitializer} caused an exception, <b>null<\/b> is\n     * returned. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the result object produced by this {@code\n     * BackgroundInitializer}\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic java.lang.Object getResultObject(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a flag whether the {@code BackgroundInitializer} with the\n     * given name caused an exception.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return a flag whether this initializer caused an exception\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic boolean isException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(java.lang.String);\n    }\n\n    /** \n     * Returns the {@code ConcurrentException} object that was thrown by the\n     * {@code BackgroundInitializer} with the given name. If this\n     * initializer did not throw an exception, the return value is\n     * <b>null<\/b>. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the exception thrown by this initializer\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.ConcurrentException getException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a set with the names of all {@code BackgroundInitializer}\n     * objects managed by the {@code MultiBackgroundInitializer}.\n     * \n     * @return an (unmodifiable) set with the names of the managed {@code\n     * BackgroundInitializer} objects\n     */\npublic java.util.Set<java.lang.String> initializerNames() {\n        return java.util.Collections.java.util.Collections.unmodifiableSet(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.keySet());\n    }\n\n    /** \n     * Returns a flag whether the whole initialization was successful. This\n     * is the case if no child initializer has thrown an exception.\n     * \n     * @return a flag whether the initialization was successful\n     */\npublic boolean isSuccessful() {\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.isEmpty();\n    }\n\n    /** \n     * Checks whether an initializer with the given name exists. If not,\n     * throws an exception. If it exists, the associated child initializer\n     * is returned.\n     * \n     * @param name the name to check\n     * @return the initializer with this name\n     * @throws NoSuchElementException if the name is unknown\n     */\nprivate org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n        final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(java.lang.String);\n        if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n            throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String));\n        } \n        return org.apache.commons.lang3.concurrent.BackgroundInitializer<?>;\n    }\n}","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:227","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(java.util.List<java.lang.Class<?>>.size())","position":"org.apache.commons.lang3.ClassUtils:428","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLowerCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6140","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","position":"org.apache.commons.lang3.BooleanUtils:944","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new boolean[]{ true , true , false , false }","position":"org.apache.commons.lang3.Conversion:250","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , true , true , false }","position":"org.apache.commons.lang3.Conversion:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.ArrayUtils:6029","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2079","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"this","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.toString())","position":"org.apache.commons.lang3.text.StrBuilder:465","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"traceStarted":"mColon"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1208","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.builder.IDKey)) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.IDKey:64","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1666","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrSubstitutor:809","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5995","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ObjectUtils:246","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:684","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:528","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.BooleanUtils:729","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3765","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{"index":"startIndexInclusive"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n} ","position":"org.apache.commons.lang3.StringEscapeUtils:261","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1038","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(java.lang.String.substring(int, int))","position":"org.apache.commons.lang3.StringUtils:3151","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(short)","position":"org.apache.commons.lang3.builder.ToStringStyle:718","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on class: \") + (java.lang.Class<?>.getName())));\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:291","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.reflect.Field>","position":"org.apache.commons.lang3.reflect.FieldUtils:222","type":"CtReturnImpl"},"status":-2},{"failures":[1],"name":"returnValue","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:667","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"replace","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:754","type":"CtReturnImpl"},"status":0},{"failures":[2,3],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:782","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"do {\n    int = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(char[], java.text.ParsePosition.getIndex());\n    java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + int));\n} while ((int > 0) && ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) )","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:453","type":"CtDoImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1636","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.append(':');\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1208","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"byte[][(int + int)] = ((byte)(255 & (short >> int)))","position":"org.apache.commons.lang3.Conversion:1366","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1857","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:429","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:431","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.util.Comparator<T>.compare(T, T)) < 0","position":"org.apache.commons.lang3.Range:236","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char)","position":"org.apache.commons.lang3.text.StrBuilder:1348","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","position":"org.apache.commons.lang3.reflect.TypeUtils:1026","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:428","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:429","type":"CtInvocationImpl"},"status":0},{"failures":[4,5],"variableMapping":{"t":"t","this":"this"},"name":"replace","transplant":{"sourceCode":"java.lang.Thread.setUncaughtExceptionHandler(org.apache.commons.lang3.concurrent.BasicThreadFactory.getUncaughtExceptionHandler())","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:227","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getDaemonFlag()) != null) {\n    java.lang.Thread.setDaemon(org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag().booleanValue());\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:234","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return double[]","position":"org.apache.commons.lang3.ArrayUtils:4127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.double[]","position":"org.apache.commons.lang3.ArrayUtils:3323","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tokens":"tokens","tokenPos":"tokenPos"},"name":"add","transplant":{"sourceCode":"return java.lang.String[][(int)++]","position":"org.apache.commons.lang3.text.StrTokenizer:410","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasPrevious()) {\n    return java.lang.String[][--(int)];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:551","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:396","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1273","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1666","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, float)","position":"org.apache.commons.lang3.builder.ToStringBuilder:388","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"length","rhs":"rhs"},"name":"replace","transplant":{"sourceCode":"if (int[] == null) {\n    this.int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[].int) != (int[].int)) {\n    int = (int[].int) < (int[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:742","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.StringUtils:2831","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:339","type":"CtBreakImpl"},"status":-2},{"failures":[6],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","position":"org.apache.commons.lang3.text.StrBuilder:2787","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:827","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrTokenizer:834","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n    return (boolean && (!boolean)) && (!boolean);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1439","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.StringBuilder.append(float[][int]);\n}","position":"org.apache.commons.lang3.StringUtils:3915","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.lang3.ArrayUtils:1688","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.time.FastDatePrinter:302","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    boolean = boolean[][int];\n    boolean[][int] = boolean[][int];\n    boolean[][int] = boolean;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1580","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(double)--","position":"org.apache.commons.lang3.mutable.MutableDouble:146","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:691","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"startTime","operand":"startTime"},"name":"add","transplant":{"sourceCode":"this.long -= long","position":"org.apache.commons.lang3.mutable.MutableLong:159","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","position":"org.apache.commons.lang3.time.StopWatch:184","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"str":"padStr","remove":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.endsWith(java.lang.String)) {\n    return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())));\n} ","position":"org.apache.commons.lang3.StringUtils:4287","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, int).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5430","type":"CtReturnImpl"},"status":-2},{"failures":[7],"variableMapping":{"toClass":"toClass","type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:370","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return (java.lang.Class<?>.equals(java.lang.Object.java.lang.Object)) || ((java.lang.Class<?>.isArray()) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.lang.Class<?>.getComponentType())));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:399","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","position":"org.apache.commons.lang3.reflect.TypeUtils:910","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.reflect.ParameterizedType);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:977","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.charAt((int - 1))) == (org.apache.commons.lang3.CharUtils.char)) {\n    int--;\n} ","position":"org.apache.commons.lang3.StringUtils:5013","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1041","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token[].int","position":"org.apache.commons.lang3.time.DurationFormatUtils:567","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(java.lang.String.toCharArray())","position":"org.apache.commons.lang3.text.StrMatcher:196","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.BitSet.cardinality()","position":"org.apache.commons.lang3.ArrayUtils:6070","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:965","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:616","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3134","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:774","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.TimedSemaphore.isShutdown()) {\n    throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\");\n} ","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:293","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = (int[].int) - 1 ; int >= 0 ; int--) {\n    final int int = int[][int];\n    if ((int - int) > 1) {\n        final int int = (int - int) - 1;\n        int -= int;\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, int);\n    } \n    int = int;\n}","position":"org.apache.commons.lang3.ArrayUtils:6036","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.time.DurationFormatUtils.Token[] org.apache.commons.lang3.time.DurationFormatUtils.Token[] = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)","position":"org.apache.commons.lang3.time.DurationFormatUtils:128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:83","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"offset":"offset","length":"length","priorVariables":"priorVariables","chars":"chars"},"name":"add","transplant":{"sourceCode":"if (java.util.List<java.lang.String> == null) {\n    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:832","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int))","position":"org.apache.commons.lang3.text.StrSubstitutor:834","type":"CtInvocationImpl"},"status":0},{"failures":[8,9],"binaryOperator":"(int + (java.lang.String.length()))","name":"math","position":"org.apache.commons.lang3.StringUtils:2488","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1356","type":"CtReturnImpl"},"status":-2},{"failures":[10],"variableMapping":{"destination":"array"},"name":"replace","transplant":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[].clone()","position":"org.apache.commons.lang3.ArrayUtils:390","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","position":"org.apache.commons.lang3.ObjectUtils:123","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","position":"org.apache.commons.lang3.text.WordUtils:214","type":"CtInvocationImpl"},"status":-2},{"failures":[11,12,13,14],"name":"returnValue","position":"org.apache.commons.lang3.StringUtils:6177","type":"mutation","return":"return true","status":-1},{"failures":[15],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Byte.java.lang.Byte.valueOf(((byte)(1)))","position":"org.apache.commons.lang3.math.NumberUtils:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Byte[][int] = java.lang.Byte.java.lang.Byte.valueOf(byte[][int])","position":"org.apache.commons.lang3.ArrayUtils:3281","type":"CtAssignmentImpl"},"status":-1},{"failures":[16,17],"variableMapping":{"threshold":"startPos","m":"startPos","n":"startPos"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} else if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1120","type":"CtIfImpl"},"status":-1},{"failures":[18,19],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:1764","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object , org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle).append(java.lang.Object).toString()","position":"org.apache.commons.lang3.ArrayUtils:178","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2075","type":"CtIfImpl"},"status":-2},{"failures":[20],"variableMapping":{"value":"value"},"name":"add","transplant":{"sourceCode":"(this.int)++","position":"org.apache.commons.lang3.mutable.MutableInt:118","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int += int","position":"org.apache.commons.lang3.mutable.MutableInt:138","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int | -2147483648","position":"org.apache.commons.lang3.time.FastDatePrinter:1239","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int + int","position":"org.apache.commons.lang3.StringUtils:4532","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    int += 3 * int;\n} ","position":"org.apache.commons.lang3.StringUtils:4757","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:829","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:952","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:808","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((int > 0) && (int > 0)) && (int >= int)) {\n    boolean boolean = true;\n    for (int int = 0 ; int < int ; int++) {\n        if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n            boolean = false;\n            break;\n        } \n    }\n    if (boolean) {\n        java.lang.StringBuffer.setLength((int - int));\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:411","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + int))","position":"org.apache.commons.lang3.text.StrBuilder:752","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2460","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"outer : for (int int = (int - int) + 1 ; int >= 0 ; int--) {\n    for (int int = 0 ; int < int ; int++) {\n        if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n            continue outer;\n        } \n    }\n    return int;\n}","position":"org.apache.commons.lang3.text.StrBuilder:2469","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:792","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:67","type":"CtThrowImpl"},"status":-2},{"failures":[21],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 12","position":"org.apache.commons.lang3.Conversion:109","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.CharSequence java.lang.CharSequence : java.lang.CharSequence[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:262","type":"CtForEachImpl"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.util.Collection<?>)","position":"org.apache.commons.lang3.builder.ToStringStyle:607","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.text.Format.parseObject(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.CompositeFormat:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = null","position":"org.apache.commons.lang3.math.NumberUtils:516","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    T = org.apache.commons.lang3.concurrent.AtomicInitializer<T>.initialize();\n    if (!(java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n        T = java.util.concurrent.atomic.AtomicReference<T>.get();\n    } \n} ","position":"org.apache.commons.lang3.concurrent.AtomicInitializer:84","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.lang3.text.StrTokenizer:653","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(java.lang.Object, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:768","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:398","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int <<= 4","position":"org.apache.commons.lang3.reflect.TypeUtils:211","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.StrBuilder:209","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String.substring(0, (int - 1))","position":"org.apache.commons.lang3.StringUtils:5091","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:974","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1190","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.FormatFactory.getFormat(java.lang.String, java.lang.String, java.text.MessageFormat.getLocale())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:318","type":"CtReturnImpl"},"status":-2},{"failures":[31],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:177","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mul\")","position":"org.apache.commons.lang3.math.Fraction:643","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.NumberUtils:1082","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"c","tokenStart":"newTokenStart","list":"list","newTokenStart":"tokenStart"},"name":"add","transplant":{"sourceCode":"if (int != int) {\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:3239","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)))","position":"org.apache.commons.lang3.StringUtils:3240","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:941","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unexpected generic\" + \" interface type found: \") + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1064","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"a":"a","b":"b","this":"this"},"name":"add","transplant":{"sourceCode":"if (java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.max(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.max(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) == char) {\n        if (((int < int) && (int < int)) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n            if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n                continue outer;\n            } \n        } else {\n            continue outer;\n        }\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1720","type":"CtForImpl"},"status":-2},{"failures":[32],"variableMapping":{"this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:833","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:837","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(char[], char)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2405","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 1 minutes\", \" 1 minute\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:214","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","this":"this","seq":"searchChars"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1154","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1760","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length())) + 1","position":"org.apache.commons.lang3.StringUtils:1116","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:832","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short short = short[][0]","position":"org.apache.commons.lang3.math.NumberUtils:839","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.CharRange.CharacterIterator.prepareNext()","position":"org.apache.commons.lang3.CharRange:345","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Byte java.lang.Byte = java.lang.Byte.java.lang.Byte.valueOf(byte)","position":"org.apache.commons.lang3.ArrayUtils:5361","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 7 :\n    return 'e';","position":"org.apache.commons.lang3.Conversion:644","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:463","type":"CtAssignmentImpl"},"status":-2},{"failures":[33],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(java.lang.Boolean, \"yes\", \"no\", null)","position":"org.apache.commons.lang3.BooleanUtils:793","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"on\", \"off\")","position":"org.apache.commons.lang3.BooleanUtils:849","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Integer.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:242","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.lang3.ArrayUtils:636","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.StringBuffer == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:596","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","position":"org.apache.commons.lang3.event.EventUtils:52","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array1"},"name":"add","transplant":{"sourceCode":"return int[].clone()","position":"org.apache.commons.lang3.ArrayUtils:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3881","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((long[].int) != (long[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:681","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(T)","position":"org.apache.commons.lang3.Validate:688","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.lang3.ArrayUtils.((double[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(double[], java.lang.Double.java.lang.Class<java.lang.Double>)))","position":"org.apache.commons.lang3.ArrayUtils:4125","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:428","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":30,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringStringString":9,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":0,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":7,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":2,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":31,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":11,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":23,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":27,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":28,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":13,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":1,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":12,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":32,"org.apache.commons.lang3.mutable.MutableIntTest.testAddValuePrimitive":20,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":22,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars":18,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":25,"org.apache.commons.lang3.math.FractionTest.testDivide":6,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":24,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":26,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":4,"org.apache.commons.lang3.ArrayUtilsTest.testCloneChar":10,"org.apache.commons.lang3.StringUtilsTest.testIsAllUpperCase":14,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":3,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":8,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_StringInt":16,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_byte":15,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_boolean":33,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoExHandler":5}}]
