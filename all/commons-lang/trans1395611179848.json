[{"position":"org.apache.commons.lang3.Conversion:350","failures":[0,1],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:2288","sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:310","sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n} ","type":"CtIfImpl"},"failures":[2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"chars","separator":"chars"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:81","sourceCode":"if (F == null) {\n    F = org.apache.commons.lang3.time.FormatCache<F>.createInstance(java.lang.String, java.util.TimeZone, java.util.Locale);\n    final F F = java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, F>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, F);\n    if (F != null) {\n        F = F;\n    } \n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1614","sourceCode":"byte[][int] = byte[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1299","sourceCode":"byte[][(int + int)] = ((byte)(255 & (long >> int)))","type":"CtAssignmentImpl"},"failures":[86,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"j":"shift","array":"dst","i":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:498","sourceCode":"return (char >= 'a') && (char <= 'z')","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:487","sourceCode":"return java.lang.Character.java.lang.Character.isWhitespace(char)","type":"CtReturnImpl"},"failures":[88,89,90,91,92,93,94,95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:179","sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.NotImplementedException:126","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:650","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:523","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[97,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"position":"org.apache.commons.lang3.mutable.MutableObject:98","failures":[100],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:186","sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.CharRange.boolean) {\n        return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n    } \n    return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char));\n} ","type":"CtIfImpl"},"failures":[101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:70","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pattern":"arraySeparator"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:159","sourceCode":"short -= short","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1134","sourceCode":"short = short","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"a","operand":"a"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:308","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:837","sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:115","sourceCode":"return 6","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:58","sourceCode":"return 1 + (java.lang.StringBuilder.length())","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1070","sourceCode":"int -= 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:131","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"offset":"offset"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1178","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"4.9\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:657","sourceCode":"if (java.lang.String == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:322","sourceCode":"int += 12","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:620","sourceCode":"int = (int - int) / 2","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"months":"u"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:909","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, short)","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:469","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"lastWasGap"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:541","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:824","sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","type":"CtThrowImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:518","sourceCode":"try {\n    final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n    org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:741","sourceCode":"int = 8","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:764","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"radix":"lengthChange"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:535","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:650","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"frames":"tokenList","trace":"tokenList"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:940","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","type":"CtWhileImpl"},"failures":[108,109,110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nHex":"pos","dstPos":"len"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:220","sourceCode":"return false","type":"CtReturnImpl"},"failures":[113,114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:210","sourceCode":"return true","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:97","sourceCode":"this.short = short","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:149","sourceCode":"this.short += java.lang.Number.shortValue()","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:975","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:491","sourceCode":"throw new java.lang.ArithmeticException(\"Unable to invert zero.\")","type":"CtThrowImpl"},"failures":[117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","sourceCode":"if (java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.max(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:140","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}","type":"CtIfImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"a","a":"b","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":88,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":22,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":110,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":39,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":37,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":58,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":21,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":51,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":85,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":19,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":44,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":24,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":84,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":112,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":16,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":119,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":35,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":7,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":4,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":77,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":29,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":94,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":32,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":66,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":103,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":59,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":109,"org.apache.commons.lang3.math.FractionTest.testInvert":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":13,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":60,"org.apache.commons.lang3.RangeTest.testContains":115,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":91,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":52,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":62,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":25,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":92,"org.apache.commons.lang3.math.FractionTest.testPow":117,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":41,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":8,"org.apache.commons.lang3.ConversionTest.testLongToByteArray":87,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":73,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":86,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":57,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":105,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":108,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":75,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":104,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":67,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":64,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":65,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":79,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":47,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":100,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":12,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":101,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":72,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":53,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":63,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":99,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":3,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":11,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":82,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":61,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":78,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":46,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":38,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":80,"org.apache.commons.lang3.CharRangeTest.testEquals_Object":116,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":69,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":111,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":17,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":28,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":23,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":98,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":90,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":48,"org.apache.commons.lang3.RangeTest.testIsWithCompare":113,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":30,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":1,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":43,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":97,"org.apache.commons.lang3.NotImplementedExceptionTest.testConstructors":96,"org.apache.commons.lang3.math.FractionTest.testDivide":107,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":18,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":33,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":42,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":34,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":95,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":83,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":2}}]
