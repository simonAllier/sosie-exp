[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n    int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n    if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n        int += 1;\n    } \n    java.util.Calendar.add(java.util.Calendar.int, 1);\n    int += java.util.Calendar.get(java.util.Calendar.int);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:343","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:979","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0],"variableMapping":{"count":"count"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5274","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Integer, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5541","type":"CtIfImpl"},"status":-1},{"failures":[1],"variableMapping":{"hours":"size","minutes":"size"},"name":"replace","transplant":{"sourceCode":"int += 60 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:385","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 4","position":"org.apache.commons.lang3.text.StrBuilder:1582","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"binaryOperator":"(\"Invalid locale format: \" + java.lang.String)","name":"math","position":"org.apache.commons.lang3.LocaleUtils:121","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (double[] == null) || ((double[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3565","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        final int int = int;\n        while ((++int) < (int)) {\n            if ((char[][int]) != char) {\n                break;\n            } \n        }\n        final int int = int - int;\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n        int -= int;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1701","type":"CtForImpl"},"status":-2},{"failures":[2],"variableMapping":{"chars":"chars"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(char[])","position":"org.apache.commons.lang3.text.StrMatcher:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(char[][0])","position":"org.apache.commons.lang3.text.StrMatcher:178","type":"CtReturnImpl"},"status":-1},{"failures":[3,4],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:533","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'b';\n} else {\n    return 'a';\n}","position":"org.apache.commons.lang3.Conversion:538","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.lang.Class<?>.isArray())) {\n    boolean = java.lang.Object.equals(java.lang.Object);\n} else if ((java.lang.Object.getClass()) != (java.lang.Object.getClass())) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n} else if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:463","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass())","position":"org.apache.commons.lang3.reflect.MethodUtils:534","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:634","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:275","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"newSize":"length"},"name":"add","transplant":{"sourceCode":"final byte[] byte[] = new byte[int]","position":"org.apache.commons.lang3.ArrayUtils:1089","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final byte[] byte[] = new byte[(byte[].int) + (byte[].int)]","position":"org.apache.commons.lang3.ArrayUtils:3826","type":"CtLocalVariableImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"variableMapping":{"months":"endIndex"},"name":"add","transplant":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1833","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"nBools":"startCutoff","srcPos":"java.util.Calendar.DATE"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1587","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n    java.util.Calendar.add(java.util.Calendar.int, -1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1220","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"threshold":"java.util.Calendar.YEAR"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","position":"org.apache.commons.lang3.StringUtils:6854","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 2) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:200","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:936","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeField(java.lang.reflect.Field, ((java.lang.Object)(null)), java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:603","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][(int + 1)]) == 'x') || ((char[][(int + 1)]) == 'X')) {\n    int int = int + 2;\n    if (int == int) {\n        return false;\n    } \n    for ( ; int < (char[].int) ; int++) {\n        if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n            return false;\n        } \n    }\n    return true;\n} else {\n    int int = int + 1;\n    for ( ; int < (char[].int) ; int++) {\n        if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n            return false;\n        } \n    }\n    return true;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1350","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.CharSet(\"0-9\")","position":"org.apache.commons.lang3.CharSet:72","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = ((java.lang.Object[])(T)).clone()","position":"org.apache.commons.lang3.ObjectUtils:614","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getShortMonths()","position":"org.apache.commons.lang3.time.FastDatePrinter:174","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getMonths()","position":"org.apache.commons.lang3.time.FastDatePrinter:173","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:589","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:549","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:588","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(java.lang.Class<?>, java.lang.String, boolean)","position":"org.apache.commons.lang3.reflect.FieldUtils:341","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = 1 << int","position":"org.apache.commons.lang3.Conversion:1090","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String, 0, int)","position":"org.apache.commons.lang3.StringUtils:6355","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',')","position":"org.apache.commons.lang3.tuple.Triple:142","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.this(java.lang.String, java.util.TimeZone, java.util.Locale, null)","position":"org.apache.commons.lang3.time.FastDateParser:94","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:499","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final float[] float[] = new float[(float[].int) + (float[].int)]","position":"org.apache.commons.lang3.ArrayUtils:3942","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Object[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.Object[][int]);\n} ","position":"org.apache.commons.lang3.StringUtils:4011","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.CharRange:307","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.lang3.ArrayUtils:6037","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"classes":"classes"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ClassUtils:728","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[]","position":"org.apache.commons.lang3.ClassUtils:783","type":"CtReturnImpl"},"status":0},{"failures":[29,1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:782","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2799","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:6777","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Integer[].int) ; int++) {\n    int[][int] = java.lang.Integer[][int].intValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3100","type":"CtForImpl"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"variableMapping":{"nBools":"trimStart","srcPos":"trimStart"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","position":"org.apache.commons.lang3.text.StrTokenizer:816","type":"CtInvocationImpl"},"status":-1},{"failures":[64],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5284","type":"CtBreakImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ClassCastException()","position":"org.apache.commons.lang3.builder.CompareToBuilder:283","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","position":"org.apache.commons.lang3.Conversion:302","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuffer.setLength((int - int));\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:419","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.RandomStringUtils:226","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.Class<?>>.addAll(org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:929","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == (boolean[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2923","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int < int) && ((char[][(int - 1)]) <= ' ')) {\n    int--;\n}","position":"org.apache.commons.lang3.text.StrBuilder:2049","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (java.lang.Class<?>.isArray()) {\n        org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != java.lang.Class<?>)) {\n            java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n            org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        }\n    }\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:356","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isPublic(java.lang.reflect.Field.getModifiers()))) {\n    if (boolean) {\n        java.lang.reflect.Field.setAccessible(true);\n    } else {\n        continue;\n    }\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.FastDateFormat:134","type":"CtReturnImpl"},"status":-2},{"failures":[65],"binaryOperator":"int >= 0","name":"negateConditional","position":"org.apache.commons.lang3.text.StrBuilder:1892","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(char[]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1619","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[].int) != (float[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:867","type":"CtIfImpl"},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74,75,6,76,77,7,78,8,9,11,13,14,15,16,17,18,79,19,20,21,22,23,24,25,80,26,27,28,81,82,83,84,85,57,86],"variableMapping":{"chars":"str"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(java.lang.String.charAt(0))","position":"org.apache.commons.lang3.text.StrMatcher:194","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.StringMatcher(java.lang.String)","position":"org.apache.commons.lang3.text.StrMatcher:209","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Throwable[] java.lang.Throwable[] = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:393","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:240","type":"CtIfImpl"},"status":-2},{"failures":[87,88,89,90],"variableMapping":{"replaceCount":"i"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4008","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1752","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.StringUtils:6465","type":"CtInvocationImpl"},"status":-2},{"failures":[91,91],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:702","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:818","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], short, 0)","position":"org.apache.commons.lang3.ArrayUtils:2210","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    java.lang.Class<?> = java.lang.Class<?>;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:347","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String, null)","position":"org.apache.commons.lang3.text.WordUtils:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:475","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)","position":"org.apache.commons.lang3.ObjectUtils:617","type":"CtAssignmentImpl"},"status":-2},{"failures":[92,93,94,95,96,97,98,99,100,101,101,102,102,103,103,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,91,91,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,170,170,171,171,172,172,173,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"binaryOperator":"(int - 1)","name":"math","position":"org.apache.commons.lang3.builder.ToStringStyle:414","type":"mutation","status":-1},{"failures":[243,244],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.apache.commons.lang3.AnnotationUtils:205","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring((int + (java.lang.String.length())), int)","position":"org.apache.commons.lang3.StringUtils:2488","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String[].int) == 1) {\n    final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.get(java.lang.String[][0]);\n    if (org.apache.commons.lang3.CharSet != null) {\n        return org.apache.commons.lang3.CharSet;\n    } \n} ","position":"org.apache.commons.lang3.CharSet:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.text.translate.LookupTranslator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:592","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 'z' + 1","position":"org.apache.commons.lang3.RandomStringUtils:241","type":"CtAssignmentImpl"},"status":-2},{"failures":[83],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ClassCastException()","position":"org.apache.commons.lang3.builder.CompareToBuilder:283","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\")","position":"org.apache.commons.lang3.text.StrSubstitutor:1041","type":"CtThrowImpl"},"status":-1},{"failures":[245],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:202","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")","position":"org.apache.commons.lang3.time.StopWatch:282","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.checkTokenized()","position":"org.apache.commons.lang3.text.StrTokenizer:443","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:7520","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.NullPointerException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:278","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuilder.append(\"null\");\n} else {\n    java.lang.String java.lang.String;\n    try {\n        java.lang.String = java.lang.Object.toString();\n    } catch (final java.lang.Exception java.lang.Exception) {\n        java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception));\n    }\n    java.lang.StringBuilder.append(java.lang.String);\n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:147","type":"CtIfImpl"},"status":-2},{"failures":[246],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.LinkedHashSet<java.lang.Class<?>> java.util.LinkedHashSet<java.lang.Class<?>> = new java.util.LinkedHashSet<java.lang.Class<?>>()","position":"org.apache.commons.lang3.ClassUtils:357","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4291","type":"CtAssignmentImpl"},"status":-1},{"failures":[247],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(')","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","position":"org.apache.commons.lang3.math.Fraction:913","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"val":"object"},"name":"replace","transplant":{"sourceCode":"if (T != null) {\n    return T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:224","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"bit_pattern":"startIndex","count":"startIndex"},"name":"replace","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","position":"org.apache.commons.lang3.BitField:43","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2124","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.java.lang.String.format(org.apache.commons.lang3.text.FormattableUtils.java.lang.String, java.util.Formattable)","position":"org.apache.commons.lang3.text.FormattableUtils:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getVariablePrefixMatcher()","position":"org.apache.commons.lang3.text.StrSubstitutor:751","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getVariableSuffixMatcher()","position":"org.apache.commons.lang3.text.StrSubstitutor:752","type":"CtLocalVariableImpl"},"status":-2},{"failures":[92,248,249,250,93,94,95,96,97,98,99,100,101,101,102,102,103,103,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,91,91,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,170,170,171,171,172,172,173,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,251,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n    org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:212","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"digits":"months"},"name":"replace","transplant":{"sourceCode":"int = 3","position":"org.apache.commons.lang3.time.FastDatePrinter:860","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.time.DurationFormatUtils:366","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.StrTokenizer:806","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, int)","position":"org.apache.commons.lang3.time.DateUtils:1783","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = (int + int) - (int - int)","position":"org.apache.commons.lang3.text.StrSubstitutor:855","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:675","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:169","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"i"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.charAt(int++)","position":"org.apache.commons.lang3.text.StrBuilder:2866","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2774","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final char[] char[] = new char[(int / 2) + 1]","position":"org.apache.commons.lang3.text.WordUtils:543","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.text.StrBuilder:360","type":"CtLocalVariableImpl"},"status":-2},{"failures":[252],"name":"returnValue","position":"org.apache.commons.lang3.StringUtils:834","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V>).replace(java.lang.Object)","position":"org.apache.commons.lang3.text.StrSubstitutor:181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((boolean[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:367","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.Object java.lang.Object","position":"org.apache.commons.lang3.builder.DiffBuilder:807","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object java.lang.Object = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:494","type":"CtLocalVariableImpl"},"status":-2},{"failures":[253],"variableMapping":{"dstPos":"shift","shift":"i","i":"shift"},"name":"add","transplant":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:879","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean[][(int + int)] = (1 & (long >> int)) != 0","position":"org.apache.commons.lang3.Conversion:1560","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.ParameterizedType == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:432","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4954","type":"CtIfImpl"},"status":-2},{"failures":[254,255,256],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"char[][(int)++] = char","position":"org.apache.commons.lang3.text.StrBuilder:1365","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    java.lang.String.getChars((int - int), int, char[], int);\n} else {\n    final int int = int - int;\n    for (int int = 0 ; int < int ; int++) {\n        char[][((int) + int)] = char;\n    }\n    java.lang.String.getChars(0, int, char[], ((int) + int));\n}","position":"org.apache.commons.lang3.text.StrBuilder:1391","type":"CtIfImpl"},"status":-1},{"failures":[3,4],"binaryOperator":"(int + 1)","name":"math","position":"org.apache.commons.lang3.Conversion:522","type":"mutation","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:2022","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharSequenceUtils:211","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:183","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"char = char","position":"org.apache.commons.lang3.CharRange:71","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char)","position":"org.apache.commons.lang3.text.WordUtils:421","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"float float = 0.0F","position":"org.apache.commons.lang3.reflect.MemberUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final float float = org.apache.commons.lang3.mutable.MutableFloat.float","position":"org.apache.commons.lang3.mutable.MutableFloat:301","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"hours":"length","offset":"length"},"name":"add","transplant":{"sourceCode":"final int int = (int / (60 * 1000)) - (60 * int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1212","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence[].int","position":"org.apache.commons.lang3.StringUtils:1967","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:665","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:217","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.mutable.MutableLong:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:762","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"strs":"set"},"name":"replace","transplant":{"sourceCode":"return java.lang.String[][0]","position":"org.apache.commons.lang3.StringUtils:6693","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.CharSetUtils:206","type":"CtIfImpl"},"status":-2},{"failures":[257,258,259],"variableMapping":{"comparison":"comparison","lhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if (boolean[] == null) {\n    this.int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    int = (boolean[].int) < (boolean[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:982","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int = (int * 7) + (java.lang.Object.hashCode());\n    } \n}","position":"org.apache.commons.lang3.time.FormatCache:255","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Helper class to hold multi-part Map keys<\/p>\n */\nprivate static class MultipartKey {\n    private final java.lang.Object[] keys;\n\n    private int hashCode;\n\n    /** \n     * Constructs an instance of <code>MultipartKey<\/code> to hold the specified objects.\n     * @param keys the set of objects that make up the key.  Each key may be null.\n     */\npublic MultipartKey(final java.lang.Object... keys) {\n        this.java.lang.Object[] = java.lang.Object[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        return java.util.Arrays.java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(java.lang.Object)).java.lang.Object[]);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int hashCode() {\n        if ((int) == 0) {\n            int int = 0;\n            for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n                if (java.lang.Object != null) {\n                    int = (int * 7) + (java.lang.Object.hashCode());\n                } \n            }\n            int = int;\n        } \n        return int;\n    }\n}","position":"org.apache.commons.lang3.time.FormatCache:225","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} else if (int < 0) {\n    if (int == (java.lang.Integer.int)) {\n        return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n    } \n    return org.apache.commons.lang3.math.Fraction.invert().pow(-int);\n} else {\n    final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(this);\n    if ((int % 2) == 0) {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n    } else {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n    }\n}","position":"org.apache.commons.lang3.math.Fraction:549","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    if ((java.util.List<java.lang.reflect.TypeVariable<java.lang.Class<T>>>.contains(java.lang.reflect.Type)) && (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.containsKey(java.lang.reflect.TypeVariable<?>))) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>));\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1024","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Float.java.lang.Float.valueOf(float)","position":"org.apache.commons.lang3.builder.DiffBuilder:483","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n    java.lang.StringBuilder.append(\"[]\");\n}","position":"org.apache.commons.lang3.ClassUtils:203","type":"CtWhileImpl"},"status":-2},{"failures":[260],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (short[].int) ; int++) {\n    if ((short[][int]) > short) {\n        short = short[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:988","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:342","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[] == null ? -1 : char[].int","position":"org.apache.commons.lang3.text.WordUtils:410","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (long > long) {\n    long = long;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:492","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getAllInterfaces(java.lang.Class<?>, java.util.LinkedHashSet<java.lang.Class<?>>)","position":"org.apache.commons.lang3.ClassUtils:358","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1500","type":"CtReturnImpl"},"status":-2},{"failures":[261,262,263,264,265],"variableMapping":{"shift":"y"},"name":"replace","transplant":{"sourceCode":"final long long = 255L << int","position":"org.apache.commons.lang3.Conversion:808","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) * ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:640","type":"CtLocalVariableImpl"},"status":-1},{"failures":[266,267],"variableMapping":{"str":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.toUpperCase()","position":"org.apache.commons.lang3.StringUtils:5591","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:287","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"SunOS\")","position":"org.apache.commons.lang3.SystemUtils:1103","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.initialize()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.initialize();\n} finally {\n    if ((java.util.concurrent.ExecutorService) != null) {\n        java.util.concurrent.ExecutorService.shutdown();\n    } \n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:326","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.String = java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.text.WordUtils:358","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1819","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (T != null) {\n    java.lang.Class<?> = T.getClass();\n} else {\n    throw new java.lang.IllegalArgumentException(\"Array and element cannot both be null\");\n}","position":"org.apache.commons.lang3.ArrayUtils:4290","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":164,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":166,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":226,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":163,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":203,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":40,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":191,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":232,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":13,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":213,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":6,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":140,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":221,"org.apache.commons.lang3.text.StrBuilderTest.testContains_StrMatcher":74,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":223,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":185,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":207,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":202,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":135,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":100,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort":260,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":204,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":229,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":152,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":231,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":7,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":156,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":192,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":10,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":146,"org.apache.commons.lang3.math.FractionTest.testMultiply":265,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":69,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":123,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":81,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":159,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":38,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":5,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":96,"org.apache.commons.lang3.math.FractionTest.testDivide":264,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":83,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsIgnoreCase":252,"org.apache.commons.lang3.text.StrMatcherTest.testStringMatcher_String":67,"org.apache.commons.lang3.text.StrMatcherTest.testMatcherIndices":66,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":173,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":227,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":243,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":138,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":209,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":113,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetValueDelimiter":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":108,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":198,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":59,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":162,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":189,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":266,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":91,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":224,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":55,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":206,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":145,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":125,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":167,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":139,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":214,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":20,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":76,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":222,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":183,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":220,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":230,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":126,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":65,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":112,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":219,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":24,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":150,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":133,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":109,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":2,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":181,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":245,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":188,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":27,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":115,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":17,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":248,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":258,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":129,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":68,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":21,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":255,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":197,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":200,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":118,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":89,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":216,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":151,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":25,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":211,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":177,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":78,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":30,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":246,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":90,"org.apache.commons.lang3.ArrayUtilsTest.testToString":92,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":193,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":175,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":8,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":184,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Left":256,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":205,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":157,"org.apache.commons.lang3.math.FractionTest.testAdd":261,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":34,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":267,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":165,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":95,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":37,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":215,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":18,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":63,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":107,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":153,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":142,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":176,"org.apache.commons.lang3.text.StrTokenizerTest.test8":241,"org.apache.commons.lang3.text.StrTokenizerTest.test5":238,"org.apache.commons.lang3.text.StrTokenizerTest.test4":237,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":143,"org.apache.commons.lang3.text.StrTokenizerTest.test7":240,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":144,"org.apache.commons.lang3.text.StrTokenizerTest.test6":239,"org.apache.commons.lang3.text.StrTokenizerTest.test1":234,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":51,"org.apache.commons.lang3.text.StrTokenizerTest.test3":236,"org.apache.commons.lang3.text.StrTokenizerTest.test2":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":120,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":250,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":233,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":87,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":196,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":32,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":98,"org.apache.commons.lang3.math.FractionTest.testSubtract":263,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":12,"org.apache.commons.lang3.math.FractionTest.testPow":262,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":212,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":199,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":225,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringStringString":244,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":44,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":105,"org.apache.commons.lang3.ConversionTest.testLongToBinary":253,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":4,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":122,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":84,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":179,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":124,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":180,"org.apache.commons.lang3.math.FractionTest.testToString":247,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":64,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":242,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":111,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":171,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":79,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":182}}]
