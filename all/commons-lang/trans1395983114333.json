[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (java.lang.Object[].int) ; int++) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object[][int]);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1136","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:462","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1350","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3],"binaryOperator":"((char)((int % 10) + '0'))","name":"math","position":"org.apache.commons.lang3.time.UnpaddedNumberField:757","type":"mutation","status":-1},{"failures":[4],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:803","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.toString(((java.lang.annotation.Annotation)(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:93","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\")","position":"org.apache.commons.lang3.text.StrSubstitutor:1041","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:382","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:971","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","offset":"max"},"name":"replace","transplant":{"sourceCode":"if (int > (java.lang.String.length())) {\n    int = java.lang.String.length();\n} ","position":"org.apache.commons.lang3.StringUtils:6403","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n    if (boolean || boolean) {\n        boolean = true;\n        if ((int++) == int) {\n            int = int;\n            boolean = false;\n        } \n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n        boolean = false;\n    } \n    int = ++int;\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3132","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.text.StrMatcher.NoMatcher()","position":"org.apache.commons.lang3.text.StrMatcher:71","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","position":"org.apache.commons.lang3.ObjectUtils:549","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"newarray":"org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE"},"name":"replace","transplant":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:358","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 6","position":"org.apache.commons.lang3.Conversion:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.hashCode()","position":"org.apache.commons.lang3.time.FastDateFormat:578","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this.java.lang.String[].clone()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:543","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:2034","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int < 0) || (int > org.apache.commons.lang3.text.StrBuilder.(length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:415","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n    throw new java.lang.ClassCastException();\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:282","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.builder.HashCodeBuilder.REGISTRY":"org.apache.commons.lang3.builder.HashCodeBuilder.REGISTRY"},"name":"replace","transplant":{"sourceCode":"this.org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>())","position":"org.apache.commons.lang3.builder.HashCodeBuilder:469","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder) {\n    if (org.apache.commons.lang3.builder.HashCodeBuilder.(org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()) == null) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>());\n    } \n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:467","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Float)","position":"org.apache.commons.lang3.ArrayUtils:5807","type":"CtLocalVariableImpl"},"status":-2},{"failures":[5,6,6,7,8,9,10,11,12],"variableMapping":{"builder":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.build()","position":"org.apache.commons.lang3.AnnotationUtils:209","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.toString()","position":"org.apache.commons.lang3.builder.ToStringBuilder:1078","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 3","position":"org.apache.commons.lang3.Conversion:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 1","position":"org.apache.commons.lang3.math.Fraction:899","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5900","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (short == (short[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2235","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:936","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[][int]) != (java.lang.String.charAt(int))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2082","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (37 * int) + (java.lang.Object.getClass().hashCode())","position":"org.apache.commons.lang3.Range:432","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.lang.String.endsWith(\"[]\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2));\n    java.lang.StringBuilder.append(\"[\");\n}","position":"org.apache.commons.lang3.ClassUtils:964","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    return java.lang.Class<?>.isArray() ? java.lang.Class<?>.getComponentType() : null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1345","type":"CtIfImpl"},"status":-2},{"failures":[13,14,6,15,16,17,18,19,20],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append(':')","position":"org.apache.commons.lang3.time.FastDatePrinter:1209","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1556","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"nullText":"key"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Lookup implementation that uses a Map.\n */\nstatic class MapStrLookup<V> extends org.apache.commons.lang3.text.StrLookup<V> {\n    /** \n     * Map keys are variable names and value.\n     */\nprivate final java.util.Map<java.lang.String, V> map;\n\n    /** \n     * Creates a new instance backed by a Map.\n     * \n     * @param map  the map of keys to values, may be null\n     */\nMapStrLookup(final java.util.Map<java.lang.String, V> map) {\n        this.java.util.Map<java.lang.String, V> = java.util.Map<java.lang.String, V>;\n    }\n\n    /** \n     * Looks up a String key to a String value using the map.\n     * <p>\n     * If the map is null, then null is returned.\n     * The map result object is converted to a string using toString().\n     * \n     * @param key  the key to be looked up, may be null\n     * @return the matching value, null if no match\n     */\n@java.lang.Override\n    public java.lang.String lookup(final java.lang.String key) {\n        if ((java.util.Map<java.lang.String, V>) == null) {\n            return null;\n        } \n        final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(java.lang.String);\n        if (java.lang.Object == null) {\n            return null;\n        } \n        return java.lang.Object.toString();\n    }\n}","position":"org.apache.commons.lang3.text.StrLookup:137","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output an unpadded number.<\/p>\n */\nprivate static class UnpaddedNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    /** \n     * Constructs an instance of {@code UnpadedNumberField} with the specified field.\n     * \n     * @param field the field\n     */\nUnpaddedNumberField(final int field) {\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 4;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 10) {\n            java.lang.StringBuffer.append(((char)(int + '0')));\n        } else if (int < 100) {\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:720","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:560","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) == (((org.apache.commons.lang3.mutable.MutableBoolean)(java.lang.Object)).booleanValue())","position":"org.apache.commons.lang3.mutable.MutableBoolean:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.DateUtils:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char) == (java.lang.Character.char)) {\n    boolean = false;\n} else if (((char) + 1) == (org.apache.commons.lang3.CharRange.char)) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = ((char)((char) + 1));\n}","position":"org.apache.commons.lang3.CharRange:306","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object","position":"org.apache.commons.lang3.time.DurationFormatUtils:508","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry().put(java.lang.Object, null)","position":"org.apache.commons.lang3.builder.ToStringStyle:191","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:1057","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean == null) {\n    return boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:176","type":"CtIfImpl"},"status":-2},{"failures":[21,22,23],"variableMapping":{"str":"str","len":"size"},"name":"replace","transplant":{"sourceCode":"if (int < 3) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:1442","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + 1))","position":"org.apache.commons.lang3.text.StrBuilder:797","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(int)","position":"org.apache.commons.lang3.text.StrBuilder:1028","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    java.util.List<java.lang.String>.add(java.lang.Object.toString());\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:332","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.specification.name\")","position":"org.apache.commons.lang3.SystemUtils:410","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:350","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"java.util.Calendar.WEEK_OF_YEAR":"java.util.Calendar.DAY_OF_WEEK"},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:806","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][0] = int;\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[]);\n    int = int[][0];\n    final int int = java.lang.String.length();\n    if (int == 0) {\n        break;\n    } \n    org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule;\n    final char char = java.lang.String.charAt(0);\n    switch (char) {\n        case 'G' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'y' :\n            if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n            }\n            break;\n        case 'M' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 3) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n            }\n            break;\n        case 'd' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'h' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'H' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'm' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 's' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'S' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'E' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n            break;\n        case 'D' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'F' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'w' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'W' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'a' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'k' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'K' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'z' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            }\n            break;\n        case 'Z' :\n            if (int == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            }\n            break;\n        case '\\'' :\n            final java.lang.String java.lang.String = java.lang.String.substring(1);\n            if ((java.lang.String.length()) == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n            }\n            break;\n        default :\n            throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n    }\n    java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.add(org.apache.commons.lang3.time.FastDatePrinter.Rule);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:182","type":"CtForImpl"},"status":-2},{"failures":[24],"binaryOperator":"java.lang.Character[] == null","name":"negateConditional","position":"org.apache.commons.lang3.ArrayUtils:2980","type":"mutation","status":-1},{"failures":[],"variableMapping":{"strLen":"shift","size":"shift"},"name":"add","transplant":{"sourceCode":"final int int = (int - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = 1 << int","position":"org.apache.commons.lang3.Conversion:1090","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.reflect.MethodUtils:390","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(java.lang.Class<?>))","position":"org.apache.commons.lang3.AnnotationUtils:78","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (!boolean) && boolean","position":"org.apache.commons.lang3.math.NumberUtils:1449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:204","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(boolean[], 0, boolean[], 0, boolean[].int)","position":"org.apache.commons.lang3.ArrayUtils:3769","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.Conversion:1389","type":"CtReturnImpl"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.CharRange:159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((char >= (char)) && (char <= (char))) != (boolean)","position":"org.apache.commons.lang3.CharRange:171","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.exception.ExceptionUtils:651","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    break;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:653","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:67","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:598","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.util.Locale>.add(new java.util.Locale(java.util.Locale.getLanguage() , \"\"))","position":"org.apache.commons.lang3.LocaleUtils:202","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1697","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.String)(java.lang.CharSequence)).toCharArray()","position":"org.apache.commons.lang3.CharSequenceUtils:165","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int[]","position":"org.apache.commons.lang3.ArrayUtils:3126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.StringBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:626","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:936","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","position":"org.apache.commons.lang3.math.Fraction:938","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.NumberUtils:275","type":"CtReturnImpl"},"status":0},{"failures":[38,39,40],"binaryOperator":"int < 100","name":"conditionalBoundary","position":"org.apache.commons.lang3.time.PaddedNumberField:851","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (long[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:339","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(long[])","position":"org.apache.commons.lang3.ArrayUtils:5713","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (float[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1534","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:1392","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:6607","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.specification.vendor\")","position":"org.apache.commons.lang3.SystemUtils:428","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long = long - (int * 1000L)","position":"org.apache.commons.lang3.time.DateUtils:988","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6510","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = org.apache.commons.lang3.ArrayUtils.((T[])(org.apache.commons.lang3.ArrayUtils.add(T[], int, T, java.lang.Class<?>)))","position":"org.apache.commons.lang3.ArrayUtils:4296","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.double[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1125","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"hours":"index","days":"index"},"name":"add","transplant":{"sourceCode":"int += 24 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:381","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1578","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (float[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:938","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass())","position":"org.apache.commons.lang3.reflect.MethodUtils:534","type":"CtLocalVariableImpl"},"status":-2},{"failures":[41,42,43,44,45],"variableMapping":{"registry":"registry","pair":"pair"},"name":"replace","transplant":{"sourceCode":"java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>.add(org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>)","position":"org.apache.commons.lang3.builder.EqualsBuilder:180","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>.remove(org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>)","position":"org.apache.commons.lang3.builder.EqualsBuilder:199","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"replace","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return null;\n} else if ((char[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3002","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"d":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"return int > 0 ? int + 1 : -1","position":"org.apache.commons.lang3.reflect.InheritanceUtils:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1778","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"isEquals":"lastWasGap"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.builder.EqualsBuilder:947","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:553","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"tokens":"org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.ArrayUtils.java.lang.String[].clone()","position":"org.apache.commons.lang3.text.StrTokenizer:434","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:3081","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"a"},"name":"add","transplant":{"sourceCode":"final java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = java.lang.annotation.Annotation.annotationType()","position":"org.apache.commons.lang3.AnnotationUtils:169","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.builder.ToStringBuilder org.apache.commons.lang3.builder.ToStringBuilder = new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.annotation.Annotation , org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.builder.ToStringStyle)","position":"org.apache.commons.lang3.AnnotationUtils:196","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:2101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.split(java.lang.String, char)","position":"org.apache.commons.lang3.StringUtils:6315","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Throwable = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCause(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:284","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case org.apache.commons.lang3.time.DateUtils.int :\n    int = java.util.Calendar.get(java.util.Calendar.int);\n    int = int - 1;\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1193","type":"CtCaseImpl"},"status":-2},{"failures":[46,47,48],"variableMapping":{"this":"this","className":"className"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.getClass(java.lang.String, true)","position":"org.apache.commons.lang3.ClassUtils:877","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean)","position":"org.apache.commons.lang3.ClassUtils:837","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, 0)","position":"org.apache.commons.lang3.text.StrBuilder:2321","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((double[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(double[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5859","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.ClassUtils:209","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:87","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, ((java.lang.reflect.WildcardType)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5611","type":"CtIfImpl"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,5,57,58,59,60,61,13,62,63,64,65,66,67,68,14,69,70,71,72,73,74,75,76,6,7,8,9,10,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,15,129,130,131,132,133,134,135,11,12,136,137,138,139,140,16,141,142,143,144,145,146,147,17,148,149,150,151,152,153,154,18,155,156,157,158,159,160,161,19,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,20,183,184,185],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer = new java.lang.StringBuffer(512)","position":"org.apache.commons.lang3.builder.ToStringBuilder:257","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n    java.util.Calendar.add(java.util.Calendar.int, -1);\n}","position":"org.apache.commons.lang3.time.DateUtils:1220","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:3627","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = int + (java.lang.String[][int].length())","position":"org.apache.commons.lang3.StringUtils:4773","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"duration":"duration","tmp":"duration","this":"this"},"name":"add","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtIfImpl"},"status":0},{"failures":[],"binaryOperator":"((byte)((byte & (~int)) | int))","name":"removeConditional","position":"org.apache.commons.lang3.Conversion:1018","type":"mutation","status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY":"newArray"},"name":"add","transplant":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.ArrayUtils:574","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.ArrayUtils:4235","type":"CtReturnImpl"},"status":-2},{"failures":[186],"variableMapping":{"len":"i"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2876","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!boolean) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1773","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"dstPos":"len","nShorts":"len"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:762","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + int))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:455","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"value":"a"},"name":"add","transplant":{"sourceCode":"byte = byte","position":"org.apache.commons.lang3.mutable.MutableByte:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte = byte","position":"org.apache.commons.lang3.math.NumberUtils:1154","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 65535) {\n    java.io.Writer.write(org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int));\n} else if (int > 4095) {\n    java.io.Writer.write((\"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 255) {\n    java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:115","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append('(')","position":"org.apache.commons.lang3.time.FastDateParser:606","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int + int","position":"org.apache.commons.lang3.StringUtils:2857","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.FastDateParser:824","type":"CtNewClassImpl"},"status":-2},{"failures":[187],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6108","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiPrintable(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5995","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:736","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, true)","position":"org.apache.commons.lang3.StringUtils:3204","type":"CtReturnImpl"},"status":-2},{"failures":[188,189],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '3'","position":"org.apache.commons.lang3.Conversion:655","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:357","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type[], \"null value specified for bounds array\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1126","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.reflect.Type[].int) > 0) && (!(((java.lang.reflect.Type[].int) == 1) && (java.lang.Object.java.lang.Object.equals(java.lang.reflect.Type[][0]))))) {\n    java.lang.StringBuilder.append(\" extends \");\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder, \" & \", java.lang.reflect.TypeVariable<?>.getBounds());\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1767","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"months":"startIndex"},"name":"add","transplant":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.validateRange(int, int)","position":"org.apache.commons.lang3.text.StrBuilder:376","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())));\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = float[].int","position":"org.apache.commons.lang3.ArrayUtils:1162","type":"CtAssignmentImpl"},"status":-2},{"failures":[190],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:321","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 7","position":"org.apache.commons.lang3.Conversion:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:783","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:6035","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:289","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments()","position":"org.apache.commons.lang3.reflect.TypeUtils:869","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:227","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"duration":"duration","tmp":"duration","this":"this"},"name":"add","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = java.lang.String;\n        java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n        if ((java.lang.String.length()) != (java.lang.String.length())) {\n            java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n        } \n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer = new org.apache.commons.lang3.text.StrTokenizer()","position":"org.apache.commons.lang3.text.StrTokenizer:93","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(char[])","position":"org.apache.commons.lang3.text.StrTokenizer:229","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:995","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>() {\n    @java.lang.Override\n    protected org.apache.commons.lang3.time.FastDateFormat createInstance(final java.lang.String pattern, final java.util.TimeZone timeZone, final java.util.Locale locale) {\n        return new org.apache.commons.lang3.time.FastDateFormat(java.lang.String , java.util.TimeZone , java.util.Locale);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateFormat:88","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.char[]","position":"org.apache.commons.lang3.text.StrBuilder:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:362","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"char char","position":"org.apache.commons.lang3.StringUtils:6789","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int + 2","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","type":"CtLocalVariableImpl"},"status":-2},{"failures":[191,192,193,194,195,196],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:803","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double), java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.EqualsBuilder:591","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:374","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + int));\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1556","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method))","position":"org.apache.commons.lang3.AnnotationUtils:174","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte","position":"org.apache.commons.lang3.Conversion:1020","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"user.name\")","position":"org.apache.commons.lang3.SystemUtils:832","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:587","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","position":"org.apache.commons.lang3.time.StopWatch:383","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String))","position":"org.apache.commons.lang3.Validate:1151","type":"CtThrowImpl"},"status":-2},{"failures":[197],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:2824","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3859","type":"CtReturnImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":128,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":35,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":127,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":170,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":69,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":105,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":139,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":194,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":148,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":16,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":46,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":181,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":174,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":100,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":171,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":34,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":67,"org.apache.commons.lang3.CharRangeTest.testContains_Char":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":131,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":121,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":111,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":88,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":147,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":31,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":123,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":28,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":135,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":1,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":65,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":22,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":191,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":151,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":77,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":6,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":96,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":126,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":85,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":141,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":45,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":3,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":47,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":173,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":0,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":95,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":30,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":80,"org.apache.commons.lang3.CharSetTest.testContains_Char":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":110,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":90,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":136,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":104,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":83,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":33,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":39,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":140,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":179,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":32,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":138,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":68,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":12,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":91,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":10,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":98,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":7,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":163,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":183,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":79,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":152,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":81,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":175,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":195,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":94,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":93,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":186,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":164,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":82,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":11,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":116,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":102,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":153,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":160,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":61,"org.apache.commons.lang3.ArrayUtilsTest.testToString":185,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":73,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":180,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":92,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDouble":192,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":190,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":145,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":76,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":168,"org.apache.commons.lang3.text.StrBuilderTest.testLang412Right":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":118,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":27,"org.apache.commons.lang3.text.StrTokenizerTest.test8":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":107,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":159,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":189,"org.apache.commons.lang3.text.StrTokenizerTest.test5":53,"org.apache.commons.lang3.text.StrTokenizerTest.test4":52,"org.apache.commons.lang3.text.StrTokenizerTest.test7":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":108,"org.apache.commons.lang3.text.StrTokenizerTest.test6":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":109,"org.apache.commons.lang3.text.StrTokenizerTest.test1":49,"org.apache.commons.lang3.text.StrTokenizerTest.test3":51,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":48,"org.apache.commons.lang3.text.StrTokenizerTest.test2":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":84,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":177,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":70,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":63,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":38,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":42,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":75,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":112,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":166,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":37,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":142,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_char_char":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":97,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":87,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":40,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":41,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":188,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":29,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":19,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":89,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":162,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":5,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":133,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":178}}]
