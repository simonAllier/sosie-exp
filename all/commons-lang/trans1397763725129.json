[{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.StrBuilder:131","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:2029","type":"CtAssignmentImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2766","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:645","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.ExceptionUtils:143","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 7","position":"org.apache.commons.lang3.Conversion:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.CharSequenceUtils:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return (java.lang.CharSequence == null) && (java.lang.CharSequence == null);\n} ","position":"org.apache.commons.lang3.StringUtils:7313","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5917","type":"CtIfImpl"},"status":-2},{"failures":[1,2,3,4],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1046","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String))","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:345","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:2019","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.time.FastDatePrinter:331","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\")","position":"org.apache.commons.lang3.ClassUtils:972","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.TimeZone","position":"org.apache.commons.lang3.time.FastDateParser:192","type":"CtReturnImpl"},"status":-2},{"failures":[5,6,7,8,9,10],"variableMapping":{"buffer":"regex"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append('\\n')","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:135","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"(\\\\p{Nd}{\")","position":"org.apache.commons.lang3.time.FastDateParser:663","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2873","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:675","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"len"},"name":"add","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (int) - int","position":"org.apache.commons.lang3.text.StrBuilder:2108","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n    if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n        return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n    } else {\n        return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n    }\n} ","position":"org.apache.commons.lang3.event.EventUtils:111","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:738","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Integer.MIN_VALUE":"length","denominator":"comparison","numerator":"comparison"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    if ((int == (this.int)) || (int == (this.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (java.lang.reflect.Field[].int)) && ((org.apache.commons.lang3.builder.CompareToBuilder.int) == 0) ; int++) {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field[][int];\n    if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n        try {\n            org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n        }\n    } \n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:315","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.text.StrLookup.NONE_LOOKUP":"lookup"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrLookup<java.lang.String> = new org.apache.commons.lang3.text.StrLookup.MapStrLookup<java.lang.String>(null)","position":"org.apache.commons.lang3.text.StrLookup:48","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrLookup<java.lang.String> = org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup<java.lang.String>","position":"org.apache.commons.lang3.text.StrLookup:56","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:294","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) == 0) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1813","type":"CtIfImpl"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"variableMapping":{"arrayEnd":"pattern"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","position":"org.apache.commons.lang3.time.FormatCache:194","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.text.StrTokenizer:607","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = int > 7","position":"org.apache.commons.lang3.time.DateUtils:1061","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Locale == null) {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat();\n} else {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale);\n}","position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], 0, char[], 0, int)","position":"org.apache.commons.lang3.text.StrBuilder:251","type":"CtInvocationImpl"},"status":-2},{"failures":[23],"variableMapping":{"str":"separatorChars","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, true)","position":"org.apache.commons.lang3.StringUtils:3204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, java.lang.String, -1, false)","position":"org.apache.commons.lang3.StringUtils:2632","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1157","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (int)) {\n    return new java.lang.String(char[] , 0 , int);\n} else {\n    return new java.lang.String(char[] , 0 , int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuffer.append(char)","position":"org.apache.commons.lang3.time.FastDatePrinter:637","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a constant string.<\/p>\n */\nprivate static class StringLiteral implements org.apache.commons.lang3.time.FastDatePrinter.Rule {\n    private final java.lang.String mValue;\n\n    /** \n     * Constructs a new instance of {@code StringLiteral}\n     * to hold the specified value.\n     * \n     * @param value the string literal\n     */\nStringLiteral(final java.lang.String value) {\n        java.lang.String = java.lang.String;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return java.lang.String.length();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        java.lang.StringBuffer.append(java.lang.String);\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:644","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:784","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int |= java.lang.reflect.Type.hashCode()","position":"org.apache.commons.lang3.reflect.TypeUtils:137","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 4) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:801","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.time.FastDatePrinter:477","type":"CtReturnImpl"},"status":-2},{"failures":[24,25,26,27,28,29,30,31],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return '2'","position":"org.apache.commons.lang3.Conversion:571","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.char","position":"org.apache.commons.lang3.CharRange:147","type":"CtReturnImpl"},"status":-1},{"failures":[32,33,34,35,36],"variableMapping":{"toProperString":"className"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"0\"","position":"org.apache.commons.lang3.math.Fraction:933","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2))","position":"org.apache.commons.lang3.ClassUtils:965","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Float.java.lang.Class<java.lang.Float>.equals(java.lang.Class<?>)) {\n    return java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.ClassUtils:669","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = ((char)((org.apache.commons.lang3.CharRange.char) + 1))","position":"org.apache.commons.lang3.CharRange:312","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array"},"name":"replace","transplant":{"sourceCode":"return int[].clone()","position":"org.apache.commons.lang3.ArrayUtils:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[] == null) || ((int[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:4520","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"on\", \"off\")","position":"org.apache.commons.lang3.BooleanUtils:849","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"ch":"ch"},"name":"replace","transplant":{"sourceCode":"return (char >= 'a') && (char <= 'z')","position":"org.apache.commons.lang3.CharUtils:498","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final char char : char[]) {\n    if (char == char) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.text.WordUtils:573","type":"CtForEachImpl"},"status":-2},{"failures":[37,38],"variableMapping":{"split":"split"},"name":"replace","transplant":{"sourceCode":"return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2])","position":"org.apache.commons.lang3.LocaleUtils:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1])","position":"org.apache.commons.lang3.LocaleUtils:140","type":"CtReturnImpl"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"variableMapping":{"srcPos":"strLen","nShorts":"len"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:580","type":"CtInvocationImpl"},"status":-1},{"failures":[56,57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:914","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:553","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((short)(int))","position":"org.apache.commons.lang3.ObjectUtils:856","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = java.lang.String.indexOf(' ')","position":"org.apache.commons.lang3.math.Fraction:330","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = ((double)(int)) / ((double)(int))","position":"org.apache.commons.lang3.math.Fraction:282","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.StopWatch:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:214","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:645","type":"CtReturnImpl"},"status":-2},{"failures":[58],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \")","position":"org.apache.commons.lang3.time.StopWatch:262","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'f'","position":"org.apache.commons.lang3.Conversion:417","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(float[], int)","position":"org.apache.commons.lang3.ArrayUtils:4971","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(1 , 2)","position":"org.apache.commons.lang3.math.Fraction:55","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:872","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(long[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1788","type":"CtLocalVariableImpl"},"status":-2},{"failures":[59,60,61],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:975","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (float[].int) < (float[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:943","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"));\n} ","position":"org.apache.commons.lang3.StringUtils:4696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long[][int]) < long) {\n    long = long[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:795","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"long long = 0","position":"org.apache.commons.lang3.time.DateUtils:1692","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long[][0]","position":"org.apache.commons.lang3.math.NumberUtils:941","type":"CtLocalVariableImpl"},"status":-2},{"failures":[62,63,64],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 'e'","position":"org.apache.commons.lang3.Conversion:310","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object, java.lang.Object, false, null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"..\")","position":"org.apache.commons.lang3.Range:454","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause())","position":"org.apache.commons.lang3.ObjectUtils:634","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"start","shift":"start","i":"start"},"name":"replace","transplant":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:1331","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ' '","position":"org.apache.commons.lang3.RandomStringUtils:242","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 3","position":"org.apache.commons.lang3.Conversion:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDateParser:364","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1476","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"short short","position":"org.apache.commons.lang3.ArrayUtils:1859","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short short = short","position":"org.apache.commons.lang3.Conversion:1122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[65],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2335","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:561","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    return boolean ? 1 : -1;\n} else if (T == null) {\n    return boolean ? -1 : 1;\n} ","position":"org.apache.commons.lang3.ObjectUtils:508","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Integer, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5541","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.math.Fraction:294","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[66,67],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (char[] != null) && ((char[].int) != 0)","position":"org.apache.commons.lang3.ArrayUtils:3644","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int[] == null) || ((int[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3521","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"cls":"annotationType"},"name":"add","transplant":{"sourceCode":"return java.lang.Class<?>.getSimpleName()","position":"org.apache.commons.lang3.ClassUtils:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.StringBuilder((java.lang.Class<? extends java.lang.annotation.Annotation> == null ? \"\" : java.lang.Class<? extends java.lang.annotation.Annotation>.getName())).insert(0, '@').toString()","position":"org.apache.commons.lang3.AnnotationUtils:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:299","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.CompareToBuilder().append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle()).append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight()).toComparison()","position":"org.apache.commons.lang3.tuple.Triple:97","type":"CtReturnImpl"},"status":-2},{"failures":[68],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"float float","position":"org.apache.commons.lang3.ArrayUtils:1719","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , true , true , false }","position":"org.apache.commons.lang3.Conversion:175","type":"CtReturnImpl"},"status":-1},{"transformationPoint":"org.apache.commons.lang3.StringUtils:1887","failures":[69,70,71,72],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableLong:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:2824","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2210","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.size()) > 0) {\n    if ((java.lang.StringBuilder.length()) > 0) {\n        java.lang.StringBuilder.append('\\n');\n    } \n    java.lang.StringBuilder.append(\"Exception Context:\\n\");\n    int int = 0;\n    for (final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> : java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>) {\n        java.lang.StringBuilder.append(\"\\t[\");\n        java.lang.StringBuilder.append(++int);\n        java.lang.StringBuilder.append(':');\n        java.lang.StringBuilder.append(org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey());\n        java.lang.StringBuilder.append(\"=\");\n        final java.lang.Object java.lang.Object = org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue();\n        if (java.lang.Object == null) {\n            java.lang.StringBuilder.append(\"null\");\n        } else {\n            java.lang.String java.lang.String;\n            try {\n                java.lang.String = java.lang.Object.toString();\n            } catch (final java.lang.Exception java.lang.Exception) {\n                java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception));\n            }\n            java.lang.StringBuilder.append(java.lang.String);\n        }\n        java.lang.StringBuilder.append(\"]\\n\");\n    }\n    java.lang.StringBuilder.append(\"---------------------------------\");\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:133","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Class used to match no characters.\n */\nstatic final class NoMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * Constructs a new instance of <code>NoMatcher<\/code>.\n     */\nNoMatcher() {\n        org.apache.commons.lang3.text.StrMatcher.super();\n    }\n\n    /** \n     * Always returns <code>false<\/code>.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return 0;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:384","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.util.Collection<?>.toArray())","position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:85","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int[] int[] = new int[int + 1]","position":"org.apache.commons.lang3.StringUtils:6921","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"className must not be null.\");\n} else if (java.lang.String.endsWith(\"[]\")) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    while (java.lang.String.endsWith(\"[]\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2));\n        java.lang.StringBuilder.append(\"[\");\n    }\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } else {\n        java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\");\n    }\n    java.lang.String = java.lang.StringBuilder.toString();\n} ","position":"org.apache.commons.lang3.ClassUtils:960","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n    org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:212","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:157","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>()","position":"org.apache.commons.lang3.reflect.MethodUtils:512","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"values":"values","this":"this","message":"message"},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:346","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:747","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","src":"src","length":"length"},"name":"add","transplant":{"sourceCode":"if (((this.int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((this.int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '7';\n        } else {\n            return '6';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '5';\n        } else {\n            return '4';\n        }\n    }\n} else {\n    if (((this.int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return '3';\n        } else {\n            return '2';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '1';\n        } else {\n            return '0';\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:335","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","position":"org.apache.commons.lang3.Conversion:306","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.StringBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"upToClass":"cls"},"name":"replace","transplant":{"sourceCode":"return java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:554","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>","position":"org.apache.commons.lang3.SerializationUtils:330","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == null) {\n    int = (int) * (int);\n} else {\n    for (final char char : char[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(char);\n    }\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:657","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:1447","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" extends \"), \" & \", java.lang.reflect.Type[])","position":"org.apache.commons.lang3.reflect.TypeUtils:1814","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.hashCode()","position":"org.apache.commons.lang3.time.FastDateFormat:578","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.getMaxLengthEstimate()","position":"org.apache.commons.lang3.time.FastDateFormat:550","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(java.lang.String.substring(int, int))","position":"org.apache.commons.lang3.StringUtils:3139","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5308","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (int) {\n    case 1 :\n        return new org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField(int);\n    case 2 :\n        return new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField(int);\n    default :\n        return new org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField(int , int);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:358","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((int * 16))","position":"org.apache.commons.lang3.StringUtils:3569","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < int) {\n    return java.lang.String.substring(0, int).concat(java.lang.String);\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return new java.lang.String(char[]).concat(java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:5429","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7019","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<?>, \"raw class is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1472","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, byte[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:585","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (this.long) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.WordUtils:552","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (short[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, boolean[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1397","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"size":"start","insertLen":"start","removeLen":"start"},"name":"replace","transplant":{"sourceCode":"final int int = (int - int) + int","position":"org.apache.commons.lang3.text.StrBuilder:1810","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.StrTokenizer:740","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Class<?> != null), \"The class must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:85","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:205","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.ClassLoader java.lang.ClassLoader = java.lang.ClassLoader == null ? org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClassLoader() : java.lang.ClassLoader","position":"org.apache.commons.lang3.ClassUtils:893","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof float[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:828","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(char).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:1017","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"fieldName":"fieldName","this":"this","buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:482","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:512","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Package, \"Parameter \\'%s\\' must not be null!\", \"context\")","position":"org.apache.commons.lang3.ClassPathUtils:81","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","position":"org.apache.commons.lang3.time.DateUtils:832","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule.appendTo(java.lang.StringBuffer, java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDatePrinter:475","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (int >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1438","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * A strategy that handles a timezone field in the parsing pattern\n */\nprivate static class TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final java.lang.String validTimeZoneChars;\n\n    private final java.util.SortedMap<java.lang.String, java.util.TimeZone> tzNames = new java.util.TreeMap<java.lang.String, java.util.TimeZone>(java.lang.String.java.util.Comparator<java.lang.String>);\n\n    /** \n     * Index of zone id\n     */\nprivate static final int ID = 0;\n\n    /** \n     * Index of the long name of zone in standard time\n     */\nprivate static final int LONG_STD = 1;\n\n    /** \n     * Index of the short name of zone in standard time\n     */\nprivate static final int SHORT_STD = 2;\n\n    /** \n     * Index of the long name of zone in daylight saving time\n     */\nprivate static final int LONG_DST = 3;\n\n    /** \n     * Index of the short name of zone in daylight saving time\n     */\nprivate static final int SHORT_DST = 4;\n\n    /** \n     * Construct a Strategy that parses a TimeZone\n     * @param locale The Locale\n     */\nTimeZoneStrategy(final java.util.Locale locale) {\n        final java.lang.String[][] java.lang.String[][] = java.text.DateFormatSymbols.java.text.DateFormatSymbols.getInstance(java.util.Locale).getZoneStrings();\n        for (java.lang.String[] java.lang.String[] : java.lang.String[][]) {\n            if (java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int].startsWith(\"GMT\")) {\n                continue;\n            } \n            final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]);\n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (java.util.TimeZone.useDaylightTime()) {\n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n            } \n        }\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        java.lang.StringBuilder.append(\"(GMT[+\\\\-]\\\\d{0,1}\\\\d{2}|[+\\\\-]\\\\d{2}:?\\\\d{2}|\");\n        for (final java.lang.String java.lang.String : java.util.SortedMap<java.lang.String, java.util.TimeZone>.keySet()) {\n            org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|');\n        }\n        java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n        java.lang.String = java.lang.StringBuilder.toString();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        java.lang.StringBuilder.append(java.lang.String);\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.TimeZone java.util.TimeZone;\n        if (((java.lang.String.charAt(0)) == '+') || ((java.lang.String.charAt(0)) == '-')) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone((\"GMT\" + java.lang.String));\n        } else if (java.lang.String.startsWith(\"GMT\")) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n        } else {\n            java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n            if (java.util.TimeZone == null) {\n                throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n            } \n        }\n        java.util.Calendar.setTimeZone(java.util.TimeZone);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:706","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((2 + int) - int) + (boolean ? 1 : 0)) + (boolean ? 1 : 0)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type[], \"null value specified for bounds array\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1126","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char == char) {\n    continue;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:200","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Character {@link Iterator}.\n * <p>#NotThreadSafe#<\/p>\n */\nprivate static class CharacterIterator implements java.util.Iterator<java.lang.Character> {\n    /** \n     * The current character\n     */\nprivate char current;\n\n    private final org.apache.commons.lang3.CharRange range;\n\n    private boolean hasNext;\n\n    /** \n     * Construct a new iterator for the character range.\n     * \n     * @param r The character range\n     */\nprivate CharacterIterator(final org.apache.commons.lang3.CharRange r) {\n        org.apache.commons.lang3.CharRange = org.apache.commons.lang3.CharRange;\n        boolean = true;\n        if (org.apache.commons.lang3.CharRange.boolean) {\n            if ((org.apache.commons.lang3.CharRange.char) == 0) {\n                if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n                    boolean = false;\n                } else {\n                    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n                }\n            } else {\n                char = 0;\n            }\n        } else {\n            char = org.apache.commons.lang3.CharRange.char;\n        }\n    }\n\n    /** \n     * Prepare the next character in the range.\n     */\nprivate void prepareNext() {\n        if (org.apache.commons.lang3.CharRange.boolean) {\n            if ((char) == (java.lang.Character.char)) {\n                boolean = false;\n            } else if (((char) + 1) == (org.apache.commons.lang3.CharRange.char)) {\n                if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n                    boolean = false;\n                } else {\n                    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n                }\n            } else {\n                char = ((char)((char) + 1));\n            }\n        } else if ((char) < (org.apache.commons.lang3.CharRange.char)) {\n            char = ((char)((char) + 1));\n        } else {\n            boolean = false;\n        }\n    }\n\n    /** \n     * Has the iterator not reached the end character yet?\n     * \n     * @return {@code true} if the iterator has yet to reach the character date\n     */\n@java.lang.Override\n    public boolean hasNext() {\n        return boolean;\n    }\n\n    /** \n     * Return the next character in the iteration\n     * \n     * @return {@code Character} for the next character\n     */\n@java.lang.Override\n    public java.lang.Character next() {\n        if ((boolean) == false) {\n            throw new java.util.NoSuchElementException();\n        } \n        final char char = char;\n        org.apache.commons.lang3.CharRange.CharacterIterator.prepareNext();\n        return java.lang.Character.java.lang.Character.valueOf(char);\n    }\n\n    /** \n     * Always throws UnsupportedOperationException.\n     * \n     * @throws UnsupportedOperationException\n     * @see java.util.Iterator#remove()\n     */\n@java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}","position":"org.apache.commons.lang3.CharRange:269","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.time.DateUtils:1041","type":"CtReturnImpl"},"status":-2},{"failures":[73,23],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:630","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    if ((java.lang.String.charAt(int)) == char) {\n        if (boolean || boolean) {\n            boolean = true;\n            if ((int++) == int) {\n                int = int;\n                boolean = false;\n            } \n            java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n            boolean = false;\n        } \n        int = ++int;\n        continue;\n    } \n    boolean = false;\n    boolean = true;\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:3111","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:161","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return this.java.lang.String[].clone()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:543","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:3226","type":"CtReturnImpl"},"status":-2},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1054","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Invalid format argument index at position \" + int) + \": \") + (java.lang.String.substring(int, java.text.ParsePosition.getIndex()))))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:358","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Class<?>.isPrimitive()) || org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(java.lang.Class<?>))","position":"org.apache.commons.lang3.ClassUtils:545","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:5199","failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"StrTokenizer\" + org.apache.commons.lang3.text.StrTokenizer.(getTokenList())","position":"org.apache.commons.lang3.text.StrTokenizer:1111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.JavaVersion.atLeast(org.apache.commons.lang3.JavaVersion)","position":"org.apache.commons.lang3.SystemUtils:1412","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"toClass":"toClass","cls":"cls"},"name":"add","transplant":{"sourceCode":"return java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:694","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.ClassUtils:647","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.time.DateUtils:1074","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrSubstitutor:833","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"sz"},"name":"replace","transplant":{"sourceCode":"return int < (org.apache.commons.lang3.text.StrBuilder.this.size())","position":"org.apache.commons.lang3.text.StrBuilder:2906","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isUpperCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6172","type":"CtForImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":79,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveBooleanArray":95,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringAfter_StringString":65,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":55,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNot":25,"org.apache.commons.lang3.ArrayUtilsTest.testIsEmptyPrimitives":67,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":47,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":41,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementFloatArray":93,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":16,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":22,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":32,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":68,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Same":26,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":84,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx1":63,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":28,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":5,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":18,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":48,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArrayHiddenByObject":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":46,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":80,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":15,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars":69,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":13,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":85,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":14,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":62,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":33,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":59,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementIntArray":66,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars":71,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":34,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":23,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":104,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":81,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":6,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompareEx2":64,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementDoubleArray":101,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":75,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":73,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveDoubleArray":87,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveObjectArray":88,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementLongArray":89,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":49,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":35,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars":72,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":94,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveCharArray":92,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":11,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":58,"org.apache.commons.lang3.ClassUtilsTest.testGetClassClassNotFound":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":50,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":38,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveNumberArray":98,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveLongArray":103,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":7,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":40,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":24,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveFloatArray":90,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementByteArray":99,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":20,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":3,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":2,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveByteArray":96,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_is":27,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":1,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveShortArray":100,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":57,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":83,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":12,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":91,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":8,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveIntArray":102,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":52,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Same":29,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":44,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementCharArray":97,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars":70,"org.apache.commons.lang3.text.StrBuilderTest.testAsBuilder":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":53,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":21,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":39,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":54,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":78}}]
