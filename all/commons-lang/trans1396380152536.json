[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.util.Locale(\"\" , \"\")","position":"org.apache.commons.lang3.LocaleUtils:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.double","position":"org.apache.commons.lang3.math.NumberUtils:889","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String != null) && (int > 0)) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1320","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:196","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 32) + int;\n    final long long = (4294967295L & (int[][(int + int)])) << int;\n    final long long = 4294967295L << int;\n    long = (long & (~long)) | long;\n}","position":"org.apache.commons.lang3.Conversion:694","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"))","position":"org.apache.commons.lang3.ArrayUtils:4562","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(int)","position":"org.apache.commons.lang3.text.StrBuilder:310","type":"CtThrowImpl"},"status":0},{"failures":[0,1,2],"variableMapping":{"dstPos":"numberOfSubstrings","nBytes":"max"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:872","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    int = int;\n    java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n} else {\n    java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int));\n    int = int + int;\n}","position":"org.apache.commons.lang3.StringUtils:2833","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.math.BigInteger.mod(java.math.BigInteger.java.math.BigInteger.valueOf(int)).intValue()","position":"org.apache.commons.lang3.math.Fraction:772","type":"CtLocalVariableImpl"},"status":-2},{"failures":[3],"variableMapping":{"comparison":"comparison","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object[] == null) {\n    this.int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:658","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:654","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int[]","position":"org.apache.commons.lang3.ArrayUtils:4181","type":"CtReturnImpl"},"status":-2},{"failures":[4],"name":"returnValue","position":"org.apache.commons.lang3.Conversion:121","type":"mutation","return":"return 9","status":-1},{"failures":[5],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 6","position":"org.apache.commons.lang3.Conversion:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.Range<T>.isAfter(T)) {\n    return -1;\n} else if (org.apache.commons.lang3.Range<T>.isBefore(T)) {\n    return 1;\n} else {\n    return 0;\n}","position":"org.apache.commons.lang3.Range:293","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:650","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDateParser.NumberStrategy(java.util.Calendar.int) {\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        if (int < 100) {\n            int = org.apache.commons.lang3.time.FastDateParser.adjustYear(int);\n        } \n        java.util.Calendar.set(java.util.Calendar.int, int);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:689","type":"CtNewClassImpl"},"status":-2},{"failures":[6],"variableMapping":{"str":"numeric","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:483","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:567","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:553","type":"CtIfImpl"},"status":-2},{"failures":[7],"variableMapping":{"size":"index","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"this.char[][int++] = 't'","position":"org.apache.commons.lang3.text.StrBuilder:772","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int++] = 'r'","position":"org.apache.commons.lang3.text.StrBuilder:1579","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:370","type":"CtReturnImpl"},"status":-2},{"failures":[8],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5994","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1193","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:745","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"m1":"m1","m2":"m2"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    return 0.0;\n} ","position":"org.apache.commons.lang3.StringUtils:7060","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.String.length()) == 0) || ((java.lang.String.length()) == 0)) {\n    return 0.0;\n} ","position":"org.apache.commons.lang3.StringUtils:7054","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char char = ' '","position":"org.apache.commons.lang3.CharSetUtils:72","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:629","type":"CtInvocationImpl"},"status":0},{"failures":[9],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:3085","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} else if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3792","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next())","position":"org.apache.commons.lang3.text.StrBuilder:1160","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char) + 1) == (org.apache.commons.lang3.CharRange.char)) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = ((char)((char) + 1));\n}","position":"org.apache.commons.lang3.CharRange:308","type":"CtIfImpl"},"status":-2},{"failures":[10],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?>[][int] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>[][int]);\n}","position":"org.apache.commons.lang3.ClassUtils:787","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str","separator":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:672","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION()","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:97","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.ClassUtils:199","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:706","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The character must not be null\")","position":"org.apache.commons.lang3.CharUtils:264","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(0, int).trim()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:313","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4002","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:320","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.replace(char, char)","position":"org.apache.commons.lang3.StringUtils:4838","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"arrayEnd":"resourceName"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1769","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.String, \"Parameter \\'%s\\' must not be null!\", \"resourceName\")","position":"org.apache.commons.lang3.ClassPathUtils:108","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1329","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object == null) || ((java.lang.Object.getClass()) != java.lang.Object.(getClass()))) {\n    return false;\n} else {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.lang3.Range<T> org.apache.commons.lang3.Range<T> = ((org.apache.commons.lang3.Range<T>)(java.lang.Object));\n    return (T.equals(org.apache.commons.lang3.Range<T>.T)) && (T.equals(org.apache.commons.lang3.Range<T>.T));\n}","position":"org.apache.commons.lang3.Range:411","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1119","type":"CtThrowImpl"},"status":-2},{"failures":[11],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"char char = 0","position":"org.apache.commons.lang3.math.NumberUtils:467","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:2660","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{"map":"map"},"name":"add","transplant":{"sourceCode":"if (java.util.concurrent.ConcurrentMap<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:242","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ConcurrentMap<K, V> == null) || (org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:272","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"offset":"lastHold"},"name":"replace","transplant":{"sourceCode":"int -= 15","position":"org.apache.commons.lang3.time.DateUtils:1058","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.text.ParsePosition.getIndex()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:494","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; (int < (int[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(int[][int], int[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:746","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return 'e';\n}","position":"org.apache.commons.lang3.Conversion:307","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.wildcardType()","position":"org.apache.commons.lang3.reflect.TypeUtils:288","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4716","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateFormat:564","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1386","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:959","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1965","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"temp","shift":"temp","i":"end"},"name":"replace","transplant":{"sourceCode":"int = (int * 32) + int","position":"org.apache.commons.lang3.Conversion:1196","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:4960","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","position":"org.apache.commons.lang3.time.FastDateParser:540","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (java.lang.String.charAt(0)) {\n    case '\\'' :\n        if ((java.lang.String.length()) > 2) {\n            return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(java.lang.String.substring(1, ((java.lang.String.length()) - 1)));\n        } \n    default :\n        return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(java.lang.String);\n    case 'D' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'E' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n    case 'F' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'G' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n    case 'H' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'K' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'M' :\n        return (java.lang.String.length()) >= 3 ? org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'S' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'W' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'a' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n    case 'd' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'h' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'k' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'm' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 's' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'w' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'y' :\n        return (java.lang.String.length()) > 2 ? org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'Z' :\n    case 'z' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n}","position":"org.apache.commons.lang3.time.FastDateParser:461","type":"CtSwitchImpl"},"status":-2},{"failures":[12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String> = java.util.Collections.java.util.Collections.unmodifiableMap(java.util.Map<java.lang.String, java.lang.String>)","position":"org.apache.commons.lang3.ClassUtils:133","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.BooleanUtils:587","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:827","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","position":"org.apache.commons.lang3.text.StrBuilder:2787","type":"CtThrowImpl"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"variableMapping":{"startIndex":"startIndex","objectToFind":"objectToFind","array":"array"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object[].getClass().getComponentType().isInstance(java.lang.Object)) {\n    for (int int = int ; int >= 0 ; int--) {\n        if (java.lang.Object.equals(java.lang.Object[][int])) {\n            return int;\n        } \n    }\n} ","position":"org.apache.commons.lang3.ArrayUtils:1968","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.lang.Object[].int) ; int++) {\n    if (java.lang.Object.equals(java.lang.Object[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:1916","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5051","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(byte[], char, 0, byte[].int)","position":"org.apache.commons.lang3.StringUtils:3435","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"digits":"sz"},"name":"add","transplant":{"sourceCode":"int = 3","position":"org.apache.commons.lang3.time.FastDatePrinter:860","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.translate.LookupTranslator:54","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((short[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","position":"org.apache.commons.lang3.Conversion:722","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ObjectUtils:594","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:830","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:297","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'B' :\n    return 13;","position":"org.apache.commons.lang3.Conversion:126","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"org.apache.commons.lang3.builder.EqualsBuilder:366","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","position":"org.apache.commons.lang3.builder.ToStringStyle:901","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"this","close":"this","open":"this"},"name":"replace","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.valueOf(float)","position":"org.apache.commons.lang3.mutable.MutableFloat:313","type":"CtReturnImpl"},"status":-2},{"failures":[54,55],"variableMapping":{"size":"i","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"this.char[][int++] = 'l'","position":"org.apache.commons.lang3.text.StrBuilder:780","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = '\u0000'","position":"org.apache.commons.lang3.text.StrBuilder:211","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:276","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1293","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:6691","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale)","position":"org.apache.commons.lang3.time.DateUtils:363","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:1013","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.FastDatePrinter.newCalendar()","position":"org.apache.commons.lang3.time.FastDatePrinter:452","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (boolean[][int]) {\n    return '9';\n} else {\n    return '1';\n}","position":"org.apache.commons.lang3.Conversion:436","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '3';\n} else {\n    return '2';\n}","position":"org.apache.commons.lang3.Conversion:568","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.util.Iterator<?>.hasNext())) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4038","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.text.WordUtils:419","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OpenBSD\")","position":"org.apache.commons.lang3.SystemUtils:1055","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.1\")","position":"org.apache.commons.lang3.SystemUtils:1228","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.builder.ToStringBuilder:1031","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Date, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:462","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")","position":"org.apache.commons.lang3.time.StopWatch:204","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5414","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (long[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, long[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:970","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, short[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1092","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"array2":"value","array1":"value"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.ArrayUtils:1418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:582","type":"CtInvocationImpl"},"status":0},{"failures":[56],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.lang3.math.NumberUtils:1345","type":"mutation","status":-1},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:273","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 10","position":"org.apache.commons.lang3.Conversion:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = char","position":"org.apache.commons.lang3.StringUtils:5212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean && ((char[][int]) == (org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n    org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);\n    return java.lang.StringBuilder == null ? null : java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char);\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:484","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:172","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[])","position":"org.apache.commons.lang3.time.FastDatePrinter:210","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n    int++;\n}","position":"org.apache.commons.lang3.StringUtils:629","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.lang.Math.java.lang.Math.min(int, ((java.lang.String.length()) / 5))","position":"org.apache.commons.lang3.StringUtils:4762","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrSubstitutor:1111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][int++]","position":"org.apache.commons.lang3.time.FastDateParser:317","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String).append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.Type[][int]))","position":"org.apache.commons.lang3.reflect.TypeUtils:1842","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][((double[].int) - 1)] = double","position":"org.apache.commons.lang3.ArrayUtils:4126","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (char[].int)) {\n    int = (char[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2383","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.concurrent.ThreadFactory = java.util.concurrent.ThreadFactory","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:288","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ThreadFactory = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:362","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'm' :\n    java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n    break;","position":"org.apache.commons.lang3.time.DurationFormatUtils:519","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:764","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:216","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.concurrent.ScheduledThreadPoolExecutor java.util.concurrent.ScheduledThreadPoolExecutor = new java.util.concurrent.ScheduledThreadPoolExecutor(org.apache.commons.lang3.concurrent.TimedSemaphore.int)","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:213","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:434","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","position":"org.apache.commons.lang3.RandomStringUtils:330","type":"CtReturnImpl"},"status":-2},{"failures":[57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2137","type":"CtIfImpl"},"status":-1},{"failures":[58,59],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.StringUtils:5133","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type));\n    } \n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n        if ((java.lang.reflect.ParameterizedType.getOwnerType()) == null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n        } else {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.putAll(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType));\n        }\n        final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n            if (java.lang.reflect.Type != null) {\n                java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n            } \n        }\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.ParameterizedType.getOwnerType(), ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())), java.lang.reflect.Type[]);\n    } \n    if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n        final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.WildcardType.getUpperBounds())).withLowerBounds(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.WildcardType.getLowerBounds())).build();\n    } \n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n    if ((java.lang.reflect.ParameterizedType.getOwnerType()) == null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n    } else {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.putAll(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType));\n    }\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != null) {\n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.ParameterizedType.getOwnerType(), ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())), java.lang.reflect.Type[]);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1371","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return float < float ? -1 : float < float ? 1 : 0","position":"org.apache.commons.lang3.reflect.MemberUtils:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n    int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n    if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n        int += 1;\n    } \n    java.util.Calendar.add(java.util.Calendar.int, 1);\n    int += java.util.Calendar.get(java.util.Calendar.int);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:343","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.Class<?>.getName())","position":"org.apache.commons.lang3.ClassUtils:284","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int)","position":"org.apache.commons.lang3.time.FastDatePrinter:261","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"org.apache.commons.lang3.StringUtils.EMPTY","separator":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return this.org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2137","type":"CtIfImpl"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,79,80,80,81,81,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,149,149,150,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"binaryOperator":"(int - 1)","name":"math","position":"org.apache.commons.lang3.builder.ToStringStyle:414","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:670","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDateParser:349","type":"CtBreakImpl"},"status":-2},{"failures":[212],"variableMapping":{"java.lang.Integer.MIN_VALUE":"j","numerator":"j"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\");\n} ","position":"org.apache.commons.lang3.math.Fraction:493","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][int]) < int) {\n    int = int[][int];\n} ","position":"org.apache.commons.lang3.math.NumberUtils:818","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this","delim":"quote"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrTokenizer:360","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrTokenizer:386","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int < int ? -1 : int > int ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:400","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.Object.getClass(), java.lang.Object.getClass())) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:274","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"min":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","max":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    return -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6945","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:1975","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:864","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.concurrent.ConcurrentException org.apache.commons.lang3.concurrent.ConcurrentException","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:209","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(java.lang.String.substring(1, ((java.lang.String.length()) - 1)))","position":"org.apache.commons.lang3.time.FastDateParser:464","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1547","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(null)","position":"org.apache.commons.lang3.ClassUtils:431","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(java.lang.Class<?>, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:531","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Integer.intValue()) == 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:242","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (\"1.7\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (\"1.5\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.6\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.7\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else if (\"1.8\".equals(java.lang.String)) {\n    return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.JavaVersion:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startCutoff":"i","java.util.Calendar.MONDAY":"i"},"name":"add","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.time.FastDatePrinter:331","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:968","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (float[].int)) {\n    int = (float[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2812","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":185,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":145,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":142,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":167,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":30,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":181,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":159,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":208,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":119,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":175,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":77,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":177,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":37,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":198,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":171,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":114,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":27,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":78,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":168,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":48,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":131,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":135,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":51,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":182,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":125,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":102,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":75,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":138,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBooleanInt":1,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":24,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":113,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":152,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":154,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":117,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":204,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":91,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":21,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":86,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":162,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":110,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":141,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":202,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":99,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":178,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":43,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":11,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":170,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":109,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":32,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":124,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":191,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":104,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":146,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":118,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":18,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":53,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":97,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":15,"org.apache.commons.lang3.RangeTest.testElementCompareTo":5,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":176,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":196,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":9,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":174,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":6,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":157,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":33,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":90,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":129,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":26,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt":212,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeString_StringStringBoolean":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":87,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":194,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":28,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":201,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":93,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":44,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":41,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":108,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":107,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":161,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":96,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":69,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":56,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":200,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringStringInt":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":130,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":54,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":116,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":81,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":206,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":190,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":183,"org.apache.commons.lang3.ArrayUtilsTest.testToString":211,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":82,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":36,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":197,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":144,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":73,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":22,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":85,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":132,"org.apache.commons.lang3.text.StrTokenizerTest.test8":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":121,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":189,"org.apache.commons.lang3.text.StrTokenizerTest.test5":64,"org.apache.commons.lang3.text.StrTokenizerTest.test4":63,"org.apache.commons.lang3.text.StrTokenizerTest.test7":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":122,"org.apache.commons.lang3.text.StrTokenizerTest.test6":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":123,"org.apache.commons.lang3.text.StrTokenizerTest.test1":60,"org.apache.commons.lang3.text.StrTokenizerTest.test3":62,"org.apache.commons.lang3.text.StrTokenizerTest.test2":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":98,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":14,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":160,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":42,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":186,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":7,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":25,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":76,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":84,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":126,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":31,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":207,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":163,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":179,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":16,"org.apache.commons.lang3.ClassUtilsTest.testWrappersToPrimitives":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":83,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":148,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":101,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":23,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":103,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":193,"org.apache.commons.lang3.StringUtilsIsTest.testIsAsciiPrintable_String":8,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":13,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":68,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":150,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":195}}]
