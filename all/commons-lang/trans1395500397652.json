[{"position":"org.apache.commons.lang3.Conversion:335","failures":[0,1],"status":-1,"binaryOperator":"(int + 2)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:97","sourceCode":"this.double = double","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:168","sourceCode":"this.double += java.lang.Number.doubleValue()","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:557","sourceCode":"return '6'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:629","sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","type":"CtSwitchImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:557","sourceCode":"return '6'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:524","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1577","sourceCode":"boolean boolean","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1343","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:857","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:941","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime()","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1203","sourceCode":"if (long > long) {\n    long = long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1097","sourceCode":"if (long < long) {\n    long = long;\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"a","a":"a"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:144","sourceCode":"break","type":"CtBreakImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:746","sourceCode":"java.lang.StringBuffer.append(byte)","type":"CtInvocationImpl"},"failures":[8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1592","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (int >> int)) != 0;\n}","type":"CtForImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","sourceCode":"int int = -1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1078","sourceCode":"final int int = java.util.Calendar.getActualMinimum(int[][0])","type":"CtLocalVariableImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,5,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1196","sourceCode":"int = (int * 32) + int","type":"CtAssignmentImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:184","failures":[47,48,49,50,51],"status":-1,"binaryOperator":"(int * ((long)(int)))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Range:450","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1515","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:307","sourceCode":"return java.util.List<java.util.Locale>","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:203","sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","type":"CtReturnImpl"},"failures":[52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"countries":"list"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:834","sourceCode":"return 4","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:645","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:613","sourceCode":"return org.apache.commons.lang3.ArrayUtils.byte[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1323","sourceCode":"return byte[]","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.StrTokenizer:833","failures":[],"status":0,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:373","sourceCode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:913","sourceCode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()","type":"CtAssignmentImpl"},"failures":[48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pattern":"toString"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:522","sourceCode":"java.util.Calendar.add(int, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:653","sourceCode":"java.util.Calendar.set(int, int)","type":"CtInvocationImpl"},"failures":[60,61,38,41,42,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"amount":"amount","c":"c","calendarField":"amount"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:818","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:304","sourceCode":"java.lang.StringBuilder.append(\"\\\\Q\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1483","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"sb"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:79","sourceCode":"org.apache.commons.lang3.event.EventUtils.org.apache.commons.lang3.event.EventUtils.addEventListener(java.lang.Object, java.lang.Class<L>, L)","type":"CtInvocationImpl"},"failures":[64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:428","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:1018","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(org.apache.commons.lang3.builder.CompareToBuilder.toComparison())","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:945","sourceCode":"final java.lang.NullPointerException java.lang.NullPointerException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:580","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[68],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.reflect.MethodUtils:535","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:925","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,10,82,83,84,85,86,87,88],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:476","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:485","sourceCode":"if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[89,90,91,7,92,93,94,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:734","failures":[95],"status":-1,"binaryOperator":"65535L << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:778","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:880","sourceCode":"if ((java.util.List<java.lang.String>.contains(java.lang.String)) == false) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1404","sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1400","sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:348","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((short[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:575","sourceCode":"T = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:155","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":8,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":28,"org.apache.commons.lang3.RangeTest.testRangeOfChars":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":10,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":125,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":27,"org.apache.commons.lang3.ConversionTest.testIntToBinary":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":115,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":30,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":112,"org.apache.commons.lang3.time.DateUtilsTest.testRound":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":21,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":22,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":11,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":34,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":142,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":5,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":121,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":51,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":15,"org.apache.commons.lang3.math.FractionTest.testGets":47,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectBuild":67,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":91,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":38,"org.apache.commons.lang3.RangeTest.testToStringFormat":144,"org.apache.commons.lang3.RangeTest.testIsAfterRange":138,"org.apache.commons.lang3.RangeTest.testElementCompareTo":139,"org.apache.commons.lang3.RangeTest.testGetMinimum":141,"org.apache.commons.lang3.RangeTest.testIntersectionWith":133,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":122,"org.apache.commons.lang3.RangeTest.testContains":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":113,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":49,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":135,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumLong":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":86,"org.apache.commons.lang3.math.FractionTest.testPow":55,"org.apache.commons.lang3.RangeTest.testEqualsObject":134,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":110,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":59,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":79,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":126,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":128,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":111,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":100,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":81,"org.apache.commons.lang3.RangeTest.testHashCode":140,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":17,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":53,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":43,"org.apache.commons.lang3.ConversionTest.testShortToHex":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":119,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":0,"org.apache.commons.lang3.RangeTest.testToString":131,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":45,"org.apache.commons.lang3.math.FractionTest.testSubtract":56,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":9,"org.apache.commons.lang3.math.FractionTest.testAdd":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":98,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":66,"org.apache.commons.lang3.RangeTest.testContainsRange":136,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":23,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":7,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":95,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":26,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":85,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":35,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":4,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":61,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":84,"org.apache.commons.lang3.math.FractionTest.testToString":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":80,"org.apache.commons.lang3.math.FractionTest.testMultiply":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":96,"org.apache.commons.lang3.RangeTest.testIsWithCompare":127,"org.apache.commons.lang3.RangeTest.testIsStartedBy":129,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":72,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":101,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":93,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":118,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":106,"org.apache.commons.lang3.math.FractionTest.testDivide":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":103,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":41,"org.apache.commons.lang3.math.FractionTest.testToProperString":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":82,"org.apache.commons.lang3.RangeTest.testIsAfter":143,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":33,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":109,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":88,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":2}}]
