[{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:520","sourceCode":"final java.util.Calendar java.util.Calendar = java.util.Calendar.java.util.Calendar.getInstance()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:455","sourceCode":"java.lang.StringBuilder.append(']')","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:592","sourceCode":"int = -int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","sourceCode":"int = (int + int) - (int - int)","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"u":"change"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1166","sourceCode":"java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtAssignmentImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1006","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:574","sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() is unsupported\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:905","sourceCode":"if ((boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:594","sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is unsupported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1247","sourceCode":"throw new java.lang.IllegalStateException((\"Wait... What!? Type of rawType: \" + java.lang.reflect.Type))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1423","sourceCode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1310","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"osVersion":"str","osName":"str"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:437","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:765","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"isEquals":"quoting","superEquals":"quoting"}},{"position":"org.apache.commons.lang3.Conversion:103","failures":[20],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:106","sourceCode":"return ((short)(org.apache.commons.lang3.BitField.getRawValue(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:84","sourceCode":"return org.apache.commons.lang3.BitField.((short)(getValue(short)))","type":"CtReturnImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"holder":"holder","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:206","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5306","sourceCode":"if (int == int) {\n    return java.lang.String.concat(java.lang.String);\n} else if (int < int) {\n    return java.lang.String.concat(java.lang.String.substring(0, int));\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return java.lang.String.concat(new java.lang.String(char[]));\n}","type":"CtIfImpl"},"failures":[23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:246","sourceCode":"return false","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:504","sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>.get(this.java.util.Locale)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:509","sourceCode":"final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>.putIfAbsent(java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cache":"cache","locale":"locale"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6388","sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1330","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (int >> int)));\n}","type":"CtForImpl"},"failures":[27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"maxWidth":"dstPos"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:265","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:158","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","sourceCode":"if (float[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, float[]);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"style":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Validate:506","sourceCode":"org.apache.commons.lang3.Validate.notNull(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:539","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this","array":"items"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:678","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1038","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:106","sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:156","sourceCode":"if (java.lang.Object == java.lang.Object) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[29,30,10,11,12,13,14,16,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"object1"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:42","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:360","sourceCode":"return \"\\\\u\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:731","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"negate"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:195","sourceCode":"try {\n    java.text.DateFormat java.text.DateFormat;\n    if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n    }\n    java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String = java.lang.String;\n    } \n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n}","type":"CtTryImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:94","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:778","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:128","sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:607","sourceCode":"java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","type":"CtAssignmentImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":82,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":61,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":57,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":20,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":69,"org.apache.commons.lang3.tuple.PairTest.testCompatibilityBetweenPairs":39,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterizeWithOwner":48,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":30,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":79,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":56,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":43,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":64,"org.apache.commons.lang3.text.StrTokenizerTest.test1":10,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":36,"org.apache.commons.lang3.text.StrTokenizerTest.test3":12,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":31,"org.apache.commons.lang3.text.StrTokenizerTest.test2":11,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":42,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":52,"org.apache.commons.lang3.RangeTest.testToString":0,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWildcardType":46,"org.apache.commons.lang3.reflect.TypeUtilsTest.testParameterize":47,"org.apache.commons.lang3.text.StrTokenizerTest.test8":17,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":73,"org.apache.commons.lang3.text.StrTokenizerTest.test5":14,"org.apache.commons.lang3.text.StrTokenizerTest.test4":13,"org.apache.commons.lang3.text.StrTokenizerTest.test7":16,"org.apache.commons.lang3.text.StrTokenizerTest.test6":15,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":18,"org.apache.commons.lang3.reflect.TypeUtilsTest.testWrap":45,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":53,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":28,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":72,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":65,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":74,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":54,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":63,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":44,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":78,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":58,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":62,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":76,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":68,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":33,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":71,"org.apache.commons.lang3.RangeTest.testIsStartedBy":26,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":32,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":81,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":41,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":9,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":27,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":70,"org.apache.commons.lang3.CharUtilsTest.testToUnicodeEscaped_char":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":6,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":25,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":7,"org.apache.commons.lang3.tuple.PairTest.testMapEntry":40,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":5,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":50,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":24,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":66,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":75,"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":34,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":67,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":49,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":60,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":22,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":19,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":29,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":37,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":38,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":2,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":4,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":3,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":23,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":59}}]
