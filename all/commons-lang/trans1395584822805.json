[{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:193","sourceCode":"java.lang.String = java.lang.String.substring(1)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:836","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"duration":"varValue"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:94","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:246","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableByte) {\n    return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(java.lang.Object)).byteValue());\n} ","type":"CtIfImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:373","sourceCode":"return short[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1256","sourceCode":"return short[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:592","sourceCode":"if (int > 0) {\n    int = -int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:614","sourceCode":"if (int > 0) {\n    int = -int;\n} else {\n    int = int;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"u":"v"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:265","sourceCode":"if ((java.lang.String.equals(java.util.Locale.getCountry())) && (java.util.Locale.getVariant().isEmpty())) {\n    java.util.List<java.util.Locale>.add(java.util.Locale);\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:185","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch already started. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:42","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1056","failures":[16,17,18,19,20,21,22,23,24,25,26],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:807","sourceCode":"return org.apache.commons.lang3.math.Fraction.getReducedFraction(org.apache.commons.lang3.math.Fraction.mulAndCheck((int / int), (int / int)), org.apache.commons.lang3.math.Fraction.mulPosAndCheck((int / int), (int / int)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:758","sourceCode":"return new org.apache.commons.lang3.math.Fraction((boolean ? org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addAndCheck(int, int) : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.subAndCheck(int, int)) , org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, org.apache.commons.lang3.math.Fraction.int))","type":"CtReturnImpl"},"failures":[27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"d1":"denominator","fraction":"this","d2":"uvp","numerator":"upv","denominator":"uvp","this":"fraction"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1352","sourceCode":"for ( ; int < (char[].int) ; int++) {\n    if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:302","sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:261","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:757","sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(org.apache.commons.lang3.math.Fraction.int, int)","type":"CtLocalVariableImpl"},"failures":[27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1090","sourceCode":"throw new java.lang.IllegalArgumentException(((\"The field \" + int) + \" is not supported\"))","type":"CtThrowImpl"},"failures":[31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1388","sourceCode":"if (((char[][int]) == '+') || ((char[][int]) == '-')) {\n    if (!boolean) {\n        return false;\n    } \n    boolean = false;\n    boolean = false;\n} else {\n    return false;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1408","sourceCode":"if ((char[][int]) == '.') {\n    if (boolean || boolean) {\n        return false;\n    } \n    return boolean;\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"foundDigit":"hasDecPoint","chars":"chars","allowSigns":"foundDigit","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1847","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[33,34,24,35,36,37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arrayEnd":"contentEnd"}},{"position":"org.apache.commons.lang3.time.DateUtils:700","failures":[42,43,44,45,46,47,48,49,50,51,52,53,31,54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"java.util.Date == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:142","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:826","sourceCode":"if ((org.apache.commons.lang3.math.Fraction.int) == 0) {\n    throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\");\n} ","type":"CtIfImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"denominator":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:396","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:509","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"position":"org.apache.commons.lang3.math.NumberUtils:480","failures":[66],"status":-1,"binaryOperator":"(char > '7')","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1282","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1275","sourceCode":"if (double[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}","type":"CtIfImpl"},"failures":[67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this","array":"array"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:359","sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:597","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:470","sourceCode":"if (char == '0') {\n    int++;\n} else {\n    break;\n}","type":"CtIfImpl"},"failures":[77,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"pfxLen"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:337","sourceCode":"java.lang.StringBuilder.append(\"\\\\E\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:80","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"failures":[78,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:269","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","type":"CtThrowImpl"},"failures":[80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":51,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int_noMatch":80,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":70,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":39,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":12,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":9,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":68,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":61,"org.apache.commons.lang3.math.FractionTest.testSubtract":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":24,"org.apache.commons.lang3.math.FractionTest.testAdd":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":46,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":5,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":67,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToBinary":30,"org.apache.commons.lang3.time.DateUtilsTest.testRound":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":50,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":49,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":42,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":58,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testEnforceExceptions":15,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":38,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":53,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":32,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":72,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":19,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":14,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":69,"org.apache.commons.lang3.ArrayUtilsTest.testToString":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":63,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":55,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":75,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":73,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":29,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":74,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":47,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":33,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":22,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":16,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":0,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":44,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":8,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":64,"org.apache.commons.lang3.math.FractionTest.testDivide":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":17,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":57,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":4,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":78,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":2,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":40}}]
