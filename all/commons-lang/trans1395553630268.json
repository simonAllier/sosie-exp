[{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:770","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:773","sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:780","sourceCode":"char[][int++] = 'l'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:271","sourceCode":"char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))))","type":"CtAssignmentImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","size":"count"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4519","sourceCode":"int *= int < 0 ? 16 : int > 64 ? 64 : int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:468","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"max":"count","increase":"count"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:402","sourceCode":"if (byte[] == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1334","sourceCode":"return byte[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"array":"dst"}},{"position":"org.apache.commons.lang3.Conversion:945","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:266","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.time.DateUtils:957","failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"binaryOperator":"(java.util.Calendar.get(java.util.Calendar.int)) > 280000000","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:159","sourceCode":"this.short -= short","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:118","sourceCode":"(short)++","type":"CtUnaryOperatorImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:140","sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle()).append(',').append(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:171","sourceCode":"try {\n    final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method));\n    } \n    int += org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.reflect.Method.getName(), java.lang.Object);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Exception java.lang.Exception) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}","type":"CtTryImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Range:371","sourceCode":"return org.apache.commons.lang3.Range<T>.isBefore(this.T)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:416","sourceCode":"return (T.equals(org.apache.commons.lang3.Range<T>.T)) && (T.equals(org.apache.commons.lang3.Range<T>.T))","type":"CtReturnImpl"},"failures":[70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","otherRange":"range","this":"range"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:348","sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:247","sourceCode":"return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(java.lang.Object)).byteValue())","type":"CtReturnImpl"},"failures":[72],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:303","failures":[73,74],"status":-1,"binaryOperator":"((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1189","sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(float, float), float)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:124","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float, float), float)","type":"CtReturnImpl"},"failures":[75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:827","sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1009","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:947","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:211","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"isEquals":"ownExecutor"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:527","sourceCode":"return 'e'","type":"CtReturnImpl"},"failures":[80,81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:1086","failures":[59,60,61,63,64,65,66,67],"status":-1,"binaryOperator":"int != 0","name":"removeConditional","type":"mutation"},{"position":"org.apache.commons.lang3.text.WordUtils:113","failures":[82,83],"status":-1,"binaryOperator":"int + 1","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:704","sourceCode":"return false","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:497","failures":[85,86,87],"status":-1,"binaryOperator":"int > (-1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:510","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy != null) {\n    return org.apache.commons.lang3.time.FastDateParser.Strategy;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:448","sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.MODULO_HOUR_OF_DAY_STRATEGY"}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":49,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":37,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":27,"org.apache.commons.lang3.mutable.MutableShortTest.testIncrement":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":48,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":73,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":23,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":36,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":19,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":51,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorNoTask":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":16,"org.apache.commons.lang3.time.DateUtilsTest.testRound":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":42,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_emptyInput":76,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":75,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":47,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":55,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":58,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":62,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":72,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":81,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireLimit":74,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":35,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":24,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":13,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":77,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":0,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":86,"org.apache.commons.lang3.RangeTest.testIntersectionWith":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":26,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":28,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":52,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":30,"org.apache.commons.lang3.RangeTest.testEqualsObject":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":6,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":10,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":11,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":69,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":3,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":18,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":54,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":14,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":84}}]
