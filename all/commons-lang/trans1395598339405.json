[{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:369","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1166","sourceCode":"java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1180","sourceCode":"java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int)","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"start":"start","end":"start"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:156","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SerializationUtils:217","sourceCode":"throw new org.apache.commons.lang3.SerializationException(java.io.IOException)","type":"CtThrowImpl"},"failures":[2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:913","sourceCode":"return true","type":"CtReturnImpl"},"failures":[4,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1441","sourceCode":"char[][((int + int) + int)] = char","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:286","sourceCode":"char[][int] = char","type":"CtAssignmentImpl"},"failures":[8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","padChar":"ch","strLen":"count","size":"count","i":"count"}},{"position":"org.apache.commons.lang3.Conversion:1692","failures":[16],"status":-1,"binaryOperator":"(int - 8)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1340","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[])","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:128","sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","type":"CtEnumImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:82","sourceCode":"private static class EventBindingInvocationHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.Object target;\n\n    private final java.lang.String methodName;\n\n    private final java.util.Set<java.lang.String> eventTypes;\n\n    /** \n     * Creates a new instance of {@code EventBindingInvocationHandler}.\n     * \n     * @param target the target object for method invocations\n     * @param methodName the name of the method to be invoked\n     * @param eventTypes the names of the supported event types\n     */\nEventBindingInvocationHandler(final java.lang.Object target ,final java.lang.String methodName ,final java.lang.String[] eventTypes) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.lang.String = java.lang.String;\n        this.java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n    }\n\n    /** \n     * Handles a method invocation on the proxy object.\n     * \n     * @param proxy the proxy instance\n     * @param method the method to be invoked\n     * @param parameters the parameters for the method invocation\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n            if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n            } else {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n            }\n        } \n        return null;\n    }\n\n    /** \n     * Checks whether a method for the passed in parameters can be found.\n     * \n     * @param method the listener method invoked\n     * @return a flag whether the parameters could be matched\n     */\nprivate boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n        return org.apache.commons.lang3.reflect.MethodUtils.(org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.reflect.Method.getParameterTypes())) != null;\n    }\n}","type":"CtClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:56","sourceCode":"java.lang.Byte.java.lang.Byte.valueOf(((byte)(-1)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:473","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendCyclicObject(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:66","sourceCode":"if ((float[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3430","sourceCode":"for (int int = 0 ; int < (java.lang.Boolean[].int) ; int++) {\n    boolean[][int] = java.lang.Boolean[][int].booleanValue();\n}","type":"CtForImpl"},"failures":[27,28,29,4,5,30,31,32,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5983","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:88","sourceCode":"return java.lang.Double.java.lang.Double.valueOf(this.double)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:116","sourceCode":"java.io.Writer.write(';')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:122","sourceCode":"java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","type":"CtInvocationImpl"},"failures":[35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"out":"out"}},{"transplant":{"position":"org.apache.commons.lang3.tuple.ImmutablePair:101","sourceCode":"throw new java.lang.UnsupportedOperationException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:333","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:466","failures":[40,41,42,43,44,45],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1151","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:761","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1532","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:284","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:263","sourceCode":"org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuilder, java.lang.Object)","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:117","sourceCode":"return 14","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:699","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:290","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, boolean[], null)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2343","sourceCode":"if (int > (this.int)) {\n    return -1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:407","sourceCode":"return (int) / (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"strLen":"numerator","size":"numerator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1191","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(((org.apache.commons.lang3.SystemUtils.java.lang.String) + \" NT\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:558","sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:544","sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","numeric":"numeric","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:894","sourceCode":"return double","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Double.NaN":"min"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:778","sourceCode":"char[][int++] = 'f'","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:385","sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char)","type":"CtAssignmentImpl"},"failures":[50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","size":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:604","sourceCode":"if (char == (java.lang.Character.char)) {\n    throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n} ","type":"CtIfImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:143","sourceCode":"return false","type":"CtReturnImpl"},"failures":[53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:114","sourceCode":"return (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getLeft())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getMiddle()))) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getRight()))","type":"CtReturnImpl"},"failures":[54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:450","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:109","sourceCode":"org.apache.commons.lang3.text.translate.CharSequenceTranslator[][0] = this","type":"CtAssignmentImpl"},"failures":[56,57,58,38,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:1659","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1434","sourceCode":"for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:103","sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeLiteral<?>.java.lang.reflect.Type)","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"value","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.SyncAvoid:320","sourceCode":"java.util.List<java.util.Locale> = java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:303","sourceCode":"java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"list":"countries","this":"this","org.apache.commons.lang3.LocaleUtils.SyncAvoid.AVAILABLE_LOCALE_LIST":"countries"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:762","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1238","sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int]);\n}","type":"CtForImpl"},"failures":[63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.MapStrLookup:166","sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:180","sourceCode":"return new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V>).replace(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"source"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","sourceCode":"if (java.lang.Throwable == null) {\n    return \"\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:694","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"th":"root"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:264","sourceCode":"throw new java.lang.IllegalArgumentException(\"The character must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","type":"CtThrowImpl"},"failures":[66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:363","sourceCode":"return int - 100","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:127","sourceCode":"return int","type":"CtReturnImpl"},"failures":[67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"trial":"defaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:87","sourceCode":"return java.lang.Boolean.java.lang.Boolean.equals(java.lang.Boolean)","type":"CtReturnImpl"},"failures":[69,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":21,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":61,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_nullElementInput":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":60,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntStringI":67,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":49,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":57,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":56,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":10,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":54,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":26,"org.apache.commons.lang3.reflect.TypeLiteralTest.testEquals":62,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuilder":47,"org.apache.commons.lang3.math.FractionTest.testSubtract":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":25,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":18,"org.apache.commons.lang3.BooleanUtilsTest.test_isNotTrue_Boolean":69,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":46,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_nullElementInput":27,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":41,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetBeforeStart":66,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":1,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":37,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_3items":29,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeStreamBadStream":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":38,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":59,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_boolean":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":23,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":36,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":6,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":43,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":55,"org.apache.commons.lang3.BooleanUtilsTest.test_isTrue_Boolean":70,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":53,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":12,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":19,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":13,"org.apache.commons.lang3.StringUtilsTest.testSwapCase_String":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":17,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_nullElementInput":33,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":11,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":44,"org.apache.commons.lang3.math.NumberUtilsTest.testToIntString":68,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":31,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":63,"org.apache.commons.lang3.BooleanUtilsTest.testXor_object_validInput_2items":28,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringStringBuffer":39,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":35,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":51,"org.apache.commons.lang3.SerializationUtilsTest.testDeserializeBytesBadStream":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":22,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":14,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":20,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":0,"org.apache.commons.lang3.ConversionTest.testIntToHexDigit":52,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":40,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":9,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":4}}]
