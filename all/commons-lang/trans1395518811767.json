[{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4748","sourceCode":"if (int > 0) {\n    int += 3 * int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:561","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    java.util.List<java.lang.String>.remove(int);\n} ","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"greater":"causeFrameIndex","increase":"causeFrameIndex"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:595","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:261","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:786","sourceCode":"if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n    boolean = true;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:755","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int * 2;\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n        continue;\n    } \n    boolean = false;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:552","sourceCode":"throw new java.lang.IllegalArgumentException(\"The List must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:160","sourceCode":"throw ((java.lang.RuntimeException)(java.util.concurrent.ExecutionException.getCause()))","type":"CtThrowImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:105","sourceCode":"return 8","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:580","sourceCode":"java.lang.String = java.lang.String.substring((int + 1), java.lang.String.length())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arrayEnd":"exp"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:965","sourceCode":"int = int[][int]","type":"CtAssignmentImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:141","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","type":"CtThrowImpl"},"failures":[26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:89","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:202","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (int == 0)) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:855","sourceCode":"java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:822","sourceCode":"if (java.util.List<java.lang.String> == null) {\n    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1553","sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[34,38,40,41,48,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"pos","nBools":"length"}},{"transplant":{"position":"org.apache.commons.lang3.event.EventUtils:55","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1030","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix matcher must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:965","sourceCode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"suffixMatcher":"prefixMatcher"}},{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","failures":[58,59,60,61],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:777","sourceCode":"if ((java.math.BigInteger.bitLength()) > 31) {\n    throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n} ","type":"CtIfImpl"},"failures":[62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.event.EventUtils:55","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:298","sourceCode":"java.util.concurrent.ScheduledFuture<?> = org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneStrategy:686","sourceCode":"if (java.lang.String.startsWith(\"GMT\")) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:906","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[13,64,65,66,66,67,68,68,69,69,70,70,71,71,72,72,73,74,75,76,77,78,79,80,81,81,82,83,84,85,85,86,87,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"id":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1055","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OS/2\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1116","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.0\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:499","sourceCode":"java.io.PrintWriter.flush()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:585","sourceCode":"java.lang.Throwable.printStackTrace(java.io.PrintWriter)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"writer":"pw"}},{"position":"org.apache.commons.lang3.AnnotationUtils:127","failures":[100,101],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1000","sourceCode":"return org.apache.commons.lang3.text.StrMatcher.setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1065","sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","type":"CtReturnImpl"},"failures":[33,35,36,48,56,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"prefix":"suffix","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:538","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:42","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1037","sourceCode":"java.util.Calendar.add(int[][0], 1)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1077","sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","type":"CtIfImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"val":"val","aField":"aField"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1224","sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:608","sourceCode":"java.lang.reflect.Array.java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.get(T, int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"length","srcPos":"length"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:179","sourceCode":"return int & (~(int))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:95","sourceCode":"return int & (int)","type":"CtReturnImpl"},"failures":[116,117,118,119,120,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:518","sourceCode":"java.lang.Class<?>[] = java.lang.Class<?>[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:123","sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"classArray":"parameterTypes","org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:770","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:789","sourceCode":"if (int == 0) {\n    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n    if (boolean) {\n        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n    } \n    int += int;\n    final int int = int;\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String java.lang.String = null;\n    if (org.apache.commons.lang3.text.StrMatcher != null) {\n        final char[] char[] = java.lang.String.toCharArray();\n        int int = 0;\n        for (int int = 0 ; int < (char[].int) ; int++) {\n            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                break;\n            } \n            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n                java.lang.String = java.lang.String.substring((int + int));\n                break;\n            } \n        }\n    } \n    if (java.util.List<java.lang.String> == null) {\n        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n    } \n    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n    java.util.List<java.lang.String>.add(java.lang.String);\n    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n    if (java.lang.String == null) {\n        java.lang.String = java.lang.String;\n    } \n    if (java.lang.String != null) {\n        final int int = java.lang.String.length();\n        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n        boolean = true;\n        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n        int = (int + int) - (int - int);\n        int += int;\n        int += int;\n        int += int;\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    } \n    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n    break;\n} else {\n    int--;\n    int += int;\n}","type":"CtIfImpl"},"failures":[27,29,31,32,34,36,38,39,40,41,43,45,47,48,49,50,51,53,54,55,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pos":"bufEnd","startMatchLen":"length"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:450","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1055","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OS/2\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1128","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"failures":[122],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:294","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} ","type":"CtIfImpl"},"failures":[123,124],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":72,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":109,"org.apache.commons.lang3.BitFieldTest.testGetShortRawValue":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":88,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":106,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":93,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":47,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":70,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":110,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":85,"org.apache.commons.lang3.BitFieldTest.testGetRawValue":120,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":73,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":28,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":123,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":21,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":104,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":54,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":45,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":67,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":42,"org.apache.commons.lang3.BitFieldTest.testSetValue":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":8,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":79,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":43,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":22,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":32,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":74,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":75,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":87,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":24,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":26,"org.apache.commons.lang3.AnnotationUtilsTest.testOneArgNull":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":39,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":1,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":60,"org.apache.commons.lang3.text.StrTokenizerTest.test1":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":31,"org.apache.commons.lang3.text.StrTokenizerTest.test3":11,"org.apache.commons.lang3.text.StrTokenizerTest.test2":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":51,"org.apache.commons.lang3.AnnotationUtilsTest.testAnnotationsOfDifferingTypes":101,"org.apache.commons.lang3.math.FractionTest.testSubtract":63,"org.apache.commons.lang3.text.StrTokenizerTest.test8":16,"org.apache.commons.lang3.BitFieldTest.testGetValue":116,"org.apache.commons.lang3.math.FractionTest.testAdd":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":29,"org.apache.commons.lang3.text.StrTokenizerTest.test5":13,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":23,"org.apache.commons.lang3.text.StrTokenizerTest.test4":12,"org.apache.commons.lang3.text.StrTokenizerTest.test7":15,"org.apache.commons.lang3.text.StrTokenizerTest.test6":14,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":58,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":122,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":86,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":90,"org.apache.commons.lang3.ArrayUtilsTest.testToString":99,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":66,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":33,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":49,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":35,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":84,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":41}}]
