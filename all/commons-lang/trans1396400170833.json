[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:338","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.CompareToBuilder:281","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getMethods()","position":"org.apache.commons.lang3.reflect.MethodUtils:482","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.EnumUtils:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final byte byte : byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(byte);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:626","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.ClassUtils:823","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nibble":"index"},"name":"add","transplant":{"sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","position":"org.apache.commons.lang3.Conversion:629","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:312","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.CharRange.boolean) {\n        return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n    } \n    return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char));\n} ","position":"org.apache.commons.lang3.CharRange:186","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n} ","position":"org.apache.commons.lang3.CharRange:187","type":"CtIfImpl"},"status":0},{"failures":[0],"variableMapping":{"offset":"j"},"name":"add","transplant":{"sourceCode":"int -= 12","position":"org.apache.commons.lang3.time.DateUtils:1071","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][0] = int","position":"org.apache.commons.lang3.StringUtils:6938","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"strLen":"csLen","size":"csLen"},"name":"add","transplant":{"sourceCode":"final int int = int + int","position":"org.apache.commons.lang3.text.StrBuilder:1500","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1879","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = java.lang.String.lastIndexOf(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:358","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(org.apache.commons.lang3.ClassUtils.char, (int == (-1) ? 0 : int + 1))","position":"org.apache.commons.lang3.ClassUtils:218","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(char[], java.util.BitSet)))","position":"org.apache.commons.lang3.ArrayUtils:5648","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3908","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"maxWidth":"end"},"name":"replace","transplant":{"sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","position":"org.apache.commons.lang3.StringUtils:6397","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int += 1;\n    if (int == int) {\n        int = int;\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n    } else {\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int));\n        int = int + int;\n    }\n} else {\n    if (boolean) {\n        int += 1;\n        if (int == int) {\n            int = int;\n            java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n        } else {\n            java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    } \n    int = int + int;\n}","position":"org.apache.commons.lang3.StringUtils:2830","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:534","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = (java.lang.String.length()) + int;\n} ","position":"org.apache.commons.lang3.StringUtils:2124","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 9 :\n    return '9';","position":"org.apache.commons.lang3.Conversion:648","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:346","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.StringBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:623","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getSummaryObjectEndText()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:539","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final T T = org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.clone(T)","position":"org.apache.commons.lang3.ObjectUtils:663","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Object.toString()","position":"org.apache.commons.lang3.ObjectUtils:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(java.lang.reflect.Type[], int--)","position":"org.apache.commons.lang3.reflect.TypeUtils:1412","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:1315","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ObjectUtils:643","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"variableMapping":{"str":"cs","suffix":"cs"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:7316","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:311","type":"CtForImpl"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils.Token[], 0, 0, long, long, long, long, long, boolean)","position":"org.apache.commons.lang3.time.DurationFormatUtils:153","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"genericInterface":"replacementType"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type != null) {\n    return java.lang.reflect.Type;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1077","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:729","type":"CtReturnImpl"},"status":0},{"failures":[61],"variableMapping":{"nBools":"nBytes","dstPos":"nBytes"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1118","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 8) {\n    org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.longToByteArray(java.util.UUID.getLeastSignificantBits(), 0, byte[], (int + 8), (int - 8));\n} ","position":"org.apache.commons.lang3.Conversion:1691","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1784","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService.shutdown()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:330","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = boolean ? java.lang.CharSequence.length() : org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:1033","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == 1) && (int <= (org.apache.commons.lang3.StringUtils.int))) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.String, int, java.lang.String.charAt(0));\n} ","position":"org.apache.commons.lang3.StringUtils:5423","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","position":"org.apache.commons.lang3.ClassUtils:87","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.lang.Character.(java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n    char[][int++] = java.lang.String.charAt(int);\n} ","position":"org.apache.commons.lang3.StringUtils:4178","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, E>.put(E.name(), E)","position":"org.apache.commons.lang3.EnumUtils:61","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3487","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.lang3.text.StrTokenizer:520","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"))","position":"org.apache.commons.lang3.time.DateUtils:1206","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:395","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6040","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int)","position":"org.apache.commons.lang3.text.StrBuilder:2883","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrSubstitutor:859","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[62],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:526","type":"CtReturnImpl"},"status":-1},{"failures":[63,64,65,66,67],"binaryOperator":"int < 0","name":"negateConditional","position":"org.apache.commons.lang3.Conversion:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1611","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Class<?> != null), \"The class must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:167","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.HashMap<java.lang.Integer, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Integer, new org.apache.commons.lang3.mutable.MutableInt(1))","position":"org.apache.commons.lang3.ArrayUtils:5542","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","position":"org.apache.commons.lang3.ArrayUtils:5277","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"input","remove":"input"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:545","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", java.lang.reflect.Type, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1497","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][int] = char[][(int % int)]","position":"org.apache.commons.lang3.StringUtils:5435","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n    if (java.util.Map<java.lang.Object, java.lang.Object> != null) {\n        java.util.Map<java.lang.Object, java.lang.Object>.remove(java.lang.Object);\n        if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n            org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n        } \n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:208","type":"CtIfImpl"},"status":-2},{"failures":[68,69],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (short[].int)) {\n    int = (short[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2274","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1057","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.ClassUtils:823","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.apache.commons.lang3.AnnotationUtils:180","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = 4294967295L << int","position":"org.apache.commons.lang3.Conversion:697","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:1975","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:523","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:909","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:508","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) + (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.FastDatePrinter:1195","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"name":"desc"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(0, int).trim()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:313","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"seconds":"length"},"name":"replace","transplant":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:300","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (short[].int) < (short[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:783","type":"CtAssignmentImpl"},"status":-2},{"failures":[70,71,72,73,74,75,76,77],"variableMapping":{"cs":"cs","ch":"ch","this":"this","i":"j","j":"i","searchLast":"csLast","csLast":"csLast","searchChars":"searchChars"},"name":"add","transplant":{"sourceCode":"if (java.lang.Character.isHighSurrogate(char)) {\n    if (int == int) {\n        return true;\n    } \n    if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n        return true;\n    } \n} else {\n    return true;\n}","position":"org.apache.commons.lang3.StringUtils:1630","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    if (java.lang.Character.java.lang.Character.isHighSurrogate(char)) {\n        if (int == int) {\n            return true;\n        } \n        if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n            return true;\n        } \n    } else {\n        return true;\n    }\n} ","position":"org.apache.commons.lang3.StringUtils:1629","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2484","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.(isUseIdentityHashCode()) && (java.lang.Object != null)) {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object);\n    java.lang.StringBuffer.append('@');\n    java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1469","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1008","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Field.getModifiers())) {\n    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.getDeclaredField(\"modifiers\");\n    final boolean boolean = boolean && (!(java.lang.reflect.Field.isAccessible()));\n    if (boolean) {\n        java.lang.reflect.Field.setAccessible(true);\n    } \n    try {\n        java.lang.reflect.Field.setInt(java.lang.reflect.Field, ((java.lang.reflect.Field.getModifiers()) & (~(java.lang.reflect.Modifier.int))));\n    } finally {\n        if (boolean) {\n            java.lang.reflect.Field.setAccessible(false);\n        } \n    }\n} ","position":"org.apache.commons.lang3.reflect.FieldUtils:682","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:298","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = ((java.lang.Class<? extends java.lang.annotation.Annotation>)(java.lang.Class<?>))","position":"org.apache.commons.lang3.AnnotationUtils:78","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Calendar.get(java.util.Calendar.int)) > 280000000) {\n    throw new java.lang.ArithmeticException(\"Calendar value too large for accurate calculations\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:958","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1161","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'c' :","position":"org.apache.commons.lang3.Conversion:188","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<java.lang.String>.add(org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:107","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Locale","position":"org.apache.commons.lang3.time.FastDateParser:200","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int /= 2","position":"org.apache.commons.lang3.math.Fraction:218","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long = (int * ((long)(int))) - int","position":"org.apache.commons.lang3.math.Fraction:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (java.lang.Object[].int)) && (boolean) ; ++int) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[][int], java.lang.Object[][int]);\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:654","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","position":"org.apache.commons.lang3.math.Fraction:320","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 2) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","position":"org.apache.commons.lang3.LocaleUtils:101","type":"CtIfImpl"},"status":0},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"variableMapping":{"bits":"newSize","out":"size","mask":"newSize"},"name":"replace","transplant":{"sourceCode":"int = (int & (~int)) | int","position":"org.apache.commons.lang3.Conversion:1091","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.StrBuilder:1814","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3859","type":"CtReturnImpl"},"status":-2},{"failures":[113,114],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '6'","position":"org.apache.commons.lang3.Conversion:449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'c';\n    } else {\n        return '4';\n    }\n} else {\n    if (boolean[][int]) {\n        return '8';\n    } else {\n        return '0';\n    }\n}","position":"org.apache.commons.lang3.Conversion:459","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case '\\'' :\n    final java.lang.String java.lang.String = java.lang.String.substring(1);\n    if ((java.lang.String.length()) == 1) {\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n    } else {\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n    }\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:273","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Enum.java.lang.Enum.valueOf(java.lang.Class<E>, java.lang.String);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return null;\n}","position":"org.apache.commons.lang3.EnumUtils:117","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getPriority()) != null) {\n    java.lang.Thread.setPriority(org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority().intValue());\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:230","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:902","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.TimedSemaphore.isShutdown()) {\n    throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\");\n} ","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:293","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (int == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.text.WordUtils:411","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int)","position":"org.apache.commons.lang3.time.FastDatePrinter:862","type":"CtInvocationImpl"},"status":-2},{"failures":[115,116,117,118,119],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:633","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((T[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(T[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5233","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:423","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator());\n} ","position":"org.apache.commons.lang3.math.Fraction:863","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.builder.EqualsBuilder:338","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()","position":"org.apache.commons.lang3.builder.EqualsBuilder:337","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"\"[\" + (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String))","name":"math","position":"org.apache.commons.lang3.ClassUtils:825","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","position":"org.apache.commons.lang3.ClassUtils:129","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:179","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(T)","position":"org.apache.commons.lang3.Range:455","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","position":"org.apache.commons.lang3.text.StrTokenizer:760","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(char[][int], char[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:779","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>An enum representing all the versions of the Java specification.\n * This is intended to mirror available values from the\n * <em>java.specification.version<\/em> System property. <\/p>\n * \n * @since 3.0\n * @version $Id$\n */\npublic enum JavaVersion {\nJAVA_0_9(1.5F,\"0.9\"), JAVA_1_1(1.1F,\"1.1\"), JAVA_1_2(1.2F,\"1.2\"), JAVA_1_3(1.3F,\"1.3\"), JAVA_1_4(1.4F,\"1.4\"), JAVA_1_5(1.5F,\"1.5\"), JAVA_1_6(1.6F,\"1.6\"), JAVA_1_7(1.7F,\"1.7\"), JAVA_1_8(1.8F,\"1.8\");\n    /** \n     * The float value.\n     */\nprivate final float value;\n    /** \n     * The standard name.\n     */\nprivate final java.lang.String name;\n    /** \n     * Constructor.\n     * \n     * @param value  the float value\n     * @param name  the standard name, not null\n     */\nJavaVersion(final float value ,final java.lang.String name) {\n        this.float = float;\n        this.java.lang.String = java.lang.String;\n    }\n    /** \n     * <p>Whether this version of Java is at least the version of Java passed in.<\/p>\n     * \n     * <p>For example:<br />\n     * {@code myVersion.atLeast(JavaVersion.JAVA_1_4)}<p>\n     * \n     * @param requiredVersion  the version to check against, not null\n     * @return true if this version is equal to or greater than the specified version\n     */\npublic boolean atLeast(final org.apache.commons.lang3.JavaVersion requiredVersion) {\n        return (this.float) >= (org.apache.commons.lang3.JavaVersion.float);\n    }\n\n    /** \n     * Transforms the given string with a Java version number to the\n     * corresponding constant of this enumeration class. This method is used\n     * internally.\n     * \n     * @param nom the Java version as string\n     * @return the corresponding enumeration constant or <b>null<\/b> if the\n     * version is unknown\n     */\nstatic org.apache.commons.lang3.JavaVersion getJavaVersion(final java.lang.String nom) {\n        return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion.get(java.lang.String);\n    }\n\n    /** \n     * Transforms the given string with a Java version number to the\n     * corresponding constant of this enumeration class. This method is used\n     * internally.\n     * \n     * @param nom the Java version as string\n     * @return the corresponding enumeration constant or <b>null<\/b> if the\n     * version is unknown\n     */\nstatic org.apache.commons.lang3.JavaVersion get(final java.lang.String nom) {\n        if (\"0.9\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.1\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.2\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.3\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.4\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.5\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.6\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.7\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else if (\"1.8\".equals(java.lang.String)) {\n            return org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion;\n        } else {\n            return null;\n        }\n    }\n\n    /** \n     * <p>The string value is overridden to return the standard name.<\/p>\n     * \n     * <p>For example, <code>\"1.5\"<\/code>.<\/p>\n     * \n     * @return the name, not null\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return java.lang.String;\n    }\n}","position":"org.apache.commons.lang3.JavaVersion:27","type":"CtEnumImpl"},"status":-2},{"failures":[120],"variableMapping":{"nBools":"out","srcPos":"dstPos"},"name":"add","transplant":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1587","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    int = (int & (~int)) | int;\n}","position":"org.apache.commons.lang3.Conversion:1087","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:500","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method.invoke(null, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:226","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1119","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:654","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"padStr"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1741","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:5305","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","position":"org.apache.commons.lang3.ArrayUtils:5988","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:395","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"newSize":"length"},"name":"add","transplant":{"sourceCode":"final short[] short[] = new short[int]","position":"org.apache.commons.lang3.ArrayUtils:1009","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final short[] short[] = new short[java.lang.Short[].int]","position":"org.apache.commons.lang3.ArrayUtils:3189","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:458","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n} ","position":"org.apache.commons.lang3.RandomStringUtils:310","type":"CtIfImpl"},"status":-2},{"failures":[121],"binaryOperator":"(int - int)","name":"math","position":"org.apache.commons.lang3.ArrayUtils:4576","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:639","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:389","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(short[])","position":"org.apache.commons.lang3.math.NumberUtils:836","type":"CtInvocationImpl"},"status":-2},{"failures":[122],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String), 1)","position":"org.apache.commons.lang3.math.Fraction:348","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\");\n} else {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int));\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)));\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(int, int, int);\n}","position":"org.apache.commons.lang3.math.Fraction:335","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","position":"org.apache.commons.lang3.text.StrBuilder:419","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"Unable to invert zero.\")","position":"org.apache.commons.lang3.math.Fraction:491","type":"CtThrowImpl"},"status":-2},{"failures":[123],"variableMapping":{"str":"str","trueString":"str","falseString":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2098","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"float float","position":"org.apache.commons.lang3.ArrayUtils:1719","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float float = float[][0]","position":"org.apache.commons.lang3.math.NumberUtils:913","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"length"},"name":"replace","transplant":{"sourceCode":"int int = this.int","position":"org.apache.commons.lang3.StringUtils:2022","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.text.StrBuilder:725","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDateParser:366","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Class<?> != null), \"The class must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:167","type":"CtInvocationImpl"},"status":-2},{"failures":[124],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))))","position":"org.apache.commons.lang3.RandomStringUtils:278","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))))","position":"org.apache.commons.lang3.RandomStringUtils:271","type":"CtAssignmentImpl"},"status":-1},{"failures":[125,126,127],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(1)","position":"org.apache.commons.lang3.ClassUtils:307","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) > 0) {\n    java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.substring(0, 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:1127","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"method":"method","parameterTypes":"parameterTypes","this":"this","methodName":"methodName","cls":"cls"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:367","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:372","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"transpositions":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return int / 2","position":"org.apache.commons.lang3.StringUtils:7120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2440","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)","position":"org.apache.commons.lang3.text.StrBuilder:1501","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(org.apache.commons.lang3.text.StrBuilder, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:578","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"hours":"size","offset":"size"},"name":"replace","transplant":{"sourceCode":"final int int = (int / (60 * 1000)) - (60 * int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1212","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2043","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:5847","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:204","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.CharSetUtils:70","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"status":-2},{"failures":[128],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:1090","type":"CtInvocationImpl"},"status":-1},{"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\")\")","position":"org.apache.commons.lang3.AnnotationUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1096","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:235","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, (java.lang.Class<?> == null ? \"null\" : java.lang.Class<?>.getName()), java.lang.Class<?>.getName()))","position":"org.apache.commons.lang3.Validate:1228","type":"CtThrowImpl"},"status":-2},{"failures":[158],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[], 0, java.lang.Object[].int)","position":"org.apache.commons.lang3.ArrayUtils:1439","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (float[].int) ; int++) {\n    float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:72","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.lang3.math.Fraction:268","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double - double","position":"org.apache.commons.lang3.ArrayUtils:2597","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"(long)--","position":"org.apache.commons.lang3.mutable.MutableLong:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = (long & (~long)) | long","position":"org.apache.commons.lang3.Conversion:1055","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:490","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Class used to define a character for matching purposes.\n */\nstatic final class CharMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * The character to match.\n     */\nprivate final char ch;\n\n    /** \n     * Constructor that creates a matcher that matches a single character.\n     * \n     * @param ch  the character to match\n     */\nCharMatcher(final char ch) {\n        org.apache.commons.lang3.text.StrMatcher.super();\n        this.char = char;\n    }\n\n    /** \n     * Returns whether or not the given character matches.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return (char) == (char[][int]) ? 1 : 0;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:309","type":"CtClassImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:672","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(short[])) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(short[]))) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(short[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5445","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":77,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":142,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":158,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":144,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":100,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":141,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":16,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":9,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticField":3,"org.apache.commons.lang3.math.NumberUtilsTest.testLang300":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":110,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":136,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":7,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedFieldForceAccess":10,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":101,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNumberArray":117,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":90,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":79,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":114,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticField":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":105,"org.apache.commons.lang3.ConversionTest.testHexToInt":65,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredFieldForceAccess":22,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":154,"org.apache.commons.lang3.StringUtilsTest.testIsNoneBlank":30,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":14,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":39,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":107,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG971":34,"org.apache.commons.lang3.math.NumberUtilsTest.testLANG972":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":111,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":120,"org.apache.commons.lang3.ConversionTest.testHexToByte":63,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayOutOfBoundsIndex":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":131,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":57,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":124,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":92,"org.apache.commons.lang3.StringUtilsTest.testIsNotBlank":28,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayRemoveNone":118,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":135,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":21,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":59,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithWhitespacesShouldNotThrow":45,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":127,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadFieldForceAccess":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":96,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShortWithStartIndex":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":95,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":80,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":123,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":93,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":153,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":0,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringShouldNotThrow":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":137,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsBlank":51,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayByte":128,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":84,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetField":6,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":133,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":143,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithWhitespacesShouldNotThrow":49,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":150,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArray":119,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringShouldNotThrow":47,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":83,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedStaticFieldForceAccess":17,"org.apache.commons.lang3.ConversionTest.testHexDigitToInt":66,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testIsNotBlank":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":132,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":88,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuffers":27,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":2,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":98,"org.apache.commons.lang3.ConversionTest.testHexToShort":67,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticFieldForceAccess":8,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":125,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":24,"org.apache.commons.lang3.ConversionTest.testUuidToByteArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":112,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":140,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":55,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":54,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringBuilders":29,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":157,"org.apache.commons.lang3.StringUtilsTest.testIsAnyBlank":25,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":75,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticFieldForceAccess":19,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":41,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":97,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":89,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":126,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":60,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":62,"org.apache.commons.lang3.ConversionTest.testHexToLong":64,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadStaticFieldForceAccess":1,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNotBlankStringWithNewlinesShouldNotThrow":48,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":139,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":76,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess":13,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":145,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":71,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfShort":69,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedStaticField":15,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":38,"org.apache.commons.lang3.ValidateTest.testNotBlankNotBlankStringWithNewlinesShouldNotThrow":42,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":109,"org.apache.commons.lang3.StringUtilsTest.testIsBlank":32,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllObjectArrayNegativeIndex":116,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":152,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":147,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_StringString":26,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues2":44,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":52,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticFieldForceAccess":4,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":81,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedFieldForceAccess":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":106,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":11,"org.apache.commons.lang3.ValidateTest.testNotBlankReturnValues1":43,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":70,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":58,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":134,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":36,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":148,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":108,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":151}}]
