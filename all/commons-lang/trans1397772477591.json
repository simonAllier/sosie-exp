[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((short)(int))","position":"org.apache.commons.lang3.ObjectUtils:856","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return short;\n} ","position":"org.apache.commons.lang3.Conversion:971","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:732","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces()","position":"org.apache.commons.lang3.reflect.MethodUtils:425","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return java.lang.Float.java.lang.Float.parseFloat(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return float;\n}","position":"org.apache.commons.lang3.math.NumberUtils:225","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.ExecutorService = null","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (byte) < byte ? -1 : (byte) == byte ? 0 : 1","position":"org.apache.commons.lang3.mutable.MutableByte:272","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Float.java.lang.Float.compare(float, float)","position":"org.apache.commons.lang3.mutable.MutableFloat:302","type":"CtReturnImpl"},"status":0},{"failures":[0],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:107","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String.startsWith(\"GMT\")) {\n    java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n} else {\n    java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n    if (java.util.TimeZone == null) {\n        throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n    } \n}","position":"org.apache.commons.lang3.time.FastDateParser:786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:543","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.lang.String.length()) - int","position":"org.apache.commons.lang3.StringUtils:4526","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Range:429","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())))","position":"org.apache.commons.lang3.exception.ExceptionUtils:533","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:903","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.text.Format = org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:175","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:660","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.math.NumberUtils:1117","failures":[1],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrBuilder.delete(0, int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2055","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > org.apache.commons.lang3.text.StrBuilder.(length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:415","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>(float[].int)","position":"org.apache.commons.lang3.ArrayUtils:5804","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, 0)","position":"org.apache.commons.lang3.text.StrBuilder:1891","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:108","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (java.lang.Object[].int)) {\n    int = (java.lang.Object[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1957","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.time.DurationFormatUtils.Token.org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    while (int < 0) {\n        int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n        int -= 1;\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n    while (int < 0) {\n        int += 12;\n        int -= 1;\n    }\n    if ((!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) && (int != 0)) {\n        while (int != 0) {\n            int += 12 * int;\n            int = 0;\n        }\n    } \n} else {\n    if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n        int int = java.util.Calendar.get(java.util.Calendar.int);\n        if (int < 0) {\n            int -= 1;\n        } \n        while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n            int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n            if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n                int += 1;\n            } \n            java.util.Calendar.add(java.util.Calendar.int, 1);\n            int += java.util.Calendar.get(java.util.Calendar.int);\n        }\n        int = 0;\n    } \n    while ((java.util.Calendar.get(java.util.Calendar.int)) != (java.util.Calendar.get(java.util.Calendar.int))) {\n        int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n    int = 0;\n    while (int < 0) {\n        int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n        int -= 1;\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:315","type":"CtIfImpl"},"status":-2},{"failures":[2],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case 'd' :","position":"org.apache.commons.lang3.Conversion:191","type":"CtCaseImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5639","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case '1' :\n    return new boolean[]{ true , false , false , false };","position":"org.apache.commons.lang3.Conversion:164","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        java.util.List<java.lang.String>.add(java.lang.Object.toString());\n    } \n}","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:331","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int *= int < 0 ? 16 : int > 64 ? 64 : int","position":"org.apache.commons.lang3.StringUtils:4528","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(((int[][(int - 1)]) + 1), ((int[][int]) + 1)), ((int[][(int - 1)]) + int))","position":"org.apache.commons.lang3.StringUtils:6804","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"foundDigit":"foundDigit","hasDecPoint":"allowSigns","hasExp":"allowSigns"},"name":"replace","transplant":{"sourceCode":"return (boolean && (!boolean)) && (!boolean)","position":"org.apache.commons.lang3.math.NumberUtils:1442","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n    return boolean;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1432","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(float[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4938","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double), java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.EqualsBuilder:591","type":"CtReturnImpl"},"status":-2},{"failures":[3,4,5,6,7],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:772","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Float.java.lang.Float.floatToIntBits(float), java.lang.Float.java.lang.Float.floatToIntBits(float))","position":"org.apache.commons.lang3.builder.EqualsBuilder:611","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * ParameterizedType implementation class.\n * @since 3.2\n */\nprivate static final class ParameterizedTypeImpl implements java.lang.reflect.ParameterizedType {\n    private final java.lang.Class<?> raw;\n\n    private final java.lang.reflect.Type useOwner;\n\n    private final java.lang.reflect.Type[] typeArguments;\n\n    /** \n     * Constructor\n     * @param raw type\n     * @param useOwner owner type to use, if any\n     * @param typeArguments formal type arguments\n     */\nprivate ParameterizedTypeImpl(java.lang.Class<?> raw ,java.lang.reflect.Type useOwner ,java.lang.reflect.Type[] typeArguments) {\n        this.java.lang.Class<?> = java.lang.Class<?>;\n        this.java.lang.reflect.Type = java.lang.reflect.Type;\n        this.java.lang.reflect.Type[] = java.lang.reflect.Type[];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type getRawType() {\n        return java.lang.Class<?>;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type getOwnerType() {\n        return java.lang.reflect.Type;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.reflect.Type[] getActualTypeArguments() {\n        return java.lang.reflect.Type[].clone();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this);\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public boolean equals(java.lang.Object obj) {\n        return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.ParameterizedType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(java.lang.Object)))));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.SuppressWarnings(value = \"deprecation\")\n    @java.lang.Override\n    public int hashCode() {\n        int int = 71 << 4;\n        int |= java.lang.Class<?>.hashCode();\n        int <<= 4;\n        int |= org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.reflect.Type);\n        int <<= 8;\n        int |= java.util.Arrays.java.util.Arrays.hashCode(java.lang.reflect.Type[]);\n        return int;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:146","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.text.StrSubstitutor:869","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.event.EventListenerSupport<L>.this(java.lang.Class<L>, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","position":"org.apache.commons.lang3.event.EventListenerSupport:122","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Method == null) {\n    java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:371","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.SystemUtils:1350","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5558","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int == 1) && (int <= (org.apache.commons.lang3.StringUtils.int))) {\n    return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.charAt(0));\n} ","position":"org.apache.commons.lang3.StringUtils:5311","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","threshold":"threshold","n":"j"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.Math.(java.lang.Math.min(int, int)) + 1","position":"org.apache.commons.lang3.StringUtils:6926","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.java.lang.Math.min(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:6942","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int--) > 0) {\n    char char = java.lang.CharSequence.charAt(int++);\n    char char = java.lang.CharSequence.charAt(int++);\n    if (char == char) {\n        continue;\n    } \n    if (!boolean) {\n        return false;\n    } \n    if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:196","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) > 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2397","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(org.apache.commons.lang3.text.StrBuilder.char[], 0, char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:680","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:795","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"priorVariables":"nextTrace"},"name":"add","transplant":{"sourceCode":"java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.text.StrSubstitutor:833","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)])","position":"org.apache.commons.lang3.exception.ExceptionUtils:527","type":"CtAssignmentImpl"},"status":0},{"failures":[8,9],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 5","position":"org.apache.commons.lang3.time.FastDatePrinter:1187","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:6555","type":"CtReturnImpl"},"status":-1},{"failures":[10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean[][int] = boolean[][int]","position":"org.apache.commons.lang3.ArrayUtils:1582","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, char[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1214","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method.invoke(null, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:295","type":"CtReturnImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"variableMapping":{"nextStrategy":"nextStrategy"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.time.FastDateParser.Strategy = null","position":"org.apache.commons.lang3.time.FastDateParser:155","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:164","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'E' :\n    return new boolean[]{ false , true , true , true };","position":"org.apache.commons.lang3.Conversion:195","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:370","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.lang3.time.FastDatePrinter:334","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.exception.ExceptionUtils:651","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean == false) {\n    int = -1;\n} else {\n    int = +1;\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:591","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.StringUtils:2074","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + ((int)((long ^ (long >> 32))))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:782","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object[][int]) == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1964","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (31 * int) + (char[][int])","position":"org.apache.commons.lang3.text.StrBuilder:2717","type":"CtAssignmentImpl"},"status":-2},{"failures":[130],"variableMapping":{"value":"j"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.mutable.MutableInt:118","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][0] = int","position":"org.apache.commons.lang3.StringUtils:6799","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int < 0) || (int > org.apache.commons.lang3.text.StrBuilder.(length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:415","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.length();\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int));\n    java.lang.String.getChars(0, int, char[], int);\n    int += int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtIfImpl"},"status":-2},{"failures":[10,11],"variableMapping":{"j":"j"},"name":"add","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1689","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = boolean[][int]","position":"org.apache.commons.lang3.ArrayUtils:1581","type":"CtAssignmentImpl"},"status":-1},{"transformationPoint":"org.apache.commons.lang3.reflect.MemberUtils:103","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrSubstitutor:679","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:2835","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1663","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:817","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.CharSet:226","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"lhs"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.Fraction:845","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, false, null, java.lang.String[])","position":"org.apache.commons.lang3.builder.EqualsBuilder:271","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","position":"org.apache.commons.lang3.Conversion:1042","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:361","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup<?>, org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrMatcher, char, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher)","position":"org.apache.commons.lang3.text.StrSubstitutor:358","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean && (!boolean)) && (!boolean)","position":"org.apache.commons.lang3.math.NumberUtils:1442","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:759","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:394","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:6902","type":"CtLocalVariableImpl"},"status":0},{"transformationPoint":"org.apache.commons.lang3.ArrayUtils:3076","failures":[131,132],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{"this":"this","padStr":"fieldName","org.apache.commons.lang3.StringUtils.SPACE":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5553","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotBlank(java.lang.String), \"The field name must not be blank/empty\")","position":"org.apache.commons.lang3.reflect.FieldUtils:86","type":"CtInvocationImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:6416","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"this":"replaceStr","value":"size"},"name":"add","transplant":{"sourceCode":"return java.lang.String.append(java.lang.String.valueOf(int))","position":"org.apache.commons.lang3.text.StrBuilder:809","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher, java.lang.String, 0, int, -1)","position":"org.apache.commons.lang3.text.StrBuilder:1932","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((boolean[] == null) || (boolean[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:894","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:898","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(double[])) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(double[]))) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5890","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} else if (double[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(double[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3966","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case java.util.Calendar.int :\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1727","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(float[][int], float[][int])","position":"org.apache.commons.lang3.builder.EqualsBuilder:872","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDateParser:349","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final L L : java.util.List<L>) {\n    try {\n        java.io.ObjectOutputStream.writeObject(L);\n        java.util.ArrayList<L>.add(L);\n    } catch (final java.io.IOException java.io.IOException) {\n        java.io.ObjectOutputStream = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream());\n    }\n}","position":"org.apache.commons.lang3.event.EventListenerSupport:225","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, int, false)","position":"org.apache.commons.lang3.StringUtils:2724","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","position":"org.apache.commons.lang3.text.StrTokenizer:760","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.notEqual(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:278","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>, java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:100","type":"CtInvocationImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrBuilder:2893","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.StringBuffer.append('-')","position":"org.apache.commons.lang3.time.FastDatePrinter:1198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1491","type":"CtInvocationImpl"},"status":-1},{"failures":[256],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:6043","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (int[] != null) && ((int[].int) != 0)","position":"org.apache.commons.lang3.ArrayUtils:3622","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0)","position":"org.apache.commons.lang3.ArrayUtils:2524","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:1194","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double -= java.lang.Number.doubleValue()","position":"org.apache.commons.lang3.mutable.MutableDouble:189","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[] != null) && ((char[].int) == 0)) {\n    throw new java.lang.IllegalArgumentException(\"The chars array must not be empty\");\n} ","position":"org.apache.commons.lang3.RandomStringUtils:230","type":"CtIfImpl"},"status":0},{"failures":[257],"variableMapping":{"dstPos":"dstPos","nBytes":"srcPos"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:872","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final int int = 15 << int;\n    byte = ((byte)((byte & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:1014","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.Class<?>)","position":"org.apache.commons.lang3.builder.ToStringStyle:1590","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:462","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"return java.lang.Integer[]","position":"org.apache.commons.lang3.ArrayUtils:716","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Integer[]","position":"org.apache.commons.lang3.ArrayUtils:714","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = ((org.apache.commons.lang3.time.FastDateFormat)(java.lang.Object))","position":"org.apache.commons.lang3.time.FastDateFormat:566","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(T)","position":"org.apache.commons.lang3.ObjectUtils:616","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:213","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.mutable.MutableByte:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((float)(double))","position":"org.apache.commons.lang3.mutable.MutableDouble:221","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append('?')","position":"org.apache.commons.lang3.reflect.TypeUtils:1808","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType()","position":"org.apache.commons.lang3.reflect.TypeUtils:529","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.ArrayUtils:1752","type":"CtLocalVariableImpl"},"status":-2},{"failures":[258,259,260,261,262,263,264,265,266],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((char) != (char)) {\n    java.lang.StringBuilder.append('-');\n    java.lang.StringBuilder.append(char);\n} ","position":"org.apache.commons.lang3.CharRange:242","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int)).append(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4531","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"dateStyle":"dateStyle","timeStyle":"dateStyle","locale":"locale"},"name":"add","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FormatCache.MultipartKey org.apache.commons.lang3.time.FormatCache.MultipartKey = new org.apache.commons.lang3.time.FormatCache.MultipartKey(java.lang.Integer , java.lang.Integer , java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:191","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache<F>.org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer, java.lang.Integer, java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:124","type":"CtLocalVariableImpl"},"status":-2},{"failures":[267,268,269,260,261],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1640","type":"CtReturnImpl"},"status":-1},{"failures":[270],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:826","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:820","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256)","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((int * 16))","position":"org.apache.commons.lang3.StringUtils:3816","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1096","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) || ((java.lang.reflect.Type instanceof java.lang.Class<?>) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1336","type":"CtReturnImpl"},"status":0},{"transformationPoint":"org.apache.commons.lang3.StringUtils:1117","failures":[271,272],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[273],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:634","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2098","type":"CtIfImpl"},"status":-1},{"failures":[266],"variableMapping":{"prefix":"duration"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n    } \n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:202","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Member java.lang.reflect.Member = ((java.lang.reflect.Member)(java.lang.reflect.AccessibleObject))","position":"org.apache.commons.lang3.reflect.MemberUtils:58","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"F = org.apache.commons.lang3.time.FormatCache<F>.createInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:82","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return !org.apache.commons.lang3.BooleanUtils.(org.apache.commons.lang3.BooleanUtils.isFalse(java.lang.Boolean))","position":"org.apache.commons.lang3.BooleanUtils:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4101","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.builder.EqualsBuilder:397","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1450","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"foundDigit":"fieldSeparatorAtEnd","hasDecPoint":"fieldSeparatorAtEnd","hasExp":"fieldSeparatorAtEnd"},"name":"replace","transplant":{"sourceCode":"return (boolean && (!boolean)) && (!boolean)","position":"org.apache.commons.lang3.math.NumberUtils:1442","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1936","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((java.lang.String == null) || (java.lang.String == null)) || (java.lang.String == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2481","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.substring(0, (int - 3))) + java.lang.String","position":"org.apache.commons.lang3.StringUtils:6411","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.ObjectUtils:830","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 14 :\n    return '7';","position":"org.apache.commons.lang3.Conversion:658","type":"CtCaseImpl"},"status":-2},{"failures":[274],"variableMapping":{"length":"size","index":"endIndex"},"name":"add","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:5192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2127","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(false)","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:215","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n    throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:139","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:538","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\")","position":"org.apache.commons.lang3.StringUtils:6398","type":"CtThrowImpl"},"status":-2},{"failures":[275,276,277,278],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(\"float\", \"F\")","position":"org.apache.commons.lang3.ClassUtils:122","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Date)(java.lang.Object)), java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDatePrinter:382","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Calendar)(java.lang.Object)), java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDatePrinter:384","type":"CtReturnImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":156,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":269,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":245,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":247,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":241,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":244,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":12,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":15,"org.apache.commons.lang3.StringUtilsTest.testDifference_StringString":9,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":152,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":52,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":180,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":163,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":77,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":80,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":270,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":35,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":34,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":59,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":225,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":136,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":79,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":188,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":138,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":276,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":2,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":220,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":56,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":93,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":189,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":84,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":272,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":177,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":69,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":6,"org.apache.commons.lang3.ConversionTest.testHexToByte":257,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":249,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":234,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":238,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":21,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":153,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":124,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":28,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":100,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":221,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringString":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":228,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":60,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":128,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":182,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":78,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloat":4,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":209,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":23,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":186,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":240,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":86,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":42,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":76,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":185,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":18,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":267,"org.apache.commons.lang3.StringUtilsTest.testRemove_String":262,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":226,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":253,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":99,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":175,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":63,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_StringInt":271,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":31,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":120,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":48,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":26,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":223,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":141,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":198,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":130,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":24,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringString":263,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":33,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":97,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":14,"org.apache.commons.lang3.ArrayUtilsTest.testReverseBoolean":11,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":194,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":216,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":68,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":252,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":243,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":173,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":231,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":206,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":268,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":139,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":40,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":87,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_long":132,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":19,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":266,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":30,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":215,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":201,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":227,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":70,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":145,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":211,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":107,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":133,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":230,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":248,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":224,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":261,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":204,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":62,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":115,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":113,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":137,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":167,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":256,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":135,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":101,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":212,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":265,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":170,"org.apache.commons.lang3.ArrayUtilsTest.testReverseBooleanRange":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":237,"org.apache.commons.lang3.LocaleUtilsTest.testLang865":0,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":232,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":218,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":195,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":39,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":148,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":172,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringStringInt":264,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":122,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":200,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":94,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":239,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":202,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":214,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":91,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":151,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":17,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":203,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":121,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":149,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":275,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":171,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":233,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":258,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":117,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":66,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":222,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":161,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":125,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":144,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":83,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":154,"org.apache.commons.lang3.ArrayUtilsTest.testToString":255,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":142,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":16,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":273,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":41,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":168,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":49,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":108,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":236,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":277,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":246,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":184,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":165,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":274,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":235,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":143,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":109,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":116,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":54,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":259,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":205,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":181,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":157,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":72,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":27,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":187,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":73,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":119,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":90,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":192,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumInt":1,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":46,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":229,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":162,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":140,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":44,"org.apache.commons.lang3.time.FastDateParserTest.testParses":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":242,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":191,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":96,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":71,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":217,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":102,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":208,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":92,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":146,"org.apache.commons.lang3.ClassUtilsTest.testGetClassRawPrimitives":278,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":250,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":210,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":51,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":74,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":254,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":105,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":106,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":89,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":104,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":260,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":207,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":85,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":251,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":166}}]
