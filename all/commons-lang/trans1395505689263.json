[{"position":"org.apache.commons.lang3.Conversion:980","failures":[0],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:913","failures":[1],"status":-1,"binaryOperator":"(int * 4) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:76","sourceCode":"T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:101","sourceCode":"T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"result"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:224","sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.max(double, double);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:90","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(double, double), double)","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2783","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:524","sourceCode":"for (int int = int ; (--int) >= 0 ; ) {\n    final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.List<java.lang.String>;\n    if (int != 0) {\n        java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n        org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n    } \n    if (int == (int - 1)) {\n        java.util.List<java.lang.String>.add(java.lang.Throwable[][int].toString());\n    } else {\n        java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())));\n    }\n    for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n        java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"startIndex":"count","endIndex":"count"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1712","sourceCode":"throw new java.lang.IllegalArgumentException(\"Need at least 16 bytes for UUID\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:520","sourceCode":"throw new java.util.NoSuchElementException()","type":"CtThrowImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1628","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1331","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"srcPos","shift":"i","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:755","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int * 2;\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n        continue;\n    } \n    boolean = false;\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:772","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:264","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:467","sourceCode":"return int","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:146","sourceCode":"(this.float)--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:189","sourceCode":"this.float -= java.lang.Number.floatValue()","type":"CtOperatorAssignmentImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:127","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())));\n} ","type":"CtIfImpl"},"failures":[25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"methodName"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1048","sourceCode":"boolean ^= boolean","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1393","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"foundDigit","element":"foundDigit"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1858","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1010","failures":[],"status":0,"binaryOperator":"(byte[][int]) > byte","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:538","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","type":"CtReturnImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numeric":"numeric","this":"this"}},{"position":"org.apache.commons.lang3.CharRange:188","failures":[29],"status":-1,"binaryOperator":"((char) <= (org.apache.commons.lang3.CharRange.char))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6734","sourceCode":"throw new java.lang.IllegalArgumentException(\"Strings must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:494","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\")","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BitField:153","sourceCode":"return (int & (~int)) | ((int << int) & int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","sourceCode":"if (int != 0) {\n    return int;\n} ","type":"CtIfImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"_mask":"consumed","holder":"consumed","_shift_count":"consumed","value":"consumed"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:584","sourceCode":"if ((java.lang.String == null) && (java.lang.String == null)) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:480","sourceCode":"if ((int > 8) || ((int == 8) && (char > '7'))) {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exp":"str","dec":"str","str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.CharSet:189","sourceCode":"int += 3","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:218","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pos":"numerator"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5000","sourceCode":"int int = (java.lang.String.length()) - 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:339","sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring((int + 1)))","type":"CtLocalVariableImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:618","sourceCode":"final char char = java.lang.String.charAt(4)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:463","sourceCode":"final char char = java.lang.String.charAt(int)","type":"CtLocalVariableImpl"},"failures":[51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:140","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return 0;\n} ","type":"CtIfImpl"},"failures":[53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:138","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"}\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:861","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:160","sourceCode":"this.java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:182","sourceCode":"java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"externalExecutor":"executor"}},{"position":"org.apache.commons.lang3.math.Fraction:186","failures":[55,56,57,50],"status":-1,"binaryOperator":"(int * ((long)(int)))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:155","sourceCode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1663","sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"date2":"date","date1":"date"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:906","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.AnnotationUtils:152","failures":[59,60],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":39,"org.apache.commons.lang3.ConversionTest.testHexToLong":1,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":35,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":38,"org.apache.commons.lang3.mutable.MutableFloatTest.testSubtractValueObject":24,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":37,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":5,"org.apache.commons.lang3.text.StrTokenizerTest.test1":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":31,"org.apache.commons.lang3.text.StrTokenizerTest.test3":16,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldNameValueSeparator":27,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":46,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":49,"org.apache.commons.lang3.text.StrTokenizerTest.test2":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":45,"org.apache.commons.lang3.text.StrTokenizerTest.test8":20,"org.apache.commons.lang3.text.StrTokenizerTest.test5":18,"org.apache.commons.lang3.text.StrTokenizerTest.test4":17,"org.apache.commons.lang3.text.StrTokenizerTest.test7":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":21,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":40,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":41,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":60,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":47,"org.apache.commons.lang3.ConversionTest.testHexToShort":0,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":2,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":50,"org.apache.commons.lang3.math.FractionTest.testGets":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":36,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":52,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_Boolean_int_int_int":23,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":34,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":59,"org.apache.commons.lang3.math.FractionTest.testInvert":30,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":57,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":48,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":54,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":33,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":13,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":12,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":26,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":10,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":43,"org.apache.commons.lang3.math.FractionTest.testConversions":55,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":22,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":28,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":58,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":3,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":44}}]
