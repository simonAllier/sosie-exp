[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return short[].clone()","position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.Conversion:1233","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final short short : short[]) {\n    final java.lang.Short java.lang.Short = java.lang.Short.java.lang.Short.valueOf(short);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Short);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Short, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5449","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    java.lang.reflect.Field.setAccessible(true);\n} else {\n    return null;\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:173","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.FieldUtils:214","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.long[]","position":"org.apache.commons.lang3.ArrayUtils:3051","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return char < 128","position":"org.apache.commons.lang3.CharUtils:403","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:928","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.CharSetUtils:225","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1060","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(\"yyyy-MM-dd\")","position":"org.apache.commons.lang3.time.DateFormatUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(int[])","position":"org.apache.commons.lang3.math.NumberUtils:961","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:225","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean == false) {\n    throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.Validate.java.lang.String);\n} ","position":"org.apache.commons.lang3.Validate:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'b' :","position":"org.apache.commons.lang3.Conversion:185","type":"CtCaseImpl"},"status":-2},{"failures":[0],"variableMapping":{"cost":"cost","srcClass":"destClass"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<?> == null) {\n    float += 1.5F;\n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:154","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isInterface()) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    float += 0.25F;\n    break;\n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:138","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n    java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n} ","position":"org.apache.commons.lang3.ClassUtils:208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1093","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.HashCodeBuilder:867","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Double.java.lang.Double.doubleToLongBits(double))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:677","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:3433","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"on\", \"off\")","position":"org.apache.commons.lang3.BooleanUtils:849","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:357","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:829","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} else if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6906","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1511","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?>[][int] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>[][int]);\n}","position":"org.apache.commons.lang3.ClassUtils:737","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = java.lang.Character.java.lang.Character.toChars(int)","position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:110","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'F' :\n    return new boolean[]{ true , true , true , true };","position":"org.apache.commons.lang3.Conversion:258","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy> = new java.util.ArrayList<org.apache.commons.lang3.time.FastDateParser.Strategy>()","position":"org.apache.commons.lang3.time.FastDateParser:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double","position":"org.apache.commons.lang3.math.Fraction:287","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"SunOS\")","position":"org.apache.commons.lang3.SystemUtils:1103","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparator(\", \")","position":"org.apache.commons.lang3.AnnotationUtils:63","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(\"[\")","position":"org.apache.commons.lang3.AnnotationUtils:64","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:273","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return (java.lang.Class<?> == null) || (!(java.lang.Class<?>.isPrimitive()));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:358","type":"CtIfImpl"},"status":-2},{"failures":[1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.charAt((int - 1))) == (org.apache.commons.lang3.CharUtils.char)) {\n    int--;\n} ","position":"org.apache.commons.lang3.StringUtils:5013","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = int * int","position":"org.apache.commons.lang3.StringUtils:5136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:986","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)","position":"org.apache.commons.lang3.builder.ToStringStyle:909","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:670","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:1113","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (int >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1330","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int != int) {\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n    java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int));\n    int = int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1811","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final T T : T[]) {\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ObjectUtils:573","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")","position":"org.apache.commons.lang3.math.Fraction:253","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int))","position":"org.apache.commons.lang3.Conversion:663","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Class<?> != null) && (java.lang.Class<?>.isPrimitive())) {\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.ClassUtils:711","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:712","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n    throw new java.lang.IllegalArgumentException(\"Child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:139","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long, org.apache.commons.lang3.time.DurationFormatUtils.java.lang.String, false)","position":"org.apache.commons.lang3.time.DurationFormatUtils:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\")","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:669","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause())","position":"org.apache.commons.lang3.ObjectUtils:634","type":"CtThrowImpl"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10],"variableMapping":{"length":"k","index":"v"},"name":"replace","transplant":{"sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}","position":"org.apache.commons.lang3.math.Fraction:596","type":"CtWhileImpl"},"status":-1},{"failures":[11,12,13,14,15,16,17,18],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + (java.lang.Object.hashCode())","position":"org.apache.commons.lang3.builder.HashCodeBuilder:844","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"static class SyncAvoid {\n    /** \n     * Unmodifiable list of available locales.\n     */\nprivate static final java.util.List<java.util.Locale> AVAILABLE_LOCALE_LIST;\n\n    /** \n     * Unmodifiable set of available locales.\n     */\nprivate static final java.util.Set<java.util.Locale> AVAILABLE_LOCALE_SET;\n\n    static {\n        final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(java.util.Arrays.java.util.Arrays.asList(java.util.Locale.java.util.Locale.getAvailableLocales()));\n        org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n        org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.Set<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableSet(new java.util.HashSet<java.util.Locale>(java.util.List<java.util.Locale>));\n    }\n}","position":"org.apache.commons.lang3.LocaleUtils:317","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.reflect.TypeUtils:1743","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((java.lang.String.length()) * 2))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:411","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final long long = ((long)(org.apache.commons.lang3.math.Fraction.int)) * ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:893","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case java.util.Calendar.int :\n    case java.util.Calendar.int :\n    case java.util.Calendar.int :\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    case java.util.Calendar.int :\n        long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n        break;\n    case java.util.Calendar.int :\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"The fragment \" + int) + \" is not supported\"));\n}","position":"org.apache.commons.lang3.time.DateUtils:1708","type":"CtSwitchImpl"},"status":-2},{"failures":[19],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 seconds\", \"\");\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:187","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:182","type":"CtAssignmentImpl"},"status":-1},{"failures":[20,21,22,23,24,25,26],"variableMapping":{"this":"this","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:398","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:846","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1191","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'm' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:495","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(E[])","position":"org.apache.commons.lang3.EnumUtils:225","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:775","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.Range<T> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:315","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.regex.Pattern","position":"org.apache.commons.lang3.time.FastDateParser:209","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 5 :\n    return 'a';","position":"org.apache.commons.lang3.Conversion:640","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1206","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean || boolean) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1425","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} ","position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) == 1) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:275","type":"CtIfImpl"},"status":-2},{"failures":[27,25],"variableMapping":{"str":"org.apache.commons.lang3.builder.DiffResult.DIFFERS_STRING"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.StringUtils:5640","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(\"%s %s %s\", org.apache.commons.lang3.builder.ToStringBuilder.build(), org.apache.commons.lang3.builder.DiffResult.java.lang.String, org.apache.commons.lang3.builder.ToStringBuilder.build())","position":"org.apache.commons.lang3.builder.DiffResult:193","type":"CtReturnImpl"},"status":-1},{"failures":[28,29],"binaryOperator":"java.lang.Math.(java.lang.Math.min(int[].int, int)) - 1","name":"math","position":"org.apache.commons.lang3.ArrayUtils:1753","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(((java.lang.Class<?>.getTypeParameters().int) == (java.lang.reflect.Type[].int)), \"invalid number of type parameters specified: expected %s, got %s\", java.lang.Class<?>.getTypeParameters().int, java.lang.reflect.Type[].int)","position":"org.apache.commons.lang3.reflect.TypeUtils:1502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Date.getTime()) != long) {\n    java.util.Date.setTime(long);\n    java.util.Calendar.setTime(java.util.Date);\n} ","position":"org.apache.commons.lang3.time.DateUtils:1001","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (java.lang.CharSequence == null) && (java.lang.CharSequence == null)","position":"org.apache.commons.lang3.StringUtils:7314","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.CharSequence == null) || ((java.lang.CharSequence.length()) == 0)","position":"org.apache.commons.lang3.StringUtils:219","type":"CtReturnImpl"},"status":-2},{"failures":[30,31,32],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:3081","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>.toArray(org.apache.commons.lang3.ArrayUtils.java.lang.String[])","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:336","type":"CtReturnImpl"},"status":-1},{"failures":[33,34,35,36,37],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + int) + 4) <= (java.lang.CharSequence.length())) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence((int + int), ((int + int) + 4));\n    try {\n        final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.toString(), 16);\n        java.io.Writer.write(((char)(int)));\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + java.lang.CharSequence) , java.lang.NumberFormatException);\n    }\n    return int + 4;\n} else {\n    throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: \\'\" + (java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length()))) + \"\\' due to end of CharSequence\"));\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:48","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:744","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3858","type":"CtIfImpl"},"status":-2},{"failures":[38],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4882","type":"CtAssignmentImpl"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('0')","position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:925","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:924","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    if (java.lang.StringBuilder == null) {\n        java.lang.StringBuilder = new java.lang.StringBuilder();\n        java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n    } \n    java.lang.StringBuilder.append(char);","position":"org.apache.commons.lang3.time.DurationFormatUtils:528","type":"CtCaseImpl"},"status":-2},{"failures":[60],"variableMapping":{"buffer":"buf"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(':')","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:143","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(T)","position":"org.apache.commons.lang3.Range:453","type":"CtInvocationImpl"},"status":-1},{"failures":[61],"variableMapping":{"str":"str","this":"this","separator":"str"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, -1, false)","position":"org.apache.commons.lang3.StringUtils:2693","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, null, -1, true)","position":"org.apache.commons.lang3.StringUtils:2895","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.Writer.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char)","position":"org.apache.commons.lang3.StringEscapeUtils:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2475","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.WordUtils:542","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2662","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","position":"org.apache.commons.lang3.reflect.TypeUtils:1375","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, \"typeVarAssigns is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1215","type":"CtInvocationImpl"},"status":-2},{"failures":[62],"variableMapping":{"p":"p","d":"d","this":"this","i":"cost"},"name":"add","transplant":{"sourceCode":"int[][int] = 1 + java.lang.Math.(java.lang.Math.min(java.lang.Math.java.lang.Math.min(int[][(int - 1)], int[][int]), int[][(int - 1)]))","position":"org.apache.commons.lang3.StringUtils:6961","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(((int[][(int - 1)]) + 1), ((int[][int]) + 1)), ((int[][(int - 1)]) + int))","position":"org.apache.commons.lang3.StringUtils:6804","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Float.float","position":"org.apache.commons.lang3.math.NumberUtils:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float","position":"org.apache.commons.lang3.ObjectUtils:915","type":"CtReturnImpl"},"status":-2},{"failures":[63,64,65,66,67,68],"variableMapping":{"size":"fe"},"name":"replace","transplant":{"sourceCode":"int += 4","position":"org.apache.commons.lang3.text.StrBuilder:1582","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:426","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{"seconds":"comparison"},"name":"add","transplant":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:300","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:895","type":"CtAssignmentImpl"},"status":0},{"failures":[69],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readStaticField(java.lang.Class<?>, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:275","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(java.lang.Class<?>, java.lang.String, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:319","type":"CtReturnImpl"},"status":-1},{"failures":[70],"variableMapping":{"str":"str"},"name":"replace","transplant":{"sourceCode":"final char char = java.lang.String.charAt(4)","position":"org.apache.commons.lang3.BooleanUtils:620","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char char = java.lang.String.charAt(0)","position":"org.apache.commons.lang3.StringUtils:5692","type":"CtLocalVariableImpl"},"status":-1},{"failures":[71],"variableMapping":{"length":"nBools","index":"src"},"name":"replace","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:5192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (int >> int)) != 0;\n}","position":"org.apache.commons.lang3.Conversion:1592","type":"CtForImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, boolean[])","position":"org.apache.commons.lang3.builder.ToStringStyle:1404","type":"CtInvocationImpl"},"status":0},{"failures":[72,69,73,74,75],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:150","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.FieldUtils:176","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"str","defaultStr":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2174","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, 1)","position":"org.apache.commons.lang3.ArrayUtils:4564","type":"CtLocalVariableImpl"},"status":-2},{"failures":[76],"name":"returnValue","position":"org.apache.commons.lang3.CharSet:251","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[])","position":"org.apache.commons.lang3.ArrayUtils:5802","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:864","type":"CtInvocationImpl"},"status":-2},{"failures":[77,78,79,80,81,82],"variableMapping":{"element":"between"},"name":"add","transplant":{"sourceCode":"if (boolean) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:981","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName()","position":"org.apache.commons.lang3.SerializationUtils:321","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:662","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.mutable.MutableShort:222","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.CharSequence.toString().toLowerCase()","position":"org.apache.commons.lang3.StringUtils:7037","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1699","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(boolean[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5944","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"threshold":"searchChar","m":"start","n":"start"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    return int <= int ? int : -1;\n} else if (int == 0) {\n    return int <= int ? int : -1;\n} ","position":"org.apache.commons.lang3.StringUtils:6906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence instanceof java.lang.String) {\n    return ((java.lang.String)(java.lang.CharSequence)).lastIndexOf(int, int);\n} else {\n    final int int = java.lang.CharSequence.length();\n    if (int < 0) {\n        return -1;\n    } \n    if (int >= int) {\n        int = int - 1;\n    } \n    for (int int = int ; int >= 0 ; --int) {\n        if ((java.lang.CharSequence.charAt(int)) == int) {\n            return int;\n        } \n    }\n    return -1;\n}","position":"org.apache.commons.lang3.CharSequenceUtils:117","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"size":"size"},"name":"add","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:207","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.text.StrBuilder:360","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:519","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:529","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long = (long & (~long)) | long","position":"org.apache.commons.lang3.Conversion:1055","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + (boolean ? 0 : 1)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:571","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"int < 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.ArrayUtils:1822","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:266","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","position":"org.apache.commons.lang3.ArrayUtils:5725","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(float)","position":"org.apache.commons.lang3.builder.ToStringStyle:830","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.SplitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.org.apache.commons.lang3.time.StopWatch.SplitState)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:382","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY":"result"},"name":"replace","transplant":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.ArrayUtils:2990","type":"CtReturnImpl"},"status":0},{"failures":[83,84],"binaryOperator":"java.lang.Math.(java.lang.Math.min(char[].int, int)) - 1","name":"math","position":"org.apache.commons.lang3.ArrayUtils:1648","type":"mutation","status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('-')","position":"org.apache.commons.lang3.time.FastDatePrinter:1198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:868","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"parser":"this","pos":"pos","source":"source"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parseObject(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateFormat:503","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateParser:299","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"fieldName":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1278","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.String java.lang.String = \"...\"","position":"org.apache.commons.lang3.StringUtils:6409","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.math.NumberUtils:488","type":"CtLocalVariableImpl"},"status":-2},{"failures":[106],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:675","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch already started. \")","position":"org.apache.commons.lang3.time.StopWatch:182","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"a":"b","b":"a","c":"b","this":"this"},"name":"add","transplant":{"sourceCode":"return java.lang.Math.max(java.lang.Math.max(double, double), double)","position":"org.apache.commons.lang3.math.NumberUtils:1281","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.max(double, double);\n}","position":"org.apache.commons.lang3.math.IEEE754rUtils:221","type":"CtIfImpl"},"status":-2},{"failures":[107,108],"binaryOperator":"(int + (java.lang.String.length()))","name":"math","position":"org.apache.commons.lang3.StringUtils:2486","type":"mutation","status":-1},{"failures":[109,110],"variableMapping":{"nullText":"str"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1971","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1494","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","position":"org.apache.commons.lang3.text.WordUtils:418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, java.lang.Object[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:952","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type, \"componentType is null\"))","position":"org.apache.commons.lang3.reflect.TypeUtils:1559","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:463","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1593","type":"CtReturnImpl"},"status":-2},{"failures":[111],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 3","position":"org.apache.commons.lang3.Conversion:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 5","position":"org.apache.commons.lang3.Conversion:124","type":"CtReturnImpl"},"status":-1},{"failures":[112,113,113,114,115,115,116,116,117,118,118,119,120,121,122,122,123,123,124,125,126,127,128,129,39,39,40,40,130,131,132,41,41,133,134,135,42,42,136,137,23,43,43,44,44,138,138,139,140,45,45,46,46,47,47,141,141,142,142,48,48,49,49,143,144,145,50,50,146,146,51,51,147,148,148,149,150,151,151,52,52,53,53,152,54,54,153,55,55,154,155,156,56,56,157,158,158,159,160,57,57,58,58,161,162,162,163,163,164,59,59],"variableMapping":{"cls":"upToClass"},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","position":"org.apache.commons.lang3.reflect.ConstructorUtils:295","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:672","type":"CtAssignmentImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":121,"org.apache.commons.lang3.ConversionTest.testIntToBinary":71,"org.apache.commons.lang3.time.StopWatchTest.testBadStates":106,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":85,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":87,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":127,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedField":74,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":93,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":55,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedStaticField":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":129,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":100,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":48,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":24,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":36,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":80,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":39,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":27,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":45,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":104,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":150,"org.apache.commons.lang3.RangeTest.testToString":60,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":79,"org.apache.commons.lang3.math.FractionTest.testFactory_double":6,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":115,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":54,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetDeclaredField":75,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":64,"org.apache.commons.lang3.StringUtilsTest.testChomp":1,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":111,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":116,"org.apache.commons.lang3.math.FractionTest.testMultiply":9,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":88,"org.apache.commons.lang3.ArrayUtilsTest.testReverseCharRange":84,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":153,"org.apache.commons.lang3.ArrayUtilsTest.testReverseIntRange":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":133,"org.apache.commons.lang3.CharSetTest.testEquals_Object":76,"org.apache.commons.lang3.math.FractionTest.testAdd":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":154,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":91,"org.apache.commons.lang3.math.FractionTest.testDivide":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":53,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":65,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":89,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":140,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":113,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":105,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":119,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":14,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":141,"org.apache.commons.lang3.StringUtilsTest.testReplaceChars_StringStringString":38,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":143,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadDeclaredNamedField":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":144,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":18,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringString":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":145,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":130,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":120,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":44,"org.apache.commons.lang3.StringUtilsTest.testCaseFunctions":70,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":56,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":15,"org.apache.commons.lang3.math.FractionTest.testSubtract":5,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":148,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":77,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":131,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":20,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":81,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":51,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":99,"org.apache.commons.lang3.math.FractionTest.testPow":4,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":90,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":35,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":19,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":30,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringStringString":108,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":117,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":135,"org.apache.commons.lang3.ArrayUtilsTest.testReverseInt":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":41,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":21,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":2,"org.apache.commons.lang3.math.FractionTest.testReduce":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":40,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":94,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":162,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":12,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":134,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":42,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteDeclaredNamedStaticField":73,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":123,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":114,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":152,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testLessThanFour":37,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":163}}]
