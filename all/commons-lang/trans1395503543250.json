[{"transplant":{"position":"org.apache.commons.lang3.Conversion:539","sourceCode":"return 'b'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:360","sourceCode":"return '0'","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1204","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.time.FastDateParser:452","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"binaryOperator":"(java.lang.String.length()) >= 3","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2893","sourceCode":"if (long < 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:723","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"n":"dstInit"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:254","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArraySeparator(java.lang.String)","type":"CtInvocationImpl"},"failures":[40,41,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:466","sourceCode":"if (int > 0) {\n    char char = 0;\n    for (int int = int ; int < (java.lang.String.length()) ; int++) {\n        char = java.lang.String.charAt(int);\n        if (char == '0') {\n            int++;\n        } else {\n            break;\n        }\n    }\n    final int int = (java.lang.String.length()) - int;\n    if ((int > 16) || ((int == 16) && (char > '7'))) {\n        return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n    } \n    if ((int > 8) || ((int == 8) && (char > '7'))) {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } \n    return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:611","sourceCode":"try {\n    if (int <= 16) {\n        final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n        if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n            return java.lang.Double;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","pfxLen":"numDecimals","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:1187","failures":[46],"status":-1,"binaryOperator":"0 == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:174","sourceCode":"if ((char[] == null) || ((char[].int) == 0)) {\n    return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n} ","type":"CtIfImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateIterator:1873","sourceCode":"return ((java.util.Calendar)(java.util.Calendar.clone()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:742","sourceCode":"return java.util.Calendar","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"spot":"rounded"}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:753","failures":[],"status":0,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BitField:43","sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:596","sourceCode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}","type":"CtWhileImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"count":"v","bit_pattern":"k"}},{"transplant":{"position":"org.apache.commons.lang3.Range:261","sourceCode":"return (java.util.Comparator<T>.compare(T, T)) == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:222","sourceCode":"return ((java.util.Comparator<T>.compare(T, T)) > (-1)) && ((java.util.Comparator<T>.compare(T, T)) < 1)","type":"CtReturnImpl"},"failures":[48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:477","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:544","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.StandardToStringStyle:431","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setNullText(java.lang.String)","type":"CtInvocationImpl"},"failures":[40,41,42,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:710","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:909","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.SystemUtils:1424","failures":[55],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:396","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:906","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","sourceCode":"if (java.lang.reflect.Method == null) {\n    java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:367","sourceCode":"java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"cls","method":"method","methodName":"methodName","this":"this","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:511","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Method)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:522","sourceCode":"hierarchyTraversal : while (java.util.Iterator<java.lang.Class<?>>.hasNext()) {\n    final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next();\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.Class<?>[]);\n    if (java.lang.reflect.Method == null) {\n        continue;\n    } \n    if (java.util.Arrays.java.util.Arrays.equals(java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) {\n        java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n        continue;\n    } \n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass());\n    for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n            continue hierarchyTraversal;\n        } \n    }\n    java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtWhileImpl"},"failures":[68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","sourceCode":"this.byte += byte","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:170","sourceCode":"this.byte -= java.lang.Number.byteValue()","type":"CtOperatorAssignmentImpl"},"failures":[70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:876","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object[], null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"style":"style"}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:649","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:494","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\")","type":"CtThrowImpl"},"failures":[71],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:140","sourceCode":"if (java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.min(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}","type":"CtIfImpl"},"failures":[72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"b","a":"a","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeLiteral:99","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.reflect.TypeLiteral) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:276","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"o2"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:998","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:288","sourceCode":"return ((int)(long ^ (long >>> 32)))","type":"CtReturnImpl"},"failures":[75],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:287","sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:287","sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName()).append('@')","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"appendable":"appendable","object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6936","sourceCode":"if (int > int) {\n    return -1;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:377","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"min":"denominator","max":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:601","sourceCode":"try {\n    if (int <= 7) {\n        final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n        if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n            return java.lang.Float;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:611","sourceCode":"try {\n    if (int <= 16) {\n        final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n        if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n            return java.lang.Double;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","numDecimals":"numDecimals","str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:264","sourceCode":"if ((char >= 56320) && (char <= 57343)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = char;\n        int--;\n        char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n    }\n} else if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:273","sourceCode":"if ((char >= 55296) && (char <= 56191)) {\n    if (int == 0) {\n        int++;\n    } else {\n        char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n        int--;\n        char[][int] = char;\n    }\n} else if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}","type":"CtIfImpl"},"failures":[77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","count":"count","random":"random","ch":"ch"}},{"transplant":{"position":"org.apache.commons.lang3.time.TextStrategy:580","sourceCode":"java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:131","sourceCode":"if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n    java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n} ","type":"CtIfImpl"},"failures":[78,1,2,3,79,80,4,5,6,7,8,9,10,11,81,82,83,12,13,14,15,16,17,18,84,19,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,20,111,112,113,114,115,116,117,118,119,120,121,21,22,23,122,123,24,25,26,27,28,29,30,31,124,125,126,32,33,34,35,36,37,38,127,39,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"regex":"regex"}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:237","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1550","sourceCode":"if (0 == int) {\n    return boolean[];\n} ","type":"CtIfImpl"},"failures":[154],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4560","sourceCode":"final int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:792","sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) < long) {\n        long = long[][int];\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1118","sourceCode":"if (((int - 1) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1627","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (short >> int)) != 0;\n}","type":"CtForImpl"},"failures":[155],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":62,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":105,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":35,"org.apache.commons.lang3.RangeTest.testRangeOfChars":49,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringAppendable":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":122,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":38,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":22,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":68,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":104,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":83,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":84,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":152,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":126,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":102,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":27,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":107,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":143,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":97,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":74,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":21,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":61,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":88,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":64,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":85,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":120,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":125,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":69,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":144,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":78,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":91,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":112,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":133,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":117,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":127,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":73,"org.apache.commons.lang3.math.FractionTest.testInvert":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":39,"org.apache.commons.lang3.RangeTest.testIntersectionWith":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":95,"org.apache.commons.lang3.ConversionTest.testShortToBinary":155,"org.apache.commons.lang3.RangeTest.testContains":53,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":79,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":138,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":11,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":32,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":96,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":51,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":108,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":20,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":24,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":54,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":137,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":109,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":90,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":140,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":37,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":48,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":142,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":134,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":146,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":132,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":131,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":81,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":2,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":30,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":94,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":139,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":130,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":33,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":34,"org.apache.commons.lang3.ConversionTest.testLongToBinary":154,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":100,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":110,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":141,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":19,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":148,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":93,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":28,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":149,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":121,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":128,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":145,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":0,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":29,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":45,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":135,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":147,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":23,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":57,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":136,"org.apache.commons.lang3.RangeTest.testContainsRange":52,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":5,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":3,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":99,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":42,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":82,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":111,"org.apache.commons.lang3.mutable.MutableDoubleTest.testHashCode":75,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":14,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":103,"org.apache.commons.lang3.mutable.MutableByteTest.testSubtractValueObject":70,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":153,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":124,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":13,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":56,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":59,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":31,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":10,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":8,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":58,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":63,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":12,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":47,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":18,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":26,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":6,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":101,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":118,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":87,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":25,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":119,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":40,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesNameAndVersion":55,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":115,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":150,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":43,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":46,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":17}}]
