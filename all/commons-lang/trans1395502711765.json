[{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:73","sourceCode":"new java.util.Locale(\"ja\" , \"JP\" , \"JP\")","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:77","sourceCode":"java.util.Locale = java.util.Locale.java.util.Locale.getDefault()","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.LocaleUtils:142","failures":[39,40],"status":-1,"binaryOperator":"int == 5","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:103","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cloned":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:201","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"failures":[41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:139","sourceCode":"return 15","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:870","sourceCode":"return int","type":"CtReturnImpl"},"failures":[42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:386","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1664","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1399","sourceCode":"int = (int * 4) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:544","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '9';\n} else {\n    return '8';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:524","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"failures":[54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:43","sourceCode":"int int = int + 1","type":"CtLocalVariableImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:744","sourceCode":"while (int < int) {\n    if (boolean) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n            if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n                org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n                int += int * 2;\n                int = org.apache.commons.lang3.text.StrBuilder.size();\n                continue;\n            } \n            boolean = false;\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    } else {\n        final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n            return int + int;\n        } \n        if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n            boolean = true;\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    }\n}","type":"CtWhileImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1787","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:639","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:935","sourceCode":"this.java.lang.String = \"1\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:121","sourceCode":"java.lang.String = java.util.regex.Matcher.group()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toProperString":"currentFormatField"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:899","sourceCode":"return 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:272","sourceCode":"return (byte) < byte ? -1 : (byte) == byte ? 0 : 1","type":"CtReturnImpl"},"failures":[107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1591","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.min(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:258","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}","type":"CtIfImpl"},"failures":[108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:138","sourceCode":"org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"}\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:124","sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.noneMatcher()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:82","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:512","sourceCode":"final java.util.Set<java.lang.reflect.Method> java.util.Set<java.lang.reflect.Method> = new java.util.LinkedHashSet<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:886","sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double[][int])) {\n    return java.lang.Double.double;\n} ","type":"CtIfImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:173","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n} ","type":"CtIfImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"str"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:45","sourceCode":"int >>= 1","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1559","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bit_pattern":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:96","sourceCode":"return T != null ? T : T","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:69","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"object":"object","defaultValue":"object"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:109","sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:247","sourceCode":"return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue())","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:555","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:558","sourceCode":"switch (java.lang.String.length()) {\n    case 1 :\n        {\n            final char char = java.lang.String.charAt(0);\n            if ((((char == 'y') || (char == 'Y')) || (char == 't')) || (char == 'T')) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            if ((((char == 'n') || (char == 'N')) || (char == 'f')) || (char == 'F')) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 2 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            if (((char == 'o') || (char == 'O')) && ((char == 'n') || (char == 'N'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            if (((char == 'n') || (char == 'N')) && ((char == 'o') || (char == 'O'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 3 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            final char char = java.lang.String.charAt(2);\n            if ((((char == 'y') || (char == 'Y')) && ((char == 'e') || (char == 'E'))) && ((char == 's') || (char == 'S'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            if ((((char == 'o') || (char == 'O')) && ((char == 'f') || (char == 'F'))) && ((char == 'f') || (char == 'F'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 4 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            final char char = java.lang.String.charAt(2);\n            final char char = java.lang.String.charAt(3);\n            if (((((char == 't') || (char == 'T')) && ((char == 'r') || (char == 'R'))) && ((char == 'u') || (char == 'U'))) && ((char == 'e') || (char == 'E'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n    case 5 :\n        {\n            final char char = java.lang.String.charAt(0);\n            final char char = java.lang.String.charAt(1);\n            final char char = java.lang.String.charAt(2);\n            final char char = java.lang.String.charAt(3);\n            final char char = java.lang.String.charAt(4);\n            if ((((((char == 'f') || (char == 'F')) && ((char == 'a') || (char == 'A'))) && ((char == 'l') || (char == 'L'))) && ((char == 's') || (char == 'S'))) && ((char == 'e') || (char == 'E'))) {\n                return java.lang.Boolean.java.lang.Boolean;\n            } \n            break;\n        }\n}","type":"CtSwitchImpl"},"failures":[112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:452","sourceCode":"if (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:327","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (int == 0)) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"position":"org.apache.commons.lang3.math.Fraction:595","inlineConstant":"int int = 0","failures":[114,41,115,116,117,118,119,120,121],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.reflect.ParameterizedTypeImpl:208","sourceCode":"int int = 71 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1436","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:496","sourceCode":"if (java.lang.reflect.Method != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testToString":68,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":110,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":19,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":51,"org.apache.commons.lang3.math.FractionTest.testFactory_double":117,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":103,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":61,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":37,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":6,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":48,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":21,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":54,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":11,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":12,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":108,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":65,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":3,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":0,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":88,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":92,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":10,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":100,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":99,"org.apache.commons.lang3.math.FractionTest.testPow":115,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":45,"org.apache.commons.lang3.math.FractionTest.testReduce":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":73,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":47,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":56,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":58,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":28,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":59,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":106,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":14,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":118,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":7,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":34,"org.apache.commons.lang3.text.StrTokenizerTest.test1":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":42,"org.apache.commons.lang3.text.StrTokenizerTest.test3":82,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":114,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":30,"org.apache.commons.lang3.text.StrTokenizerTest.test2":81,"org.apache.commons.lang3.math.FractionTest.testSubtract":116,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String":112,"org.apache.commons.lang3.text.StrTokenizerTest.test8":87,"org.apache.commons.lang3.math.FractionTest.testAdd":41,"org.apache.commons.lang3.text.StrTokenizerTest.test5":84,"org.apache.commons.lang3.text.StrTokenizerTest.test4":83,"org.apache.commons.lang3.text.StrTokenizerTest.test7":86,"org.apache.commons.lang3.text.StrTokenizerTest.test6":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":94,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":96,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":32,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":29,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":20,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":38,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":78,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":55,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":69,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":70,"org.apache.commons.lang3.math.FractionTest.testMultiply":120,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String":113,"org.apache.commons.lang3.ConversionTest.testByteToBinary":53,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":79,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":62,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":25,"org.apache.commons.lang3.mutable.MutableShortTest.testEquals":111,"org.apache.commons.lang3.math.NumberUtilsTest.testLang381":109,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":91,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullDate":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":50,"org.apache.commons.lang3.math.FractionTest.testDivide":119,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":15,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":26,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":1,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":40,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":27,"org.apache.commons.lang3.mutable.MutableByteTest.testCompareTo":107,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":97,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":49,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":64,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":39,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":66}}]
