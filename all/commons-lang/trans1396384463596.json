[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1053","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int])","position":"org.apache.commons.lang3.reflect.TypeUtils:1410","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.CompareToBuilder:326","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","position":"org.apache.commons.lang3.Conversion:513","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"daemonFlag":"java.lang.Boolean.FALSE"},"name":"replace","transplant":{"sourceCode":"return this.java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:161","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:362","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return this.long","position":"org.apache.commons.lang3.time.StopWatch:401","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:1211","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Object.notifyAll()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:420","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:480","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"index":"java.util.Calendar.YEAR"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\");\n} ","position":"org.apache.commons.lang3.StringEscapeUtils:395","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.time.DurationFormatUtils.Token.org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    while (int < 0) {\n        int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n        int -= 1;\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n    while (int < 0) {\n        int += 12;\n        int -= 1;\n    }\n    if ((!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) && (int != 0)) {\n        while (int != 0) {\n            int += 12 * int;\n            int = 0;\n        }\n    } \n} else {\n    if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n        int int = java.util.Calendar.get(java.util.Calendar.int);\n        if (int < 0) {\n            int -= 1;\n        } \n        while ((java.util.Calendar.get(java.util.Calendar.int)) != int) {\n            int += (java.util.Calendar.getActualMaximum(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int));\n            if (((java.util.Calendar instanceof java.util.GregorianCalendar) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == 29)) {\n                int += 1;\n            } \n            java.util.Calendar.add(java.util.Calendar.int, 1);\n            int += java.util.Calendar.get(java.util.Calendar.int);\n        }\n        int = 0;\n    } \n    while ((java.util.Calendar.get(java.util.Calendar.int)) != (java.util.Calendar.get(java.util.Calendar.int))) {\n        int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n    int = 0;\n    while (int < 0) {\n        int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n        int -= 1;\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:315","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:2982","type":"CtIfImpl"},"status":-2},{"failures":[23],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence, java.lang.CharSequence)) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:7394","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence, java.lang.CharSequence)) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:7237","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.reflect.TypeUtils:565","type":"mutation","return":"return false","status":0},{"failures":[],"binaryOperator":"((java.util.Calendar.get(java.util.Calendar.int)) % 100)","name":"removeConditional","position":"org.apache.commons.lang3.time.TwoDigitYearField:944","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char[] = new char[org.apache.commons.lang3.text.StrBuilder.length()]","position":"org.apache.commons.lang3.text.StrBuilder:250","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'd' :","position":"org.apache.commons.lang3.math.NumberUtils:556","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Conversion:766","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((T[] != null) && ((T[].int) > 0)) {\n    for (final java.lang.Object java.lang.Object : T[]) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object);\n    }\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1076","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.Range:435","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","position":"org.apache.commons.lang3.Conversion:201","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:420","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = ((int)(15 & (long >> int)));\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1398","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>[][int]","position":"org.apache.commons.lang3.reflect.MemberUtils:118","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.text.translate.AggregateTranslator(new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE()) , new org.apache.commons.lang3.text.translate.LookupTranslator(org.apache.commons.lang3.text.translate.EntityArrays.org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE()) , new org.apache.commons.lang3.text.translate.LookupTranslator(new java.lang.String[][]{ { \"\u0000\" , \"\" } , { \"\u0001\" , \"\" } , { \"\u0002\" , \"\" } , { \"\u0003\" , \"\" } , { \"\u0004\" , \"\" } , { \"\u0005\" , \"\" } , { \"\u0006\" , \"\" } , { \"\u0007\" , \"\" } , { \"\\b\" , \"\" } , { \"\u000b\" , \"\" } , { \"\\f\" , \"\" } , { \"\u000e\" , \"\" } , { \"\u000f\" , \"\" } , { \"\u0010\" , \"\" } , { \"\u0011\" , \"\" } , { \"\u0012\" , \"\" } , { \"\u0013\" , \"\" } , { \"\u0014\" , \"\" } , { \"\u0015\" , \"\" } , { \"\u0016\" , \"\" } , { \"\u0017\" , \"\" } , { \"\u0018\" , \"\" } , { \"\u0019\" , \"\" } , { \"\u001a\" , \"\" } , { \"\u001b\" , \"\" } , { \"\u001c\" , \"\" } , { \"\u001d\" , \"\" } , { \"\u001e\" , \"\" } , { \"\u001f\" , \"\" } , { \"￾\" , \"\" } , { \"￿\" , \"\" } }) , org.apache.commons.lang3.text.translate.NumericEntityEscaper.org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(127, 132) , org.apache.commons.lang3.text.translate.NumericEntityEscaper.org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(134, 159) , new org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover())","position":"org.apache.commons.lang3.StringEscapeUtils:135","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.event.EventListenerSupport:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[], java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:321","type":"CtReturnImpl"},"status":-2},{"failures":[24,25],"binaryOperator":"((E.ordinal()) % (java.lang.Long.int))","name":"math","position":"org.apache.commons.lang3.EnumUtils:273","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (37 * int) + (java.lang.Object.getClass().hashCode())","position":"org.apache.commons.lang3.Range:432","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime()","position":"org.apache.commons.lang3.time.DateUtils:860","type":"CtReturnImpl"},"status":-2},{"failures":[26],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")","position":"org.apache.commons.lang3.math.NumberUtils:455","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:975","type":"CtThrowImpl"},"status":-1},{"failures":[27],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.text.StrSubstitutor:419","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1619","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(int);\n    for (int int = 0 ; int < int ; int++) {\n        java.lang.StringBuilder.append(java.lang.String);\n    }\n    return java.lang.StringBuilder.toString();","position":"org.apache.commons.lang3.StringUtils:5149","type":"CtCaseImpl"},"status":-2},{"failures":[28],"variableMapping":{"t":"comparison","u":"comparison","v":"comparison"},"name":"replace","transplant":{"sourceCode":"int = (int - int) / 2","position":"org.apache.commons.lang3.math.Fraction:620","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:699","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.L = L","position":"org.apache.commons.lang3.tuple.MutablePair:90","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.CharSequenceUtils:75","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Illegal pattern character \\'\" + (java.lang.String.charAt(java.util.regex.Matcher.regionStart())))","name":"math","position":"org.apache.commons.lang3.time.FastDateParser:147","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:157","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:198","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String","position":"org.apache.commons.lang3.exception.ExceptionUtils:642","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.int = int","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:246","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int[][0]","position":"org.apache.commons.lang3.time.FastDatePrinter:185","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"cls"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    java.lang.Class<?> = java.lang.Class<?>.getComponentType();\n} ","position":"org.apache.commons.lang3.AnnotationUtils:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"Cannot locate field %s on %s\", java.lang.String, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.FieldUtils:556","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY"},"name":"replace","transplant":{"sourceCode":"return java.lang.String[]","position":"org.apache.commons.lang3.ArrayUtils:516","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Throwable == null) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:603","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:1904","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence[] == null) || ((java.lang.CharSequence[].int) <= 1)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:6593","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int[] = int[]","position":"org.apache.commons.lang3.StringUtils:6968","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String.substring(0, int))","position":"org.apache.commons.lang3.math.Fraction:350","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<E>, org.apache.commons.lang3.EnumUtils.java.lang.String)","position":"org.apache.commons.lang3.EnumUtils:307","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final T T : T[]) {\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5269","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"nBools":"comparison","srcPos":"comparison"},"name":"add","transplant":{"sourceCode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1587","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (double[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(double[][int], double[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:906","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>.getTypeParameters().int) > 0) {\n    java.lang.StringBuilder.append('<');\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder, \", \", java.lang.Class<?>.getTypeParameters());\n    java.lang.StringBuilder.append('>');\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1750","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.util.concurrent.TimeUnit == (java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit) ? 0 : 1","position":"org.apache.commons.lang3.time.DateUtils:1694","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Date iterator.<\/p>\n */\nstatic class DateIterator implements java.util.Iterator<java.util.Calendar> {\n    private final java.util.Calendar endFinal;\n\n    private final java.util.Calendar spot;\n\n    /** \n     * Constructs a DateIterator that ranges from one date to another.\n     * \n     * @param startFinal start date (inclusive)\n     * @param endFinal end date (inclusive)\n     */\nDateIterator(final java.util.Calendar startFinal ,final java.util.Calendar endFinal) {\n        java.lang.Object.super();\n        this.java.util.Calendar = java.util.Calendar;\n        java.util.Calendar = java.util.Calendar;\n        java.util.Calendar.add(java.util.Calendar.int, -1);\n    }\n\n    /** \n     * Has the iterator not reached the end date yet?\n     * \n     * @return <code>true<\/code> if the iterator has yet to reach the end date\n     */\n@java.lang.Override\n    public boolean hasNext() {\n        return java.util.Calendar.before(java.util.Calendar);\n    }\n\n    /** \n     * Return the next calendar in the iteration\n     * \n     * @return Object calendar for the next date\n     */\n@java.lang.Override\n    public java.util.Calendar next() {\n        if (java.util.Calendar.equals(java.util.Calendar)) {\n            throw new java.util.NoSuchElementException();\n        } \n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        return ((java.util.Calendar)(java.util.Calendar.clone()));\n    }\n\n    /** \n     * Always throws UnsupportedOperationException.\n     * \n     * @throws UnsupportedOperationException\n     * @see java.util.Iterator#remove()\n     */\n@java.lang.Override\n    public void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}","position":"org.apache.commons.lang3.time.DateUtils:1812","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:2964","type":"CtAssignmentImpl"},"status":-2},{"failures":[29,30],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_ARRAY"},"name":"replace","transplant":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:419","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.double[]","position":"org.apache.commons.lang3.ArrayUtils:634","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY":"result"},"name":"add","transplant":{"sourceCode":"return java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:794","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:3351","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>.toArray())","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:317","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final short[] short[] = new short[java.lang.Short[].int]","position":"org.apache.commons.lang3.ArrayUtils:3167","type":"CtLocalVariableImpl"},"status":-2},{"failures":[31,32],"variableMapping":{"str":"input"},"name":"replace","transplant":{"sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:595","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    return java.lang.System.(java.lang.System.nanoTime()) - (this.long);\n} ","position":"org.apache.commons.lang3.time.StopWatch:342","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((!(java.lang.reflect.AccessibleObject.isAccessible())) && java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isPublic(java.lang.reflect.Member.getModifiers()))) && org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(java.lang.reflect.Member.getDeclaringClass().getModifiers()))) {\n    try {\n        java.lang.reflect.AccessibleObject.setAccessible(true);\n        return true;\n    } catch (final java.lang.SecurityException java.lang.SecurityException) {\n    }\n} ","position":"org.apache.commons.lang3.reflect.MemberUtils:59","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.ClassUtils:970","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int++) == int) {\n    int = int;\n    boolean = false;\n} ","position":"org.apache.commons.lang3.StringUtils:3135","type":"CtIfImpl"},"status":-2},{"failures":[33],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(float[], float, 0)","position":"org.apache.commons.lang3.ArrayUtils:2748","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[], double, java.lang.Integer.int)","position":"org.apache.commons.lang3.ArrayUtils:2618","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:1075","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:507","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean[]","position":"org.apache.commons.lang3.ArrayUtils:3771","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:309","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:3011","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:253","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = int + int","position":"org.apache.commons.lang3.StringUtils:4532","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.StrBuilder:1580","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1377","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:978","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int -= 15","position":"org.apache.commons.lang3.time.DateUtils:1058","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 60","position":"org.apache.commons.lang3.time.DurationFormatUtils:303","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[34,35],"variableMapping":{"size":"count","length":"count","index":"count"},"name":"replace","transplant":{"sourceCode":"if ((int <= 0) || (int >= int)) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","position":"org.apache.commons.lang3.RandomStringUtils:311","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int++;\n    }\n}","position":"org.apache.commons.lang3.StringUtils:626","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring((int + (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:2423","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"bool":"bool","org.apache.commons.lang3.math.NumberUtils.INTEGER_ONE":"nullValue","org.apache.commons.lang3.math.NumberUtils.INTEGER_ZERO":"nullValue"},"name":"add","transplant":{"sourceCode":"return java.lang.Boolean.booleanValue() ? java.lang.Integer : java.lang.Integer","position":"org.apache.commons.lang3.BooleanUtils:430","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean == null) {\n    return java.lang.Integer;\n} ","position":"org.apache.commons.lang3.BooleanUtils:505","type":"CtIfImpl"},"status":-2},{"failures":[36],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","position":"org.apache.commons.lang3.text.StrBuilder:2787","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","position":"org.apache.commons.lang3.math.Fraction:223","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1520","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.io.File(java.lang.System.java.lang.System.getProperty(org.apache.commons.lang3.SystemUtils.java.lang.String))","position":"org.apache.commons.lang3.SystemUtils:1366","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class<T>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1007","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.time.FastDatePrinter org.apache.commons.lang3.time.FastDatePrinter = ((org.apache.commons.lang3.time.FastDatePrinter)(java.lang.Object))","position":"org.apache.commons.lang3.time.FastDatePrinter:532","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.DurationFormatUtils:491","type":"CtInvocationImpl"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\")\")","position":"org.apache.commons.lang3.AnnotationUtils:62","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1041","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[][(int + 1)] = char","position":"org.apache.commons.lang3.StringUtils:5146","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.SerializationUtils:79","type":"CtIfImpl"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,42,47,48,68,69,70,71,72,73,74,75,76,77,78,79],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:519","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final java.lang.String java.lang.String = java.lang.reflect.Field.getName();\n    if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)) {\n        try {\n            final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n            org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n        }\n    } \n}","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:520","type":"CtForEachImpl"},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,58,99,100,101,59,60,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,61,123,124,125,126,127,62,63,128,129,130,131,132,64,133,134,65,135,136,66,137,138,139,67,140,37,38,39,40,41,42,43,44,45,46,47,48,49,50,68,69,70,71,72,73,74,75,76,77,78,141,142,143,144,145,146,51,52,53,54,55,56,79,57,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>())","position":"org.apache.commons.lang3.builder.ToStringStyle:189","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    byte = byte[][int];\n    byte[][int] = byte[][int];\n    byte[][int] = byte;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1615","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\n    if (org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream != null) {\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close();\n    } \n} catch (final java.io.IOException java.io.IOException) {\n    throw new org.apache.commons.lang3.SerializationException(\"IOException on closing cloned object data InputStream.\" , java.io.IOException);\n}","position":"org.apache.commons.lang3.SerializationUtils:104","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:236","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY"},"name":"add","transplant":{"sourceCode":"return java.lang.String[]","position":"org.apache.commons.lang3.ArrayUtils:516","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:2522","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(L)","position":"org.apache.commons.lang3.event.EventListenerSupport:227","type":"CtInvocationImpl"},"status":-2},{"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append('<')","position":"org.apache.commons.lang3.reflect.TypeUtils:1751","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"status":-1},{"failures":[218],"binaryOperator":"(int + 1)","name":"math","position":"org.apache.commons.lang3.StringUtils:1768","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\")","position":"org.apache.commons.lang3.math.Fraction:148","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1622","type":"CtThrowImpl"},"status":0},{"failures":[219],"variableMapping":{"str":"separatorChars","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, false)","position":"org.apache.commons.lang3.StringUtils:3176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, java.lang.String, -1, false)","position":"org.apache.commons.lang3.StringUtils:2632","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"startInclusive":"out","endExclusive":"out"},"name":"add","transplant":{"sourceCode":"if (long == long) {\n    return long;\n} ","position":"org.apache.commons.lang3.RandomUtils:115","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:811","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"fromIndex":"pos"},"name":"replace","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.exception.ExceptionUtils:391","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.CharSet:197","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2952","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>(T[].int)","position":"org.apache.commons.lang3.ObjectUtils:572","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 'e'","position":"org.apache.commons.lang3.Conversion:527","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int & (~int)) | int","position":"org.apache.commons.lang3.Conversion:845","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Byte[].int) ; int++) {\n    byte[][int] = java.lang.Byte[][int].byteValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3236","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter()","position":"org.apache.commons.lang3.exception.ExceptionUtils:583","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.StringWriter java.io.StringWriter = new java.io.StringWriter(((java.lang.CharSequence.length()) * 2))","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:58","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (long < 0) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2896","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.Conversion:686","type":"CtReturnImpl"},"status":-2},{"failures":[220,221],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final char char : char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(char);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:660","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ false , true , true , true }","position":"org.apache.commons.lang3.Conversion:237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , true , false , false }","position":"org.apache.commons.lang3.Conversion:250","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"baseMessage","nullText":"baseMessage"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1494","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:129","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"newLineStr":"property","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"property"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.io.PrintStream.println(((\"Caught a SecurityException reading the system property \\'\" + java.lang.String) + \"\\'; the SystemUtils property value will default to null.\"))","position":"org.apache.commons.lang3.SystemUtils:1348","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1392","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:302","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:967","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:574","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.StrBuilder:1137","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n    boolean = false;\n} else {\n    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n}","position":"org.apache.commons.lang3.CharRange:287","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ClassUtils:991","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>[].int) == 0) {\n    return java.lang.Class<?>[];\n} ","position":"org.apache.commons.lang3.ClassUtils:732","type":"CtIfImpl"},"status":-2},{"failures":[222],"variableMapping":{"srcPos":"count","nShorts":"count"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int >= 0), \"Count cannot be negative.\")","position":"org.apache.commons.lang3.RandomUtils:63","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:121","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = long / (org.apache.commons.lang3.time.DateUtils.long)","position":"org.apache.commons.lang3.time.DurationFormatUtils:149","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2392","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"default :\n    java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()]);\n    org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition);","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:189","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '5';\n} else {\n    return '4';\n}","position":"org.apache.commons.lang3.Conversion:560","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrBuilder:1447","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.StringUtils:7022","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:971","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:623","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"excludeFieldNames":"tokens"},"name":"replace","transplant":{"sourceCode":"this.java.lang.String[] = null","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:648","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String[] = null","position":"org.apache.commons.lang3.text.StrTokenizer:460","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getVariablePrefixMatcher()","position":"org.apache.commons.lang3.text.StrSubstitutor:751","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()","position":"org.apache.commons.lang3.text.StrSubstitutor:754","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:744","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"private static class EventBindingInvocationHandler implements java.lang.reflect.InvocationHandler {\n    private final java.lang.Object target;\n\n    private final java.lang.String methodName;\n\n    private final java.util.Set<java.lang.String> eventTypes;\n\n    /** \n     * Creates a new instance of {@code EventBindingInvocationHandler}.\n     * \n     * @param target the target object for method invocations\n     * @param methodName the name of the method to be invoked\n     * @param eventTypes the names of the supported event types\n     */\nEventBindingInvocationHandler(final java.lang.Object target ,final java.lang.String methodName ,final java.lang.String[] eventTypes) {\n        this.java.lang.Object = java.lang.Object;\n        this.java.lang.String = java.lang.String;\n        this.java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.java.util.Arrays.asList(java.lang.String[]));\n    }\n\n    /** \n     * Handles a method invocation on the proxy object.\n     * \n     * @param proxy the proxy instance\n     * @param method the method to be invoked\n     * @param parameters the parameters for the method invocation\n     * @return the result of the method call\n     * @throws Throwable if an error occurs\n     */\n@java.lang.Override\n    public java.lang.Object invoke(final java.lang.Object proxy, final java.lang.reflect.Method method, final java.lang.Object[] parameters) throws java.lang.Throwable {\n        if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.reflect.Method.getName()))) {\n            if (org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.hasMatchingParametersMethod(java.lang.reflect.Method)) {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]);\n            } else {\n                return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, java.lang.String);\n            }\n        } \n        return null;\n    }\n\n    /** \n     * Checks whether a method for the passed in parameters can be found.\n     * \n     * @param method the listener method invoked\n     * @return a flag whether the parameters could be matched\n     */\nprivate boolean hasMatchingParametersMethod(final java.lang.reflect.Method method) {\n        return org.apache.commons.lang3.reflect.MethodUtils.(org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.reflect.Method.getParameterTypes())) != null;\n    }\n}","position":"org.apache.commons.lang3.event.EventUtils:82","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Throwable == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:387","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1483","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return java.lang.String.concat(java.lang.String);\n} else if (int < int) {\n    return java.lang.String.substring(0, int).concat(java.lang.String);\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return new java.lang.String(char[]).concat(java.lang.String);\n}","position":"org.apache.commons.lang3.StringUtils:5427","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 4 :\n    return '2';","position":"org.apache.commons.lang3.Conversion:638","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte[][int] = byte[][int]","position":"org.apache.commons.lang3.ArrayUtils:1617","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":145,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":44,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":41,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":74,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":197,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":186,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyDoubleEmptyArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":128,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":171,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":166,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":173,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":54,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":78,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":32,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":73,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":125,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":3,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":27,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":75,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":188,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":215,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":93,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":189,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":67,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyDoubleNull":29,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":193,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":126,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":64,"org.apache.commons.lang3.RandomUtilsTest.testNextBytes":222,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":114,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":164,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":96,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":219,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":62,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":81,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":149,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":216,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":100,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":199,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":31,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":40,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":57,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":111,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":174,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":221,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":14,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":1,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":121,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":132,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":134,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":63,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":86,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":109,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":187,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":172,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":170,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":92,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":117,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":169,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":135,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":123,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":101,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":4,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":79,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":141,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":15,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":107,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":157,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":201,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":120,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":207,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":33,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":68,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":108,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":147,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":208,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":210,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":212,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":127,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":83,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":190,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":143,"org.apache.commons.lang3.ArrayUtilsTest.testToString":176,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":150,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":195,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":194,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":191,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":53,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":118,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":162,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":18,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":99,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":72,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":137,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":151,"org.apache.commons.lang3.text.StrTokenizerTest.test8":185,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrChar":21,"org.apache.commons.lang3.text.StrTokenizerTest.test5":182,"org.apache.commons.lang3.text.StrTokenizerTest.test4":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":130,"org.apache.commons.lang3.text.StrTokenizerTest.test7":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":131,"org.apache.commons.lang3.text.StrTokenizerTest.test6":183,"org.apache.commons.lang3.text.StrTokenizerTest.test1":178,"org.apache.commons.lang3.text.StrTokenizerTest.test3":180,"org.apache.commons.lang3.text.StrTokenizerTest.test2":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":110,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":159,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":13,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":146,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":20,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":165,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":196,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":6,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":84,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":70,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":98,"org.apache.commons.lang3.HashSetvBitSetTest.testTimesExtractOrBitset":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":161,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":113,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":213,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":154,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars":218,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":115,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":155,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":177,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":203,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":51}}]
