[{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1645","sourceCode":"char char","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:70","sourceCode":"final char char = char","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:217","sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:145","sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1656","sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:773","sourceCode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}","type":"CtWhileImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"startPos","nBools":"startMatchLen"}},{"position":"org.apache.commons.lang3.text.WordUtils:89","failures":[33,34],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:193","sourceCode":"return java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4688","sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:219","sourceCode":"throw new java.lang.IllegalArgumentException(((\"The character \" + char) + \" is not in the range \\'0\\' - \\'9\\'\"))","type":"CtThrowImpl"},"failures":[36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:137","sourceCode":"throw new java.lang.IllegalArgumentException(\"The style must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:616","sourceCode":"throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:827","sourceCode":"throw new java.lang.ArithmeticException(\"The fraction to divide by must not be zero\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:520","sourceCode":"throw new java.util.NoSuchElementException()","type":"CtThrowImpl"},"failures":[40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:534","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:567","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String)","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:936","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:125","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:899","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:496","sourceCode":"if (java.lang.reflect.Method != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:567","sourceCode":"if ((int > (int + 2)) && (boolean[][(int + 2)])) {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return '3';\n    } else {\n        return '2';\n    }\n} else {\n    if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n        return '1';\n    } else {\n        return '0';\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:307","sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"srcPos","src":"src"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:651","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1197","sourceCode":"java.lang.StringBuffer.append('-')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:858","sourceCode":"java.lang.StringBuffer.append(boolean)","type":"CtInvocationImpl"},"failures":[78,79,80,57,81,82,83,84,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:173","sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:650","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:410","failures":[87,88],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:535","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:445","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"frames":"list","trace":"list"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:522","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:609","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], 0, char[].int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:398","sourceCode":"for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Throwable[][int].getClass())) {\n        return int;\n    } \n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:404","sourceCode":"for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n    if (java.lang.Class<?>.equals(java.lang.Throwable[][int].getClass())) {\n        return int;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"fromIndex":"length","throwables":"throwables","length":"fromIndex","type":"type"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:612","sourceCode":"if (int <= 16) {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:601","sourceCode":"try {\n    if (int <= 7) {\n        final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n        if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n            return java.lang.Float;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[43,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1017","sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 15)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1047","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n            if (int >= 15) {\n                int -= 15;\n            } \n            boolean = int > 7;\n            boolean = true;\n        } \n        break;\n    case java.util.Calendar.int :\n        if ((int[][0]) == (java.util.Calendar.int)) {\n            int = java.util.Calendar.get(java.util.Calendar.int);\n            if (int >= 12) {\n                int -= 12;\n            } \n            boolean = int >= 6;\n            boolean = true;\n        } \n        break;\n}","type":"CtSwitchImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:77","sourceCode":"if (((char == char) && (int != 0)) && (org.apache.commons.lang3.CharSet.contains(char))) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[127,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:840","sourceCode":"short = short[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:73","sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.min(float[][int], float)","type":"CtAssignmentImpl"},"failures":[129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:206","sourceCode":"org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:230","sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getPriority()) != null) {\n    java.lang.Thread.setPriority(org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority().intValue());\n} ","type":"CtIfImpl"},"failures":[130,131,132,133,134,135,136,137,138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":58,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":89,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":35,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":108,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":46,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":82,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":79,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":107,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfUncloneable":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":96,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":110,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":55,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":84,"org.apache.commons.lang3.time.DateUtilsTest.testRound":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":59,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":129,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":64,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":114,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":117,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":93,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":95,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":34,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":66,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":52,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":99,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":73,"org.apache.commons.lang3.RangeTest.testIntersectionWith":87,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadPriority":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":21,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":100,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":86,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":111,"org.apache.commons.lang3.RangeTest.testEqualsObject":88,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":135,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":69,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":112,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":14,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":72,"org.apache.commons.lang3.math.FractionTest.testReduce":2,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":19,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":9,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonTrue":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":98,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":74,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":78,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":71,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoNamingPattern":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":83,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_char":37,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":16,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":124,"org.apache.commons.lang3.CharUtilsTest.testToIntValue_Character":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":8,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":27,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":77,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":6,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":92,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":51,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":103,"org.apache.commons.lang3.math.FractionTest.testAbs":0,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":91,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":109,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":54,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadDaemonFalse":134,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":48,"org.apache.commons.lang3.ArrayUtilsTest.testToString":76,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoExHandler":133,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":56,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":81,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":53,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":3,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":61,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":10,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoPriority":132,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":125,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":26,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNoDaemonFlag":130,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadExHandler":136,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":15,"org.apache.commons.lang3.math.FractionTest.testDivide":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":7,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":12,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":62,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringString":127,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":113,"org.apache.commons.lang3.ObjectUtilsTest.testPossibleCloneOfUncloneable":38,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":24,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":18,"org.apache.commons.lang3.CharSetUtilsTest.testSqueeze_StringStringarray":128}}]
