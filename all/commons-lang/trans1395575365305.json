[{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:984","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1609","sourceCode":"int int = int < 0 ? 0 : int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:983","sourceCode":"final int int = 15 << int","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndexInclusive":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1062","sourceCode":"return float","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:120","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Float.NaN":"totalCost"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:180","sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:107","sourceCode":"return true","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BitField:179","sourceCode":"return int & (~(int))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:95","sourceCode":"return int & (int)","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1340","inlineConstant":"boolean boolean = false","failures":[9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1301","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:109","sourceCode":"if (int >= int) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n    java.lang.StringBuilder.append(java.lang.String);\n    int = int + 1;\n} else {\n    if (boolean) {\n        java.lang.StringBuilder.append(java.lang.String.substring(int, (int + int)));\n        java.lang.StringBuilder.append(java.lang.String);\n        int += int;\n    } else {\n        int = java.lang.String.indexOf(' ', (int + int));\n        if (int >= 0) {\n            java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n            java.lang.StringBuilder.append(java.lang.String);\n            int = int + 1;\n        } else {\n            java.lang.StringBuilder.append(java.lang.String.substring(int));\n            int = int;\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:614","sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:560","sourceCode":"if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n    return java.lang.Double;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","d":"d"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:545","sourceCode":"return '9'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:316","sourceCode":"return 'c'","type":"CtReturnImpl"},"failures":[13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2095","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:111","sourceCode":"for (final char char : java.lang.String.toCharArray()) {\n    if (org.apache.commons.lang3.CharSet.contains(char)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:297","sourceCode":"if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n    java.util.List<java.util.Locale>.add(java.util.Locale);\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:785","sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:496","sourceCode":"if ((int) < 0) {\n    return new org.apache.commons.lang3.math.Fraction(-(int) , -(int));\n} else {\n    return new org.apache.commons.lang3.math.Fraction(int , int);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:497","sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(int) , -(int))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:409","sourceCode":"return true","type":"CtReturnImpl"},"failures":[16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1353","sourceCode":"if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:316","sourceCode":"int += java.util.Calendar.getActualMaximum(int)","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1196","sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) + 3","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"days":"endCutoff","start":"focus","java.util.Calendar.DAY_OF_MONTH":"endCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:496","sourceCode":"if (java.lang.reflect.Method != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:488","sourceCode":"if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n    java.lang.reflect.Method = java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bestMatch":"accessibleMethod","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:697","failures":[],"status":0,"binaryOperator":"4294967295L << int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1087","sourceCode":"java.util.Calendar.set(int[][0], ((java.util.Calendar.get(int[][0])) - int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1049","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:342","sourceCode":"return long - long","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1828","sourceCode":"return long","type":"CtReturnImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startTime":"result","stopTime":"result"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:159","sourceCode":"if ((double[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1059","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[][int])","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:634","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[80,81,82,83,84,85,86,87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:927","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.7\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:446","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.specification.version\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4209","sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:176","sourceCode":"return java.lang.String.java.lang.String.format(java.lang.String, org.apache.commons.lang3.tuple.Pair<L, R>.getLeft(), org.apache.commons.lang3.tuple.Pair<L, R>.getRight())","type":"CtReturnImpl"},"failures":[88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"format","remove":"format"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":70,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":25,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":33,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":23,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":61,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":29,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":30,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":86,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":73,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":58,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":44,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":42,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":64,"org.apache.commons.lang3.BitFieldTest.testGetShortRawValue":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":31,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":34,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":45,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":13,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":78,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":60,"org.apache.commons.lang3.BitFieldTest.testGetValue":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":35,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":84,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":50,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":4,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":80,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":55,"org.apache.commons.lang3.time.DateUtilsTest.testRound":19,"org.apache.commons.lang3.ConversionTest.testHexToShort":0,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":2,"org.apache.commons.lang3.tuple.PairTest.testToStringCustom":88,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":20,"org.apache.commons.lang3.BitFieldTest.testGetRawValue":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":69,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":28,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":36,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":62,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":65,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":71,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":37,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":81,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":43,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":83,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":66,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":41,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":9,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":22,"org.apache.commons.lang3.RangeTest.testIntersectionWith":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":10,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":27,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":48,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":59,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":15,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":14,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":1,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":72,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":68,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":67,"org.apache.commons.lang3.RangeTest.testEqualsObject":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":87,"org.apache.commons.lang3.BitFieldTest.testSetValue":8,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":75,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":39,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":85,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":32,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":24,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":76,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":38,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":79,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":49,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":52}}]
