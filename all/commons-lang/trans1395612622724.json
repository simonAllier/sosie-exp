[{"position":"org.apache.commons.lang3.text.StrSubstitutor:751","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"int + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:342","sourceCode":"return (this.long) - (this.long)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:373","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"startTime":"period","stopTime":"period"}},{"transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:228","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getComponentType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:178","sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.reflect.MemberUtils.java.lang.Class<?>[][(int + 1)]","type":"CtAssignmentImpl"},"failures":[29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"cls"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:502","sourceCode":"return T.compareTo(T)","type":"CtReturnImpl"},"failures":[33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:454","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)) {\n    throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1244","sourceCode":"if (java.lang.String != null) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:695","sourceCode":"if ((long < (java.lang.Integer.int)) || (long > (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: add\");\n} ","type":"CtIfImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:481","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:95","sourceCode":"T T = T","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:225","sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.CharRange:183","sourceCode":"if (org.apache.commons.lang3.CharRange == null) {\n    throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharacterIterator:286","sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == 0) {\n    if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n        boolean = false;\n    } else {\n        char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n    }\n} else {\n    char = 0;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"range":"range"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:313","sourceCode":"if (boolean[][int]) {\n    return 'd';\n} else {\n    return 'c';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:321","sourceCode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return 'a';\n}","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"position":"org.apache.commons.lang3.BooleanUtils:466","failures":[41],"status":-1,"binaryOperator":"java.lang.Boolean == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:242","sourceCode":"int = ' '","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:45","sourceCode":"int >>= 1","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"start":"bit_pattern"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:510","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[42,43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:123","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:398","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentEnd(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1401","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[])","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:396","sourceCode":"this.org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:276","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, boolean)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:530","sourceCode":"if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numeric":"numeric","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:517","sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1000","sourceCode":"if ((java.util.Date.getTime()) != long) {\n    java.util.Date.setTime(long);\n    java.util.Calendar.setTime(java.util.Date);\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"date":"date"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:297","sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return true;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:290","sourceCode":"if (java.lang.Integer == null) {\n    if (java.lang.Integer == null) {\n        return true;\n    } \n    if (java.lang.Integer == null) {\n        return false;\n    } \n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return true;\n} else if (java.lang.Integer.equals(java.lang.Integer)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"trueValue":"trueValue","falseValue":"falseValue","value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:146","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:390","sourceCode":"throw new java.text.ParseException((\"Unable to parse the date: \" + java.lang.String) , -1)","type":"CtThrowImpl"},"failures":[60,61,62,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BitField:228","sourceCode":"return org.apache.commons.lang3.BitField.((short)(set(short)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:106","sourceCode":"return org.apache.commons.lang3.BitField.((short)(getRawValue(short)))","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1098","sourceCode":"long = long","type":"CtAssignmentImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:611","sourceCode":"try {\n    if (int <= 16) {\n        final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n        if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.doubleValue()) == 0.0) && (!boolean)))) {\n            return java.lang.Double;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:601","sourceCode":"try {\n    if (int <= 7) {\n        final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n        if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n            return java.lang.Float;\n        } \n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[49,66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"allZeros":"allZeros","numDecimals":"numDecimals","str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:760","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:781","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","type":"CtInvocationImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:612","failures":[67],"status":-1,"binaryOperator":"int <= 16","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:221","sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    return double;\n} else {\n    return java.lang.Math.java.lang.Math.max(double, double);\n}","type":"CtIfImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"java.lang.Double.NaN":"a"}},{"position":"org.apache.commons.lang3.time.DateUtils:973","inlineConstant":"boolean boolean = false","failures":[50,51,52,53,54,55,56,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:628","sourceCode":"java.lang.StringBuffer.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtInvocationImpl"},"failures":[0,1,3,6,8,12,13,17,19,21,23,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:664","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n        return ;\n    } \n    if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n        java.lang.String = null;\n    } \n} ","type":"CtIfImpl"},"failures":[69,116,72,74,75,76,117,77,78,79,80,85,86,87,88,92,96,97,98,99,100,107,108,109,110,111,118,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1000","sourceCode":"if ((java.util.Date.getTime()) != long) {\n    java.util.Date.setTime(long);\n    java.util.Calendar.setTime(java.util.Date);\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.testToString":77,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":68,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":27,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":118,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":70,"org.apache.commons.lang3.BitFieldTest.testGetShortRawValue":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":71,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":17,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":46,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":115,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":54,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":75,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":45,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":73,"org.apache.commons.lang3.ObjectUtilsTest.testCompare":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":25,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":2,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":101,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String":36,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_Boolean_int_int_int":41,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":18,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumLong":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":111,"org.apache.commons.lang3.ObjectUtilsTest.testMax":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":109,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":108,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_FAIL":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":10,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer_nullValue":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":43,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL":63,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":16,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":116,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":1,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":114,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendSeparator_String_String":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":13,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":55,"org.apache.commons.lang3.text.StrTokenizerTest.test1":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":112,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":5,"org.apache.commons.lang3.text.StrTokenizerTest.test3":91,"org.apache.commons.lang3.text.StrTokenizerTest.test2":90,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":31,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":23,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":57,"org.apache.commons.lang3.math.FractionTest.testSubtract":38,"org.apache.commons.lang3.text.StrTokenizerTest.test8":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":3,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":67,"org.apache.commons.lang3.text.StrTokenizerTest.test5":93,"org.apache.commons.lang3.text.StrTokenizerTest.test4":92,"org.apache.commons.lang3.text.StrTokenizerTest.test7":95,"org.apache.commons.lang3.text.StrTokenizerTest.test6":94,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":103,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":105,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":102,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":66,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":29,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":87,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":44,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":32,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":78,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":48,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":88,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":72,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":28,"org.apache.commons.lang3.ObjectUtilsTest.testMin":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":8,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":7,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":9,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":106,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":99,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":61,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":39,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":15,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":74,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":76}}]
