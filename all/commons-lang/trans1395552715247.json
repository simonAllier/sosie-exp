[{"position":"org.apache.commons.lang3.math.NumberUtils:1033","inlineConstant":"int int = 1","failures":[0],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:802","sourceCode":"java.lang.StringBuffer.append(double)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:528","sourceCode":"if ((int) >= 0) {\n    return this;\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.CharRange:226","failures":[],"status":0,"binaryOperator":"(83 + (char))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:852","sourceCode":"return (org.apache.commons.lang3.math.Fraction.(getNumerator()) == (org.apache.commons.lang3.math.Fraction.getNumerator())) && (org.apache.commons.lang3.math.Fraction.(getDenominator()) == (org.apache.commons.lang3.math.Fraction.getDenominator()))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","sourceCode":"if (int[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[]);\n}","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5806","sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:337","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(char[])","type":"CtInvocationImpl"},"failures":[8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1209","sourceCode":"return long","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:404","sourceCode":"return this.long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"a":"startTimeMillis"}},{"transplant":{"position":"org.apache.commons.lang3.CsvUnescaper:312","sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:775","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + int) + \"]\"))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:145","sourceCode":"java.lang.StringBuilder.append(\"=\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:243","sourceCode":"java.lang.StringBuilder.append('-')","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:139","sourceCode":"return 15","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:361","sourceCode":"return int","type":"CtReturnImpl"},"failures":[18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5269","sourceCode":"final java.util.BitSet java.util.BitSet = new java.util.BitSet()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:125","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Object.getClass(), java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharRange:188","sourceCode":"return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:195","sourceCode":"return ((char) <= (org.apache.commons.lang3.CharRange.char)) && ((char) >= (org.apache.commons.lang3.CharRange.char))","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:267","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, null, java.lang.String[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:290","sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String, java.util.Locale, java.lang.String[], true)","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.StrSubstitutor:845","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"binaryOperator":"(int + int) - (int - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:138","sourceCode":"return false","type":"CtReturnImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1824","sourceCode":"long = 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1713","sourceCode":"long += ((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long)) / long","type":"CtOperatorAssignmentImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.RandomStringUtils:234","failures":[93,94,95,96,97,98],"status":-1,"binaryOperator":"(int == 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","sourceCode":"java.util.concurrent.ExecutorService = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","type":"CtAssignmentImpl"},"failures":[99,100,101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"tempExec":"tempExec"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3234","sourceCode":"if (int != int) {\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n    int = int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:760","sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"c":"chars","newTokenStart":"offset","tokenStart":"lengthChange","list":"priorVariables"}},{"transplant":{"position":"org.apache.commons.lang3.CharSet:92","sourceCode":"java.util.Collections.java.util.Collections.synchronizedSet(new java.util.HashSet<org.apache.commons.lang3.CharRange>())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:244","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    return int ^ org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Object.getClass().getComponentType(), java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:573","sourceCode":"return (((((\"FastDateFormat[\" + (org.apache.commons.lang3.time.FastDatePrinter.getPattern())) + \",\") + (org.apache.commons.lang3.time.FastDatePrinter.getLocale())) + \",\") + (org.apache.commons.lang3.time.FastDatePrinter.getTimeZone().getID())) + \"]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:409","sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Date)","type":"CtReturnImpl"},"failures":[31,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:138","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:597","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"k","operand":"k"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:512","sourceCode":"if (int == int) {\n    throw new java.lang.ArithmeticException(\"overflow: too large to negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1077","sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","type":"CtIfImpl"},"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"offset","numerator":"offset"}},{"position":"org.apache.commons.lang3.Conversion:768","inlineConstant":"int int = 0","failures":[149],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4688","sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:971","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1176","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[151,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:130","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:677","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int)","type":"CtInvocationImpl"},"failures":[154,155,156,157,158,159,160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.text.WordUtils:95","failures":[161,162],"status":-1,"binaryOperator":"int < 1","name":"removeConditional","type":"mutation"},{"position":"org.apache.commons.lang3.mutable.MutableObject:100","failures":[163],"status":-1,"binaryOperator":"java.lang.Object.(getClass()) == (java.lang.Object.getClass())","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:170","sourceCode":"if (java.lang.String == null) {\n    return long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:173","sourceCode":"try {\n    return java.lang.Long.java.lang.Long.parseLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return long;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str","defaultValue":"defaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:155","sourceCode":"final java.text.ParsePosition java.text.ParsePosition = new java.text.ParsePosition(0)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:108","sourceCode":"this.int = java.lang.Number.intValue()","type":"CtAssignmentImpl"},"failures":[164,165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1190","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:220","sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","type":"CtIfImpl"},"failures":[166,167,114,168,169,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"denominator","nInts":"denominator"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1157","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1214","sourceCode":"if (char[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, char[]);\n}","type":"CtIfImpl"},"failures":[171,171,172,172,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":151,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":10,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":101,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":130,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":152,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":140,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":6,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":158,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":78,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":69,"org.apache.commons.lang3.math.FractionTest.testFactory_double":114,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":49,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":172,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":129,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":59,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":127,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":132,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":112,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":74,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":160,"org.apache.commons.lang3.time.DateUtilsTest.testRound":138,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":124,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":153,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":136,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":139,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":143,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":117,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":115,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":17,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":61,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":85,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":77,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":162,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":141,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":121,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_OK":27,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":42,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":54,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":72,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":83,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":155,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":122,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":91,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":94,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":133,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":90,"org.apache.commons.lang3.math.FractionTest.testPow":167,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_FAIL":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":134,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":116,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":37,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":22,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":58,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":149,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL":32,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":105,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":41,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":107,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":63,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":21,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":48,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":35,"org.apache.commons.lang3.mutable.MutableObjectTest.testEquals":163,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":120,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":93,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":104,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":31,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":156,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_nullInput":150,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":20,"org.apache.commons.lang3.CharSetTest.testContains_Char":12,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":126,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":50,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":168,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":98,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":119,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":109,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":146,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":110,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":82,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":2,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":67,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":166,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":106,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":57,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":87,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":161,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":148,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":173,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":60,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":4,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":81,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":0,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":125,"org.apache.commons.lang3.math.FractionTest.testAbs":5,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":23,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":128,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":25,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":137,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_OK":26,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":11,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":88,"org.apache.commons.lang3.math.FractionTest.testMultiply":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":39,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":159,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":62,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":68,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":66,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":3,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":142,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":14,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":95,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":9,"org.apache.commons.lang3.mutable.MutableIntTest.testSetNull":165,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_WITH_DE_LOCALE":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":36,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":102,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":24,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":15,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":53,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":147,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":65,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":171,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":38,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":51,"org.apache.commons.lang3.math.FractionTest.testDivide":169,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":71,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":19,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":154,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":33,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":99,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":13,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":144,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":73,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":111,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":135,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":44,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":40,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":16,"org.apache.commons.lang3.mutable.MutableIntTest.testGetSet":164}}]
