[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Byte[] == null) {\n    return null;\n} else if ((java.lang.Byte[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.byte[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule(false)","position":"org.apache.commons.lang3.time.FastDatePrinter:1169","type":"CtNewClassImpl"},"status":-2},{"failures":[0,1],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:819","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:420","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(((java.lang.Class<?>)(java.lang.reflect.Type)), java.lang.reflect.ParameterizedType)","position":"org.apache.commons.lang3.reflect.TypeUtils:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double + ((double - double) * (org.apache.commons.lang3.RandomUtils.java.util.Random.nextDouble()))","position":"org.apache.commons.lang3.RandomUtils:146","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.lang3.time.FastDatePrinter:334","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.CharRange:320","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.text.StrTokenizer:412","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((((char[] == null) && (char[] != null)) && ((char[].int) > 0)) || (((char[] == null) && (char[] != null)) && ((char[].int) > 0))) || (((char[] != null) && (char[] != null)) && ((char[].int) != (char[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1300","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n} else {\n    java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n}","position":"org.apache.commons.lang3.time.FormatCache:200","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:539","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '7'","position":"org.apache.commons.lang3.Conversion:659","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.reflect.TypeUtils:700","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int) == 0) {\n    return org.apache.commons.lang3.math.Fraction.equals(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","position":"org.apache.commons.lang3.math.Fraction:470","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(((int) / int), ((int) / int))","position":"org.apache.commons.lang3.math.Fraction:477","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"array":"array","length":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"if (long[] == null) {\n    return null;\n} else if ((long[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3070","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3072","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int[] int[] = new int[java.lang.Integer[].int]","position":"org.apache.commons.lang3.ArrayUtils:3121","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.lang3.text.StrLookup<?> = org.apache.commons.lang3.text.StrLookup<?>","position":"org.apache.commons.lang3.text.StrSubstitutor:1169","type":"CtAssignmentImpl"},"status":-2},{"failures":[2,3,4],"variableMapping":{"str":"str","dec":"str","this":"this","exp":"str"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.String == null) && (java.lang.String == null)) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","position":"org.apache.commons.lang3.math.NumberUtils:584","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 7) {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} ","position":"org.apache.commons.lang3.math.NumberUtils:602","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(char[][java.text.ParsePosition.getIndex()])","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:190","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:466","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1296","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:41","type":"CtLocalVariableImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean && (char != '\\'')) {\n    java.lang.StringBuilder.append(char);\n    continue;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:490","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case '\\'' :\n        if (boolean) {\n            java.lang.StringBuilder = null;\n            boolean = false;\n        } else {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n            boolean = true;\n        }\n        break;\n    case 'y' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'M' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'd' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'H' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'm' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 's' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'S' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    default :\n        if (java.lang.StringBuilder == null) {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n        } \n        java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:495","type":"CtSwitchImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.StringUtils:5014","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + 1) < int) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    final char char = java.lang.CharSequence.charAt((int + 1));\n    if (boolean && (org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, char, 0)) < 0)) {\n        return int;\n    } \n} else {\n    if (!boolean) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1767","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2])","position":"org.apache.commons.lang3.LocaleUtils:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[])","position":"org.apache.commons.lang3.time.FastDatePrinter:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[25],"variableMapping":{"hours":"denominator","minutes":"denominator"},"name":"replace","transplant":{"sourceCode":"int += 60 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:385","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int /= 2","position":"org.apache.commons.lang3.math.Fraction:218","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} ","position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (java.lang.StringBuffer.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:599","type":"CtIfImpl"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:1472","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, 0, int)) > 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5125","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Character.java.lang.Character.isDigit(char)","position":"org.apache.commons.lang3.time.FastDateParser:570","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(char[], int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:459","type":"CtLocalVariableImpl"},"status":-2},{"failures":[122],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.mutable.MutableBoolean:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.BooleanUtils:263","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.awt.graphicsenv\")","position":"org.apache.commons.lang3.SystemUtils:170","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short[][int] = short[][int]","position":"org.apache.commons.lang3.ArrayUtils:1862","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32)","position":"org.apache.commons.lang3.Range:451","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((int + 32))","position":"org.apache.commons.lang3.text.WordUtils:184","type":"CtLocalVariableImpl"},"status":-2},{"failures":[123],"variableMapping":{"str":"str","parsePatterns":"parsePatterns","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String, null, java.lang.String[], false)","position":"org.apache.commons.lang3.time.DateUtils:333","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, null, java.lang.String[])","position":"org.apache.commons.lang3.time.DateUtils:268","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.lang3.CharSet(\"0-9\")","position":"org.apache.commons.lang3.CharSet:72","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.CharSet.java.util.Map<java.lang.String, org.apache.commons.lang3.CharSet>.put(\"A-Za-z\", org.apache.commons.lang3.CharSet.org.apache.commons.lang3.CharSet)","position":"org.apache.commons.lang3.CharSet:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(char[])","position":"org.apache.commons.lang3.builder.DiffBuilder:357","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1158","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:6035","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.GenericArrayType.equals(java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:525","type":"CtIfImpl"},"status":-2},{"failures":[124],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (short[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final java.lang.RuntimeException java.lang.RuntimeException","position":"org.apache.commons.lang3.AnnotationUtils:203","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()","position":"org.apache.commons.lang3.text.StrSubstitutor:754","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"searchStr":"str"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1479","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length())) + 1","position":"org.apache.commons.lang3.StringUtils:1116","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.CharSequence.subSequence(1, ((java.lang.CharSequence.length()) - 1)).toString()","position":"org.apache.commons.lang3.StringEscapeUtils:405","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher, java.lang.String, 0, int, 1)","position":"org.apache.commons.lang3.text.StrBuilder:1947","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:325","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:308","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.time.DurationFormatUtils:344","failures":[7,19],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(\"}\")","position":"org.apache.commons.lang3.text.StrSubstitutor:138","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, -1, true)","position":"org.apache.commons.lang3.StringUtils:2753","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:1440","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence, java.lang.String.toCharArray())","position":"org.apache.commons.lang3.StringUtils:1931","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return '1'","position":"org.apache.commons.lang3.Conversion:647","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDatePrinter:530","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.CharSet:248","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","position":"org.apache.commons.lang3.exception.ExceptionUtils:193","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:487","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"text","this":"this","separator":"replacement"},"name":"replace","transplant":{"sourceCode":"if ((org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (java.lang.String == null)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2290","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String, 1)","position":"org.apache.commons.lang3.StringUtils:4418","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1154","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\")","position":"org.apache.commons.lang3.Conversion:1191","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.java.lang.Class<?> = java.lang.Class<?>","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:672","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = T.getClass()","position":"org.apache.commons.lang3.ArrayUtils:4291","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:621","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","position":"org.apache.commons.lang3.ClassUtils:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.ArrayUtils:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:2051","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.text.StrBuilder:2083","failures":[125],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == int) {\n    return java.lang.String.concat(java.lang.String);\n} else if (int < int) {\n    return java.lang.String.concat(java.lang.String.substring(0, int));\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return java.lang.String.concat(new java.lang.String(char[]));\n}","position":"org.apache.commons.lang3.StringUtils:5315","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.Validate:351","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.BooleanUtils:266","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:673","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.BooleanUtils:940","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:260","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[])","position":"org.apache.commons.lang3.ArrayUtils:3795","type":"CtReturnImpl"},"status":-2},{"failures":[126,127],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char)","position":"org.apache.commons.lang3.text.WordUtils:472","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} ","position":"org.apache.commons.lang3.text.WordUtils:418","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:169","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(byte[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5325","type":"CtReturnImpl"},"status":-2},{"failures":[128,129,130,131,132,133,134,0,135,136,137],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[], java.lang.Object[], null)","position":"org.apache.commons.lang3.builder.CompareToBuilder:621","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.String.lastIndexOf(org.apache.commons.lang3.ClassUtils.char)","position":"org.apache.commons.lang3.ClassUtils:833","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:95","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:6691","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\")","position":"org.apache.commons.lang3.ObjectUtils:624","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double > (java.lang.Integer.int)) || java.lang.Double.(java.lang.Double.isNaN(double))) {\n    throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\");\n} ","position":"org.apache.commons.lang3.math.Fraction:252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n    if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n        return java.lang.Double;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:558","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object, java.lang.Object, boolean, null)","position":"org.apache.commons.lang3.builder.EqualsBuilder:295","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (java.lang.Class<?>.isArray()) {\n        org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != java.lang.Class<?>)) {\n            java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n            org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        }\n    }\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:356","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>>.compareAndSet(null, this)) {\n    java.util.concurrent.atomic.AtomicReference<T>.set(org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>.initialize());\n} ","position":"org.apache.commons.lang3.concurrent.AtomicSafeInitializer:77","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:495","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:5554","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.lang3.StringUtils:6407","failures":[138],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.Class<? extends java.lang.annotation.Annotation> java.lang.Class<? extends java.lang.annotation.Annotation> = null","position":"org.apache.commons.lang3.AnnotationUtils:73","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?>","position":"org.apache.commons.lang3.reflect.MemberUtils:116","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (java.lang.CharSequence.length()) - (java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:7319","type":"CtLocalVariableImpl"},"status":-2},{"failures":[139],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.format(java.util.Calendar)","position":"org.apache.commons.lang3.time.DateFormatUtils:320","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append('+')","position":"org.apache.commons.lang3.time.FastDatePrinter:1201","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:1403","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"(float)++","position":"org.apache.commons.lang3.mutable.MutableFloat:137","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"float = float[][int]","position":"org.apache.commons.lang3.math.NumberUtils:1067","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((char[][(int + 1)]) == 'x') || ((char[][(int + 1)]) == 'X')) {\n    int int = int + 2;\n    if (int == int) {\n        return false;\n    } \n    for ( ; int < (char[].int) ; int++) {\n        if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n            return false;\n        } \n    }\n    return true;\n} else {\n    int int = int + 1;\n    for ( ; int < (char[].int) ; int++) {\n        if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n            return false;\n        } \n    }\n    return true;\n}","position":"org.apache.commons.lang3.math.NumberUtils:1350","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>.get(java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:534","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int >= (int)) {\n    return new java.lang.String(char[] , 0 , int);\n} else {\n    return new java.lang.String(char[] , 0 , int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) <= (int + int)) {\n    return new java.lang.String(char[] , int , ((int) - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2232","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.lang3.text.StrTokenizer:448","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Byte, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5363","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch"},"name":"add","transplant":{"sourceCode":"if (java.lang.Character == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.CharUtils:380","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.org.apache.commons.lang3.CharUtils.toString(java.lang.Character.charValue())","position":"org.apache.commons.lang3.CharUtils:335","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\")","position":"org.apache.commons.lang3.math.Fraction:778","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.CompareToBuilder:326","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"str":"trueString"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2098","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:730","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(long[])","position":"org.apache.commons.lang3.math.NumberUtils:938","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((java.lang.CharSequence.charAt(int)) == '&') && (int < (int - 2))) && ((java.lang.CharSequence.charAt((int + 1))) == '#')) {\n    int int = int + 2;\n    boolean boolean = false;\n    final char char = java.lang.CharSequence.charAt(int);\n    if ((char == 'x') || (char == 'X')) {\n        int++;\n        boolean = true;\n        if (int == int) {\n            return 0;\n        } \n    } \n    int int = int;\n    while ((int < int) && (((((java.lang.CharSequence.charAt(int)) >= '0') && ((java.lang.CharSequence.charAt(int)) <= '9')) || (((java.lang.CharSequence.charAt(int)) >= 'a') && ((java.lang.CharSequence.charAt(int)) <= 'f'))) || (((java.lang.CharSequence.charAt(int)) >= 'A') && ((java.lang.CharSequence.charAt(int)) <= 'F')))) {\n        int++;\n    }\n    final boolean boolean = (int != int) && ((java.lang.CharSequence.charAt(int)) == ';');\n    if (!boolean) {\n        if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n            return 0;\n        } else if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n            throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n        } \n    } \n    int int;\n    try {\n        if (boolean) {\n            int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 16);\n        } else {\n            int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 10);\n        }\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        return 0;\n    }\n    if (int > 65535) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(int);\n        java.io.Writer.write(char[][0]);\n        java.io.Writer.write(char[][1]);\n    } else {\n        java.io.Writer.write(int);\n    }\n    return (((2 + int) - int) + (boolean ? 1 : 0)) + (boolean ? 1 : 0);\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:81","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:359","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1238","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:460","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.IEEE754rUtils:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasNext()) {\n    return java.lang.String[][(int)++];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:517","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.StringUtils:5813","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p>Custom specialization of the standard JDK {@link java.io.ObjectInputStream}\n * that uses a custom  <code>ClassLoader<\/code> to resolve a class.\n * If the specified <code>ClassLoader<\/code> is not able to resolve the class,\n * the context classloader of the current thread will be used.\n * This way, the standard deserialization work also in web-application\n * containers and application servers, no matter in which of the\n * <code>ClassLoader<\/code> the particular class that encapsulates\n * serialization/deserialization lives. <\/p>\n * \n * <p>For more in-depth information about the problem for which this\n * class here is a workaround, see the JIRA issue LANG-626. <\/p>\n */\nstatic class ClassLoaderAwareObjectInputStream extends java.io.ObjectInputStream {\n    private static final java.util.Map<java.lang.String, java.lang.Class<?>> primitiveTypes = new java.util.HashMap<java.lang.String, java.lang.Class<?>>();\n\n    private final java.lang.ClassLoader classLoader;\n\n    /** \n     * Constructor.\n     * @param in The <code>InputStream<\/code>.\n     * @param classLoader classloader to use\n     * @throws IOException if an I/O error occurs while reading stream header.\n     * @see java.io.ObjectInputStream\n     */\npublic ClassLoaderAwareObjectInputStream(final java.io.InputStream in ,final java.lang.ClassLoader classLoader) throws java.io.IOException {\n        java.io.ObjectInputStream.super(java.io.InputStream);\n        this.java.lang.ClassLoader = java.lang.ClassLoader;\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"byte\", byte.byte);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"short\", short.short);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"int\", int.int);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"long\", long.long);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"float\", float.float);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"double\", double.double);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"boolean\", boolean.boolean);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"char\", char.char);\n        org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.put(\"void\", void.void);\n    }\n\n    /** \n     * Overriden version that uses the parametrized <code>ClassLoader<\/code> or the <code>ClassLoader<\/code>\n     * of the current <code>Thread<\/code> to resolve the class.\n     * @param desc An instance of class <code>ObjectStreamClass<\/code>.\n     * @return A <code>Class<\/code> object corresponding to <code>desc<\/code>.\n     * @throws IOException Any of the usual Input/Output exceptions.\n     * @throws ClassNotFoundException If class of a serialized object cannot be found.\n     */\n@java.lang.Override\n    protected java.lang.Class<?> resolveClass(final java.io.ObjectStreamClass desc) throws java.io.IOException, java.lang.ClassNotFoundException {\n        final java.lang.String java.lang.String = java.io.ObjectStreamClass.getName();\n        try {\n            return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.ClassLoader);\n        } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n            try {\n                return java.lang.Class.java.lang.Class.forName(java.lang.String, false, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n            } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n                if (java.lang.Class<?> != null) {\n                    return java.lang.Class<?>;\n                } else {\n                    throw java.lang.ClassNotFoundException;\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.SerializationUtils:284","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final float[] float[] = new float[(float[].int) + (float[].int)]","position":"org.apache.commons.lang3.ArrayUtils:3942","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:1027","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field, true)","position":"org.apache.commons.lang3.reflect.FieldUtils:662","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int))","position":"org.apache.commons.lang3.Conversion:605","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type));\n    } \n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n        if ((java.lang.reflect.ParameterizedType.getOwnerType()) == null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n        } else {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.putAll(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType));\n        }\n        final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n            if (java.lang.reflect.Type != null) {\n                java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n            } \n        }\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.ParameterizedType.getOwnerType(), ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())), java.lang.reflect.Type[]);\n    } \n    if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n        final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.WildcardType.getUpperBounds())).withLowerBounds(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.WildcardType.getLowerBounds())).build();\n    } \n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1367","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:706","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.TimeUnit.convert(((java.util.Calendar.get(java.util.Calendar.int)) - int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1702","type":"CtInvocationImpl"},"status":-2},{"failures":[140,141],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","position":"org.apache.commons.lang3.RandomStringUtils:311","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"count":"count"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:4179","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:442","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:499","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token.getCount()","position":"org.apache.commons.lang3.time.DurationFormatUtils:423","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.math.IEEE754rUtils:183","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:425","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((boolean[][int]) || ((java.lang.String[][int]) == null)) || (java.lang.String[][int].isEmpty())) || ((java.lang.String[][int]) == null)) {\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:4781","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int >= int) {\n    int = int - 1;\n} ","position":"org.apache.commons.lang3.CharSequenceUtils:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return \"\";\n} else if (int >= (int)) {\n    return new java.lang.String(char[] , 0 , int);\n} else {\n    return new java.lang.String(char[] , 0 , int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2178","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 100) {\n    int = org.apache.commons.lang3.time.FastDateParser.adjustYear(int);\n} ","position":"org.apache.commons.lang3.time.FastDateParser:696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getDefault()","position":"org.apache.commons.lang3.time.FormatCache:74","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((long)(int)) / (int)","position":"org.apache.commons.lang3.math.Fraction:432","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.String(byte[] , java.lang.String)","position":"org.apache.commons.lang3.StringUtils:7620","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.putAll(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType))","position":"org.apache.commons.lang3.reflect.TypeUtils:1378","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.isUseFieldNames()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char[][int]) <= 32 ? 1 : 0","position":"org.apache.commons.lang3.text.StrMatcher:432","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'z' :\n    if (int >= 4) {\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n    } else {\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n    }\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:259","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")","position":"org.apache.commons.lang3.BooleanUtils:269","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:528","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.add(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:475","type":"CtReturnImpl"},"status":-2},{"failures":[142,136,143],"variableMapping":{"lhs":"lhs","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if (double[] == double[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:891","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) != (double[].int)) {\n    int = (double[].int) < (double[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:902","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"newLineStr":"padStr","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"org.apache.commons.lang3.StringUtils.SPACE"},"name":"replace","transplant":{"sourceCode":"java.lang.String = this.org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:5415","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:108","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 2","position":"org.apache.commons.lang3.time.FastDatePrinter:975","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2168","type":"CtIfImpl"},"status":-2},{"failures":[144],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:805","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, int)","position":"org.apache.commons.lang3.StringUtils:1306","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Class<?>[].int) == 0) {\n    return java.lang.Class<?>[];\n} ","position":"org.apache.commons.lang3.ClassUtils:782","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:980","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":92,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":107,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":6,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":104,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":55,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":49,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":60,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":116,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":62,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":24,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":85,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":63,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":129,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":8,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiShortArray":137,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":132,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":93,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":37,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_int_int_int":122,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiLongArray":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":109,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":94,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":16,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":117,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":140,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMixedArray":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":98,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":126,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":43,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":88,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":131,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":69,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":100,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":127,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":96,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":18,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArrayHiddenByObject":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":79,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":121,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectArray":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":113,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":53,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiFloatArray":133,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":115,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":42,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":65,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":41,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":76,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringIntInt":138,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":13,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":103,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":12,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG981":10,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":11,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":33,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":19,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiDoubleArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":66,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":89,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiIntArray":0,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":23,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":75,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":51,"org.apache.commons.lang3.text.StrBuilderTest.testStartsWith":125,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":71,"org.apache.commons.lang3.builder.CompareToBuilderTest.testRaggedArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":68,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":120,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":64,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":21,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":47,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":27,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":143,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":110,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":38,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":70,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOf_StringInt":144,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":72,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":141,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":20,"org.apache.commons.lang3.ArrayUtilsTest.testReverseShort":124,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArrayHiddenByObject":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":57,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":97,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":17,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":111,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":26}}]
