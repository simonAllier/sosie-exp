[{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:66","sourceCode":"java.lang.Float.java.lang.Float.valueOf(1.0F)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.FieldUtils:430","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"Cannot locate field %s on %s\", java.lang.String, java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:538","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:247","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1391","sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:142","sourceCode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"denominator","nHexs":"denominator"}},{"position":"org.apache.commons.lang3.math.NumberUtils:509","failures":[11],"status":-1,"binaryOperator":"int > (java.lang.String.length())","name":"removeConditional","type":"mutation"},{"position":"org.apache.commons.lang3.mutable.MutableLong:262","failures":[12],"status":-1,"binaryOperator":"(long) < long","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1080","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1176","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1427","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:449","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:659","sourceCode":"return java.lang.Float.java.lang.Float.valueOf(java.lang.String)","type":"CtReturnImpl"},"failures":[32,33,34,11,35,36,37],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1124","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    final int int = (boolean[][(int + int)] ? 1 : 0) << int;\n    final int int = 1 << int;\n    short = ((short)((short & (~int)) | int));\n}","type":"CtForImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:148","sourceCode":"if ((java.lang.String.charAt(5)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:844","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[39,40,41,42,42,43,44,45,46,47,48,49,50,51,52,29,53,54,26,55,56,57,58,59,60,61,62,63,64,65,66,67,67,68,69,70,30,71,72,73,74,75,76,77,78,79,80,81,82,83,31,84,85,86,87,88,27,89,90,91,92,93,94,95,28,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4524","sourceCode":"if ((--int) == 0) {\n    break;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1037","sourceCode":"if ((double[][int]) > double) {\n    double = double[][int];\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:79","sourceCode":"if (T == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:125","sourceCode":"return T","type":"CtReturnImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"object":"val"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:496","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1348","sourceCode":"if (int == int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1399","sourceCode":"if (int < (char[].int)) {\n    if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n        return true;\n    } \n    if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n        return false;\n    } \n    if ((char[][int]) == '.') {\n        if (boolean || boolean) {\n            return false;\n        } \n        return boolean;\n    } \n    if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n        return boolean;\n    } \n    if (((char[][int]) == 'l') || ((char[][int]) == 'L')) {\n        return (boolean && (!boolean)) && (!boolean);\n    } \n    return false;\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:142","sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:124","sourceCode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getCause(java.lang.Throwable, org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1200","sourceCode":"java.lang.StringBuffer.append('+')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1423","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6005","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:850","sourceCode":"char[] = org.apache.commons.lang3.text.StrBuilder.char[]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4696","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException((((\"Search and Replace array lengths don\\'t match: \" + int) + \" vs \") + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:730","sourceCode":"if (java.lang.String.startsWith(\"-\")) {\n    boolean = true;\n    int = 1;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"replacementLength":"pos","searchLength":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","sourceCode":"return \"\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:829","sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"true\", \"false\")","type":"CtReturnImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:769","sourceCode":"int = (int * 16) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:842","sourceCode":"int = (int * 8) + int","type":"CtAssignmentImpl"},"failures":[116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:104","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1596","sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.ParameterizedType.getActualTypeArguments(), java.lang.reflect.ParameterizedType.getActualTypeArguments())","type":"CtReturnImpl"},"failures":[117,118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:302","sourceCode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:884","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:455","sourceCode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:940","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array is empty\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:478","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:592","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","type":"CtReturnImpl"},"failures":[32,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:495","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:508","sourceCode":"if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[120,46,74,74,75,76,77,78,79,80,81,82,82,83,31,84,85,86,87,87,88,27,89,90,91,92,93,94,94,95,28,96,97,98,99,100,101,102,103,104,105,106,107,121,122,123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:915","sourceCode":"org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.6\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1055","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OS/2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:936","sourceCode":"if ((int) == ((-1) * (int))) {\n    java.lang.String = \"-1\";\n} else if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:938","sourceCode":"if (((int) > 0 ? -(int) : int) < (-(int))) {\n    final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n    if (int == 0) {\n        java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"numerator":"denominator","denominator":"denominator","this":"this","toProperString":"toProperString"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":30,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":42,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":123,"org.apache.commons.lang3.ConversionTest.testByteArrayToInt":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":59,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateFloat":33,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong_nullArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":29,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":28,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":69,"org.apache.commons.lang3.ObjectUtilsTest.testCompare":114,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxShort_nullArray":14,"org.apache.commons.lang3.math.NumberUtilsTest.testMinLong_nullArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":99,"org.apache.commons.lang3.math.FractionTest.testInvert":7,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_nullArray":24,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":45,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":101,"org.apache.commons.lang3.math.NumberUtilsTest.testMinFloat_nullArray":17,"org.apache.commons.lang3.math.FractionTest.testPow":3,"org.apache.commons.lang3.mutable.MutableLongTest.testCompareTo":12,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat_nullArray":21,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":124,"org.apache.commons.lang3.math.FractionTest.testReduce":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":78,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":121,"org.apache.commons.lang3.reflect.TypeLiteralTest.testBasic":117,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_nullArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":90,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG807":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":40,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte_nullArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":68,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":66,"org.apache.commons.lang3.math.FractionTest.testSubtract":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":91,"org.apache.commons.lang3.math.FractionTest.testAdd":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":61,"org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":106,"org.apache.commons.lang3.math.FractionTest.testNegate":8,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":18,"org.apache.commons.lang3.math.FractionTest.testAbs":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":62,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":34,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_boolean":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":82,"org.apache.commons.lang3.math.FractionTest.testMultiply":6,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_4":36,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble_nullArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":52,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":39,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":67,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":11,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":44,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":53,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":87,"org.apache.commons.lang3.math.NumberUtilsTest.testMinInt_nullArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":58,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":41,"org.apache.commons.lang3.math.FractionTest.testDivide":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":63,"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":118,"org.apache.commons.lang3.math.NumberUtilsTest.testMinShort_nullArray":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":54,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble_nullArray":15,"org.apache.commons.lang3.math.FractionTest.testToProperString":126,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":89,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":51}}]
