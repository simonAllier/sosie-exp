[{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:522","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:325","sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(java.lang.Object[].int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1325","sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:998","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[][int])","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"i","nBytes":"i"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:410","sourceCode":"return -1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2861","sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","failures":[15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:241","sourceCode":"if (java.lang.String[] != null) {\n    for (final java.lang.String java.lang.String : java.lang.String[]) {\n        if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n            return false;\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:242","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:130","sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:247","sourceCode":"return (byte) == (((org.apache.commons.lang3.mutable.MutableByte)(java.lang.Object)).byteValue())","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6017","sourceCode":"if (int >= int) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1064","sourceCode":"if ((float[][int]) > float) {\n    float = float[][int];\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"j","prevIndex":"j"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1262","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:108","sourceCode":"this.short = java.lang.Number.shortValue()","type":"CtAssignmentImpl"},"failures":[18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:927","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.7\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1067","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Solaris\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:515","sourceCode":"final int int = (int - 1) - int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1162","sourceCode":"final int int = (boolean[][(int + int)] ? 1 : 0) << int","type":"CtLocalVariableImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"i","src":"src"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:512","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:482","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,27,28,29,30,31,32,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:324","sourceCode":"if (java.lang.String == null) {\n    return byte;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:327","sourceCode":"try {\n    return java.lang.Byte.java.lang.Byte.parseByte(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return byte;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"str","defaultValue":"defaultValue"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:328","sourceCode":"int += 12 * int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:565","sourceCode":"int--","type":"CtUnaryOperatorImpl"},"failures":[35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"months":"wrapperFrameIndex","years":"wrapperFrameIndex"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:285","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[38,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:493","sourceCode":"if (int == int) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1438","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (int >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MIN_VALUE":"nHexs","numerator":"shift"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:518","sourceCode":"if ((!java.lang.Character.(java.lang.Character.isDigit(char))) && (char != '.')) {\n    if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n        java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n    } else {\n        java.lang.String = null;\n    }\n    final java.lang.String java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    final boolean boolean = org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)) && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String));\n    switch (char) {\n        case 'l' :\n        case 'L' :\n            if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n                try {\n                    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n                } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n                }\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n            } \n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        case 'f' :\n        case 'F' :\n            try {\n                final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n                if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n                    return java.lang.Float;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        case 'd' :\n        case 'D' :\n            try {\n                final java.lang.Double java.lang.Double = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String);\n                if (!((java.lang.Double.isInfinite()) || (((java.lang.Double.floatValue()) == 0.0) && (!boolean)))) {\n                    return java.lang.Double;\n                } \n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n            try {\n                return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n            } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n            }\n        default :\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1372","sourceCode":"if (boolean || boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:581","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[40,41,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"hasExp":"appendStatics","hasDecPoint":"appendStatics"}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:330","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:136","sourceCode":"return (java.util.concurrent.Future<T>) != null","type":"CtReturnImpl"},"failures":[43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:262","sourceCode":"return (int) < int ? -1 : (int) == int ? 0 : 1","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:498","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:473","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendCyclicObject(java.lang.StringBuffer, java.lang.String, java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,28,29,30,30,31,49,50,51,52,53,54,54,8,55,56,57,58,58,59,60,61,62,9,63,64,65,66,67,68,69,70,71,72,40,41,73,74,75,76,77,78,79,79,80,10,81,81,82,83,42,84,85,85,86,87,87,88,89,90,91,92,93,94,95,95,32,96,97,98,99,100,101,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:463","sourceCode":"return '4'","type":"CtReturnImpl"},"failures":[104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1478","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:541","sourceCode":"return (int) > 0","type":"CtReturnImpl"},"failures":[106,107,108,109,110,111,112],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:664","sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:663","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isIgnoreEmptyTokens()) {\n        return ;\n    } \n    if (org.apache.commons.lang3.text.StrTokenizer.isEmptyTokenAsNull()) {\n        java.lang.String = null;\n    } \n} ","type":"CtIfImpl"},"failures":[113,114,115,108,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ClassUtils:936","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:305","sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'f';\n        } else {\n            return 'e';\n        }\n    } else {\n        if (boolean[][int]) {\n            return 'd';\n        } else {\n            return 'c';\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (boolean[][int]) {\n            return 'b';\n        } else {\n            return 'a';\n        }\n    } else {\n        if (boolean[][int]) {\n            return '9';\n        } else {\n            return '8';\n        }\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:652","sourceCode":"java.util.List<java.lang.String>.add(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:546","sourceCode":"java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(org.apache.commons.lang3.time.DurationFormatUtils.Token)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:94","failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:288","sourceCode":"return ((int)(long ^ (long >>> 32)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:645","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bits":"m"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.EntityArrays:420","sourceCode":"java.lang.String[][][int][1] = java.lang.String[][][int][0]","type":"CtAssignmentImpl"},"failures":[141,142,143,174,156,157],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:97","sourceCode":"this.byte = byte","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","sourceCode":"this.byte += byte","type":"CtOperatorAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","sourceCode":"return \"StrTokenizer[not tokenized yet]\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:251","sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, null, java.util.Locale)","type":"CtReturnImpl"},"failures":[181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:126","sourceCode":"return new java.util.Locale(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:136","sourceCode":"return new java.util.Locale(java.lang.String.substring(0, 2) , \"\" , java.lang.String.substring(4))","type":"CtReturnImpl"},"failures":[182],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":58,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":53,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":178,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":41,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":68,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":146,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":90,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":138,"org.apache.commons.lang3.math.FractionTest.testFactory_double":38,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":140,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":95,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":162,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":157,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":181,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":176,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":118,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":57,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":50,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":76,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":149,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":92,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":116,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":3,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":161,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":70,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":163,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":66,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":12,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":129,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":112,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":177,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":143,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":175,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":10,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":32,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":55,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":136,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":135,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":134,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":124,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":123,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":20,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsWithOtherObjects":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":79,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":158,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":179,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":151,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":109,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":86,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":156,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":113,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":71,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":73,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":105,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":72,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":139,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":80,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":148,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":39,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":144,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":24,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":63,"org.apache.commons.lang3.math.FractionTest.testSubtract":171,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":168,"org.apache.commons.lang3.text.StrTokenizerTest.test8":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":59,"org.apache.commons.lang3.text.StrTokenizerTest.test4":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":28,"org.apache.commons.lang3.text.StrTokenizerTest.test6":110,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":102,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":6,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":130,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":60,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":5,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":125,"org.apache.commons.lang3.mutable.MutableByteTest.testEquals":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":93,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":120,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":89,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":145,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":121,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":78,"org.apache.commons.lang3.math.FractionTest.testMultiply":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":49,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":99,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":33,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":64,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":180,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":126,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":167,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":62,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":154,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":30,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":170,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":83,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":101,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":152,"org.apache.commons.lang3.math.FractionTest.testDivide":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":61,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":159,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":45,"org.apache.commons.lang3.mutable.MutableIntTest.testCompareTo":48,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":153,"org.apache.commons.lang3.mutable.MutableShortTest.testGetSet":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":52,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":166,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":85,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":2,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":108,"org.apache.commons.lang3.LocaleUtilsTest.testLang328":182,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":103,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":31}}]
