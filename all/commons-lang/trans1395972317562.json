[{"failures":[],"variableMapping":{"acquireCount":"startPos"},"name":"add","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:307","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.CharSequence.length()) - (java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:1376","type":"CtAssignmentImpl"},"status":0},{"failures":[0],"variableMapping":{"objectData":"array"},"name":"replace","transplant":{"sourceCode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n} ","position":"org.apache.commons.lang3.SerializationUtils:265","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(byte[])","position":"org.apache.commons.lang3.math.NumberUtils:859","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1436","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringBuilder:1010","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1034","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:4174","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2338","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"offset":"offset"},"name":"add","transplant":{"sourceCode":"final int int = int / ((60 * 60) * 1000)","position":"org.apache.commons.lang3.time.FastDatePrinter:1204","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (int / (60 * 1000)) - (60 * int)","position":"org.apache.commons.lang3.time.FastDatePrinter:1212","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getSummaryObjectEndText()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:539","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:238","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:762","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.StringBuilder.append(long[][int]);\n}","position":"org.apache.commons.lang3.StringUtils:3621","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"period":"startTime"},"name":"add","transplant":{"sourceCode":"return this.long","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:373","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.System.(java.lang.System.nanoTime()) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:343","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 255) {\n    java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else if (int > 15) {\n    java.io.Writer.write((\"\\\\u00\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n} else {\n    java.io.Writer.write((\"\\\\u000\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))));\n}","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:119","type":"CtIfImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, java.lang.Object[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:952","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.ClassUtils:199","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar, java.util.Calendar)","position":"org.apache.commons.lang3.time.DateUtils:163","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.AnnotationUtils:148","type":"mutation","return":"return false","status":0},{"failures":[10],"variableMapping":{"tokenPos":"n"},"name":"replace","transplant":{"sourceCode":"return int - 1","position":"org.apache.commons.lang3.text.StrTokenizer:564","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int[][int]","position":"org.apache.commons.lang3.StringUtils:6974","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","position":"org.apache.commons.lang3.ClassUtils:330","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:4804","type":"CtLocalVariableImpl"},"status":-2},{"failures":[11],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2210","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (java.lang.String.length()))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2248","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 8","position":"org.apache.commons.lang3.Conversion:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.text.StrBuilder:2880","type":"CtReturnImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \")","position":"org.apache.commons.lang3.time.StopWatch:303","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"HashCodeBuilder requires an odd initial value\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:540","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.lang3.RandomUtils:143","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(org.apache.commons.lang3.text.StrBuilder.length()).append(org.apache.commons.lang3.text.StrBuilder)","position":"org.apache.commons.lang3.text.StrSubstitutor:556","type":"CtLocalVariableImpl"},"status":-2},{"failures":[19],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")","position":"org.apache.commons.lang3.math.Fraction:824","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"quoteLen":"i","len":"i","pos":"i","srcChars":"otherBuf","quoteStart":"i"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (((int + int) >= int) || ((char[][(int + int)]) != (char[][(int + int)]))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrTokenizer:832","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) != (char[][int])) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2685","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1493","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(java.lang.StringBuffer, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:634","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:679","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)) {\n    try {\n        final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n        org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n    }\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:522","type":"CtIfImpl"},"status":-2},{"failures":[20,21,22],"variableMapping":{"index":"size","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"this.char[][int++] = 'f'","position":"org.apache.commons.lang3.text.StrBuilder:1586","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][(int)++] = 'e'","position":"org.apache.commons.lang3.text.StrBuilder:775","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.CompareToBuilder:426","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:316","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[] = new char[org.apache.commons.lang3.text.StrBuilder.int]","position":"org.apache.commons.lang3.text.StrBuilder:128","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"denominator":"java.lang.Integer.MIN_VALUE","numerator":"power"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(-(this.java.lang.Integer.int) , -int)","position":"org.apache.commons.lang3.math.Fraction:497","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return this;\n} else if (int == 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} else if (int < 0) {\n    if (int == (java.lang.Integer.int)) {\n        return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n    } \n    return org.apache.commons.lang3.math.Fraction.invert().pow(-int);\n} else {\n    final org.apache.commons.lang3.math.Fraction org.apache.commons.lang3.math.Fraction = org.apache.commons.lang3.math.Fraction.multiplyBy(this);\n    if ((int % 2) == 0) {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2));\n    } else {\n        return org.apache.commons.lang3.math.Fraction.pow((int / 2)).multiplyBy(this);\n    }\n}","position":"org.apache.commons.lang3.math.Fraction:547","type":"CtIfImpl"},"status":-2},{"failures":[23],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","offset":"len","abrevMarker":"org.apache.commons.lang3.StringUtils.EMPTY","maxWidth":"len"},"name":"replace","transplant":{"sourceCode":"if (int <= 4) {\n    return (java.lang.String.substring(0, (int - 3))) + java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6410","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2210","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"numerator":"numerator"},"name":"replace","transplant":{"sourceCode":"if (int >= 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.math.Fraction:528","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:995","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.tuple.ImmutablePair<L, R>(L , R)","position":"org.apache.commons.lang3.tuple.ImmutablePair:58","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || ((int = java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:663","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-1","position":"org.apache.commons.lang3.ArrayUtils:128","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1030","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"fieldName":"fieldName","class1":"cls"},"name":"add","transplant":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getField(java.lang.String)","position":"org.apache.commons.lang3.reflect.FieldUtils:124","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class<?>, java.lang.String, boolean)","position":"org.apache.commons.lang3.reflect.FieldUtils:555","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < 4) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width is 4\");\n} ","position":"org.apache.commons.lang3.StringUtils:6397","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        final int int = int;\n        while ((++int) < (int)) {\n            if ((char[][int]) != char) {\n                break;\n            } \n        }\n        final int int = int - int;\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n        int -= int;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1701","type":"CtForImpl"},"status":-2},{"failures":[24,25,26,27,28],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.setContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedException:188","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedException:169","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"date":"date"},"name":"add","transplant":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.FastDatePrinter:453","type":"CtInvocationImpl"},"status":0},{"failures":[29,30,31,32,33],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"float++","position":"org.apache.commons.lang3.reflect.MemberUtils:147","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int <<= 8","position":"org.apache.commons.lang3.reflect.TypeUtils:213","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T)","position":"org.apache.commons.lang3.ArrayUtils:5270","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"((boolean[].int) > (int + 3))","name":"conditionalBoundary","position":"org.apache.commons.lang3.Conversion:574","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.StringUtils:2831","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Boolean, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Boolean, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5982","type":"CtIfImpl"},"status":-2},{"failures":[34,35],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1030","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream != null) {\n    org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close();\n} ","position":"org.apache.commons.lang3.SerializationUtils:105","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.lang3.ClassUtils:436","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:648","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++ , int++) {\n    if ((char[][int]) != (java.lang.String.charAt(int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2109","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder().append(java.lang.Object)","position":"org.apache.commons.lang3.text.StrSubstitutor:596","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:329","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:478","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:863","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.Math.java.lang.Math.min(4, (int + 1))","position":"org.apache.commons.lang3.Conversion:516","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0, int int = java.util.Map.Entry<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n    int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], java.lang.Short.shortValue(), int);\n    if (int < 0) {\n        break;\n    } \n    java.util.BitSet.set(int++);\n}","position":"org.apache.commons.lang3.ArrayUtils:5462","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType()","position":"org.apache.commons.lang3.reflect.TypeUtils:1350","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType();\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1349","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.math.NumberUtils:1229","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:528","type":"CtReturnImpl"},"status":-2},{"failures":[36],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:801","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Byte>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Byte getLeft() {\n        return java.lang.Byte.java.lang.Byte.valueOf(byte);\n    }\n\n    @java.lang.Override\n    public java.lang.Byte getRight() {\n        return java.lang.Byte.java.lang.Byte.valueOf(byte);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:221","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5544","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.checkTokenized()","position":"org.apache.commons.lang3.text.StrTokenizer:505","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.lang3.AnnotationUtils:264","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:829","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:156","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(short[], 0, short[].int)","position":"org.apache.commons.lang3.ArrayUtils:1481","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.char[]","position":"org.apache.commons.lang3.text.StrBuilder:379","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[][int]) == char) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + 1), 1);\n    break;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1725","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (char) {\n    case '0' :\n        return new boolean[]{ false , false , false , false };\n    case '1' :\n        return new boolean[]{ true , false , false , false };\n    case '2' :\n        return new boolean[]{ false , true , false , false };\n    case '3' :\n        return new boolean[]{ true , true , false , false };\n    case '4' :\n        return new boolean[]{ false , false , true , false };\n    case '5' :\n        return new boolean[]{ true , false , true , false };\n    case '6' :\n        return new boolean[]{ false , true , true , false };\n    case '7' :\n        return new boolean[]{ true , true , true , false };\n    case '8' :\n        return new boolean[]{ false , false , false , true };\n    case '9' :\n        return new boolean[]{ true , false , false , true };\n    case 'a' :\n    case 'A' :\n        return new boolean[]{ false , true , false , true };\n    case 'b' :\n    case 'B' :\n        return new boolean[]{ true , true , false , true };\n    case 'c' :\n    case 'C' :\n        return new boolean[]{ false , false , true , true };\n    case 'd' :\n    case 'D' :\n        return new boolean[]{ true , false , true , true };\n    case 'e' :\n    case 'E' :\n        return new boolean[]{ false , true , true , true };\n    case 'f' :\n    case 'F' :\n        return new boolean[]{ true , true , true , true };\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}","position":"org.apache.commons.lang3.Conversion:161","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","position":"org.apache.commons.lang3.LocaleUtils:107","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.io.ByteArrayInputStream java.io.ByteArrayInputStream = new java.io.ByteArrayInputStream(byte[])","position":"org.apache.commons.lang3.SerializationUtils:83","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A data class for storing the results of the background initialization\n * performed by {@code MultiBackgroundInitializer}. Objects of this inner\n * class are returned by {@link MultiBackgroundInitializer#initialize()}.\n * They allow access to all result objects produced by the\n * {@link BackgroundInitializer} objects managed by the owning instance. It\n * is also possible to retrieve status information about single\n * {@link BackgroundInitializer}s, i.e. whether they completed normally or\n * caused an exception.\n */\npublic static class MultiBackgroundInitializerResults {\n    /** \n     * A map with the child initializers.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> initializers;\n\n    /** \n     * A map with the result objects.\n     */\nprivate final java.util.Map<java.lang.String, java.lang.Object> resultObjects;\n\n    /** \n     * A map with the exceptions.\n     */\nprivate final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> exceptions;\n\n    /** \n     * Creates a new instance of {@code MultiBackgroundInitializerResults}\n     * and initializes it with maps for the {@code BackgroundInitializer}\n     * objects, their result objects and the exceptions thrown by them.\n     * \n     * @param inits the {@code BackgroundInitializer} objects\n     * @param results the result objects\n     * @param excepts the exceptions\n     */\nprivate MultiBackgroundInitializerResults(final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> inits ,final java.util.Map<java.lang.String, java.lang.Object> results ,final java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> excepts) {\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>;\n        java.util.Map<java.lang.String, java.lang.Object> = java.util.Map<java.lang.String, java.lang.Object>;\n        java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>;\n    }\n\n    /** \n     * Returns the {@code BackgroundInitializer} with the given name. If the\n     * name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the {@code BackgroundInitializer} with this name\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.BackgroundInitializer<?> getInitializer(final java.lang.String name) {\n        return org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n    }\n\n    /** \n     * Returns the result object produced by the {@code\n     * BackgroundInitializer} with the given name. This is the object\n     * returned by the initializer's {@code initialize()} method. If this\n     * {@code BackgroundInitializer} caused an exception, <b>null<\/b> is\n     * returned. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the result object produced by this {@code\n     * BackgroundInitializer}\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic java.lang.Object getResultObject(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a flag whether the {@code BackgroundInitializer} with the\n     * given name caused an exception.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return a flag whether this initializer caused an exception\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic boolean isException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.containsKey(java.lang.String);\n    }\n\n    /** \n     * Returns the {@code ConcurrentException} object that was thrown by the\n     * {@code BackgroundInitializer} with the given name. If this\n     * initializer did not throw an exception, the return value is\n     * <b>null<\/b>. If the name cannot be resolved, an exception is thrown.\n     * \n     * @param name the name of the {@code BackgroundInitializer}\n     * @return the exception thrown by this initializer\n     * @throws NoSuchElementException if the name cannot be resolved\n     */\npublic org.apache.commons.lang3.concurrent.ConcurrentException getException(final java.lang.String name) {\n        org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String);\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(java.lang.String);\n    }\n\n    /** \n     * Returns a set with the names of all {@code BackgroundInitializer}\n     * objects managed by the {@code MultiBackgroundInitializer}.\n     * \n     * @return an (unmodifiable) set with the names of the managed {@code\n     * BackgroundInitializer} objects\n     */\npublic java.util.Set<java.lang.String> initializerNames() {\n        return java.util.Collections.java.util.Collections.unmodifiableSet(java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.keySet());\n    }\n\n    /** \n     * Returns a flag whether the whole initialization was successful. This\n     * is the case if no child initializer has thrown an exception.\n     * \n     * @return a flag whether the initialization was successful\n     */\npublic boolean isSuccessful() {\n        return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.isEmpty();\n    }\n\n    /** \n     * Checks whether an initializer with the given name exists. If not,\n     * throws an exception. If it exists, the associated child initializer\n     * is returned.\n     * \n     * @param name the name to check\n     * @return the initializer with this name\n     * @throws NoSuchElementException if the name is unknown\n     */\nprivate org.apache.commons.lang3.concurrent.BackgroundInitializer<?> checkName(final java.lang.String name) {\n        final org.apache.commons.lang3.concurrent.BackgroundInitializer<?> org.apache.commons.lang3.concurrent.BackgroundInitializer<?> = java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>.get(java.lang.String);\n        if (org.apache.commons.lang3.concurrent.BackgroundInitializer<?> == null) {\n            throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String));\n        } \n        return org.apache.commons.lang3.concurrent.BackgroundInitializer<?>;\n    }\n}","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:227","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","position":"org.apache.commons.lang3.time.StopWatch:207","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring((int + (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:2342","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    this.char[] = java.lang.String.toCharArray();\n} else {\n    this.char[] = null;\n}","position":"org.apache.commons.lang3.text.StrTokenizer:474","type":"CtIfImpl"},"status":-2},{"failures":[37,38,39,40,41],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.math.Fraction:897","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (short == (short[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2235","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.lang3.text.StrSubstitutor:1195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.EnumSet<org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION>.contains(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:71","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.time.FastDatePrinter:240","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1357","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.ObjectUtils:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.(getClass()) == (java.lang.Object.getClass())) {\n    final org.apache.commons.lang3.mutable.MutableObject<?> org.apache.commons.lang3.mutable.MutableObject<?> = ((org.apache.commons.lang3.mutable.MutableObject<?>)(java.lang.Object));\n    return this.T.equals(org.apache.commons.lang3.mutable.MutableObject<?>.?);\n} ","position":"org.apache.commons.lang3.mutable.MutableObject:100","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'W' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:247","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.time.DurationFormatUtils:512","type":"CtBreakImpl"},"status":-2},{"failures":[42],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:413","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.StringBuilder.length()","position":"org.apache.commons.lang3.Conversion:1437","type":"CtLocalVariableImpl"},"status":-1},{"failures":[43,44],"variableMapping":{"srcPos":"strLen","nShorts":"strLen"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.String.charAt(int);\n    if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n        boolean = true;\n    } else if (boolean) {\n        char[][int++] = char;\n        boolean = false;\n    } else {\n        continue;\n    }\n}","position":"org.apache.commons.lang3.text.WordUtils:546","type":"CtForImpl"},"status":-1},{"failures":[45,31,46,32,47,33,48,49,50,51],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:497","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n    java.lang.reflect.Method = java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:488","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ true , true , false , true }","position":"org.apache.commons.lang3.Conversion:253","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Boolean[] == null) {\n    return null;\n} else if ((java.lang.Boolean[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3434","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"increase":"startIndex","greater":"startIndex"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    int += 3 * int;\n} ","position":"org.apache.commons.lang3.StringUtils:4757","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (int > int) {\n        java.lang.StringBuilder.append(char);\n    } \n    java.lang.StringBuilder.append(long[][int]);\n}","position":"org.apache.commons.lang3.StringUtils:3621","type":"CtForImpl"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63],"variableMapping":{"inCache":"org.apache.commons.lang3.time.FastDateParser.NUMBER_MONTH_STRATEGY"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String.length()) >= 3 ? org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:482","type":"CtReturnImpl"},"status":-1},{"failures":[64],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence[] == null)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:2018","type":"CtIfImpl"},"status":-1},{"failures":[65],"variableMapping":{"lhs":"obj","rhs":"obj"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:329","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue())","position":"org.apache.commons.lang3.mutable.MutableShort:247","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.RandomStringUtils:251","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>","position":"org.apache.commons.lang3.text.StrTokenizer:448","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:247","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>)","position":"org.apache.commons.lang3.text.StrSubstitutor:839","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object))","position":"org.apache.commons.lang3.ArrayUtils:248","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.apache.commons.lang3.reflect.FieldUtils:699","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"org.apache.commons.lang3.math.NumberUtils:486","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int))","position":"org.apache.commons.lang3.text.StrSubstitutor:800","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","position":"org.apache.commons.lang3.SerializationUtils:229","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) && (int != 0)) {\n    while (int != 0) {\n        int += 12 * int;\n        int = 0;\n    }\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:327","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.text.Format java.text.Format = java.util.Iterator<java.text.Format>.next()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:202","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.CharRange.CharacterIterator.prepareNext()","position":"org.apache.commons.lang3.CharRange:345","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrBuilder:2651","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0)","position":"org.apache.commons.lang3.time.FastDateParser:289","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"switch (char) {\n    case '\\'' :\n        if (boolean) {\n            java.lang.StringBuilder = null;\n            boolean = false;\n        } else {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n            boolean = true;\n        }\n        break;\n    case 'y' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'M' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'd' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'H' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'm' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 's' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    case 'S' :\n        java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object;\n        break;\n    default :\n        if (java.lang.StringBuilder == null) {\n            java.lang.StringBuilder = new java.lang.StringBuilder();\n            java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n        } \n        java.lang.StringBuilder.append(char);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:495","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:3104","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5515","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    return java.lang.String.concat(java.lang.String.substring(0, int));\n} else {\n    final char[] char[] = new char[int];\n    final char[] char[] = java.lang.String.toCharArray();\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = char[][(int % int)];\n    }\n    return java.lang.String.concat(new java.lang.String(char[]));\n}","position":"org.apache.commons.lang3.StringUtils:5317","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)), java.lang.reflect.Type);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1578","type":"CtIfImpl"},"status":-2},{"failures":[66],"variableMapping":{"nBools":"size","dstPos":"index"},"name":"replace","transplant":{"sourceCode":"if (((int - 1) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + 1), ((int) - int))","position":"org.apache.commons.lang3.text.StrBuilder:1607","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Double.(java.lang.Double.doubleToLongBits(double)) != java.lang.Double.(java.lang.Double.doubleToLongBits(double))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Double>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Double getLeft() {\n            return java.lang.Double.java.lang.Double.valueOf(double);\n        }\n\n        @java.lang.Override\n        public java.lang.Double getRight() {\n            return java.lang.Double.java.lang.Double.valueOf(double);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:388","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.Range:259","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(')","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Package.getName())","position":"org.apache.commons.lang3.ClassPathUtils:84","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Locale == null) {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat();\n} else {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale);\n}","position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:840","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = !java.lang.Character.(java.lang.Character.isDigit(char))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:354","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(char)) {\n    org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition);\n    char = java.lang.String.charAt(java.text.ParsePosition.getIndex());\n    if ((char != (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) && (char != (org.apache.commons.lang3.text.ExtendedMessageFormat.char))) {\n        boolean = true;\n        continue;\n    } \n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:338","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:696","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SerializationUtils.org.apache.commons.lang3.SerializationUtils.serialize(java.io.Serializable, java.io.ByteArrayOutputStream)","position":"org.apache.commons.lang3.SerializationUtils:179","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"cal":"end"},"name":"add","transplant":{"sourceCode":"java.util.Calendar.clear()","position":"org.apache.commons.lang3.time.FastDateParser:314","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date(long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:286","type":"CtInvocationImpl"},"status":0},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"variableMapping":{"start":"start","removeLen":"len"},"name":"add","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrTokenizer:697","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:692","type":"CtIfImpl"},"status":-1},{"failures":[117,118,119,120],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.BitField:39","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new java.util.Locale(\"ja\" , \"JP\" , \"JP\")","position":"org.apache.commons.lang3.time.FastDateParser:68","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.this(null)","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:102","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.util.Comparator<java.lang.Object>.compare(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.builder.CompareToBuilder:447","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.ArrayUtils:1341","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":45,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":20,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":54,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":62,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":77,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":2,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":78,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":76,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_emptyArray":0,"org.apache.commons.lang3.text.StrBuilderTest.testReverse":22,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":3,"org.apache.commons.lang3.BitFieldTest.testGetShortValue":118,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":73,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":61,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":7,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":32,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCodeEx1":16,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testConstructorExEvenNegative":18,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":6,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":88,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":67,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCodeEx2":17,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":58,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":115,"org.apache.commons.lang3.BitFieldTest.testGetValue":117,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":43,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":56,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":49,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testConstructorExZero":13,"org.apache.commons.lang3.BitFieldTest.testSetValue":120,"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringInt":10,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastOrdinalIndexOf":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":70,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":71,"org.apache.commons.lang3.math.FractionTest.testDivide":19,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":47,"org.apache.commons.lang3.StringUtilsSubstringTest.testRight_String":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":5,"org.apache.commons.lang3.mutable.MutableShortTest.testEquals":65,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":74,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementShortArray":38,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":60,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextEntries":25,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":48,"org.apache.commons.lang3.text.StrTokenizerTest.test8":97,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":33,"org.apache.commons.lang3.text.StrTokenizerTest.test5":94,"org.apache.commons.lang3.text.StrTokenizerTest.test4":93,"org.apache.commons.lang3.text.StrTokenizerTest.test7":96,"org.apache.commons.lang3.text.StrTokenizerTest.test6":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":108,"org.apache.commons.lang3.text.StrTokenizerTest.test1":90,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":89,"org.apache.commons.lang3.text.StrTokenizerTest.test3":92,"org.apache.commons.lang3.text.StrTokenizerTest.test2":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":4,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":27,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":66,"org.apache.commons.lang3.ArrayUtilsTest.testContainsShort":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":109,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":110,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":111,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":112,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":30,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":68,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":69,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":46,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":50,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":8,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":28,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":24,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":59,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeEx2":15,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeEx1":14,"org.apache.commons.lang3.ConversionTest.testIntToHex":42,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":55,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":21,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":101,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShort":40,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":53,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":102,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":81,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":83,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":85,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testConstructorExEven":12,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":87,"org.apache.commons.lang3.time.FastDateParserTest.testParses":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":107,"org.apache.commons.lang3.StringUtilsSubstringTest.testMid_String":11,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":119,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":9,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":63,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":34,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":31,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":99,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":106,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfAny_StringStringArray":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":103,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":100,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":116,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextLabels":26,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":36,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfShortWithStartIndex":41,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":44}}]
