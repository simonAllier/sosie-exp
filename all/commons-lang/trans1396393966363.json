[{"failures":[],"variableMapping":{"str":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5563","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || (int > (java.lang.String.length()))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2248","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String).append(' ')","position":"org.apache.commons.lang3.time.FastDateParser:624","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream java.io.ObjectInputStream = null","position":"org.apache.commons.lang3.SerializationUtils:219","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.text.ParsePosition.getIndex()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:376","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:762","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String.substring(int, (int + int))","position":"org.apache.commons.lang3.StringUtils:2257","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.CharUtils:381","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2495","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1760","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"buf":"buf"},"name":"add","transplant":{"sourceCode":"return java.lang.StringBuffer","position":"org.apache.commons.lang3.time.FastDatePrinter:477","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:475","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:143","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.EqualsBuilder:415","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String.toUpperCase(java.util.Locale)","position":"org.apache.commons.lang3.StringUtils:5614","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], double[].int, double[].int)","position":"org.apache.commons.lang3.ArrayUtils:3973","type":"CtInvocationImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:182","type":"CtAssignmentImpl"},"status":-1},{"failures":[1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != int) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Integer>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Integer getLeft() {\n            return java.lang.Integer.java.lang.Integer.valueOf(int);\n        }\n\n        @java.lang.Override\n        public java.lang.Integer getRight() {\n            return java.lang.Integer.java.lang.Integer.valueOf(int);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:556","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1299","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int","position":"org.apache.commons.lang3.Conversion:982","type":"CtLocalVariableImpl"},"status":-2},{"failures":[2],"variableMapping":{"length":"length","index":"length"},"name":"add","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:5192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > int) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4569","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:547","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'H' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:477","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n    int = java.util.Calendar.int;\n    int = java.util.Calendar.int;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:649","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int < 0) || (int > (java.lang.String.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:537","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.lang.String.length()) ; int++) {\n    char = java.lang.String.charAt(int);\n    if (char == '0') {\n        int++;\n    } else {\n        break;\n    }\n}","position":"org.apache.commons.lang3.math.NumberUtils:468","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"found an unhandled type: \" + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:412","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:1675","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(1)","position":"org.apache.commons.lang3.BooleanUtils:604","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5994","type":"CtIfImpl"},"status":-2},{"failures":[3],"variableMapping":{"i":"pos","chars":"buffer"},"name":"replace","transplant":{"sourceCode":"if (((char[][int]) == 'e') || ((char[][int]) == 'E')) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1420","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++ , int++) {\n    if ((char[][int]) != (java.lang.String.charAt(int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2109","type":"CtForImpl"},"status":-1},{"failures":[],"binaryOperator":"(java.lang.String + \" is not a valid number.\")","name":"math","position":"org.apache.commons.lang3.math.NumberUtils:541","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(long[], char, 0, long[].int)","position":"org.apache.commons.lang3.StringUtils:3339","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:379","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:481","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"static class SyncAvoid {\n    /** \n     * Unmodifiable list of available locales.\n     */\nprivate static final java.util.List<java.util.Locale> AVAILABLE_LOCALE_LIST;\n\n    /** \n     * Unmodifiable set of available locales.\n     */\nprivate static final java.util.Set<java.util.Locale> AVAILABLE_LOCALE_SET;\n\n    static {\n        final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(java.util.Arrays.java.util.Arrays.asList(java.util.Locale.java.util.Locale.getAvailableLocales()));\n        org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n        org.apache.commons.lang3.LocaleUtils.SyncAvoid.java.util.Set<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableSet(new java.util.HashSet<java.util.Locale>(java.util.List<java.util.Locale>));\n    }\n}","position":"org.apache.commons.lang3.LocaleUtils:317","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    if (int == 0) {\n        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n        if (boolean) {\n            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n        } \n        int += int;\n        final int int = int;\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String java.lang.String = null;\n        if (org.apache.commons.lang3.text.StrMatcher != null) {\n            final char[] char[] = java.lang.String.toCharArray();\n            int int = 0;\n            for (int int = 0 ; int < (char[].int) ; int++) {\n                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                    break;\n                } \n                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                    java.lang.String = java.lang.String.substring(0, int);\n                    java.lang.String = java.lang.String.substring((int + int));\n                    break;\n                } \n            }\n        } \n        if (java.util.List<java.lang.String> == null) {\n            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n        } \n        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n        if (java.lang.String == null) {\n            java.lang.String = java.lang.String;\n        } \n        if (java.lang.String != null) {\n            final int int = java.lang.String.length();\n            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n            boolean = true;\n            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n            int = (int + int) - (int - int);\n            int += int;\n            int += int;\n            int += int;\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        } \n        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n        break;\n    } else {\n        int--;\n        int += int;\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:795","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)","position":"org.apache.commons.lang3.reflect.TypeUtils:606","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)","position":"org.apache.commons.lang3.reflect.TypeUtils:605","type":"CtLocalVariableImpl"},"status":-2},{"failures":[4],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>()","position":"org.apache.commons.lang3.LocaleUtils:298","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:309","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"((\"FastDateParser[\" + (java.lang.String)) + \",\")","name":"math","position":"org.apache.commons.lang3.time.FastDateParser:248","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"The field must not be null\")","position":"org.apache.commons.lang3.reflect.FieldUtils:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.CharSequence == null) && (java.lang.CharSequence == null)","position":"org.apache.commons.lang3.StringUtils:7314","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.Class<? extends java.lang.annotation.Annotation>.getDeclaredMethods()) {\n        if (((java.lang.reflect.Method.getParameterTypes().int) == 0) && org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(java.lang.reflect.Method.getReturnType()))) {\n            final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n            final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n            if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.memberEquals(java.lang.reflect.Method.getReturnType(), java.lang.Object, java.lang.Object))) {\n                return false;\n            } \n        } \n    }\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    return false;\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    return false;\n}","position":"org.apache.commons.lang3.AnnotationUtils:136","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","position":"org.apache.commons.lang3.ArrayUtils:243","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDatePrinter:1269","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return true;\n} ","position":"org.apache.commons.lang3.ClassUtils:647","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(int + 3)","name":"math","position":"org.apache.commons.lang3.Conversion:568","type":"mutation","status":0},{"failures":[5,6],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append('+')","position":"org.apache.commons.lang3.time.FastDatePrinter:1201","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:913","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"search":"escape","replace":"escape","i":"offset","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"if ((this.char[][int]) == char) {\n    this.char[][int] = char;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1851","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1190","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], short)","position":"org.apache.commons.lang3.ArrayUtils:5162","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = org.apache.commons.lang3.ArrayUtils.((T[])(org.apache.commons.lang3.ArrayUtils.add(T[], int, T, java.lang.Class<?>)))","position":"org.apache.commons.lang3.ArrayUtils:4296","type":"CtLocalVariableImpl"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append(':')","position":"org.apache.commons.lang3.time.FastDatePrinter:1209","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1524","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AtomicSafeInitializer<T>>()","position":"org.apache.commons.lang3.concurrent.AtomicSafeInitializer:60","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","position":"org.apache.commons.lang3.builder.ToStringStyle:1535","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"style":"dateStyle","org.apache.commons.lang3.time.FastDateFormat.cache":"org.apache.commons.lang3.time.FastDateFormat.cache"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, null, null)","position":"org.apache.commons.lang3.time.FastDateFormat:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(int, int, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:355","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:548","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , true , true , false }","position":"org.apache.commons.lang3.Conversion:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"a","b":"b","c":"a","this":"this"},"name":"add","transplant":{"sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(double, double), double)","position":"org.apache.commons.lang3.math.NumberUtils:1175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(double, double), double)","position":"org.apache.commons.lang3.math.NumberUtils:1281","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 4) {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n} else {\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == \"true\") {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:554","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(0, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:824","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:339","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.ObjectUtils:934","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.java.lang.String.valueOf(char))","position":"org.apache.commons.lang3.StringUtils:5270","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.leftPad(java.lang.String, int, java.lang.String.java.lang.String.valueOf(char))","position":"org.apache.commons.lang3.StringUtils:5382","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5885","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char char = java.lang.CharSequence.charAt(int++)","position":"org.apache.commons.lang3.CharSequenceUtils:197","type":"CtLocalVariableImpl"},"status":-2},{"failures":[54],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:934","type":"CtIfImpl"},"status":-1},{"failures":[55,56,57],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NullPointerException java.lang.NullPointerException","position":"org.apache.commons.lang3.BooleanUtils:1083","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1298","type":"CtInvocationImpl"},"status":-1},{"failures":[58],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException","position":"org.apache.commons.lang3.CharEncoding:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    return org.apache.commons.lang3.ArrayUtils.char[];\n} ","position":"org.apache.commons.lang3.text.StrBuilder:378","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.String, \"Parameter \\'%s\\' must not be null!\", \"resourceName\")","position":"org.apache.commons.lang3.ClassPathUtils:108","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.mutable.MutableInt:202","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((float)(double))","position":"org.apache.commons.lang3.mutable.MutableDouble:221","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch","this":"this"},"name":"add","transplant":{"sourceCode":"return \"\\\\u0\" + (java.lang.Integer.toHexString(char))","position":"org.apache.commons.lang3.CharUtils:358","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\\\\u\" + java.lang.Integer.(java.lang.Integer.toHexString(char))","position":"org.apache.commons.lang3.CharUtils:360","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:479","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:431","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Set<java.lang.reflect.Type> java.util.Set<java.lang.reflect.Type> = new java.util.HashSet<java.lang.reflect.Type>(java.lang.reflect.Type[].int)","position":"org.apache.commons.lang3.reflect.TypeUtils:1132","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:549","type":"CtReturnImpl"},"status":-2},{"failures":[59],"binaryOperator":"((long)(int)) * ((long)(org.apache.commons.lang3.math.Fraction.int))","name":"math","position":"org.apache.commons.lang3.math.Fraction:892","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, null, false, false, null)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[])","position":"org.apache.commons.lang3.time.FastDatePrinter:184","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ false , true , false , true }","position":"org.apache.commons.lang3.Conversion:233","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , false , true , true }","position":"org.apache.commons.lang3.Conversion:190","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"shift"},"name":"add","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (65535 & (short[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:770","type":"CtLocalVariableImpl"},"status":-2},{"failures":[60,61],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.lang3.StringUtils:3086","type":"mutation","status":-1},{"failures":[],"variableMapping":{"startIndex":"startIndex"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2025","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, (int - int))","position":"org.apache.commons.lang3.text.StrBuilder:421","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (int >> int)));\n}","position":"org.apache.commons.lang3.Conversion:1330","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.rightPad(java.lang.String, int, java.lang.String.charAt(0))","position":"org.apache.commons.lang3.StringUtils:5312","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean","position":"org.apache.commons.lang3.BooleanUtils:362","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > int) {\n    short = short[][int];\n    short[][int] = short[][int];\n    short[][int] = short;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1860","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.time.DurationFormatUtils.Token.(org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(org.apache.commons.lang3.time.DurationFormatUtils.Token[], org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object))) {\n    int += 60 * int;\n    int = 0;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:388","type":"CtIfImpl"},"status":-2},{"failures":[62],"variableMapping":{"str1":"str","str2":"str"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6503","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4324","type":"CtReturnImpl"},"status":-1},{"failures":[63,64,65],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int))","position":"org.apache.commons.lang3.time.FastDatePrinter:254","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.FastDatePrinter:233","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"array":"array","values":"array","this":"this"},"name":"replace","transplant":{"sourceCode":"if ((org.apache.commons.lang3.ArrayUtils.isEmpty(char[])) || (org.apache.commons.lang3.ArrayUtils.isEmpty(char[]))) {\n    return org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:5623","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.removeAll(((java.lang.Object)(char[])), org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[]))))","position":"org.apache.commons.lang3.ArrayUtils:5592","type":"CtReturnImpl"},"status":-2},{"failures":[66,67,68,69,70],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?> java.lang.Class<?>;\n    java.lang.Class<?> java.lang.Class<?>;\n    java.lang.Class<?> = java.lang.Class<?>[][int];\n    java.lang.Class<?> = java.lang.Class<?>[][int];\n    float += org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class<?>, java.lang.Class<?>);\n}","position":"org.apache.commons.lang3.reflect.MemberUtils:115","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence, java.lang.CharSequence, int)","position":"org.apache.commons.lang3.StringUtils:1306","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , true , false , true }","position":"org.apache.commons.lang3.Conversion:187","type":"CtReturnImpl"},"status":-2},{"failures":[71,72],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, false)","position":"org.apache.commons.lang3.RandomStringUtils:97","type":"CtReturnImpl"},"status":-1},{"failures":[73,74,75,76],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2870","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:320","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.toString(boolean, \"on\", \"off\")","position":"org.apache.commons.lang3.BooleanUtils:849","type":"CtReturnImpl"},"status":-2},{"failures":[77],"variableMapping":{"c":"date"},"name":"add","transplant":{"sourceCode":"java.util.Calendar.setLenient(false)","position":"org.apache.commons.lang3.time.DateUtils:652","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:829","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int -= 1","position":"org.apache.commons.lang3.time.DurationFormatUtils:340","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:417","type":"CtReturnImpl"},"status":-2},{"failures":[78],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1124","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","position":"org.apache.commons.lang3.StringUtils:4697","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2924","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1763","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.String.startsWith(\"0\", int)) && ((java.lang.String.length()) > (int + 1))) {\n    int = 8;\n    int++;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:742","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = (15 & org.apache.commons.lang3.Conversion.(org.apache.commons.lang3.Conversion.hexDigitToInt(java.lang.String.charAt((int + int))))) << int;\n    final int int = 15 << int;\n    byte = ((byte)((byte & (~int)) | int));\n}","position":"org.apache.commons.lang3.Conversion:1014","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateParser:423","type":"CtReturnImpl"},"status":0},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91],"variableMapping":{"index":"length"},"name":"replace","transplant":{"sourceCode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} ","position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.getChars(int, (int + int), char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:708","type":"CtInvocationImpl"},"status":-1},{"failures":[92,93],"variableMapping":{"start":"srcPos"},"name":"replace","transplant":{"sourceCode":"int int = int + 1","position":"org.apache.commons.lang3.math.NumberUtils:1368","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((boolean[].int) - 1) - int","position":"org.apache.commons.lang3.Conversion:515","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2030","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"className must not be null.\");\n} else if (java.lang.String.endsWith(\"[]\")) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    while (java.lang.String.endsWith(\"[]\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2));\n        java.lang.StringBuilder.append(\"[\");\n    }\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } else {\n        java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\");\n    }\n    java.lang.String = java.lang.StringBuilder.toString();\n} ","position":"org.apache.commons.lang3.ClassUtils:960","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiNumeric(char))","position":"org.apache.commons.lang3.CharUtils:536","type":"CtReturnImpl"},"status":-2},{"failures":[94,95],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:448","type":"CtThrowImpl"},"status":-1},{"failures":[79,96,80,97,81,82,98,83,99,100,84,85,101,102,103,104,105,86,106,87,107,88,108,89,109,110],"variableMapping":{"srcPos":"size","nShorts":"insertLen"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:1224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int))","position":"org.apache.commons.lang3.text.StrBuilder:1813","type":"CtInvocationImpl"},"status":-1},{"failures":[111],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.lang3.mutable.MutableLong:212","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(T[], 0, T[], 0, T[].int)","position":"org.apache.commons.lang3.ArrayUtils:3725","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Class<?>.isInstance(java.lang.Object)) == false) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:1201","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.time.DurationFormatUtils:533","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:429","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1995","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(new char[]{ char })","position":"org.apache.commons.lang3.CharUtils:311","type":"CtReturnImpl"},"status":-2},{"failures":[112,113],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","position":"org.apache.commons.lang3.math.Fraction:190","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"))","position":"org.apache.commons.lang3.event.EventUtils:52","type":"CtThrowImpl"},"status":-1},{"failures":[114,115,116,117,42],"variableMapping":{"duration":"arrayStart"},"name":"add","transplant":{"sourceCode":"if ((java.lang.String.length()) != 0) {\n    java.lang.String = java.lang.String.substring(1);\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"org.apache.commons.lang3.StringUtils:2526","type":"CtLocalVariableImpl"},"status":-2},{"failures":[118,119,120,121],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '6'","position":"org.apache.commons.lang3.Conversion:449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[][int]","position":"org.apache.commons.lang3.text.StrBuilder:312","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((char[][int]) == char) {\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + 1), 1);\n        break;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1724","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    final int int = int;\n    while ((++int) < (int)) {\n        if ((char[][int]) != char) {\n            break;\n        } \n    }\n    final int int = int - int;\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int);\n    int -= int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1702","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3146","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1547","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"dstInit"},"name":"replace","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.Conversion:1085","type":"CtLocalVariableImpl"},"status":-2},{"failures":[122,123],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = (byte[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2488","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:484","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<?>.hasNext()) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.util.Iterator<?>.next());\n    if (java.util.Iterator<?>.hasNext()) {\n        org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:1159","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 1)","position":"org.apache.commons.lang3.time.DateUtils:1224","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.lang.String[].int) - 1","position":"org.apache.commons.lang3.LocaleUtils:127","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:423","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return M","position":"org.apache.commons.lang3.tuple.ImmutableTriple:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:118","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":32,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBoolean":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":31,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":92,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":89,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":50,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":10,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":102,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":106,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":58,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":43,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":47,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":120,"org.apache.commons.lang3.math.FractionTest.testCompareTo":59,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":45,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":38,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":63,"org.apache.commons.lang3.StringUtilsTest.testSplit_String":60,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":69,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":109,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":90,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":97,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":30,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfBooleanWithStartIndex":75,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StrBuilder_int_int":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":98,"org.apache.commons.lang3.StringUtilsTest.testRemoveEndIgnoreCase":62,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testStartsWithAny":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":83,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":113,"org.apache.commons.lang3.text.StrBuilderTest.testEndsWith":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":81,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":19,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":117,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":116,"org.apache.commons.lang3.builder.CompareToBuilderTest.testFloatArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":33,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":4,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":41,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":103,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":61,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":5,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgNullStringShouldThrow":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":24,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":70,"org.apache.commons.lang3.mutable.MutableLongTest.testPrimitiveValues":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":84,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":13,"org.apache.commons.lang3.ValidateTest.testNotBlankNullStringShouldThrow":94,"org.apache.commons.lang3.text.StrBuilderTest.testCharAt":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":110,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":85,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":67,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":57,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":40,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":42,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":27,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":17,"org.apache.commons.lang3.StringUtilsStartsEndsWithTest.testEndsWithAny":119,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":48,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":71,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":100,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":0,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":49,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":21,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByteWithStartIndex":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":25,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementBooleanArray":76,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":93,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":86,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":68,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayStart":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":108,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":46,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":20,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":7,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":66,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfByte":122,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":87,"org.apache.commons.lang3.ArrayUtilsTest.testContainsBoolean":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":104,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":88}}]
