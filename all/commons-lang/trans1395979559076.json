[{"failures":[],"variableMapping":{"c1":"c2","c2":"c2"},"name":"add","transplant":{"sourceCode":"return T.compareTo(T)","position":"org.apache.commons.lang3.ObjectUtils:513","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    return boolean ? -1 : 1;\n} ","position":"org.apache.commons.lang3.ObjectUtils:510","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Iterable<?> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:4127","type":"CtIfImpl"},"status":-2},{"failures":[0,1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return 'c'","position":"org.apache.commons.lang3.Conversion:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'b';\n} else {\n    return 'a';\n}","position":"org.apache.commons.lang3.Conversion:538","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[]","position":"org.apache.commons.lang3.ClassUtils:518","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:112","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == null) {\n    int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:814","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)","position":"org.apache.commons.lang3.reflect.TypeUtils:610","type":"CtLocalVariableImpl"},"status":-2},{"failures":[2],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:180","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:3079","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.trim(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:444","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((!boolean) && (((org.apache.commons.lang3.time.DateUtils.int) == int) || (int < 30))) {\n    long = long - (int * 60000L);\n} ","position":"org.apache.commons.lang3.time.DateUtils:996","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:534","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4998","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.CharSet:174","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.math.BigInteger.bitLength()) > 31) {\n    throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n} ","position":"org.apache.commons.lang3.math.Fraction:777","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:227","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((int + int) >= int) || ((char[][(int + int)]) != (char[][(int + int)]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:833","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = (int) - 1 ; int >= 0 ; int--) {\n    if ((char[][int]) != (char[][int])) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2684","type":"CtForImpl"},"status":-2},{"failures":[3,4],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = (long[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2071","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"byte = byte","position":"org.apache.commons.lang3.math.NumberUtils:1157","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3343","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"thisBuf":"chars","otherBuf":"chars","size":"i"},"name":"replace","transplant":{"sourceCode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    if ((char[][int]) != (char[][int])) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.StrBuilder:2684","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((char[][int]) >= '0') && ((char[][int]) <= '9')) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1416","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:470","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.Strategy","position":"org.apache.commons.lang3.time.FastDateParser:541","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.StrSubstitutor:682","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:7116","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int >>= 1","position":"org.apache.commons.lang3.BitField:45","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","tmp":"max","i":"length","j":"length"},"name":"add","transplant":{"sourceCode":"while (int > int) {\n    long = long[][int];\n    long[][int] = long[][int];\n    long[][int] = long;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1790","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (long[].int) ; int++) {\n    if ((long[][int]) > long) {\n        long = long[][int];\n    } \n}","position":"org.apache.commons.lang3.math.NumberUtils:942","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:740","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence, java.lang.CharSequence, int, true)","position":"org.apache.commons.lang3.StringUtils:1263","type":"CtReturnImpl"},"status":-2},{"failures":[5],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.StringUtils:2142","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1870","type":"CtIfImpl"},"status":-2},{"failures":[6,7,8],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:329","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Field)","position":"org.apache.commons.lang3.reflect.FieldUtils:647","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, null, int, boolean)","position":"org.apache.commons.lang3.StringUtils:2817","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((E != null), org.apache.commons.lang3.EnumUtils.java.lang.String)","position":"org.apache.commons.lang3.EnumUtils:174","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = int ; (--int) >= 0 ; ) {\n    final java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.List<java.lang.String>;\n    if (int != 0) {\n        java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n        org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n    } \n    if (int == (int - 1)) {\n        java.util.List<java.lang.String>.add(java.lang.Throwable[][int].toString());\n    } else {\n        java.util.List<java.lang.String>.add(((org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String) + (java.lang.Throwable[][int].toString())));\n    }\n    for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n        java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n    }\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:524","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:527","type":"CtInvocationImpl"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.text.StrBuilder:293","type":"CtAssignmentImpl"},"status":-1},{"failures":[73],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","position":"org.apache.commons.lang3.time.StopWatch:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long += java.lang.System.(java.lang.System.nanoTime()) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:305","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[6,74],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"org.apache.commons.lang3.reflect.FieldUtils:383","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.reflect.FieldUtils:649","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)))","position":"org.apache.commons.lang3.AnnotationUtils:274","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule[] = java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.toArray(new org.apache.commons.lang3.time.FastDatePrinter.Rule[java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.size()])","position":"org.apache.commons.lang3.time.FastDatePrinter:150","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final char char = java.lang.String.charAt(2)","position":"org.apache.commons.lang3.BooleanUtils:605","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:595","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2428","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startPos":"startPos"},"name":"add","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, int, int)","position":"org.apache.commons.lang3.StringUtils:899","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:784","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.FieldUtils:176","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:940","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 1000) {\n    int = 3;\n} else {\n    org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int);\n    int = java.lang.Integer.java.lang.Integer.toString(int).length();\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:859","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:236","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher","position":"org.apache.commons.lang3.text.StrMatcher:145","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:3627","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.StrBuilder:142","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, boolean)","position":"org.apache.commons.lang3.builder.ToStringBuilder:527","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.text.StrBuilder:2465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > 0) && (int <= (int))) {\n    if (int == 1) {\n        return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String.charAt(0), int);\n    } \n    outer : for (int int = (int - int) + 1 ; int >= 0 ; int--) {\n        for (int int = 0 ; int < int ; int++) {\n            if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n                continue outer;\n            } \n        }\n        return int;\n    }\n} else if (int == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2463","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:582","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 13","position":"org.apache.commons.lang3.Conversion:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.CharSequenceUtils:82","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:875","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isWhitespace(java.lang.CharSequence.charAt(int))) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1504","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : java.util.EnumSet<E>) {\n    long[][((E.ordinal()) / (java.lang.Long.int))] |= 1 << ((E.ordinal()) % (java.lang.Long.int));\n}","position":"org.apache.commons.lang3.EnumUtils:229","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException java.lang.NullPointerException) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}","position":"org.apache.commons.lang3.BooleanUtils:1080","type":"CtTryImpl"},"status":-2},{"failures":[75,76,77,78,79,80],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","position":"org.apache.commons.lang3.BooleanUtils:975","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(java.util.concurrent.ExecutionException.getCause()))","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:160","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"t":"expPos"},"name":"add","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int /= 2;\n}","position":"org.apache.commons.lang3.math.Fraction:610","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > (-1)) {\n    if (int > (java.lang.String.length())) {\n        throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n    } \n    java.lang.String = java.lang.String.substring(0, int);\n} else {\n    java.lang.String = java.lang.String;\n}","position":"org.apache.commons.lang3.math.NumberUtils:508","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (int * int) + int","position":"org.apache.commons.lang3.math.Fraction:281","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.StrBuilder:142","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1844","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"comparison"},"name":"add","transplant":{"sourceCode":"if ((this.int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:585","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) != (double[].int)) {\n    int = (double[].int) < (double[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:902","type":"CtIfImpl"},"status":0},{"failures":[81],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been started\")","position":"org.apache.commons.lang3.time.StopWatch:398","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long))","position":"org.apache.commons.lang3.Validate:1084","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (char < 32) || (char == 127)","position":"org.apache.commons.lang3.CharUtils:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:1740","type":"CtIfImpl"},"status":-2},{"failures":[82],"binaryOperator":"(int - 1)","name":"math","position":"org.apache.commons.lang3.Conversion:688","type":"mutation","status":-1},{"failures":[83,84,85,86,87,88,89,90],"variableMapping":{"size":"startIndex"},"name":"add","transplant":{"sourceCode":"int += 5","position":"org.apache.commons.lang3.text.StrBuilder:1591","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int < 0 ? 0 : int","position":"org.apache.commons.lang3.text.StrBuilder:2335","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"short short = short[][0]","position":"org.apache.commons.lang3.math.NumberUtils:839","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long[] long[] = org.apache.commons.lang3.ArrayUtils.((long[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(long[], java.lang.Long.java.lang.Class<java.lang.Long>)))","position":"org.apache.commons.lang3.ArrayUtils:4206","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds())) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType), org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1626","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"obj","this":"this","toAppendTo":"toAppendTo"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object instanceof java.lang.Long) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.lang.Long)(java.lang.Object)).longValue(), java.lang.StringBuffer);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (java.lang.Object == null ? \"<null>\" : java.lang.Object.getClass().getName())));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:385","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Date)(java.lang.Object)), java.lang.StringBuffer);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.util.Calendar)(java.lang.Object)), java.lang.StringBuffer);\n} else if (java.lang.Object instanceof java.lang.Long) {\n    return org.apache.commons.lang3.time.FastDatePrinter.format(((java.lang.Long)(java.lang.Object)).longValue(), java.lang.StringBuffer);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Unknown class: \" + (java.lang.Object == null ? \"<null>\" : java.lang.Object.getClass().getName())));\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:381","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case '3' :\n    return 12;","position":"org.apache.commons.lang3.Conversion:108","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return (((java.lang.Class<?>)(java.lang.reflect.Type)).getTypeParameters().int) > 0;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1431","type":"CtIfImpl"},"status":-2},{"failures":[91],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String, null)","position":"org.apache.commons.lang3.text.WordUtils:381","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5051","type":"CtReturnImpl"},"status":-1},{"failures":[92,93,94],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:971","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((byte[].int) != (byte[].int)) {\n    int = (byte[].int) < (byte[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:862","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.lang3.math.NumberUtils:1105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    int += 1;\n    if (int == int) {\n        int = int;\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n    } else {\n        java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int, int));\n        int = int + int;\n    }\n} else {\n    if (boolean) {\n        int += 1;\n        if (int == int) {\n            int = int;\n            java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int));\n        } else {\n            java.util.ArrayList<java.lang.String>.add(org.apache.commons.lang3.StringUtils.java.lang.String);\n        }\n    } \n    int = int + int;\n}","position":"org.apache.commons.lang3.StringUtils:2830","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:5087","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = ((int) - int) + 1","position":"org.apache.commons.lang3.text.StrBuilder:2350","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(java.lang.Object[], ((org.apache.commons.lang3.time.FormatCache.MultipartKey)(java.lang.Object)).java.lang.Object[])","position":"org.apache.commons.lang3.time.FormatCache:245","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrSubstitutor:612","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array2":"rhs","array1":"rhs"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object).isEquals()","position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isInstance(java.lang.Object)) {\n    java.lang.Class<?> = java.lang.Class<?>;\n    if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n        java.lang.Class<?> = java.lang.Class<?>;\n    } \n} else if (java.lang.Class<?>.isInstance(java.lang.Object)) {\n    java.lang.Class<?> = java.lang.Class<?>;\n    if (!(java.lang.Class<?>.isInstance(java.lang.Object))) {\n        java.lang.Class<?> = java.lang.Class<?>;\n    } \n} else {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:339","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.putAll(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType))","position":"org.apache.commons.lang3.reflect.TypeUtils:1378","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:784","type":"CtReturnImpl"},"status":-2},{"failures":[95,96,97],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:574","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) < 0) {\n    return new org.apache.commons.lang3.math.Fraction(-(int) , -(int));\n} else {\n    return new org.apache.commons.lang3.math.Fraction(int , int);\n}","position":"org.apache.commons.lang3.math.Fraction:496","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int != int) {\n    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , (int - int)));\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:3239","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.util.Locale(\"\" , java.lang.String.substring(1, 3))","position":"org.apache.commons.lang3.LocaleUtils:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.ToStringBuilder:923","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.Class<?>.getGenericInterfaces()","position":"org.apache.commons.lang3.reflect.TypeUtils:1051","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"return java.lang.Short[]","position":"org.apache.commons.lang3.ArrayUtils:736","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((short[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Short[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3208","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateParser:423","type":"CtReturnImpl"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Object.getClass().getName()).append('@').append(java.lang.Integer.java.lang.Integer.toHexString(java.lang.System.java.lang.System.identityHashCode(java.lang.Object)))","position":"org.apache.commons.lang3.ObjectUtils:344","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:379","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.reflect.MemberUtils.ACCESS_TEST":"id","modifiers":"id"},"name":"replace","transplant":{"sourceCode":"return (int & (this.int)) == 0","position":"org.apache.commons.lang3.reflect.MemberUtils:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) != (org.apache.commons.lang3.builder.IDKey.int)) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.IDKey:68","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, 0, int)) > 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2518","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.SerializationUtils.org.apache.commons.lang3.SerializationUtils.deserialize(org.apache.commons.lang3.SerializationUtils.org.apache.commons.lang3.SerializationUtils.serialize(T))","position":"org.apache.commons.lang3.SerializationUtils:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1784","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == int) {\n    return true;\n} ","position":"org.apache.commons.lang3.BooleanUtils:262","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((long[] == null) && (long[] != null)) && ((long[].int) > 0)) || (((long[] == null) && (long[] != null)) && ((long[].int) > 0))) || (((long[] != null) && (long[] != null)) && ((long[].int) != (long[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1246","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.float[]","position":"org.apache.commons.lang3.ArrayUtils:654","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -int","position":"org.apache.commons.lang3.math.Fraction:615","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:4749","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FormatCache:208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1855","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1471","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.util.Locale> = java.util.Collections.java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>)","position":"org.apache.commons.lang3.LocaleUtils:275","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.String != null) && (java.lang.String.isEmpty())) {\n    java.lang.String = null;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Integer == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String);\n    java.lang.StringBuilder.append(\" not in (\");\n    for (final java.lang.String java.lang.String : java.util.Map<java.lang.String, java.lang.Integer>.keySet()) {\n        java.lang.StringBuilder.append(java.lang.String).append(' ');\n    }\n    java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n    throw new java.lang.IllegalArgumentException(java.lang.StringBuilder.toString());\n} ","position":"org.apache.commons.lang3.time.FastDateParser:620","type":"CtIfImpl"},"status":-2},{"failures":[73],"variableMapping":{"milliseconds":"stopTime","days":"stopTime","org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY":"stopTime"},"name":"replace","transplant":{"sourceCode":"long = long - (long * (this.long))","position":"org.apache.commons.lang3.time.DurationFormatUtils:138","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.long += java.lang.System.(java.lang.System.nanoTime()) - (this.long)","position":"org.apache.commons.lang3.time.StopWatch:305","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:702","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:843","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:1213","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.lang3.CharRange:341","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = long[].int","position":"org.apache.commons.lang3.ArrayUtils:922","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:495","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)).getBounds()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:385","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:342","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int & (~(int))","position":"org.apache.commons.lang3.BitField:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1586","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"start":"field","end":"field"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    final int int = int;\n    int = int;\n    int = int;\n} ","position":"org.apache.commons.lang3.StringUtils:4957","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy that handles a number field in the parsing pattern\n */\nprivate static class NumberStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final int field;\n\n    /** \n     * Construct a Strategy that parses a Number field\n     * @param field The Calendar field\n     */\nNumberStrategy(final int field) {\n        this.int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean isNumber() {\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        if (org.apache.commons.lang3.time.FastDateParser.isNextNumber()) {\n            java.lang.StringBuilder.append(\"(\\\\p{Nd}{\").append(org.apache.commons.lang3.time.FastDateParser.getFieldWidth()).append(\"}+)\");\n        } else {\n            java.lang.StringBuilder.append(\"(\\\\p{Nd}++)\");\n        }\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.Calendar.set(int, org.apache.commons.lang3.time.FastDateParser.NumberStrategy.modify(java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)));\n    }\n\n    /** \n     * Make any modifications to parsed integer\n     * @param iValue The parsed integer\n     * @return The modified value\n     */\nint modify(final int iValue) {\n        return int;\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:637","type":"CtClassImpl"},"status":-2},{"failures":[221,222,75,223,224,225,226,227,228,229,230,231,232,76,233,234,235,236,237,238,239,240,241,242,243,244,245],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.getFuture()","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:212","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.Future<T> = java.util.concurrent.ExecutorService.submit(org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createTask(java.util.concurrent.ExecutorService))","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:187","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    final int int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.toString(), 16);\n    java.io.Writer.write(((char)(int)));\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    throw new java.lang.IllegalArgumentException((\"Unable to parse unicode value: \" + java.lang.CharSequence) , java.lang.NumberFormatException);\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:52","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1446","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharRange.isNegated()) {\n    java.lang.StringBuilder.append('^');\n} ","position":"org.apache.commons.lang3.CharRange:238","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.ceiling(((java.util.Calendar)(java.lang.Object)), int).getTime()","position":"org.apache.commons.lang3.time.DateUtils:942","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 3) {\n    return new java.util.Locale(\"\" , java.lang.String.substring(1, 3));\n} ","position":"org.apache.commons.lang3.LocaleUtils:114","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLetter(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5851","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.java.util.Comparator<T> = java.util.Comparator<T>","position":"org.apache.commons.lang3.Range:154","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.setLength((int - int))","position":"org.apache.commons.lang3.builder.ToStringStyle:420","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(T[], org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:538","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iValue":"endIndex"},"name":"add","transplant":{"sourceCode":"return int % 24","position":"org.apache.commons.lang3.time.FastDateParser:815","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, 0, int)) > 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2518","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.reflect.Typed<T>() {\n    @java.lang.Override\n    public java.lang.reflect.Type getType() {\n        return java.lang.reflect.Type;\n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1716","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.ReflectionToStringBuilder(T , org.apache.commons.lang3.builder.ToStringStyle , null , java.lang.Class<? super T> , boolean , boolean).toString()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:287","type":"CtReturnImpl"},"status":-2},{"failures":[246],"variableMapping":{"array2":"array1","this":"this","array1":"array2"},"name":"replace","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3794","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} else if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3792","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"T T = null","position":"org.apache.commons.lang3.ObjectUtils:581","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    return ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType();\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1349","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:731","type":"CtReturnImpl"},"status":-2},{"failures":[247,248,249,250,251],"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","position":"org.apache.commons.lang3.reflect.MemberUtils:115","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:930","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (short[].int) - 1","position":"org.apache.commons.lang3.ArrayUtils:2277","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":88,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":177,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":179,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":186,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":176,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":8,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":76,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":213,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":192,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedTrue":223,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":87,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":111,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":30,"org.apache.commons.lang3.ValidateTest.testIsTrue1":2,"org.apache.commons.lang3.text.StrBuilderTest.testIsEmpty":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":157,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":117,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":21,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArrayHiddenByObject":92,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":209,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedUncheckedException":79,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":119,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":245,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":152,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":250,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":210,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":189,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testExtractCauseUncheckedException":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":181,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":166,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":191,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":40,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":170,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":214,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":49,"org.apache.commons.lang3.StringUtilsTest.testChomp":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":160,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":90,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":141,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":207,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":17,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":172,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":29,"org.apache.commons.lang3.math.FractionTest.testDivide":96,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":158,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedUncheckedException":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":151,"org.apache.commons.lang3.text.StrBuilderTest.testClear":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":185,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":187,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":237,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":11,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":155,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":98,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":251,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":130,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":59,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorExternal":222,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":126,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetActiveExecutorTemp":224,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":60,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":148,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":63,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":175,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testIsStartedAfterGet":227,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":138,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":120,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":82,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":244,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":13,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":52,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":69,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":53,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":86,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":159,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetInterruptedException":230,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":143,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":180,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":216,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":156,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteField":6,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":112,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":249,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":136,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutor":231,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":118,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":196,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":66,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":239,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":116,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":246,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":190,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":144,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":85,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":169,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":221,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":115,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":150,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":9,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":0,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":127,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":105,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":201,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":132,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":134,"org.apache.commons.lang3.builder.CompareToBuilderTest.testByteArray":93,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":146,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":212,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":15,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetRuntimeException":75,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":135,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":194,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":242,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":165,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":70,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":154,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":109,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":233,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":101,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":22,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":215,"org.apache.commons.lang3.ArrayUtilsTest.testToString":219,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":64,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":99,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testStartMultipleTimes":228,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":65,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiByteArray":94,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testSetExternalExecutorAfterStart":225,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":197,"org.apache.commons.lang3.math.FractionTest.testInvert":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":178,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":83,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":205,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":113,"org.apache.commons.lang3.ValidateTest.testExclusiveBetweenLong":81,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSuspend":73,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":84,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":167,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":14,"org.apache.commons.lang3.text.StrTokenizerTest.test8":48,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":100,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitialize":226,"org.apache.commons.lang3.text.StrTokenizerTest.test5":46,"org.apache.commons.lang3.text.StrTokenizerTest.test4":45,"org.apache.commons.lang3.text.StrTokenizerTest.test7":47,"org.apache.commons.lang3.text.StrTokenizerTest.test1":42,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":241,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":41,"org.apache.commons.lang3.text.StrTokenizerTest.test3":44,"org.apache.commons.lang3.text.StrTokenizerTest.test2":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":137,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":193,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":218,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":19,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteStaticField":74,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":248,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":23,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":68,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":232,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":124,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedException":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":161,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":238,"org.apache.commons.lang3.math.FractionTest.testPow":95,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":110,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":234,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":33,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testInitializeTempExecutor":229,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":174,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":123,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":149,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":204,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":140,"org.apache.commons.lang3.text.StrBuilderTest.testEquals":71,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":240,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":57,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":236,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":54,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":103,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":182,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":142,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":220,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":247,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":12,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":129,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":183,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":195}}]
