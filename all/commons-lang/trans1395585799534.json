[{"position":"org.apache.commons.lang3.AnnotationUtils:124","failures":[0,1],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:496","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:529","sourceCode":"if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[2,2,3,3,4,5,5,6,7,8,9,10,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:1035","sourceCode":"if (int < 0) {\n    return int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:447","sourceCode":"return boolean ? int : int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"index":"trueValue"}},{"position":"org.apache.commons.lang3.BitField:153","failures":[21,22],"status":-1,"binaryOperator":"((int << (int)) & (int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2127","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1438","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (int >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","type":"CtForImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndex":"srcPos","endIndex":"dstPos"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:97","sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, true, false)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.Token:674","sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(this.java.lang.Object.toString(), this.int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1398","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:905","sourceCode":"if (java.lang.Object == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n}","type":"CtIfImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,8,10,40,41,42,43,44,45,46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:835","sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:289","sourceCode":"java.text.ParsePosition.setIndex((int + (java.util.regex.Matcher.end())))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"offset","nBytes":"offset"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:498","sourceCode":"if ((int < int) || (int > (java.lang.String.length()))) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","type":"CtIfImpl"},"failures":[48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:360","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, double)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:973","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:987","sourceCode":"if ((short[][int]) > short) {\n    short = short[][int];\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:625","sourceCode":"boolean = boolean == boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:981","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"done","rhs":"done","lhs":"done"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:597","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:620","sourceCode":"int = (int - int) / 2","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:131","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Character must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4688","sourceCode":"throw new java.lang.IllegalStateException((\"Aborting to protect against StackOverflowError - \" + \"output of one loop is the input of another\"))","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1035","sourceCode":"return java.lang.Double.double","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:231","sourceCode":"return double","type":"CtReturnImpl"},"failures":[51,52,53,54,55,56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1072","sourceCode":"boolean = int >= 6","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1049","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"roundUp":"offsetSet","offset":"offset"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:262","sourceCode":"return (int) < int ? -1 : (int) == int ? 0 : 1","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:262","sourceCode":"return (long) < long ? -1 : (long) == long ? 0 : 1","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:545","sourceCode":"this.org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:863","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, java.lang.Object, java.lang.Boolean.java.lang.Boolean.valueOf(boolean))","type":"CtInvocationImpl"},"failures":[59,60,61,62,62,63,64,65,66,12,12,67,68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"obj","fieldName":"fieldName","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1379","sourceCode":"if (boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1414","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"hasExp":"foundDigit"}},{"position":"org.apache.commons.lang3.text.WordUtils:455","failures":[70,71],"status":-1,"binaryOperator":"(char[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1296","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:977","sourceCode":"if (((org.apache.commons.lang3.time.DateUtils.int) == int) || (int < 500)) {\n    long = long - int;\n} ","type":"CtIfImpl"},"failures":[72,73,74,75,76,77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","sourceCode":"if (java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.min(float, float);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","sourceCode":"if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.java.lang.Math.max(float, float);\n}","type":"CtIfImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"b","a":"b","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:143","sourceCode":"java.lang.StringBuilder.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:330","sourceCode":"java.lang.StringBuilder.append(\"E\\\\\\\\E\\\\\")","type":"CtInvocationImpl"},"failures":[81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"regex"}},{"position":"org.apache.commons.lang3.CharSetUtils:141","failures":[83,84],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:239","sourceCode":"return false","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:653","failures":[86],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.apache.commons.lang3.math.Fraction:640","failures":[87,88,89],"status":-1,"binaryOperator":"((long)(int)) * ((long)(int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:538","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:775","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -128 and 127: [\" + int) + \"]\"))","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:584","sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:829","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:194","sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","type":"CtIfImpl"},"failures":[92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"pattern"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:36","sourceCode":"java.lang.Long.java.lang.Long.valueOf(1L)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:633","sourceCode":"return '8'","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:262","sourceCode":"if (int == int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:236","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableInt) {\n    return (int) == (((org.apache.commons.lang3.mutable.MutableInt)(java.lang.Object)).intValue());\n} ","type":"CtIfImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"trueValue":"value","value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1115","sourceCode":"if (int < int) {\n    int = int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1240","sourceCode":"short = short","type":"CtAssignmentImpl"},"failures":[105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":36,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValueObject":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":34,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":98,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":90,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":59,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":72,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":3,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":24,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":41,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":62,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":17,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":80,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":8,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":100,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":95,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":71,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":99,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":85,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":73,"org.apache.commons.lang3.ConversionTest.testIntToHex":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":12,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":61,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":13,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":14,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":47,"org.apache.commons.lang3.math.FractionTest.testPow":88,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":67,"org.apache.commons.lang3.BitFieldTest.testSetValue":22,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":28,"org.apache.commons.lang3.mutable.MutableDoubleTest.testAddValuePrimitive":55,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":68,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":86,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":103,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":92,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":21,"org.apache.commons.lang3.mutable.MutableDoubleTest.testPrimitiveValues":53,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.mutable.MutableDoubleTest.testConstructors":52,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":96,"org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArrayBoolean":50,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":10,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":64,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":101,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":77,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumShort":105,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":79,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":39,"org.apache.commons.lang3.math.FractionTest.testAdd":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":63,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":19,"org.apache.commons.lang3.AnnotationUtilsTest.testSameInstance":0,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":93,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValuePrimitive":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":9,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":27,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":91,"org.apache.commons.lang3.ArrayUtilsTest.testToString":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":5,"org.apache.commons.lang3.math.FractionTest.testMultiply":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":16,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_2":49,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":69,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":81,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":48,"org.apache.commons.lang3.mutable.MutableIntTest.testEquals":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":7,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":74,"org.apache.commons.lang3.mutable.MutableDoubleTest.testSubtractValueObject":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":65,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":37,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":84,"org.apache.commons.lang3.mutable.MutableDoubleTest.testToDouble":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":15,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":83,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":40,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":75,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":38,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":66,"org.apache.commons.lang3.mutable.MutableDoubleTest.testGetSet":57}}]
