[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return int;\n} ","position":"org.apache.commons.lang3.Conversion:937","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:548","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n    if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.reflect.TypeUtils:559","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer()","position":"org.apache.commons.lang3.text.StrBuilder:2559","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:1050","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.CharSequenceUtils:122","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int / 2","position":"org.apache.commons.lang3.StringUtils:7120","type":"CtReturnImpl"},"status":-1},{"failures":[1],"variableMapping":{"value":"value"},"name":"replace","transplant":{"sourceCode":"this.byte = byte","position":"org.apache.commons.lang3.mutable.MutableByte:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.byte -= java.lang.Number.byteValue()","position":"org.apache.commons.lang3.mutable.MutableByte:170","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"variableMapping":{"csLength":"len"},"name":"replace","transplant":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1624","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)","position":"org.apache.commons.lang3.text.StrTokenizer:707","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields()","position":"org.apache.commons.lang3.builder.EqualsBuilder:402","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.lang3.ArrayUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"default :\n    break;","position":"org.apache.commons.lang3.time.DateUtils:1704","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n    return org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue();\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:93","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1154","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.short -= java.lang.Number.shortValue()","position":"org.apache.commons.lang3.mutable.MutableShort:170","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.close()","position":"org.apache.commons.lang3.SerializationUtils:106","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int - int","position":"org.apache.commons.lang3.ArrayUtils:6077","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = short < short ? -1 : short > short ? 1 : 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:498","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.StringUtils:3086","type":"CtLocalVariableImpl"},"status":0},{"failures":[51],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isLowerCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6140","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.Character.(java.lang.Character.isLetterOrDigit(java.lang.CharSequence.charAt(int))) == false) && ((java.lang.CharSequence.charAt(int)) != ' ')) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:5956","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = java.lang.Class<?>.getTypeParameters()","position":"org.apache.commons.lang3.reflect.TypeUtils:871","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long[][((long[].int) - 1)] = long","position":"org.apache.commons.lang3.ArrayUtils:4207","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"StrTokenizer[not tokenized yet]\"","position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.applyRulesToString(java.util.Calendar)","position":"org.apache.commons.lang3.time.FastDatePrinter:400","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n} ","position":"org.apache.commons.lang3.StringUtils:5782","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = false;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:427","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + 1) < int) && ((java.lang.String.charAt((int + 1))) == '\\'')) {\n    int++;\n    java.lang.StringBuilder.append(char);\n} else {\n    boolean = !boolean;\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:329","type":"CtIfImpl"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:827","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (java.lang.Object instanceof long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof int[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof char[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof double[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof float[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof boolean[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    int = ((int) * (int)) + (java.lang.Object.hashCode());\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:820","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"defaultValue":"collection","object":"collection"},"name":"add","transplant":{"sourceCode":"return T != null ? T : T","position":"org.apache.commons.lang3.ObjectUtils:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T, org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:322","type":"CtReturnImpl"},"status":-2},{"failures":[69],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1119","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[], double, java.lang.Integer.int, double)","position":"org.apache.commons.lang3.ArrayUtils:2635","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:795","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.isEmpty(char[]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1619","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","position":"org.apache.commons.lang3.math.NumberUtils:563","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.io.File(java.lang.System.java.lang.System.getProperty(org.apache.commons.lang3.SystemUtils.java.lang.String))","position":"org.apache.commons.lang3.SystemUtils:1381","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7019","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(boolean[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4678","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2440","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:549","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:5429","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1754","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.text.ParsePosition.getIndex()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:166","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:3011","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:910","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1437","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigInteger java.math.BigInteger = new java.math.BigInteger(java.lang.String.substring(int) , int)","position":"org.apache.commons.lang3.math.NumberUtils:747","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:690","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.register(java.lang.Object);\n    final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields();\n    java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true);\n    for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n        if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n            try {\n                final java.lang.Object java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n                org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object);\n            } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n                throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n            }\n        } \n    }\n} finally {\n    org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.unregister(java.lang.Object);\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:176","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = (65535 & (short[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:770","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Throwable[] java.lang.Throwable[] = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(java.lang.Throwable)","position":"org.apache.commons.lang3.exception.ExceptionUtils:393","type":"CtLocalVariableImpl"},"status":-2},{"failures":[70],"variableMapping":{"threshold":"startIndexInclusive"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} ","position":"org.apache.commons.lang3.StringUtils:6854","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(boolean[], int, boolean[], 0, int)","position":"org.apache.commons.lang3.ArrayUtils:1210","type":"CtInvocationImpl"},"status":-1},{"failures":[71,72],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharSet.contains(char)) {\n    int++;\n} ","position":"org.apache.commons.lang3.CharSetUtils:147","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:292","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Short, new org.apache.commons.lang3.mutable.MutableInt(1))","position":"org.apache.commons.lang3.ArrayUtils:5453","type":"CtInvocationImpl"},"status":-2},{"failures":[73,74,75],"variableMapping":{"j":"j"},"name":"add","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1724","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int))","position":"org.apache.commons.lang3.exception.ExceptionUtils:536","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.insert(0, java.lang.Class<?>.getSimpleName()).insert(0, '.')","position":"org.apache.commons.lang3.reflect.TypeUtils:1696","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + 1) < int) && ((java.lang.String.charAt((int + 1))) == '\\'')) {\n    int++;\n    java.lang.StringBuilder.append(char);\n} else {\n    boolean = !boolean;\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:329","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"fieldName"},"name":"add","transplant":{"sourceCode":"if (java.lang.String.trim().startsWith(\"--\")) {\n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n} ","position":"org.apache.commons.lang3.math.NumberUtils:768","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:723","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:372","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendCyclicObject(java.lang.StringBuffer, java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:473","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.String java.lang.String = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:310","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int)","position":"org.apache.commons.lang3.exception.ExceptionUtils:560","type":"CtLocalVariableImpl"},"status":0},{"failures":[76,77,78,79,66,80],"variableMapping":{"iTotal":"iConstant","iConstant":"iTotal"},"name":"add","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:817","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = ((int) * (int)) + ((int)((long ^ (long >> 32))))","position":"org.apache.commons.lang3.builder.HashCodeBuilder:782","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1407","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:1897","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array","length":"index","org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY":"array"},"name":"replace","transplant":{"sourceCode":"if ((int[] == null) || (int == 0)) {\n    return int[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:553","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.remove(int[], int)","position":"org.apache.commons.lang3.ArrayUtils:5036","type":"CtReturnImpl"},"status":-2},{"failures":[81],"variableMapping":{"search":"search","replace":"search","i":"i","buffer":"buffer"},"name":"add","transplant":{"sourceCode":"if ((char[][int]) == char) {\n    char[][int] = char;\n    break;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[][int]) == char) {\n    char[][int] = char;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1851","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"float float = 0.0F","position":"org.apache.commons.lang3.reflect.MemberUtils:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> = new java.util.ArrayList<org.apache.commons.lang3.time.FastDatePrinter.Rule>()","position":"org.apache.commons.lang3.time.FastDatePrinter:170","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.set(new java.util.HashSet<org.apache.commons.lang3.builder.IDKey>())","position":"org.apache.commons.lang3.builder.HashCodeBuilder:469","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"comparison":"increase"},"name":"add","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:592","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 3 * int","position":"org.apache.commons.lang3.StringUtils:4758","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"prior":"fieldName","value":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String != null) {\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:381","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:647","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == char[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:811","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getFieldNameValueSeparator()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:316","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Pair<L, R>.getRight()).append(')').toString()","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:486","type":"CtIfImpl"},"status":-2},{"failures":[82],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} else if (float[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(float[]);\n} ","position":"org.apache.commons.lang3.ArrayUtils:3937","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"nullText":"this"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return this;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:448","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.java.lang.String.valueOf(int))","position":"org.apache.commons.lang3.text.StrBuilder:809","type":"CtReturnImpl"},"status":-2},{"failures":[83,84,85],"binaryOperator":"((int) * (int)) + java.lang.Float.(java.lang.Float.floatToIntBits(float))","name":"math","position":"org.apache.commons.lang3.builder.HashCodeBuilder:710","type":"mutation","status":-1},{"failures":[86,87,88,89,90,91],"binaryOperator":"(char == (org.apache.commons.lang3.text.ExtendedMessageFormat.char))","name":"negateConditional","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:346","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (int * 32) + int","position":"org.apache.commons.lang3.Conversion:1196","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (31 * int) + (char[][int])","position":"org.apache.commons.lang3.text.StrBuilder:2717","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 7","position":"org.apache.commons.lang3.Conversion:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return 0;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1402","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:645","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object)","position":"org.apache.commons.lang3.time.DurationFormatUtils:647","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:875","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.reflect.TypeLiteral:116","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Character java.lang.Character = java.lang.Character.java.lang.Character.valueOf(char)","position":"org.apache.commons.lang3.ArrayUtils:5628","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || ((int + int) > (java.lang.StringBuilder.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:653","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.builder.EqualsBuilder:778","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1493","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.CharSetUtils:148","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[92,93],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:394","type":"CtIfImpl"},"status":-1},{"failures":[94],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6034","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:361","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Short[]>(java.lang.String) {\n    private static final long serialVersionUID = 1L;\n\n    @java.lang.Override\n    public java.lang.Short[] getLeft() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(short[]);\n    }\n\n    @java.lang.Override\n    public java.lang.Short[] getRight() {\n        return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(short[]);\n    }\n})","position":"org.apache.commons.lang3.builder.DiffBuilder:767","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:165","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, 0)","position":"org.apache.commons.lang3.text.StrBuilder:1743","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1713","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(4 , 5)","position":"org.apache.commons.lang3.math.Fraction:91","type":"CtNewClassImpl"},"status":-2},{"failures":[95,96],"name":"returnValue","position":"org.apache.commons.lang3.math.Fraction:885","type":"mutation","return":"return 0","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:500","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:995","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ToStringStyle.getSummaryObjectEndText()","position":"org.apache.commons.lang3.builder.StandardToStringStyle:539","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendSeparator(java.lang.String, null)","position":"org.apache.commons.lang3.text.StrBuilder:1215","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while ((int < int) && ((char[][(int - 1)]) <= ' ')) {\n    int--;\n}","position":"org.apache.commons.lang3.text.StrBuilder:2049","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:819","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2809","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.String.charAt(1)","position":"org.apache.commons.lang3.BooleanUtils:575","type":"CtLocalVariableImpl"},"status":-2},{"failures":[97,98,99],"variableMapping":{"str":"str","pos":"radix"},"name":"add","transplant":{"sourceCode":"int = java.lang.String.indexOf(' ')","position":"org.apache.commons.lang3.math.Fraction:330","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(\"#\", int)) {\n    int = 16;\n    int++;\n} else if ((java.lang.String.startsWith(\"0\", int)) && ((java.lang.String.length()) > (int + 1))) {\n    int = 8;\n    int++;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:739","type":"CtIfImpl"},"status":-1},{"failures":[100,101],"variableMapping":{"cs":"str"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:7207","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.util.Calendar.before(java.util.Calendar)","position":"org.apache.commons.lang3.time.DateUtils:1836","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar, java.util.Calendar)","position":"org.apache.commons.lang3.time.DateUtils:163","type":"CtReturnImpl"},"status":-2},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"variableMapping":{"buf":"regex"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append('<')","position":"org.apache.commons.lang3.reflect.TypeUtils:1751","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\\\Q\")","position":"org.apache.commons.lang3.time.FastDateParser:335","type":"CtInvocationImpl"},"status":-1},{"failures":[218,219,220,221,222],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:5520","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String, java.lang.String)","position":"org.apache.commons.lang3.StringUtils:589","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(char);\n} ","position":"org.apache.commons.lang3.StringUtils:3769","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    java.lang.StringBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.StringUtils:4008","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n    final java.lang.Double java.lang.Double = java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n    int int = 0;\n    for (int int = 0, int int = java.util.Map.Entry<java.lang.Double, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue() ; int < int ; int++) {\n        int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(double[], java.lang.Double.doubleValue(), int);\n        if (int < 0) {\n            break;\n        } \n        java.util.BitSet.set(int++);\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5904","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"current":"c"},"name":"add","transplant":{"sourceCode":"char = 0","position":"org.apache.commons.lang3.CharRange:294","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = java.lang.String.charAt(int)","position":"org.apache.commons.lang3.time.FastDatePrinter:326","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"startIndex":"trimStart","endIndex":"trimStart"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int))","position":"org.apache.commons.lang3.text.StrTokenizer:781","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue()","position":"org.apache.commons.lang3.ObjectUtils:584","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String.java.lang.String.valueOf(double))","position":"org.apache.commons.lang3.text.StrBuilder:1658","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n    final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n    if ((java.lang.String.equals(java.util.Locale.getCountry())) && (java.util.Locale.getVariant().isEmpty())) {\n        java.util.List<java.util.Locale>.add(java.util.Locale);\n    } \n}","position":"org.apache.commons.lang3.LocaleUtils:268","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.stringMatcher(java.lang.String))","position":"org.apache.commons.lang3.text.StrSubstitutor:1149","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.Math.java.lang.Math.max(org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int), org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int))","position":"org.apache.commons.lang3.text.StrTokenizer:689","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return int;\n}","position":"org.apache.commons.lang3.math.NumberUtils:124","type":"CtTryImpl"},"status":-2},{"failures":[223],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object instanceof short[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:837","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:825","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.classToString(java.lang.Class<?>.getEnclosingClass())).append('.')","position":"org.apache.commons.lang3.reflect.TypeUtils:1746","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object))","position":"org.apache.commons.lang3.builder.CompareToBuilder:322","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:572","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.math.NumberUtils:533","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:478","type":"CtReturnImpl"},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"binaryOperator":"((int + int) > (java.lang.StringBuffer.length()))","name":"conditionalBoundary","position":"org.apache.commons.lang3.text.StrBuilder:602","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean[] == null) {\n    int = +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:978","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((long >= long), \"Start value must be smaller or equal to end value.\")","position":"org.apache.commons.lang3.RandomUtils:111","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"parser":"this","pos":"pos","source":"source"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parseObject(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateFormat:503","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.time.FastDateParser:299","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"long long = 0","position":"org.apache.commons.lang3.EnumUtils:145","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(int).append(org.apache.commons.lang3.text.StrBuilder, int, int)","position":"org.apache.commons.lang3.text.StrSubstitutor:578","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:1432","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"found an unhandled type: \" + java.lang.reflect.Type))","position":"org.apache.commons.lang3.reflect.TypeUtils:575","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"padStr","separator":"padStr"},"name":"add","transplant":{"sourceCode":"final int int = java.lang.String.indexOf(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:2338","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:5305","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String + (java.lang.String.substring(((java.lang.String.length()) - (int - 3))))","position":"org.apache.commons.lang3.StringUtils:6419","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + int) - 3) < (java.lang.String.length())) {\n    return java.lang.String + org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String.substring(int), (int - 3)));\n} ","position":"org.apache.commons.lang3.StringUtils:6416","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.lang3.text.StrBuilder:2394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.text.StrBuilder:360","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","nShorts":"length"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1258","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < (java.lang.Object[].int) ; int++) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object[][int]);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1136","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) < 0) {\n    return new org.apache.commons.lang3.math.Fraction(-(int) , -(int));\n} else {\n    return new org.apache.commons.lang3.math.Fraction(int , int);\n}","position":"org.apache.commons.lang3.math.Fraction:496","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1471","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":72,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":165,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":102,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":105,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":13,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":172,"org.apache.commons.lang3.mutable.MutableByteTest.testSubtractValueObject":1,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumericSpace":51,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":161,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":112,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":164,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":224,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":12,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":218,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":223,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":77,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":85,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":140,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":139,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":228,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":179,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":211,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer_int_int":237,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":163,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloat":84,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":56,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":89,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":176,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":117,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":168,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":189,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":148,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":226,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":24,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":86,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissingIgnoreCase":101,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":127,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":87,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":34,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":212,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":90,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":134,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":124,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":199,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":16,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":180,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":73,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":216,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":162,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":65,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":66,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":129,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":11,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":154,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":147,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":160,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":88,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":108,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":177,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":183,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":61,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":208,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":153,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":132,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":173,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":44,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":67,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":130,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":230,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":121,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":138,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":104,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":137,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":98,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":45,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":47,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":128,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":231,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":135,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":188,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":187,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":181,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":75,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":145,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":111,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":37,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":109,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":136,"org.apache.commons.lang3.StringUtilsTest.testPrependIfMissing":100,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":38,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":184,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":202,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":175,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":190,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":55,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":110,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_char_char":81,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":196,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":78,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":233,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":170,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":182,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":203,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":225,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":201,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":2,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":71,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":94,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":82,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":57,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":125,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testToHashCodeEqualsHashCode":63,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":235,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":70,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":219,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":144,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":210,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":236,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":118,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":152,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":143,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":14,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":115,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":107,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":192,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":9,"org.apache.commons.lang3.math.FractionTest.testCompareTo":96,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":209,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":119,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":59,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":205,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":166,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":186,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":213,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":3,"org.apache.commons.lang3.StringUtilsTest.testGetJaroWinklerDistance_StringString":0,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":167,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":220,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":229,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":106,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":227,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":159,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":169,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":197,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":7,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLong":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":217,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":142,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":10,"org.apache.commons.lang3.text.StrTokenizerTest.test8":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":185,"org.apache.commons.lang3.text.StrTokenizerTest.test5":30,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":198,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":204,"org.apache.commons.lang3.text.StrTokenizerTest.test4":29,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":206,"org.apache.commons.lang3.text.StrTokenizerTest.test7":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":174,"org.apache.commons.lang3.text.StrTokenizerTest.test6":31,"org.apache.commons.lang3.text.StrTokenizerTest.test1":26,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":25,"org.apache.commons.lang3.text.StrTokenizerTest.test3":28,"org.apache.commons.lang3.text.StrTokenizerTest.test2":27,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":141,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":58,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":52,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":221,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":156,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":5,"org.apache.commons.lang3.ValidateTest.testNotEmptyString2":93,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":133,"org.apache.commons.lang3.ValidateTest.testNotEmptyString1":92,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":157,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":62,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":207,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":200,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleTolerance":69,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":151,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":122,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":238,"org.apache.commons.lang3.math.FractionTest.testPow":95,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":17,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":54,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":68,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":18,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":22,"org.apache.commons.lang3.time.FastDateParserTest.testParses":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":178,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":120,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":155,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":191,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":214,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":116,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":42,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":91,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":39,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":171,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":158,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":222,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":194,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":195,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":234,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":113,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":193,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":126,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":215,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":97,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":99,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":232}}]
