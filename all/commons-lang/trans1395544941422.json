[{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Pair<L, R>.getRight())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1160","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()));\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        java.util.Calendar.add(java.util.Calendar.int, -1);\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            int = java.util.Calendar.int;\n            int = java.util.Calendar.int;\n        } \n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        switch (int) {\n            case org.apache.commons.lang3.time.DateUtils.int :\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.int;\n                int = java.util.Calendar.int;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.get(java.util.Calendar.int);\n                int = int - 1;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n                int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n                break;\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"));\n}","type":"CtSwitchImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:405","sourceCode":"return byte[].clone()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1290","sourceCode":"return byte[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"array":"dst"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:262","sourceCode":"if (org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Constructor<?>.getParameterTypes(), true)) {\n    java.lang.reflect.Constructor<?> = org.apache.commons.lang3.reflect.ConstructorUtils.org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(java.lang.reflect.Constructor<?>);\n    if (java.lang.reflect.Constructor<?> != null) {\n        org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n        if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n            @java.lang.SuppressWarnings(value = \"unchecked\")\n            final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n            java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n        } \n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:265","sourceCode":"if (java.lang.reflect.Constructor<?> != null) {\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>);\n    if ((java.lang.reflect.Constructor<T> == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n        java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:109","sourceCode":"return 12","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:352","sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toShort(java.lang.String, ((short)(0)))","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","sourceCode":"if (int[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[]);\n}","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:884","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3080","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1015","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:955","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:739","sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"workArea","this":"workArea"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:106","sourceCode":"return false","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:190","sourceCode":"return ((org.apache.commons.lang3.CharRange.char) < (char)) || ((org.apache.commons.lang3.CharRange.char) > (char))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:223","sourceCode":"java.lang.Thread.setName(java.lang.String.java.lang.String.format(org.apache.commons.lang3.concurrent.BasicThreadFactory.getNamingPattern(), java.lang.Long))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.Conversion:698","failures":[8],"status":-1,"binaryOperator":"(long & (~long))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:503","sourceCode":"java.lang.String = java.lang.String.substring((int + 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:501","sourceCode":"java.lang.String = java.lang.String.substring((int + 1), int)","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:220","sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:147","sourceCode":"java.lang.String[] = this.java.lang.String[]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:610","sourceCode":"java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methodNames":"tokens","org.apache.commons.lang3.exception.ExceptionUtils.CAUSE_METHOD_NAMES":"tokens"}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:275","sourceCode":"if (java.lang.Object == java.lang.Object) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:369","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"rhs":"o","lhs":"o"}},{"position":"org.apache.commons.lang3.ObjectUtils:545","failures":[10],"status":-1,"binaryOperator":"(((java.util.TreeSet<T>.size()) - 1) / 2)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:105","failures":[],"status":0,"binaryOperator":"(int > (int))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:652","sourceCode":"java.util.List<java.lang.String>.add(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:147","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:261","sourceCode":"return java.lang.Math.java.lang.Math.max(float, float)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:242","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float, float), float)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1424","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2705","sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double)) != (org.apache.commons.lang3.ArrayUtils.int)","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:135","sourceCode":"java.io.ObjectOutputStream java.io.ObjectOutputStream = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:914","sourceCode":"return java.util.Calendar","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:265","sourceCode":"return true","type":"CtReturnImpl"},"failures":[12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:622","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:744","sourceCode":"final org.apache.commons.lang3.text.StrMatcher org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrSubstitutor.getValueDelimiterMatcher()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1628","failures":[],"status":0,"binaryOperator":"(int * 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1326","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 32\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:372","sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"parsePattern"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:679","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: add\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String))","type":"CtThrowImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:697","sourceCode":"final long long = 4294967295L << int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:733","sourceCode":"final long long = (65535L & (short[][(int + int)])) << int","type":"CtLocalVariableImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shift":"i"}},{"position":"org.apache.commons.lang3.CharUtils:355","failures":[],"status":0,"binaryOperator":"char < 256","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CsvEscaper:177","sourceCode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:944","sourceCode":"if (int == 0) {\n    java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n} else {\n    java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n}","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"index":"properNumerator"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1097","sourceCode":"if (long < long) {\n    long = long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1001","sourceCode":"java.util.Date.setTime(long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"time","a":"time"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1579","sourceCode":"int += 4","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"size":"shift"}},{"position":"org.apache.commons.lang3.math.IEEE754rUtils:190","failures":[18],"status":-1,"binaryOperator":"int < (float[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:127","sourceCode":"long--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:942","sourceCode":"long = long[][int]","type":"CtAssignmentImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"max"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1203","sourceCode":"if (long > long) {\n    long = long;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1000","sourceCode":"if ((java.util.Date.getTime()) != long) {\n    java.util.Date.setTime(long);\n    java.util.Calendar.setTime(java.util.Date);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"b":"time","a":"time"}},{"failureDictionary":{"org.apache.commons.lang3.math.NumberUtilsTest.testToShortString":3,"org.apache.commons.lang3.CharRangeTest.testContains_Charrange":6,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":12,"org.apache.commons.lang3.ObjectUtilsTest.testComparatorMedian":10,"org.apache.commons.lang3.AnnotationUtilsTest.testGeneratedAnnotationEquivalentToRealAnnotation":13,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":9,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDouble":11,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":18,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":4,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_1Part":15,"org.apache.commons.lang3.ConversionTest.testIntArrayToLong":8,"org.apache.commons.lang3.math.FractionTest.testToProperString":17,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":1,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":5,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":0,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":14,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":19,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":2,"org.apache.commons.lang3.concurrent.BasicThreadFactoryTest.testNewThreadNamingPattern":7}}]
