[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:902","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.lang3.text.StrTokenizer:520","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, java.lang.String.length())) == false) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:395","type":"CtIfImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>> = java.util.List<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.iterator() ; java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.hasNext() ; ) {\n    final org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object> = java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.next();\n    if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n        java.util.Iterator<org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>>.remove();\n    } \n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:63","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrTokenizer:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>)","position":"org.apache.commons.lang3.builder.CompareToBuilder:436","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Throwable == null) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.String[];\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:603","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(double[], char, 0, double[].int)","position":"org.apache.commons.lang3.StringUtils:3531","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.SerializationUtils:79","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.text.StrLookup:166","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.HashCodeBuilder()","position":"org.apache.commons.lang3.ArrayUtils:190","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(double)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:694","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new boolean[]{ true , false , false , true }","position":"org.apache.commons.lang3.Conversion:241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(boolean[])","position":"org.apache.commons.lang3.ArrayUtils:5976","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int ; int < (long[].int) ; int++) {\n    if (long == (long[][int])) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2028","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(java.lang.Throwable, java.lang.System.java.io.PrintStream)","position":"org.apache.commons.lang3.exception.ExceptionUtils:433","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue()","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.text.StrSubstitutor:781","type":"CtLocalVariableImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:823","type":"CtIfImpl"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,33,34,34,35,35,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,49,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61,62,63,64,65,65,66,66,67,67,68,69,70,71,71,72,72,73,74,75,76,77,78,79,79,80,81,81,82,82,83,83,84,84,85,85,86,87,88,88,89,89,90,91,92,92,93,94,94,95,96,96,97,97,98,98,99,99,100,101,102,103,103,104,104,105,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"variableMapping":{"fieldName":"fieldName","this":"this","buffer":"buffer","value":"value"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:526","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean))","position":"org.apache.commons.lang3.builder.ToStringStyle:445","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:838","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:831","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:595","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The String did not match either specified value\")","position":"org.apache.commons.lang3.BooleanUtils:740","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char = char[][int]","position":"org.apache.commons.lang3.CharSetUtils:75","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Throwable == null) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtIfImpl"},"status":-2},{"failures":[165],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.TimedSemaphore.isShutdown()) {\n    throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\");\n} ","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:293","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"months":"stringPos","years":"arrayPos"},"name":"add","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence[][int].charAt(int)) != char) {\n    int = int;\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6631","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.NumberUtils:1422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1240","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Float.NaN":"defaultValue"},"name":"replace","transplant":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.NumberUtils:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return float","position":"org.apache.commons.lang3.math.NumberUtils:223","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[][int], java.lang.reflect.Type[][int]))) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1642","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.java.lang.Character.codePointCount(java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringEscapeUtils:272","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.ClassUtils:1028","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence, java.lang.CharSequence, int, false)","position":"org.apache.commons.lang3.StringUtils:1008","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'L' :\n    if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n        try {\n            return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n        } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        }\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n    } \n    throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));","position":"org.apache.commons.lang3.math.NumberUtils:529","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Class used to define a set of characters for matching purposes.\n */\nstatic final class CharSetMatcher extends org.apache.commons.lang3.text.StrMatcher {\n    /** \n     * The set of characters to match.\n     */\nprivate final char[] chars;\n\n    /** \n     * Constructor that creates a matcher from a character array.\n     * \n     * @param chars  the characters to match, must not be null\n     */\nCharSetMatcher(final char[] chars) {\n        org.apache.commons.lang3.text.StrMatcher.super();\n        this.char[] = char[].clone();\n        java.util.Arrays.java.util.Arrays.sort(this.char[]);\n    }\n\n    /** \n     * Returns whether or not the given character matches.\n     * \n     * @param buffer  the text content to match against, do not change\n     * @param pos  the starting position for the match, valid for buffer\n     * @param bufferStart  the first active index in the buffer, valid for buffer\n     * @param bufferEnd  the end index of the active buffer, valid for buffer\n     * @return the number of matching characters, zero for no match\n     */\n@java.lang.Override\n    public int isMatch(final char[] buffer, final int pos, final int bufferStart, final int bufferEnd) {\n        return java.util.Arrays.(java.util.Arrays.binarySearch(char[], char[][int])) >= 0 ? 1 : 0;\n    }\n}","position":"org.apache.commons.lang3.text.StrMatcher:275","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"parsePattern":"fieldName","pattern":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} ","position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.writeField(java.lang.Object, java.lang.String, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:720","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = java.lang.String.indexOf(java.lang.String[][int])","position":"org.apache.commons.lang3.StringUtils:4727","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:3457","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(java.lang.String)","position":"org.apache.commons.lang3.builder.StandardToStringStyle:304","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int--","position":"org.apache.commons.lang3.text.StrSubstitutor:776","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{"method":"method","this":"this"},"name":"add","transplant":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:487","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:524","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new java.lang.StringBuilder((java.lang.Class<? extends java.lang.annotation.Annotation> == null ? \"\" : java.lang.Class<? extends java.lang.annotation.Annotation>.getName())).insert(0, '@').toString()","position":"org.apache.commons.lang3.AnnotationUtils:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (int < (java.lang.reflect.Field[].int)) && ((org.apache.commons.lang3.builder.CompareToBuilder.int) == 0) ; int++) {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field[][int];\n    if ((((!org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n        try {\n            org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n        }\n    } \n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:315","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:1878","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String == null ? 0 : java.lang.String.length()","position":"org.apache.commons.lang3.text.StrBuilder:1888","type":"CtLocalVariableImpl"},"status":-2},{"failures":[45,54,74,83],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(short)","position":"org.apache.commons.lang3.builder.ToStringStyle:718","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.util.regex.Matcher.lookingAt())) {\n    throw new java.lang.IllegalArgumentException(((\"Illegal pattern character \\'\" + (java.lang.String.charAt(java.util.regex.Matcher.regionStart()))) + \"\\'\"));\n} ","position":"org.apache.commons.lang3.time.FastDateParser:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'W' :\n    return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;","position":"org.apache.commons.lang3.time.FastDateParser:485","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return double[]","position":"org.apache.commons.lang3.ArrayUtils:3307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) - org.apache.commons.lang3.concurrent.TimedSemaphore.(getAcquireCount())","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:348","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.CharUtils:241","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.StringBuffer == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:611","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"array"},"name":"add","transplant":{"sourceCode":"if (T[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:323","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:513","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The string must not be null\")","position":"org.apache.commons.lang3.math.Fraction:321","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - 1","position":"org.apache.commons.lang3.StringUtils:1543","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"long long = 0","position":"org.apache.commons.lang3.time.DateUtils:1692","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long long = long","position":"org.apache.commons.lang3.Conversion:910","type":"CtLocalVariableImpl"},"status":0},{"failures":[166],"variableMapping":{"objectToTest":"rhs","fieldName":"fieldName","lhs":"rhs","this":"this","rhs":"lhs"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:831","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:838","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, 0)) >= 0","position":"org.apache.commons.lang3.StringUtils:1448","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= int ; int++) {\n    if (org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, int)) {\n        return true;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1481","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.CharRange:331","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long += java.util.concurrent.TimeUnit.convert(java.util.Calendar.get(java.util.Calendar.int), java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)","position":"org.apache.commons.lang3.time.DateUtils:1725","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Float.(java.lang.Float.floatToIntBits(float)) != java.lang.Float.(java.lang.Float.floatToIntBits(float))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Float>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Float getLeft() {\n            return java.lang.Float.java.lang.Float.valueOf(float);\n        }\n\n        @java.lang.Override\n        public java.lang.Float getRight() {\n            return java.lang.Float.java.lang.Float.valueOf(float);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:472","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Cannot store \" + (java.lang.Class<?>.getName())) + \" in an array of \") + (java.lang.Class<?>.getName())) , java.lang.ArrayStoreException)","position":"org.apache.commons.lang3.ArrayUtils:3737","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(':')","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:143","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"]\\n\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:158","type":"CtInvocationImpl"},"status":0},{"failures":[167],"variableMapping":{"this":"this","object":"object"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.getShortCanonicalName(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ClassUtils:1016","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ClassUtils:1060","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"a":"c","b":"a"},"name":"replace","transplant":{"sourceCode":"if (long > long) {\n    long = long;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1205","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long < long) {\n    long = long;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1102","type":"CtIfImpl"},"status":-2},{"failures":[168],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>()","position":"org.apache.commons.lang3.LocaleUtils:298","type":"CtAssignmentImpl"},"status":-1},{"failures":[169],"binaryOperator":"(short >> int)","name":"math","position":"org.apache.commons.lang3.Conversion:1366","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.StringBuilder.length()","position":"org.apache.commons.lang3.Conversion:1517","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = char[].int","position":"org.apache.commons.lang3.CharSetUtils:225","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.WildcardType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.WildcardType)(java.lang.Object)))))","position":"org.apache.commons.lang3.reflect.TypeUtils:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Long java.lang.Long = java.lang.Long[][int]","position":"org.apache.commons.lang3.ArrayUtils:3055","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = java.lang.String.lastIndexOf(' ', (int + int))","position":"org.apache.commons.lang3.text.WordUtils:191","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.math.Fraction(3 , 4)","position":"org.apache.commons.lang3.math.Fraction:75","type":"CtNewClassImpl"},"status":-2},{"failures":[33,33,38,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,61,62,63,64,65,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,97,98,99,100,101,102,103,104,104,105,106,113,114,115,116,117,118,119,120,121,122,123],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.AccessibleObject.java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:519","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>.getEnclosingClass()), \"%s is invalid owner type for parameterized %s\", java.lang.reflect.Type, java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.TypeUtils:1497","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)), java.util.Comparator<?>);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:427","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:940","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    if (java.lang.Object instanceof long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof int[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof char[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof double[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof float[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof boolean[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    int = ((int) * (int)) + (java.lang.Object.hashCode());\n}","position":"org.apache.commons.lang3.builder.HashCodeBuilder:820","type":"CtIfImpl"},"status":-2},{"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.EnumUtils.org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:143","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.lang.Class<E>.isEnum(), org.apache.commons.lang3.EnumUtils.java.lang.String, java.lang.Class<E>)","position":"org.apache.commons.lang3.EnumUtils:308","type":"CtInvocationImpl"},"status":-1},{"failures":[188],"variableMapping":{"size":"index","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"this.char[][int++] = 's'","position":"org.apache.commons.lang3.text.StrBuilder:781","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int] = 'e'","position":"org.apache.commons.lang3.text.StrBuilder:1581","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.lang3.builder.IDKey org.apache.commons.lang3.builder.IDKey = new org.apache.commons.lang3.builder.IDKey(java.lang.Object)","position":"org.apache.commons.lang3.builder.EqualsBuilder:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:556","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"byte byte = byte","position":"org.apache.commons.lang3.Conversion:1158","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final byte byte = org.apache.commons.lang3.mutable.MutableByte.byte","position":"org.apache.commons.lang3.mutable.MutableByte:271","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","position":"org.apache.commons.lang3.reflect.MethodUtils:492","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.ClassUtils:938","type":"CtAssignmentImpl"},"status":-2},{"failures":[189],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException()","position":"org.apache.commons.lang3.builder.CompareToBuilder:279","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.apache.commons.lang3.concurrent.ConcurrentRuntimeException","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:130","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:799","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:1113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:522","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (37 * ((37 * 17) + org.apache.commons.lang3.math.Fraction.(getNumerator()))) + org.apache.commons.lang3.math.Fraction.(getDenominator())","position":"org.apache.commons.lang3.math.Fraction:865","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrTokenizer:530","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.checkName(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:293","type":"CtInvocationImpl"},"status":-2},{"failures":[190,191,192,193,194,195],"variableMapping":{"element":"chars"},"name":"replace","transplant":{"sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(\"Element is null\");\n} ","position":"org.apache.commons.lang3.Range:289","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(T)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]));\n} ","position":"org.apache.commons.lang3.Validate:450","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.lang3.reflect.MemberUtils:145","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[]) {\n    if ((org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int]) == null) {\n        org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int] = new java.util.concurrent.ConcurrentHashMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>(3);\n    } \n    return org.apache.commons.lang3.time.FastDateParser.java.util.concurrent.ConcurrentMap<java.util.Locale, org.apache.commons.lang3.time.FastDateParser.Strategy>[][int];\n}","position":"org.apache.commons.lang3.time.FastDateParser:518","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"T T = null","position":"org.apache.commons.lang3.ObjectUtils:467","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence","position":"org.apache.commons.lang3.StringUtils:6774","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(false)","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:215","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.NumberUtils:1320","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"pattern"},"name":"add","transplant":{"sourceCode":"return java.lang.String.toLowerCase()","position":"org.apache.commons.lang3.StringUtils:5640","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Calendar, java.lang.String, null, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:201","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.lang3.time.FastDatePrinter:569","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"months":"comparison","years":"length"},"name":"add","transplant":{"sourceCode":"int += 12 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:329","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (byte[].int) < (byte[].int) ? -1 : +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:863","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String, 0, int)","position":"org.apache.commons.lang3.StringUtils:6355","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"org.apache.commons.lang3.reflect.TypeUtils:1057","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.reflect.MethodUtils:390","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (java.lang.Object[].int)) {\n    int = (java.lang.Object[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1959","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.reflect.TypeUtils:366","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 1 minutes\", \" 1 minute\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:214","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"final char[] char[] = this.char[]","position":"org.apache.commons.lang3.text.StrBuilder:2682","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = char[]","position":"org.apache.commons.lang3.text.StrBuilder:2714","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:492","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[]","position":"org.apache.commons.lang3.exception.ExceptionUtils:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.SplitState) != (org.apache.commons.lang3.time.StopWatch.SplitState.org.apache.commons.lang3.time.StopWatch.SplitState)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \");\n} ","position":"org.apache.commons.lang3.time.StopWatch:261","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrSubstitutor:675","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    if (java.lang.Class<?>.isArray()) {\n        org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != java.lang.Class<?>)) {\n            java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n            org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        }\n    }\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return false;\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:356","type":"CtTryImpl"},"status":-2},{"failures":[196],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(char)","position":"org.apache.commons.lang3.StringUtils:3623","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.Range:458","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (char[].int)) {\n    int = (char[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2383","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:525","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.library.path\")","position":"org.apache.commons.lang3.SystemUtils:354","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int += 60 * int","position":"org.apache.commons.lang3.time.DurationFormatUtils:389","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.lang.StringBuilder) {\n    java.lang.StringBuilder.append(java.lang.Object.toString());\n} else {\n    if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        boolean = false;\n    } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        boolean = false;\n    } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        boolean = false;\n    } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        boolean = false;\n    } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        boolean = false;\n    } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        boolean = true;\n    } else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n        if (boolean) {\n            int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n        } else {\n            java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n        }\n        boolean = false;\n    } \n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:424","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.ClassUtils:648","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = java.text.MessageFormat.toPattern()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:148","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5719","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"int < 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.ArrayUtils:2485","type":"mutation","status":0},{"failures":[197],"variableMapping":{"shift":"endIndexExclusive"},"name":"replace","transplant":{"sourceCode":"final int int = 65535 << int","position":"org.apache.commons.lang3.Conversion:771","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.ArrayUtils:1204","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.AnnotationUtils:225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.CharSequence.toString())","position":"org.apache.commons.lang3.text.StrBuilder:481","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.ObjectUtils:746","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.StringUtils:3823","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output a padded number.<\/p>\n */\nprivate static class PaddedNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    private final int mSize;\n\n    /** \n     * Constructs an instance of {@code PaddedNumberField}.\n     * \n     * @param field the field\n     * @param size size of the output field\n     */\nPaddedNumberField(final int field ,final int size) {\n        if (int < 3) {\n            throw new java.lang.IllegalArgumentException();\n        } \n        int = int;\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 4;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 100) {\n            for (int int = int ; (--int) >= 2 ; ) {\n                java.lang.StringBuffer.append('0');\n            }\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            int int;\n            if (int < 1000) {\n                int = 3;\n            } else {\n                org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int);\n                int = java.lang.Integer.java.lang.Integer.toString(int).length();\n            }\n            for (int int = int ; (--int) >= int ; ) {\n                java.lang.StringBuffer.append('0');\n            }\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:811","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (java.lang.String.charAt(0)) {\n    case '\\'' :\n        if ((java.lang.String.length()) > 2) {\n            return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(java.lang.String.substring(1, ((java.lang.String.length()) - 1)));\n        } \n    default :\n        return new org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy(java.lang.String);\n    case 'D' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'E' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n    case 'F' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'G' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n    case 'H' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'K' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'M' :\n        return (java.lang.String.length()) >= 3 ? org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar) : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'S' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'W' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'a' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n    case 'd' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'h' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'k' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'm' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 's' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'w' :\n        return org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'y' :\n        return (java.lang.String.length()) > 2 ? org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy : org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.Strategy;\n    case 'Z' :\n    case 'z' :\n        return org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(java.util.Calendar.int, java.util.Calendar);\n}","position":"org.apache.commons.lang3.time.FastDateParser:461","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return (java.lang.Class<?> == null) || (!(java.lang.Class<?>.isPrimitive()));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:358","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator()","position":"org.apache.commons.lang3.math.Fraction:943","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((((java.lang.reflect.Type instanceof java.lang.Class<?>) || (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) || (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) || (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:705","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:560","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:6467","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1029","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"codepoint","length":"codepoint","index":"codepoint"},"name":"replace","transplant":{"sourceCode":"if ((int <= 0) || (int >= int)) {\n    return \"\";\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\\\\u\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))","position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int)","position":"org.apache.commons.lang3.text.StrBuilder:1745","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.lang3.ArrayUtils:2026","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (float[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3496","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"codepoint":"length","below":"length","above":"length"},"name":"add","transplant":{"sourceCode":"if ((int >= (this.int)) && (int <= (this.int))) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (short[] == null) || ((short[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3532","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.CharSequenceUtils:205","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:1116","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((int - 1) * 8) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:835","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","position":"org.apache.commons.lang3.reflect.MethodUtils:433","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":99,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":96,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":119,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":111,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringWithWhitespacesShouldThrow":194,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":148,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":166,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":14,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":73,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":134,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":131,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":136,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":152,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":123,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":118,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":68,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVectors":177,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":132,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":120,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":7,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":85,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":110,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgEmptyStringShouldThrow":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":89,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":79,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullElement":180,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":127,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectorsFromArray":181,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":56,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":129,"org.apache.commons.lang3.exception.ContextedExceptionTest.testJavaSerialization":8,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":92,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_longClass":171,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":128,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testJavaSerialization":0,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArray":187,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":67,"org.apache.commons.lang3.LocaleUtilsTest.testCountriesByLanguage":168,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":21,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_longClassWithArray":178,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":71,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":95,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":82,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":53,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":137,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":13,"org.apache.commons.lang3.ValidateTest.testNotBlankMsgBlankStringShouldThrow":191,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfLongs":196,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":122,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullElement":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":78,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":58,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":133,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":72,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":169,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":149,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":51,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":18,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nullIterable":175,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":135,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nonEnumClass":179,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithWhitespacesShouldThrow":195,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":109,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":59,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":44,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testPassAfterShutdown":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":83,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseUncheckedChecked":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":66,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":41,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":144,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":155,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":49,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":61,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":113,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":50,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":25,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":154,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":84,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":15,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testCopyOnWriteArrayList":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":35,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":146,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":140,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":6,"org.apache.commons.lang3.ArrayUtilsTest.testToString":23,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":36,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector":185,"org.apache.commons.lang3.ValidateTest.testNotBlankBlankStringWithNewlinesShouldThrow":192,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":22,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":87,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testJavaSerialization":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":98,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":150,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":39,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":117,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectorFromArray":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":75,"org.apache.commons.lang3.text.StrTokenizerTest.test8":164,"org.apache.commons.lang3.text.StrTokenizerTest.test5":161,"org.apache.commons.lang3.text.StrTokenizerTest.test4":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":76,"org.apache.commons.lang3.text.StrTokenizerTest.test7":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":77,"org.apache.commons.lang3.text.StrTokenizerTest.test6":162,"org.apache.commons.lang3.text.StrTokenizerTest.test1":157,"org.apache.commons.lang3.text.StrTokenizerTest.test3":159,"org.apache.commons.lang3.text.StrTokenizerTest.test2":158,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":52,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testLinkedList":126,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":112,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":32,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nullArrayElement":173,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":10,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":188,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector":172,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":130,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":11,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":38,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":80,"org.apache.commons.lang3.ValidateTest.testNotBlankEmptyStringShouldThrow":193,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":147,"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":167,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":115,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nonEnumClassWithArray":183,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":138,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":55,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":142,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":57,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":143,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVectors_nonEnumClass":176,"org.apache.commons.lang3.EnumUtilsTest.test_generateBitVector_nonEnumClassWithArray":184,"org.apache.commons.lang3.EnumUtilsTest.test_processBitVector_longClass":182,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":24,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":104,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":151}}]
