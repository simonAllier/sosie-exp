[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (char >= 'a') && (char <= 'z')","position":"org.apache.commons.lang3.CharUtils:498","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.ArrayUtils:1725","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int += 4","position":"org.apache.commons.lang3.text.StrBuilder:1582","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 3","position":"org.apache.commons.lang3.time.FastDatePrinter:860","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"obj2":"value","obj1":"value"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuilder.append(\"null\");\n} else {\n    java.lang.String java.lang.String;\n    try {\n        java.lang.String = java.lang.Object.toString();\n    } catch (final java.lang.Exception java.lang.Exception) {\n        java.lang.String = \"Exception thrown on toString(): \" + org.apache.commons.lang3.exception.ExceptionUtils.(org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(java.lang.Exception));\n    }\n    java.lang.StringBuilder.append(java.lang.String);\n}","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:147","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"transpositions":"length"},"name":"replace","transplant":{"sourceCode":"return int / 2","position":"org.apache.commons.lang3.StringUtils:7120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (byte[].int)) {\n    int = (byte[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2485","type":"CtIfImpl"},"status":-2},{"failures":[0,1],"binaryOperator":"(int / 2) + 1","name":"math","position":"org.apache.commons.lang3.text.WordUtils:543","type":"mutation","status":-1},{"failures":[],"variableMapping":{"count":"length","this":"this","org.apache.commons.lang3.RandomStringUtils.RANDOM":"org.apache.commons.lang3.RandomStringUtils.RANDOM","chars":"chars"},"name":"add","transplant":{"sourceCode":"if (char[] == null) {\n    return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n} ","position":"org.apache.commons.lang3.RandomStringUtils:329","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, char[].int, false, false, char[], org.apache.commons.lang3.RandomStringUtils.java.util.Random)","position":"org.apache.commons.lang3.RandomStringUtils:332","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1337","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String != null) && (int > 0)) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.String);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1320","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    boolean = true;\n} else if (java.lang.Object == (org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object)) {\n    if (boolean) {\n        int int = boolean ? java.lang.Math.java.lang.Math.max(3, int) : 3;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, true, int));\n    } else {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int));\n    }\n    boolean = false;\n} ","position":"org.apache.commons.lang3.time.DurationFormatUtils:442","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:2069","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(int + 1)","name":"math","position":"org.apache.commons.lang3.Conversion:552","type":"mutation","status":0},{"failures":[2,3],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '9'","position":"org.apache.commons.lang3.Conversion:545","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '1';\n} else {\n    return '0';\n}","position":"org.apache.commons.lang3.Conversion:574","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"dstPos":"org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.LONG_DST","nHex":"org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.LONG_STD"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A strategy that handles a timezone field in the parsing pattern\n */\nprivate static class TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser.Strategy {\n    private final java.lang.String validTimeZoneChars;\n\n    private final java.util.SortedMap<java.lang.String, java.util.TimeZone> tzNames = new java.util.TreeMap<java.lang.String, java.util.TimeZone>(java.lang.String.java.util.Comparator<java.lang.String>);\n\n    /** \n     * Index of zone id\n     */\nprivate static final int ID = 0;\n\n    /** \n     * Index of the long name of zone in standard time\n     */\nprivate static final int LONG_STD = 1;\n\n    /** \n     * Index of the short name of zone in standard time\n     */\nprivate static final int SHORT_STD = 2;\n\n    /** \n     * Index of the long name of zone in daylight saving time\n     */\nprivate static final int LONG_DST = 3;\n\n    /** \n     * Index of the short name of zone in daylight saving time\n     */\nprivate static final int SHORT_DST = 4;\n\n    /** \n     * Construct a Strategy that parses a TimeZone\n     * @param locale The Locale\n     */\nTimeZoneStrategy(final java.util.Locale locale) {\n        final java.lang.String[][] java.lang.String[][] = java.text.DateFormatSymbols.java.text.DateFormatSymbols.getInstance(java.util.Locale).getZoneStrings();\n        for (java.lang.String[] java.lang.String[] : java.lang.String[][]) {\n            if (java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int].startsWith(\"GMT\")) {\n                continue;\n            } \n            final java.util.TimeZone java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]);\n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n            } \n            if (java.util.TimeZone.useDaylightTime()) {\n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n                if (!(java.util.SortedMap<java.lang.String, java.util.TimeZone>.containsKey(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int]))) {\n                    java.util.SortedMap<java.lang.String, java.util.TimeZone>.put(java.lang.String[][org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.int], java.util.TimeZone);\n                } \n            } \n        }\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        java.lang.StringBuilder.append(\"(GMT[+\\\\-]\\\\d{0,1}\\\\d{2}|[+\\\\-]\\\\d{2}:?\\\\d{2}|\");\n        for (final java.lang.String java.lang.String : java.util.SortedMap<java.lang.String, java.util.TimeZone>.keySet()) {\n            org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|');\n        }\n        java.lang.StringBuilder.setCharAt(((java.lang.StringBuilder.length()) - 1), ')');\n        java.lang.String = java.lang.StringBuilder.toString();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    boolean addRegex(final org.apache.commons.lang3.time.FastDateParser parser, final java.lang.StringBuilder regex) {\n        java.lang.StringBuilder.append(java.lang.String);\n        return true;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    void setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n        java.util.TimeZone java.util.TimeZone;\n        if (((java.lang.String.charAt(0)) == '+') || ((java.lang.String.charAt(0)) == '-')) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone((\"GMT\" + java.lang.String));\n        } else if (java.lang.String.startsWith(\"GMT\")) {\n            java.util.TimeZone = java.util.TimeZone.java.util.TimeZone.getTimeZone(java.lang.String);\n        } else {\n            java.util.TimeZone = java.util.SortedMap<java.lang.String, java.util.TimeZone>.get(java.lang.String);\n            if (java.util.TimeZone == null) {\n                throw new java.lang.IllegalArgumentException((java.lang.String + \" is not a supported timezone name\"));\n            } \n        }\n        java.util.Calendar.setTimeZone(java.util.TimeZone);\n    }\n}","position":"org.apache.commons.lang3.time.FastDateParser:706","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\t[\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:141","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:501","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.StopWatch:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)) || org.apache.commons.lang3.CharUtils.(org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char))","position":"org.apache.commons.lang3.CharUtils:460","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Character, new org.apache.commons.lang3.mutable.MutableInt(1))","position":"org.apache.commons.lang3.ArrayUtils:5631","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.long[]","position":"org.apache.commons.lang3.ArrayUtils:3029","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds()","position":"org.apache.commons.lang3.reflect.TypeUtils:1809","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds()","position":"org.apache.commons.lang3.reflect.TypeUtils:1810","type":"CtLocalVariableImpl"},"status":-2},{"failures":[4,5],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:157","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:747","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.text.Format java.text.Format = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:170","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field.java.lang.reflect.Field.getDeclaredField(\"modifiers\")","position":"org.apache.commons.lang3.reflect.FieldUtils:684","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:2041","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:915","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"replaceCount":"len"},"name":"replace","transplant":{"sourceCode":"if (int > 0) {\n    int--;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2003","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}","position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:728","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:713","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.mutable.MutableObject:94","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableDouble) && (java.lang.Double.(java.lang.Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(java.lang.Object)).double)) == java.lang.Double.(java.lang.Double.doubleToLongBits(double)))","position":"org.apache.commons.lang3.mutable.MutableDouble:276","type":"CtReturnImpl"},"status":-2},{"failures":[6,7,8,9,10],"variableMapping":{"calendarField":"calendarField","amount":"amount","c":"c"},"name":"add","transplant":{"sourceCode":"java.util.Calendar.add(int, int)","position":"org.apache.commons.lang3.time.DateUtils:523","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.set(int, int)","position":"org.apache.commons.lang3.time.DateUtils:654","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.text.StrTokenizer:789","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} else if (int >= (long[].int)) {\n    int = (long[].int) - 1;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2068","type":"CtIfImpl"},"status":-2},{"failures":[11,12],"binaryOperator":"(\"FastDateParser[\" + (java.lang.String))","name":"removeConditional","position":"org.apache.commons.lang3.time.FastDateParser:248","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:701","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4320","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Enumeration type which indicates the split status of stopwatch.\n */\nprivate enum SplitState {\nSPLIT, UNSPLIT;}","position":"org.apache.commons.lang3.time.StopWatch:125","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.reflect.FieldUtils:649","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","position":"org.apache.commons.lang3.text.StrBuilder:419","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4717","type":"CtLocalVariableImpl"},"status":-2},{"failures":[13,14,15],"binaryOperator":"(char <= 'z')","name":"removeConditional","position":"org.apache.commons.lang3.CharUtils:498","type":"mutation","status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"binaryOperator":"(boolean) == false","name":"negateConditional","position":"org.apache.commons.lang3.builder.EqualsBuilder:640","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.SecurityException java.lang.SecurityException","position":"org.apache.commons.lang3.text.StrLookup:55","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((boolean[])(org.apache.commons.lang3.ArrayUtils.add(boolean[], int, java.lang.Boolean.java.lang.Boolean.valueOf(boolean), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)))","position":"org.apache.commons.lang3.ArrayUtils:4327","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return short","position":"org.apache.commons.lang3.Conversion:1116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:4960","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrBuilder == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:696","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.equals(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)), java.lang.reflect.Type);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1581","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"java.lang.Byte.valueOf(((byte)(-1)))","position":"org.apache.commons.lang3.math.NumberUtils:56","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Byte[][int] = java.lang.Byte.java.lang.Byte.valueOf(byte[][int])","position":"org.apache.commons.lang3.ArrayUtils:3281","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (int & (int)) == (int)","position":"org.apache.commons.lang3.BitField:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2715","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String.java.lang.String.format(\"%s[]\", org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.GenericArrayType.getGenericComponentType()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1826","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:706","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int) * (int)","position":"org.apache.commons.lang3.builder.HashCodeBuilder:817","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","position":"org.apache.commons.lang3.time.StopWatch:207","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"end < start\")","position":"org.apache.commons.lang3.text.StrBuilder:2787","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"u":"length"},"name":"replace","transplant":{"sourceCode":"if (int > 0) {\n    int = -int;\n} ","position":"org.apache.commons.lang3.math.Fraction:592","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || ((int + int) > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:1553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"valueIfNull","org.apache.commons.lang3.StringUtils.EMPTY":"valueIfNull"},"name":"replace","transplant":{"sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.ClassUtils:1058","type":"CtReturnImpl"},"status":0},{"failures":[31,32,33,34,35],"variableMapping":{"exceptionContext":"exceptionContext","label":"label","value":"value"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.exception.ExceptionContext.setContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedException:188","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedRuntimeException:169","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.ClassUtils:282","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((int < 0) || (int < 0)) || (int > (char[].int))) || ((int + int) > (char[].int))) || ((int + int) < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2872","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.vm.specification.version\")","position":"org.apache.commons.lang3.SystemUtils:612","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.StringUtils:5994","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:487","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.noNullElements(E[])","position":"org.apache.commons.lang3.EnumUtils:203","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:574","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.ClassNotFoundException","position":"org.apache.commons.lang3.SerializationUtils:332","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"lhs":"lhs","this":"this","rhs":"rhs"},"name":"replace","transplant":{"sourceCode":"if ((short[] == null) || (short[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return org.apache.commons.lang3.builder.EqualsBuilder;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:739","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((short[].int) != (short[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:743","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = java.lang.StringBuilder.length()","position":"org.apache.commons.lang3.Conversion:1437","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.trim()","position":"org.apache.commons.lang3.time.DurationFormatUtils:217","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)","position":"org.apache.commons.lang3.reflect.TypeUtils:611","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:877","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (char[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3809","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int--) > 0) {\n    char char = java.lang.CharSequence.charAt(int++);\n    char char = java.lang.CharSequence.charAt(int++);\n    if (char == char) {\n        continue;\n    } \n    if (!boolean) {\n        return false;\n    } \n    if ((java.lang.Character.(java.lang.Character.toUpperCase(char)) != java.lang.Character.(java.lang.Character.toUpperCase(char))) && (java.lang.Character.(java.lang.Character.toLowerCase(char)) != java.lang.Character.(java.lang.Character.toLowerCase(char)))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:196","type":"CtWhileImpl"},"status":-2},{"failures":[36],"variableMapping":{"range":"range"},"name":"replace","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharRange == null) {\n    throw new java.lang.IllegalArgumentException(\"The Range must not be null\");\n} ","position":"org.apache.commons.lang3.CharRange:183","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.lang3.CharRange.char) == (java.lang.Character.char)) {\n    boolean = false;\n} else {\n    char = ((char)((org.apache.commons.lang3.CharRange.char) + 1));\n}","position":"org.apache.commons.lang3.CharRange:287","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.text.StrBuilder:2475","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(java.lang.StringBuffer, java.util.Collection<?>)","position":"org.apache.commons.lang3.builder.RecursiveToStringStyle:83","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:832","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.util.Arrays.(java.util.Arrays.equals(long[], long[]))) {\n    java.util.List<org.apache.commons.lang3.builder.Diff<?>>.add(new org.apache.commons.lang3.builder.Diff<java.lang.Long[]>(java.lang.String) {\n        private static final long serialVersionUID = 1L;\n\n        @java.lang.Override\n        public java.lang.Long[] getLeft() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(long[]);\n        }\n\n        @java.lang.Override\n        public java.lang.Long[] getRight() {\n            return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.toObject(long[]);\n        }\n    });\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:682","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((java.lang.String)(java.lang.CharSequence)).toCharArray()","position":"org.apache.commons.lang3.CharSequenceUtils:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence instanceof java.lang.String) {\n    return ((java.lang.String)(java.lang.CharSequence)).toCharArray();\n} else {\n    final int int = java.lang.CharSequence.length();\n    final char[] char[] = new char[java.lang.CharSequence.length()];\n    for (int int = 0 ; int < int ; int++) {\n        char[][int] = java.lang.CharSequence.charAt(int);\n    }\n    return char[];\n}","position":"org.apache.commons.lang3.CharSequenceUtils:164","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.math.NumberUtils:727","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int /= int","position":"org.apache.commons.lang3.math.Fraction:231","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.builder.CompareToBuilder:276","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:5821","type":"CtReturnImpl"},"status":-2},{"failures":[37,38,39,40,41,42],"binaryOperator":"(long * (org.apache.commons.lang3.time.DateUtils.long))","name":"math","position":"org.apache.commons.lang3.time.DurationFormatUtils:146","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Integer[]","position":"org.apache.commons.lang3.ArrayUtils:3147","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:6404","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int > (-1)) {\n    if (int > (-1)) {\n        if ((int < int) || (int > (java.lang.String.length()))) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring((int + 1), int);\n    } else {\n        java.lang.String = java.lang.String.substring((int + 1));\n    }\n    java.lang.String = java.lang.String.substring(0, int);\n    int = java.lang.String.length();\n} else {\n    if (int > (-1)) {\n        if (int > (java.lang.String.length())) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring(0, int);\n    } else {\n        java.lang.String = java.lang.String;\n    }\n    java.lang.String = null;\n}","position":"org.apache.commons.lang3.math.NumberUtils:495","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(boolean[], 0, boolean[], 0, boolean[].int)","position":"org.apache.commons.lang3.ArrayUtils:3769","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.BitSet.set(int++)","position":"org.apache.commons.lang3.ArrayUtils:5467","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String java.lang.String = java.text.Normalizer.java.text.Normalizer.normalize(java.lang.String, java.text.Normalizer.Form.java.text.Normalizer.Form)","position":"org.apache.commons.lang3.StringUtils:766","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.concurrent.ExecutorService = null","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < 0) || ((int + int) > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid length: \" + int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:751","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n    if (java.util.Map<java.lang.Object, java.lang.Object> != null) {\n        java.util.Map<java.lang.Object, java.lang.Object>.remove(java.lang.Object);\n        if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n            org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n        } \n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.apache.commons.lang3.reflect.MemberUtils:148","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.lang3.ObjectUtils:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int >= 0 ; int--) {\n    if (((double[][int]) >= double) && ((double[][int]) <= double)) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.ArrayUtils:2697","type":"CtForImpl"},"status":-2},{"failures":[43],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","position":"org.apache.commons.lang3.BooleanUtils:328","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final char[] char[] = java.lang.Character.java.lang.Character.toChars(int)","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle()","position":"org.apache.commons.lang3.builder.ToStringStyle:81","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> : java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.entrySet()) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.getKey();\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map.Entry<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.getValue();\n    for (final java.lang.reflect.Type java.lang.reflect.Type : org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(java.lang.reflect.TypeVariable<?>)) {\n        if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>))) {\n            return false;\n        } \n    }\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:1218","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final double double = 0.1","position":"org.apache.commons.lang3.StringUtils:7012","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double - int","position":"org.apache.commons.lang3.math.Fraction:269","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.apache.commons.lang3.SerializationUtils:231","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.IDKey:65","type":"CtReturnImpl"},"status":0},{"failures":[44],"variableMapping":{"value":"value"},"name":"add","transplant":{"sourceCode":"(this.short)++","position":"org.apache.commons.lang3.mutable.MutableShort:118","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.short += short","position":"org.apache.commons.lang3.mutable.MutableShort:138","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[45],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:4997","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String + org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String.substring(int), (int - 3)))","position":"org.apache.commons.lang3.StringUtils:6417","type":"CtReturnImpl"},"status":-1},{"failures":[46,47,48],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('0')","position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1176","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final long long = ((long)(int)) * ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:640","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = (255L & (byte[][(int + int)])) << int","position":"org.apache.commons.lang3.Conversion:807","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32);\n    java.lang.StringBuilder.append('[');\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(\"..\");\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(']');\n    java.lang.String = java.lang.StringBuilder.toString();\n    java.lang.String = java.lang.String;\n} ","position":"org.apache.commons.lang3.Range:450","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:4735","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:296","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle()","position":"org.apache.commons.lang3.builder.ToStringStyle:81","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'A' :\n    return new boolean[]{ true , false , true , false };","position":"org.apache.commons.lang3.Conversion:243","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.lang3.concurrent.ConcurrentRuntimeException(java.util.concurrent.ExecutionException.getMessage() , java.util.concurrent.ExecutionException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:83","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY"},"name":"add","transplant":{"sourceCode":"return java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3004","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = -1","position":"org.apache.commons.lang3.StringUtils:4717","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))), java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:379","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:826","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"tok"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","position":"org.apache.commons.lang3.text.StrTokenizer:99","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","position":"org.apache.commons.lang3.text.StrTokenizer:216","type":"CtInvocationImpl"},"status":0},{"failures":[49],"binaryOperator":"((java.util.TreeSet<T>.size()) - 1)","name":"math","position":"org.apache.commons.lang3.ObjectUtils:533","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"Cannot locate declared field %s.%s\", java.lang.Class<?>.getName(), java.lang.String)","position":"org.apache.commons.lang3.reflect.FieldUtils:747","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:157","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.lang3.time.FastDatePrinter:334","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.StringUtils:2970","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>, 0, 0)","position":"org.apache.commons.lang3.text.StrTokenizer:718","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(char).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:1017","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"consumed":"i"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.text.translate.AggregateTranslator:53","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:1971","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"str":"seq","searchStr":"searchChars","this":"this","endLimit":"i","startPos":"i"},"name":"add","transplant":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1123","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int + 1) < int) && java.lang.Character.(java.lang.Character.isHighSurrogate(char))) {\n    final char char = java.lang.CharSequence.charAt((int + 1));\n    if (boolean && (org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, char, 0)) < 0)) {\n        return int;\n    } \n} else {\n    if (!boolean) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:1767","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T, org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:421","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(T, org.apache.commons.lang3.Validate.java.lang.String)","position":"org.apache.commons.lang3.Validate:203","type":"CtReturnImpl"},"status":-2},{"failures":[50,51],"binaryOperator":"(java.util.Calendar == null)","name":"removeConditional","position":"org.apache.commons.lang3.time.DateUtils:180","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:294","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, 0);\n    if (int >= 0) {\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int);\n    } \n} ","position":"org.apache.commons.lang3.text.StrBuilder:1760","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Class<?>.getSimpleName()","position":"org.apache.commons.lang3.ClassUtils:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Integer = null","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:365","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"float float = 0.0F","position":"org.apache.commons.lang3.reflect.MemberUtils:168","type":"CtLocalVariableImpl"},"status":-2},{"failures":[52,53,54],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.text.WordUtils:537","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(char[]).concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5437","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY":"array"},"name":"replace","transplant":{"sourceCode":"return int[]","position":"org.apache.commons.lang3.ArrayUtils:554","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[])","position":"org.apache.commons.lang3.ArrayUtils:5535","type":"CtReturnImpl"},"status":0},{"failures":[55],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:361","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    final int int = (java.lang.String.indexOf(java.lang.String)) + (java.lang.String.length());\n    final int int = java.lang.String.lastIndexOf(java.lang.String);\n    if (((int != int) && (int >= 0)) && (int >= 0)) {\n        final java.lang.String java.lang.String = java.lang.String.substring(int, int);\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n        } \n        java.lang.StringBuffer.append(java.lang.String);\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:356","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:842","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.isEmpty()) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:455","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return 'e';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return 'c';\n    }\n}","position":"org.apache.commons.lang3.Conversion:306","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width with offset is 7\")","position":"org.apache.commons.lang3.StringUtils:6414","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n    if (java.util.Map<java.lang.Object, java.lang.Object> != null) {\n        java.util.Map<java.lang.Object, java.lang.Object>.remove(java.lang.Object);\n        if (java.util.Map<java.lang.Object, java.lang.Object>.isEmpty()) {\n            org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove();\n        } \n    } \n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:208","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Object[])","position":"org.apache.commons.lang3.reflect.ConstructorUtils:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:1476","type":"CtIfImpl"},"status":-2},{"failures":[56,57],"variableMapping":{"superEquals":"uncapitalizeNext","isEquals":"uncapitalizeNext"},"name":"replace","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.lang3.builder.EqualsBuilder:437","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.text.WordUtils:422","type":"CtAssignmentImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":17,"org.apache.commons.lang3.CharRangeTest.testIterator":36,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":6,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":21,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_int_int_int":43,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":30,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":53,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":2,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":51,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphaLower_char":15,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":46,"org.apache.commons.lang3.StringUtilsTest.testAbbreviate_StringIntInt":45,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":11,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":9,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":12,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":22,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":27,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":37,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":50,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":35,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlphanumeric_char":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":29,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":54,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":42,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":39,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":20,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":56,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":38,"org.apache.commons.lang3.ValidateTest.testValidIndex_withMessage_charSequence":5,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":48,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":41,"org.apache.commons.lang3.ObjectUtilsTest.testMedian":49,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":0,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":3,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":52,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":23,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":7,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":26,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":57,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArray":16,"org.apache.commons.lang3.mutable.MutableShortTest.testAddValuePrimitive":44,"org.apache.commons.lang3.ValidateTest.testValidIndex_charSequence":4,"org.apache.commons.lang3.CharUtilsTest.testIsAsciiAlpha_char":14,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":28,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextEntries":32,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":55,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":34,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":31,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextLabels":33,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":40,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String":1,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":18,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":24,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":10,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":47}}]
