[{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:516","sourceCode":"org.apache.commons.lang3.Validate.notEmpty(T[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:538","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"items":"items","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:99","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setIgnoreEmptyTokens(false)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1177","sourceCode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, byte[][int]);\n}","type":"CtForImpl"},"failures":[0,0,1,2,3,3,4,5,6,7,8,9,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pattern":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:517","sourceCode":"return (char >= '0') && (char <= '9')","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:490","sourceCode":"if (char == char) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ch":"ch"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1224","sourceCode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1263","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    short[][(int + int)] = ((short)(65535 & (int >> int)));\n}","type":"CtForImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"nShorts":"shift","srcPos":"src"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1218","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1238","sourceCode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int]);\n}","type":"CtForImpl"},"failures":[29,29,30,30,31,8,8,9,10,11,12,13,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:970","failures":[32,33,34,35,36],"status":-1,"binaryOperator":"boolean[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:178","sourceCode":"if ((java.lang.String.isEmpty()) || (org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:205","sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || org.apache.commons.lang3.CharSetUtils.(org.apache.commons.lang3.CharSetUtils.deepEmpty(java.lang.String[]))) {\n    return java.lang.String;\n} ","type":"CtIfImpl"},"failures":[37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"str","str":"str","set":"set","this":"this"}},{"position":"org.apache.commons.lang3.Conversion:1089","failures":[39],"status":-1,"binaryOperator":"(int + int)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:265","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been split. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1063","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\")","type":"CtThrowImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:491","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:523","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[29,29,30,30,31,8,8,9,10,11,12,13,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","sourceCode":"int int = int + 3","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:778","sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)","type":"CtLocalVariableImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"len"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:563","sourceCode":"return '4'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.CharRange:216","failures":[],"status":0,"binaryOperator":"((char) == (org.apache.commons.lang3.CharRange.char))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1360","sourceCode":"for (int int = 0 ; int < (float[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[][int]);\n}","type":"CtForImpl"},"failures":[93,94,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:449","sourceCode":"if (java.lang.String == null) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(32);\n    java.lang.StringBuilder.append('[');\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(\"..\");\n    java.lang.StringBuilder.append(T);\n    java.lang.StringBuilder.append(']');\n    java.lang.String = java.lang.StringBuilder.toString();\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"result"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:175","sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:848","sourceCode":"return this.org.apache.commons.lang3.text.StrMatcher","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrMatcher.NONE_MATCHER":"delimMatcher"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:262","sourceCode":"if ((java.util.concurrent.ScheduledFuture<?>) != null) {\n    java.util.concurrent.ScheduledFuture<?>.cancel(false);\n} ","type":"CtIfImpl"},"failures":[96,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.CharSetUtils:179","sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:193","sourceCode":"return java.lang.String.java.lang.String.valueOf(boolean)","type":"CtReturnImpl"},"failures":[98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:404","sourceCode":"return long","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:700","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"startTimeMillis":"out"}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:219","sourceCode":"try {\n    if (java.io.ObjectInputStream != null) {\n        java.io.ObjectInputStream.close();\n    } \n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:233","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:679","sourceCode":"if (org.apache.commons.lang3.builder.ToStringBuilder.(getObject()) == null) {\n    return org.apache.commons.lang3.builder.ToStringBuilder.getStyle().getNullText();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:1063","sourceCode":"return org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer().toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:493","sourceCode":"if ((int) == (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:146","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"failures":[102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:247","sourceCode":"return (short) == (((org.apache.commons.lang3.mutable.MutableShort)(java.lang.Object)).shortValue())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:278","sourceCode":"return (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableFloat) && (java.lang.Float.(java.lang.Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(java.lang.Object)).float)) == java.lang.Float.(java.lang.Float.floatToIntBits(float)))","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1401","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, boolean[])","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:108","sourceCode":"return false","type":"CtReturnImpl"},"failures":[105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:586","failures":[107,108,109,110,111,112,113,114,115],"status":-1,"name":"returnValue","return":"return 1","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:348","sourceCode":"throw new java.lang.RuntimeException(\"Illegal running state has occurred.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:605","sourceCode":"throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int))","type":"CtThrowImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1031","sourceCode":"if (int[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, int[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, int[]);\n}","type":"CtIfImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:304","sourceCode":"if ((int > (int + 3)) && (boolean[][(int + 3)])) {\n    if ((int > (int + 2)) && (boolean[][(int + 2)])) {\n        if ((int > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if ((int > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if ((int > (int + 2)) && (boolean[][(int + 2)])) {\n        if ((int > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if ((int > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:445","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'e';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'a';\n    } else {\n        return '2';\n    }\n}","type":"CtIfImpl"},"failures":[117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","length":"srcPos","src":"src"}},{"failureDictionary":{"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":94,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":0,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_2items":33,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":9,"org.apache.commons.lang3.math.FractionTest.testFactory_double":111,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":14,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":2,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":11,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":50,"org.apache.commons.lang3.mutable.MutableBooleanTest.testToString":98,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":48,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":73,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":77,"org.apache.commons.lang3.mutable.MutableFloatTest.testEquals":103,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownSharedExecutorTask":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":16,"org.apache.commons.lang3.text.WordUtilsTest.testInitials_String_charArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":87,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":84,"org.apache.commons.lang3.math.FractionTest.testPow":109,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":106,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":100,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":59,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":56,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":26,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":1,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringString":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":44,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":118,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_validInput_3items":34,"org.apache.commons.lang3.BooleanUtilsTest.testOr_primitive_nullInput":32,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":13,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_3items":36,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":113,"org.apache.commons.lang3.text.StrTokenizerTest.test1":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":89,"org.apache.commons.lang3.text.StrTokenizerTest.test3":67,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":90,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":107,"org.apache.commons.lang3.text.StrTokenizerTest.test2":66,"org.apache.commons.lang3.RangeTest.testToString":95,"org.apache.commons.lang3.math.FractionTest.testSubtract":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":6,"org.apache.commons.lang3.text.StrTokenizerTest.test8":72,"org.apache.commons.lang3.math.FractionTest.testAdd":108,"org.apache.commons.lang3.text.StrTokenizerTest.test5":69,"org.apache.commons.lang3.text.StrTokenizerTest.test4":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":31,"org.apache.commons.lang3.text.StrTokenizerTest.test7":71,"org.apache.commons.lang3.text.StrTokenizerTest.test6":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":81,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":78,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":28,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":12,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":54,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":8,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":55,"org.apache.commons.lang3.math.FractionTest.testMultiply":115,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":19,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":37,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":64,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int":102,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":10,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":38,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":117,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":93,"org.apache.commons.lang3.BooleanUtilsTest.testOr_object_validInput_2items":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":21,"org.apache.commons.lang3.math.FractionTest.testDivide":114,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testShutdownMultipleTimes":97,"org.apache.commons.lang3.math.FractionTest.testToProperString":112,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":4,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":75,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":82,"org.apache.commons.lang3.ConversionTest.testIntToHexDigit":116,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":49,"org.apache.commons.lang3.ConversionTest.testBinaryToInt":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":23,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":51}}]
