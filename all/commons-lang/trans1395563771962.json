[{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:178","sourceCode":"double -= double","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1038","sourceCode":"double = double[][int]","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"max","operand":"max"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilderReader:2893","sourceCode":"if (long < 0) {\n    return 0;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1042","sourceCode":"if ((((boolean[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"n":"dstInit"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:492","sourceCode":"if (java.io.PrintWriter == null) {\n    throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:497","sourceCode":"java.io.PrintWriter.println(java.lang.String)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:148","sourceCode":"if ((java.lang.String.charAt(5)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:518","sourceCode":"try {\n    final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n    org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n}","type":"CtTryImpl"},"failures":[2,2,3,3,4,5,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,27,28,29,30,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,44,45,46,47,47,48,49,50,50,51,52,53,54,54,55,56,57,58,59,60,61,62,62,63,64,65,66,67,68,68,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"fieldName"}},{"position":"org.apache.commons.lang3.builder.ToStringStyle:1055","failures":[4,35,35,36,37,38,39,40,41,42,43,43,44,45,46,47,48,49,49,50,51,52,53,54,55,56,57,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,83,84,85,86,87,88],"status":-1,"binaryOperator":"int < (int[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:377","sourceCode":"if (java.lang.Character.java.lang.Character.isUpperCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} else if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"i"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:42","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:955","sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:887","sourceCode":"org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.util.List<java.lang.String>, \"->\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"buf","this":"buf"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:183","sourceCode":"if (int < 0) {\n    long = (int * ((long)(int))) - int;\n} else {\n    long = (int * ((long)(int))) + int;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:184","sourceCode":"long = (int * ((long)(int))) - int","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"whole":"numerator","denominator":"denominator","numerator":"denominator","numeratorValue":"numeratorValue"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:603","sourceCode":"if ((java.lang.String[]) == null) {\n    if ((char[]) == null) {\n        final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(null, 0, 0);\n        java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]);\n    } else {\n        final java.util.List<java.lang.String> java.util.List<java.lang.String> = org.apache.commons.lang3.text.StrTokenizer.tokenize(char[], 0, char[].int);\n        java.lang.String[] = java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]);\n    }\n} ","type":"CtIfImpl"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"this.org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:430","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int[], null)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"style"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:374","sourceCode":"return org.apache.commons.lang3.builder.EqualsBuilder.isEquals()","type":"CtReturnImpl"},"failures":[162,163,164,165,166],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:912","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[167,4,5,10,11,20,25,32,49,52,54,59,61,63,83,168,169,84,170,171,85,157,159,86,172,173,87,174,175,88,176,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3492","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:267","sourceCode":"java.util.List<java.util.Locale>.add(java.util.Locale)","type":"CtInvocationImpl"},"failures":[179],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:361","sourceCode":"return (this.long) == 0 ? 0 : (this.long) / (this.long)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:212","sourceCode":"return long","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"periodCount":"value","totalAcquireCount":"value"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1871","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1522","sourceCode":"if ((boolean) && (java.lang.String != null)) {\n    java.lang.StringBuffer.append(java.lang.String);\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[3,5,7,8,13,18,19,21,22,23,27,30,36,37,44,47,50,53,54,58,62,63,64,68,69,156,159,160,161,180,173,181,182,183,175,184,185,186,177,187,188,189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"fieldNameValueSeparator":"fieldNameValueSeparator"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:632","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:195","sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, null, java.util.Locale)","type":"CtReturnImpl"},"failures":[190,191],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:182","sourceCode":"return byte","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:327","sourceCode":"try {\n    return java.lang.Byte.java.lang.Byte.parseByte(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return byte;\n}","type":"CtTryImpl"},"failures":[192,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"defaultValue"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:931","sourceCode":"if ((java.lang.String) == null) {\n    if ((int) == 0) {\n        java.lang.String = \"0\";\n    } else if ((int) == (int)) {\n        java.lang.String = \"1\";\n    } else if ((int) == ((-1) * (int))) {\n        java.lang.String = \"-1\";\n    } else if (((int) > 0 ? -(int) : int) < (-(int))) {\n        final int int = org.apache.commons.lang3.math.Fraction.getProperNumerator();\n        if (int == 0) {\n            java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole());\n        } else {\n            java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n        }\n    } else {\n        java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString();\n    }\n} ","type":"CtIfImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:547","sourceCode":"return '8'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:314","sourceCode":"return 'd'","type":"CtReturnImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:93","sourceCode":"if (java.lang.String.contains(\"#\")) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1535","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:491","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size())","type":"CtInvocationImpl"},"failures":[5,63,169,171,159,173,175,177],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"position":"org.apache.commons.lang3.exception.ExceptionUtils:535","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:683","sourceCode":"org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:684","sourceCode":"while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != org.apache.commons.lang3.builder.ReflectionToStringBuilder.(getUpToClass()))) {\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    org.apache.commons.lang3.builder.ReflectionToStringBuilder.appendFieldsIn(java.lang.Class<?>);\n}","type":"CtWhileImpl"},"failures":[3,7,8,15,16,20,24,28,29,30,33,34,35,36,37,38,39,43,44,45,47,50,51,52,54,56,60,62,65,66,68,69,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz","this":"this"}},{"position":"org.apache.commons.lang3.time.DateUtils:1212","failures":[],"status":-2,"binaryOperator":"int > (java.util.Calendar.int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":101,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":175,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":31,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":92,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":160,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVEmpty":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":107,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":183,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":176,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":16,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":182,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":90,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":68,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":111,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":33,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":98,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":78,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":100,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":164,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":109,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry":179,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":136,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":193,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":141,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":190,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":81,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":147,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":180,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":17,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":163,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":151,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":150,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":148,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":104,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":158,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":38,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":35,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":102,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":45,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":54,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":82,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":143,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":145,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":170,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":137,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":94,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":22,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":56,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":185,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":10,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":47,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":27,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":18,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneNull":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":23,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":79,"org.apache.commons.lang3.math.FractionTest.testToProperString":194,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":88,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":191,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":146,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":20,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":37,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":51,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":152,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":89,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":77,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":99,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":162,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":87,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":113,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":19,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":11,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":187,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":29,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":63,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":97,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":83,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":64,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":177,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":123,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":122,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":173,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":119,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":118,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":39,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":44,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":155,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":161,"org.apache.commons.lang3.text.StrTokenizerTest.testTSVEmpty":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":15,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":7,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteStringI":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":2,"org.apache.commons.lang3.text.StrTokenizerTest.test1":128,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":153,"org.apache.commons.lang3.text.StrTokenizerTest.test3":130,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":154,"org.apache.commons.lang3.text.StrTokenizerTest.test2":129,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":195,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":26,"org.apache.commons.lang3.text.StrTokenizerTest.test8":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":21,"org.apache.commons.lang3.text.StrTokenizerTest.test5":132,"org.apache.commons.lang3.text.StrTokenizerTest.test4":131,"org.apache.commons.lang3.text.StrTokenizerTest.test7":134,"org.apache.commons.lang3.text.StrTokenizerTest.test6":133,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":188,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxDouble":0,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":4,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":157,"org.apache.commons.lang3.ArrayUtilsTest.testToString":178,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":91,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":116,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":181,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":126,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":73,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":24,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":140,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":36,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":52,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":139,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":174,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":110,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":196,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":9}}]
