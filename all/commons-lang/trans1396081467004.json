[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char[][(int)++] = 'r'","position":"org.apache.commons.lang3.text.StrBuilder:773","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Double.isInfinite(double)","position":"org.apache.commons.lang3.mutable.MutableDouble:127","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.NumberUtils:1320","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (float[] == null) || ((float[].int) == 0)","position":"org.apache.commons.lang3.ArrayUtils:3576","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String == null ? org.apache.commons.lang3.StringUtils.java.lang.String : java.lang.String","position":"org.apache.commons.lang3.StringUtils:6199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == (org.apache.commons.lang3.StringUtils.int)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2297","type":"CtIfImpl"},"status":-2},{"failures":[0],"variableMapping":{"this":"style"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayContentDetail(true)","position":"org.apache.commons.lang3.AnnotationUtils:57","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} ","position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:682","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"toClass":"toClass"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return false;\n} ","position":"org.apache.commons.lang3.ClassUtils:625","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))), java.lang.Class<?>);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:379","type":"CtIfImpl"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"variableMapping":{"numerator":"quoteStart","denominator":"quoteLen"},"name":"replace","transplant":{"sourceCode":"return int / int","position":"org.apache.commons.lang3.math.Fraction:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","position":"org.apache.commons.lang3.text.StrTokenizer:748","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"resourceName","separator":"resourceName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:2293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassPathUtils.org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(java.lang.Class<?>.getPackage(), java.lang.String)","position":"org.apache.commons.lang3.ClassPathUtils:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int != 0","position":"org.apache.commons.lang3.BooleanUtils:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = java.lang.String.toCharArray()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:483","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"out","operand":"out"},"name":"replace","transplant":{"sourceCode":"short += short","position":"org.apache.commons.lang3.mutable.MutableShort:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = ((short)((short & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:984","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7018","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-4329119827877627683L","position":"org.apache.commons.lang3.text.CompositeFormat:38","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5731","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.Conversion:521","type":"CtIfImpl"},"status":-2},{"failures":[51],"variableMapping":{"str":"input","padStr":"input"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","position":"org.apache.commons.lang3.StringEscapeUtils:732","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:801","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:911","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:495","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<org.apache.commons.lang3.CharRange>.equals(org.apache.commons.lang3.CharSet.java.util.Set<org.apache.commons.lang3.CharRange>)","position":"org.apache.commons.lang3.CharSet:254","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = int + 3","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = 1 << int","position":"org.apache.commons.lang3.Conversion:1163","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 15","position":"org.apache.commons.lang3.Conversion:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (long) < long ? -1 : (long) == long ? 0 : 1","position":"org.apache.commons.lang3.mutable.MutableLong:262","type":"CtReturnImpl"},"status":-2},{"failures":[52],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"long = long","position":"org.apache.commons.lang3.math.NumberUtils:1209","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"length":"length"},"name":"add","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.lang3.CharSequenceUtils:194","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Integer[] java.lang.Integer[] = new java.lang.Integer[int[].int]","position":"org.apache.commons.lang3.ArrayUtils:3143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int < int) {\n    int = int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1117","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int = (java.util.Calendar.getMaximum(java.util.Calendar.int)) + 1;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:1071","type":"CtIfImpl"},"status":-2},{"failures":[53],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1015","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 'b'","position":"org.apache.commons.lang3.Conversion:657","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long[] == null) || (long[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:677","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new java.lang.String(char[])","position":"org.apache.commons.lang3.RandomStringUtils:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= (int)) {\n    return new java.lang.String(char[] , 0 , int);\n} else {\n    return new java.lang.String(char[] , 0 , int);\n}","position":"org.apache.commons.lang3.text.StrBuilder:2180","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(java.lang.String.charAt(0))","position":"org.apache.commons.lang3.text.StrMatcher:194","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:206","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double double","position":"org.apache.commons.lang3.math.Fraction:271","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(char[], java.lang.Character.java.lang.Class<java.lang.Character>)))","position":"org.apache.commons.lang3.ArrayUtils:4098","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:499","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.Class<?>)","position":"org.apache.commons.lang3.builder.ToStringStyle:1590","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.text.StrBuilder:2662","type":"mutation","return":"return false","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((byte[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(byte[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4743","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList()","position":"org.apache.commons.lang3.LocaleUtils:299","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","position":"org.apache.commons.lang3.time.FormatCache:70","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Lookup implementation that uses a Map.\n */\nstatic class MapStrLookup<V> extends org.apache.commons.lang3.text.StrLookup<V> {\n    /** \n     * Map keys are variable names and value.\n     */\nprivate final java.util.Map<java.lang.String, V> map;\n\n    /** \n     * Creates a new instance backed by a Map.\n     * \n     * @param map  the map of keys to values, may be null\n     */\nMapStrLookup(final java.util.Map<java.lang.String, V> map) {\n        this.java.util.Map<java.lang.String, V> = java.util.Map<java.lang.String, V>;\n    }\n\n    /** \n     * Looks up a String key to a String value using the map.\n     * <p>\n     * If the map is null, then null is returned.\n     * The map result object is converted to a string using toString().\n     * \n     * @param key  the key to be looked up, may be null\n     * @return the matching value, null if no match\n     */\n@java.lang.Override\n    public java.lang.String lookup(final java.lang.String key) {\n        if ((java.util.Map<java.lang.String, V>) == null) {\n            return null;\n        } \n        final java.lang.Object java.lang.Object = java.util.Map<java.lang.String, V>.get(java.lang.String);\n        if (java.lang.Object == null) {\n            return null;\n        } \n        return java.lang.Object.toString();\n    }\n}","position":"org.apache.commons.lang3.text.StrLookup:137","type":"CtClassImpl"},"status":-2},{"failures":[54,55,56],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.Range<T>.isAfter(org.apache.commons.lang3.Range<T>.T)","position":"org.apache.commons.lang3.Range:335","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.lang3.Range<T>.contains(T)) || (org.apache.commons.lang3.Range<T>.contains(T))) || org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T))","position":"org.apache.commons.lang3.Range:354","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this.boolean","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:597","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return java.lang.CharSequence.equals(java.lang.CharSequence);\n} ","position":"org.apache.commons.lang3.StringUtils:801","type":"CtIfImpl"},"status":-2},{"failures":[57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.CharUtils:332","type":"CtIfImpl"},"status":-1},{"failures":[58,59],"variableMapping":{"traceStarted":"roundUp"},"name":"replace","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.exception.ExceptionUtils:651","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = int >= 6","position":"org.apache.commons.lang3.time.DateUtils:1073","type":"CtAssignmentImpl"},"status":-1},{"failures":[60,61],"variableMapping":{"symbols":"symbols"},"name":"replace","transplant":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getWeekdays()","position":"org.apache.commons.lang3.time.FastDatePrinter:175","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.String[] java.lang.String[] = java.text.DateFormatSymbols.getEras()","position":"org.apache.commons.lang3.time.FastDatePrinter:172","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = java.lang.Math.(java.lang.Math.min(byte[].int, int)) - 1","position":"org.apache.commons.lang3.ArrayUtils:1613","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:1071","type":"CtIfImpl"},"status":-2},{"failures":[62,63,64,65],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)","position":"org.apache.commons.lang3.reflect.MemberUtils:173","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"duration":"org.apache.commons.lang3.StringUtils.EMPTY"},"name":"add","transplant":{"sourceCode":"return java.lang.String.trim()","position":"org.apache.commons.lang3.time.DurationFormatUtils:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:3716","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Character.java.lang.Character.valueOf(java.lang.String.charAt(0))","position":"org.apache.commons.lang3.CharUtils:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1551","type":"CtReturnImpl"},"status":-2},{"failures":[66],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException()","position":"org.apache.commons.lang3.time.FastDatePrinter:824","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int & (~int)) | int","position":"org.apache.commons.lang3.Conversion:772","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map<java.lang.String, org.apache.commons.lang3.concurrent.ConcurrentException>.get(java.lang.String)","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:309","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.ArrayUtils:4252","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.String.java.lang.String.valueOf(int), int, char)","position":"org.apache.commons.lang3.text.StrBuilder:1416","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(java.util.Calendar, java.lang.String, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.DateFormatUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:375","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int))","position":"org.apache.commons.lang3.ArrayUtils:4570","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((char == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (char == (org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((java.lang.StringBuilder.length()) > 0)) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString());\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField(int)","position":"org.apache.commons.lang3.time.FastDatePrinter:360","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Short[]","position":"org.apache.commons.lang3.ArrayUtils:734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:5883","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.String = \"-1\"","position":"org.apache.commons.lang3.math.Fraction:937","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.Range:458","type":"CtAssignmentImpl"},"status":-2},{"failures":[67],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return '8'","position":"org.apache.commons.lang3.Conversion:633","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 'f'","position":"org.apache.commons.lang3.Conversion:525","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 12)","position":"org.apache.commons.lang3.time.DateUtils:1029","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ObjectUtils:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+dstPos is greather or equal to than 32\")","position":"org.apache.commons.lang3.Conversion:763","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.Validate:826","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (char[] == char[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:811","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[][int] = (java.lang.Object[][int]) == null ? null : java.lang.Object[][int].getClass()","position":"org.apache.commons.lang3.ClassUtils:997","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Cannot store \" + (java.lang.Class<?>.getName())) + \" in an array of \")","name":"math","position":"org.apache.commons.lang3.ArrayUtils:3737","type":"mutation","status":-2},{"failures":[],"variableMapping":{"str":"str","defaultValue":"defaultValue"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return int;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    return int;\n}","position":"org.apache.commons.lang3.math.NumberUtils:124","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.CharSet:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5558","type":"CtIfImpl"},"status":0},{"failures":[68],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:289","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateFormat:227","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"startInclusive":"startInclusive","endExclusive":"endExclusive"},"name":"add","transplant":{"sourceCode":"if (long == long) {\n    return long;\n} ","position":"org.apache.commons.lang3.RandomUtils:115","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomUtils.((long)(org.apache.commons.lang3.RandomUtils.nextDouble(long, long)))","position":"org.apache.commons.lang3.RandomUtils:119","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","position":"org.apache.commons.lang3.reflect.TypeUtils:910","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Calendar.getDisplayNames(int, java.util.Calendar.int, java.util.Locale)","position":"org.apache.commons.lang3.time.FastDateParser:383","type":"CtReturnImpl"},"status":-2},{"failures":[69],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (final long long : long[]) {\n    final java.lang.Long java.lang.Long = java.lang.Long.java.lang.Long.valueOf(long);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Long);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}","position":"org.apache.commons.lang3.ArrayUtils:5716","type":"CtForEachImpl"},"status":-1},{"failures":[],"variableMapping":{"list":"list"},"name":"replace","transplant":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2541","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.StringUtils:2544","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.time.FastDatePrinter:702","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, null, java.lang.String[])","position":"org.apache.commons.lang3.time.DateUtils:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.text.WordUtils:542","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Byte[].int) ; int++) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte[][int];\n    byte[][int] = java.lang.Byte == null ? byte : java.lang.Byte.byteValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3258","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; (int < (long[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(long[][int], long[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:706","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (float[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1714","type":"CtIfImpl"},"status":-2},{"failures":[70],"variableMapping":{"nBools":"len","srcPos":"pos"},"name":"add","transplant":{"sourceCode":"assert ((int - 1) * 1) < (16 - int)","position":"org.apache.commons.lang3.Conversion:1626","type":"CtAssertImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((int) + int) > org.apache.commons.lang3.text.StrBuilder.(size())) {\n    int = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int);\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2882","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.String == null)) {\n    return true;\n} ","position":"org.apache.commons.lang3.StringUtils:1928","type":"CtIfImpl"},"status":-2},{"failures":[71],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:5918","type":"CtReturnImpl"},"status":-1},{"failures":[72,73,74],"variableMapping":{"comparison":"comparison","lhs":"rhs"},"name":"replace","transplant":{"sourceCode":"if (boolean[] == null) {\n    this.int = -1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:974","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean[].int) != (boolean[].int)) {\n    int = (boolean[].int) < (boolean[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:982","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:263","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.WildcardType, \"wildcardType is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1195","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)","position":"org.apache.commons.lang3.reflect.TypeUtils:606","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.reflect.TypeUtils:1139","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"locale":"locale"},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale))","position":"org.apache.commons.lang3.time.FormatCache:215","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0)","position":"org.apache.commons.lang3.time.FastDateParser:285","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new java.lang.String(new char[]{ char })","position":"org.apache.commons.lang3.CharUtils:311","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Array element \" + int) + \", \\'\") + java.lang.Object) + \"\\', has a length less than 2\"))","position":"org.apache.commons.lang3.ArrayUtils:250","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(int)","position":"org.apache.commons.lang3.text.StrBuilder:2800","type":"CtThrowImpl"},"status":-2},{"failures":[75],"variableMapping":{"count":"count"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.mutable.MutableInt.increment()","position":"org.apache.commons.lang3.ArrayUtils:5274","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Character, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Character, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5630","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")","position":"org.apache.commons.lang3.math.Fraction:143","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.ClassNotFoundException","position":"org.apache.commons.lang3.SerializationUtils:332","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.Conversion:1448","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((java.lang.CharSequence.charAt(int)) == '&') && (int < (int - 2))) && ((java.lang.CharSequence.charAt((int + 1))) == '#')) {\n    int int = int + 2;\n    boolean boolean = false;\n    final char char = java.lang.CharSequence.charAt(int);\n    if ((char == 'x') || (char == 'X')) {\n        int++;\n        boolean = true;\n        if (int == int) {\n            return 0;\n        } \n    } \n    int int = int;\n    while ((int < int) && (((((java.lang.CharSequence.charAt(int)) >= '0') && ((java.lang.CharSequence.charAt(int)) <= '9')) || (((java.lang.CharSequence.charAt(int)) >= 'a') && ((java.lang.CharSequence.charAt(int)) <= 'f'))) || (((java.lang.CharSequence.charAt(int)) >= 'A') && ((java.lang.CharSequence.charAt(int)) <= 'F')))) {\n        int++;\n    }\n    final boolean boolean = (int != int) && ((java.lang.CharSequence.charAt(int)) == ';');\n    if (!boolean) {\n        if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n            return 0;\n        } else if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n            throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n        } \n    } \n    int int;\n    try {\n        if (boolean) {\n            int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 16);\n        } else {\n            int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 10);\n        }\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n        return 0;\n    }\n    if (int > 65535) {\n        final char[] char[] = java.lang.Character.java.lang.Character.toChars(int);\n        java.io.Writer.write(char[][0]);\n        java.io.Writer.write(char[][1]);\n    } else {\n        java.io.Writer.write(int);\n    }\n    return (((2 + int) - int) + (boolean ? 1 : 0)) + (boolean ? 1 : 0);\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:81","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.isEmpty(float[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2809","type":"CtIfImpl"},"status":-2},{"failures":[76],"name":"returnValue","position":"org.apache.commons.lang3.time.FastDatePrinter:530","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{"this":"locale","locale":"locale"},"name":"replace","transplant":{"sourceCode":"if (java.util.Locale == null) {\n    java.util.Locale = java.util.Locale.getDefault();\n} ","position":"org.apache.commons.lang3.time.FormatCache:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Locale == null) {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat();\n} else {\n    java.text.SimpleDateFormat = new java.text.SimpleDateFormat(\"\" , java.util.Locale);\n}","position":"org.apache.commons.lang3.time.DateUtils:360","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) || org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:1760","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"classes":"classes"},"name":"add","transplant":{"sourceCode":"if (java.util.List<java.lang.Class<?>> == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ClassUtils:425","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<java.lang.Class<?>>","position":"org.apache.commons.lang3.ClassUtils:409","type":"CtReturnImpl"},"status":0},{"failures":[77,78,79],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1118","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.math.Fraction:749","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.ArrayUtils:1305","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.setTime(new java.util.Date())","position":"org.apache.commons.lang3.time.FastDateParser:124","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:571","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:102","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.FastDatePrinter:257","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object));\n}","position":"org.apache.commons.lang3.time.DateUtils:859","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Calendar.add(java.util.Calendar.int, 12)","position":"org.apache.commons.lang3.time.DateUtils:1029","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:540","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    int++;\n} ","position":"org.apache.commons.lang3.StringUtils:7116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"searchList":"split","length":"length"},"name":"add","transplant":{"sourceCode":"final int int = this.int","position":"org.apache.commons.lang3.StringUtils:4701","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = (java.lang.String[].int) - 1","position":"org.apache.commons.lang3.LocaleUtils:127","type":"CtLocalVariableImpl"},"status":-2},{"failures":[80],"binaryOperator":"(java.lang.String.length()) + int","name":"math","position":"org.apache.commons.lang3.StringUtils:2125","type":"mutation","status":-1},{"failures":[81],"variableMapping":{"className":"sizeStartText"},"name":"replace","transplant":{"sourceCode":"while ((java.lang.String.charAt(0)) == '[') {\n    java.lang.String = java.lang.String.substring(1);\n}","position":"org.apache.commons.lang3.ClassUtils:302","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","position":"org.apache.commons.lang3.builder.ToStringStyle:2002","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final long long = ((long)(int)) * ((long)(org.apache.commons.lang3.math.Fraction.int))","position":"org.apache.commons.lang3.math.Fraction:892","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(org.apache.commons.lang3.math.Fraction.int)) * ((long)(int))","position":"org.apache.commons.lang3.math.Fraction:893","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Class<?>[][int] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>[][int])","position":"org.apache.commons.lang3.ClassUtils:738","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.Conversion:1429","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"namingPattern":"str","pattern":"str"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:306","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.text.StrBuilder:1435","type":"CtAssignmentImpl"},"status":0},{"failures":[82],"variableMapping":{"str":"str","remove":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())))","position":"org.apache.commons.lang3.StringUtils:4288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:6457","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"case 12 :\n    return '3';","position":"org.apache.commons.lang3.Conversion:654","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String, java.text.ParsePosition)","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:169","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1247","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Double.java.lang.Class<java.lang.Double>.equals(java.lang.Class<?>)","position":"org.apache.commons.lang3.ClassUtils:670","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ch":"ch"},"name":"add","transplant":{"sourceCode":"return new java.lang.String(new char[]{ char })","position":"org.apache.commons.lang3.CharUtils:311","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char < 16) {\n    return \"\\\\u000\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} else if (char < 256) {\n    return \"\\\\u00\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} else if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:353","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < 0) {\n    int += java.util.Calendar.getActualMaximum(java.util.Calendar.int);\n    int -= 1;\n    java.util.Calendar.add(java.util.Calendar.int, 1);\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:316","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.ExtendedMessageFormat.this(java.lang.String, java.util.Locale.java.util.Locale.getDefault())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:91","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.reflect.TypeUtils:1288","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)));\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1272","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + 4))","position":"org.apache.commons.lang3.text.StrBuilder:1576","type":"CtInvocationImpl"},"status":0},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":66,"org.apache.commons.lang3.text.StrTokenizerTest.test8":31,"org.apache.commons.lang3.time.DateUtilsTest.testRound":58,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":79,"org.apache.commons.lang3.text.StrTokenizerTest.test5":28,"org.apache.commons.lang3.text.StrTokenizerTest.test4":27,"org.apache.commons.lang3.text.StrTokenizerTest.test7":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":77,"org.apache.commons.lang3.text.StrTokenizerTest.test6":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":42,"org.apache.commons.lang3.text.StrTokenizerTest.test1":24,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":23,"org.apache.commons.lang3.text.StrTokenizerTest.test3":26,"org.apache.commons.lang3.text.StrTokenizerTest.test2":25,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":11,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":82,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":43,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":73,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":12,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":46,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":69,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":2,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":3,"org.apache.commons.lang3.time.FastDatePrinterTest.testEquals":76,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":7,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":70,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiBooleanArray":72,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":62,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementCharArray":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":51,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":35,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumLong":52,"org.apache.commons.lang3.RangeTest.testIntersectionWith":55,"org.apache.commons.lang3.ConversionTest.testHexToByte":53,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":36,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":61,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":15,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":1,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":17,"org.apache.commons.lang3.CharUtilsTest.testToString_Character":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":21,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":41,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":59,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":49,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":54,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":67,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":68,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArrayHiddenByObject":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":0,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":38,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphanumeric":71,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":40,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":4,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":5,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":37,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":34,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":78,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":8,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":64,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":60,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText":81,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":47,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringIntInt":80,"org.apache.commons.lang3.RangeTest.testIntersectionWithNonOverlapping":56}}]
