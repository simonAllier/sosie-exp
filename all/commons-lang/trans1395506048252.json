[{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:417","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:123","sourceCode":"if (java.lang.annotation.Annotation == java.lang.annotation.Annotation) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:480","sourceCode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n    }\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n    }\n} else if (java.lang.Object instanceof long[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:495","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","detail":"detail","value":"value","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:485","sourceCode":"if ((java.lang.reflect.Method.getName().equals(java.lang.String)) && org.apache.commons.lang3.ClassUtils.(org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes(), true))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && ((java.lang.reflect.Method == null) || (org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Method.getParameterTypes(), java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) < 0))) {\n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"methodName"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableDouble:97","sourceCode":"this.double = double","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableDouble:146","sourceCode":"(double)--","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"position":"org.apache.commons.lang3.math.Fraction:586","failures":[16,17,18,19,20,21,22,23,24],"status":-1,"name":"returnValue","return":"return 1","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1161","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4993","sourceCode":"final char char = java.lang.String.charAt(0)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:553","sourceCode":"return java.lang.Boolean.java.lang.Boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1163","sourceCode":"final int int = 1 << int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:802","sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int)","type":"CtLocalVariableImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shift":"len"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.GenericArrayTypeImpl:136","sourceCode":"int int = 67 << 4","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1079","sourceCode":"final int int = java.util.Calendar.getActualMaximum(int[][0])","type":"CtLocalVariableImpl"},"failures":[76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1314","sourceCode":"if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.NumberUtils:885","inlineConstant":"int int = 1","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:643","sourceCode":"this.java.lang.String[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:460","sourceCode":"java.lang.String[] = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"excludeFieldNames":"tokens"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:266","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:108","sourceCode":"this.byte = java.lang.Number.byteValue()","type":"CtAssignmentImpl"},"failures":[87,88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2124","sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:836","sourceCode":"if ((int < (java.lang.Short.short)) || (int > (java.lang.Short.short))) {\n    throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + int) + \"]\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"endIndex":"v","size":"v"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:221","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:102","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.tabMatcher())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cloned":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"}},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:126","failures":[89,90,91,92,93,94],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:239","sourceCode":"if (java.lang.Integer == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:358","sourceCode":"if (java.lang.Integer == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} ","type":"CtIfImpl"},"failures":[95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:70","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"pattern must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:123","sourceCode":"for ( ;  ; ) {\n    java.util.regex.Matcher.region(java.util.regex.Matcher.end(), java.util.regex.Matcher.regionEnd());\n    if (!(java.util.regex.Matcher.lookingAt())) {\n        org.apache.commons.lang3.time.FastDateParser.Strategy = null;\n        break;\n    } \n    final java.lang.String java.lang.String = java.util.regex.Matcher.group();\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String, java.util.Calendar);\n    if (org.apache.commons.lang3.time.FastDateParser.Strategy.addRegex(this, java.lang.StringBuilder)) {\n        java.util.List<org.apache.commons.lang3.time.FastDateParser.Strategy>.add(org.apache.commons.lang3.time.FastDateParser.Strategy);\n    } \n    java.lang.String = java.lang.String;\n    org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy;\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:885","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:645","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[17,18,19,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:625","sourceCode":"boolean = boolean == boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1376","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"isEquals":"hasDecPoint","rhs":"hasDecPoint","lhs":"hasDecPoint"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:268","sourceCode":"double double = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:884","sourceCode":"double double = double[][0]","type":"CtLocalVariableImpl"},"failures":[97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:90","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(double, double), double)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:208","sourceCode":"return org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double, double), double)","type":"CtReturnImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"b":"a","c":"c","a":"a","this":"this"}},{"position":"org.apache.commons.lang3.math.NumberUtils:520","failures":[99,100,101],"status":-1,"binaryOperator":"((java.lang.String.length()) - 1)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.time.StopWatch:367","failures":[102],"status":-1,"binaryOperator":"org.apache.commons.lang3.time.StopWatch.(getSplitNanoTime()) / (org.apache.commons.lang3.time.StopWatch.long)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2780","sourceCode":"if (int > int) {\n    int = int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:526","sourceCode":"if (int != 0) {\n    java.util.List<java.lang.String> = org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable[][(int - 1)]);\n    org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"endIndex":"i","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:262","sourceCode":"if (int == int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:139","sourceCode":"return (int & (int)) == (int)","type":"CtReturnImpl"},"failures":[145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"trueValue":"_mask","value":"_mask"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:283","sourceCode":"java.util.Calendar.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1683","sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"failures":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"cal":"calendar"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:611","sourceCode":"int /= 2","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:291","sourceCode":"if (java.lang.Integer == null) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[183],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:207","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch is not running. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:217","sourceCode":"return org.apache.commons.lang3.text.StrTokenizer","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":148,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":152,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":38,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":177,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":141,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":126,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":27,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":134,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":171,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":109,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":162,"org.apache.commons.lang3.math.FractionTest.testFactory_double":20,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":73,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":168,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":30,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":94,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":153,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":83,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":163,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":132,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":79,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":133,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":120,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":108,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":115,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":113,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":7,"org.apache.commons.lang3.time.DateUtilsTest.testRound":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":8,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":80,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":98,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":35,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":11,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":84,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":15,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":93,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":33,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":13,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":58,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":78,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":155,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":62,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":178,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":111,"org.apache.commons.lang3.mutable.MutableByteTest.testSetNull":88,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":170,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":145,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":86,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":103,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":130,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":92,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":181,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":142,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":149,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":165,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":176,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":139,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":131,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":71,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":70,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":69,"org.apache.commons.lang3.math.FractionTest.testPow":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":112,"org.apache.commons.lang3.math.NumberUtilsTest.testMinDouble":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":47,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":157,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":77,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":43,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":173,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":44,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":41,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":137,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":110,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":128,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":140,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":169,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":28,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":4,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":29,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":135,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":26,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":1,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":82,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":146,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":90,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":25,"org.apache.commons.lang3.math.FractionTest.testFactory_String_double":22,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":116,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":175,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":172,"org.apache.commons.lang3.text.StrTokenizerTest.test1":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":74,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":160,"org.apache.commons.lang3.text.StrTokenizerTest.test3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":75,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":179,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":151,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":16,"org.apache.commons.lang3.text.StrTokenizerTest.test2":51,"org.apache.commons.lang3.mutable.MutableByteTest.testGetSet":87,"org.apache.commons.lang3.AnnotationUtilsTest.testBothArgsNull":0,"org.apache.commons.lang3.math.FractionTest.testSubtract":19,"org.apache.commons.lang3.text.StrTokenizerTest.test8":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":121,"org.apache.commons.lang3.math.FractionTest.testAdd":17,"org.apache.commons.lang3.text.StrTokenizerTest.test5":54,"org.apache.commons.lang3.text.StrTokenizerTest.test4":53,"org.apache.commons.lang3.text.StrTokenizerTest.test7":56,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":154,"org.apache.commons.lang3.text.StrTokenizerTest.test6":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":65,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":174,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":66,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":114,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":59,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer_nullValue":96,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":122,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":81,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":48,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":39,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":3,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":89,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":180,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":136,"org.apache.commons.lang3.math.FractionTest.testMultiply":24,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":105,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberFailure_1":101,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":2,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":156,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":138,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":124,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":159,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":144,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":107,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSplit":102,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":100,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":49,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":129,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":32,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":117,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":125,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":158,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":147,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":123,"org.apache.commons.lang3.math.FractionTest.testDivide":23,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":166,"org.apache.commons.lang3.math.FractionTest.testToProperString":21,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":67,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":10,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":99,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":34,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":36}}]
