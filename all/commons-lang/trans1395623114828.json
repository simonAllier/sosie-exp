[{"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:401","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch has not been started\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1192","sourceCode":"int = int - 1","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1314","sourceCode":"if (!java.lang.Character.(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"str","falseString":"str","trueString":"str"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:300","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:599","sourceCode":"final java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:329","sourceCode":"for (int int = 0 ; int < (java.lang.annotation.Annotation[].int) ; int++) {\n    if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation[][int], java.lang.annotation.Annotation[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:213","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove()","type":"CtInvocationImpl"},"failures":[4,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:413","sourceCode":"return java.lang.String == null ? null : java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:402","sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","type":"CtReturnImpl"},"failures":[78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"input"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1847","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:356","sourceCode":"if (java.lang.String != null) {\n    final int int = (java.lang.String.indexOf(java.lang.String)) + (java.lang.String.length());\n    final int int = java.lang.String.lastIndexOf(java.lang.String);\n    if (((int != int) && (int >= 0)) && (int >= 0)) {\n        final java.lang.String java.lang.String = java.lang.String.substring(int, int);\n        if (boolean) {\n            org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer);\n        } \n        java.lang.StringBuffer.append(java.lang.String);\n        org.apache.commons.lang3.builder.ToStringStyle.appendFieldSeparator(java.lang.StringBuffer);\n    } \n} ","type":"CtIfImpl"},"failures":[81,59,70,82,83,84,85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:288","sourceCode":"if (T == null) {\n    throw new java.lang.NullPointerException(\"Element is null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:459","sourceCode":"if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n    T = T;\n} ","type":"CtIfImpl"},"failures":[87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"element":"value"}},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5364","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:324","sourceCode":"if (java.lang.String == null) {\n    return byte;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:118","sourceCode":"(this.short)++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:97","sourceCode":"this.short = short","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:130","sourceCode":"return 3","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:663","sourceCode":"return ((int)(long))","type":"CtReturnImpl"},"failures":[88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BitField:153","failures":[93,94],"status":-1,"binaryOperator":"(int & (~(int))) | ((int << (int)) & (int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:118","sourceCode":"byte++","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1164","sourceCode":"byte = ((byte)((byte & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"out"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:997","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1792","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} ","type":"CtIfImpl"},"failures":[96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"prefix":"arraySeparator"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:434","sourceCode":"java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"formatField":"arrayEnd"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:729","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1365","failures":[98],"status":-1,"binaryOperator":"(int * 8) + int","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.mutable.MutableShort:249","failures":[99],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:73","sourceCode":"new java.util.Locale(\"ja\" , \"JP\" , \"JP\")","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:181","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int[][0] = int;\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String, int[]);\n    int = int[][0];\n    final int int = java.lang.String.length();\n    if (int == 0) {\n        break;\n    } \n    org.apache.commons.lang3.time.FastDatePrinter.Rule org.apache.commons.lang3.time.FastDatePrinter.Rule;\n    final char char = java.lang.String.charAt(0);\n    switch (char) {\n        case 'G' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'y' :\n            if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n            }\n            break;\n        case 'M' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 3) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            } else if (int == 2) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n            }\n            break;\n        case 'd' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'h' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'H' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'm' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 's' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'S' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'E' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n            break;\n        case 'D' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'F' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'w' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'W' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'a' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n            break;\n        case 'k' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n            break;\n        case 'K' :\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n            break;\n        case 'z' :\n            if (int >= 4) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n            }\n            break;\n        case 'Z' :\n            if (int == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n            }\n            break;\n        case '\\'' :\n            final java.lang.String java.lang.String = java.lang.String.substring(1);\n            if ((java.lang.String.length()) == 1) {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n            } else {\n                org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n            }\n            break;\n        default :\n            throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n    }\n    java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule>.add(org.apache.commons.lang3.time.FastDatePrinter.Rule);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:823","sourceCode":"throw new java.lang.IllegalArgumentException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:67","sourceCode":"throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:575","sourceCode":"return '1'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:461","sourceCode":"return 'c'","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:527","sourceCode":"return 'e'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:461","sourceCode":"return 'c'","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:109","failures":[101,102,103,104,80],"status":-1,"binaryOperator":"(int >= (int))","name":"conditionalBoundary","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:335","failures":[105,106],"status":-1,"binaryOperator":"(int + 2)","name":"math","type":"mutation"},{"position":"org.apache.commons.lang3.Conversion:809","failures":[107,108],"status":-1,"binaryOperator":"(long & (~long))","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:48","sourceCode":"java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int))","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.reflect.MethodUtils:188","failures":[110],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:43","sourceCode":"new java.util.Random()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:62","sourceCode":"java.lang.reflect.AccessibleObject.setAccessible(true)","type":"CtInvocationImpl"},"failures":[124,125,126,127,128,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":26,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":110,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteField":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":37,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":118,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":63,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":78,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedField":126,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":25,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":17,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":22,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":81,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":48,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":31,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":39,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":35,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadNamedFieldForceAccess":129,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":96,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":52,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":9,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":71,"org.apache.commons.lang3.ObjectUtilsTest.testMax":87,"org.apache.commons.lang3.math.FractionTest.testPow":89,"org.apache.commons.lang3.BitFieldTest.testSetValue":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":45,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":50,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":113,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":109,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":82,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":107,"org.apache.commons.lang3.BitFieldTest.testSetShortValue":93,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":59,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":86,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedFieldForceAccess":128,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":44,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":41,"org.apache.commons.lang3.ConversionTest.testShortToByteArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":67,"org.apache.commons.lang3.reflect.FieldUtilsTest.testReadField":127,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":51,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":34,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":105,"org.apache.commons.lang3.time.StopWatchTest.testGetStartTime":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":32,"org.apache.commons.lang3.math.FractionTest.testSubtract":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":27,"org.apache.commons.lang3.math.FractionTest.testAdd":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":76,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":66,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":115,"org.apache.commons.lang3.ArrayUtilsTest.testToString":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":62,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":102,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":84,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":49,"org.apache.commons.lang3.math.FractionTest.testMultiply":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":16,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":33,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":114,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":30,"org.apache.commons.lang3.mutable.MutableShortTest.testEquals":99,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":106,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":29,"org.apache.commons.lang3.math.FractionTest.testDivide":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":19,"org.apache.commons.lang3.reflect.FieldUtilsTest.testWriteNamedField":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":77}}]
