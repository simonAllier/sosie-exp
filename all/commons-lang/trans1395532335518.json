[{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:935","sourceCode":"this.char = char","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:396","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:538","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)))","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:158","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Array must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1086","sourceCode":"if (int != 0) {\n    java.util.Calendar.set(int[][0], ((java.util.Calendar.get(int[][0])) - int));\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:914","sourceCode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher","type":"CtAssignmentImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:260","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:802","sourceCode":"final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int)","type":"CtLocalVariableImpl"},"failures":[63,64,65,66,67,68,69,70,71,44,72,73,74,75,76,45,46,47,48,49,50,51,77,78,52,53,54,55,56,58,59,79,80,81,60,82,83,84,85,61,62,86,87,88,89,90,91,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:857","sourceCode":"return org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:856","sourceCode":"if (java.lang.Object instanceof java.util.Date) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int);\n} else if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object));\n}","type":"CtIfImpl"},"failures":[12,28,29,31,94,36,37,39,40,41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"field":"field","date":"date","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1007","sourceCode":"org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Mac OS X\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:865","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.1\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.apache.commons.lang3.Conversion:1298","failures":[95],"status":-1,"binaryOperator":"(int * 8) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:360","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:416","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:371","sourceCode":"if (java.lang.Integer.equals(java.lang.Integer)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:364","sourceCode":"if (java.lang.Integer == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[96,97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"nullValue","nullValue":"nullValue"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:829","sourceCode":"return org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction.invert())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:531","sourceCode":"return org.apache.commons.lang3.math.Fraction.negate()","type":"CtReturnImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"fraction":"this","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:533","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:544","sourceCode":"try {\n    final java.lang.Float java.lang.Float = org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String);\n    if (!((java.lang.Float.isInfinite()) || (((java.lang.Float.floatValue()) == 0.0F) && (!boolean)))) {\n        return java.lang.Float;\n    } \n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1522","sourceCode":"++int","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"append":"i"}},{"position":"org.apache.commons.lang3.time.StopWatch:341","failures":[100],"status":-1,"binaryOperator":"((this.org.apache.commons.lang3.time.StopWatch.State) == (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1295","sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1189","sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(float, float), float)","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:215","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","type":"CtThrowImpl"},"failures":[102],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1821","sourceCode":"this.java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1687","sourceCode":"long long = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:807","sourceCode":"final long long = (255L & (byte[][(int + int)])) << int","type":"CtLocalVariableImpl"},"failures":[114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1330","failures":[116],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:878","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    final int int = (255 & (byte[][(int + int)])) << int;\n    final int int = 255 << int;\n    short = ((short)((short & (~int)) | int));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"srcPos"}},{"position":"org.apache.commons.lang3.Conversion:984","failures":[117],"status":-1,"binaryOperator":"(short & (~int))","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.CharUtils:173","sourceCode":"if (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:763","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.String)) {\n    throw new java.lang.NumberFormatException(\"A blank string is not a valid number\");\n} ","type":"CtIfImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"str","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.Builder:301","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1102","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[119,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"pattern":"fieldName"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateIterator:1870","sourceCode":"throw new java.util.NoSuchElementException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1063","sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\")","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:487","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:3494","sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(float[], char, 0, float[].int)","type":"CtReturnImpl"},"failures":[121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.NumberUtils:1009","inlineConstant":"int int = 1","failures":[122],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:837","sourceCode":"return true","type":"CtReturnImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:749","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:228","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"))","type":"CtThrowImpl"},"failures":[123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"count"}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":8,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":74,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":105,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":39,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":64,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigDecimal":118,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":111,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":15,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":91,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":27,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":120,"org.apache.commons.lang3.time.DateUtilsTest.testRound":13,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":115,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":32,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxByte":122,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":33,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":20,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":44,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":11,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":14,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":107,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":18,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":70,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":24,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":79,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":82,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayOfFloats":121,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":86,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":108,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":30,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":113,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":90,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":88,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":87,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":51,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":50,"org.apache.commons.lang3.ConversionTest.testLongToByteArray":95,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":45,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":29,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimple":100,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":1,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":35,"org.apache.commons.lang3.math.NumberUtilsTest.testMinimumFloat":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":28,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":21,"org.apache.commons.lang3.text.StrTokenizerTest.test1":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":2,"org.apache.commons.lang3.text.StrTokenizerTest.test3":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":93,"org.apache.commons.lang3.text.StrTokenizerTest.test2":53,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":23,"org.apache.commons.lang3.text.StrTokenizerTest.test8":59,"org.apache.commons.lang3.text.StrTokenizerTest.test5":56,"org.apache.commons.lang3.text.StrTokenizerTest.test4":55,"org.apache.commons.lang3.text.StrTokenizerTest.test7":58,"org.apache.commons.lang3.text.StrTokenizerTest.test6":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":85,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":106,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":61,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":80,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer_nullValue":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":83,"org.apache.commons.lang3.math.FractionTest.testAbs":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":34,"org.apache.commons.lang3.ConversionTest.testHexToShort":117,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":40,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":37,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetBeforeStart":102,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":119,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":12,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":75,"org.apache.commons.lang3.ArrayUtilsTest.testToString":112,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":0,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":110,"org.apache.commons.lang3.ConversionTest.testByteToBinary":99,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":78,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":109,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":69,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":7,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":6,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetEscape":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":3,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":19,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":62,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":81,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":10,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":123,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":9,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":72}}]
