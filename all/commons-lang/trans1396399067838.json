[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<org.apache.commons.lang3.builder.Diff<?>>.iterator()","position":"org.apache.commons.lang3.builder.DiffResult:206","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][int++] = char","position":"org.apache.commons.lang3.text.WordUtils:552","type":"CtAssignmentImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.Fraction:263","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.Conversion:1428","type":"CtIfImpl"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return 0","position":"org.apache.commons.lang3.math.Fraction:885","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char[][int]) <= 32 ? 1 : 0","position":"org.apache.commons.lang3.text.StrMatcher:432","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:864","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Character.charValue()","position":"org.apache.commons.lang3.CharUtils:133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"formatter":"this","dateStyle":"dateStyle","timeStyle":"dateStyle","this":"formatter","locale":"locale"},"name":"add","transplant":{"sourceCode":"java.text.DateFormat = java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:204","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale)","position":"org.apache.commons.lang3.time.FormatCache:201","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; (int < (byte[].int)) && ((int) == 0) ; int++) {\n    org.apache.commons.lang3.builder.CompareToBuilder.append(byte[][int], byte[][int]);\n}","position":"org.apache.commons.lang3.builder.CompareToBuilder:866","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","position":"org.apache.commons.lang3.SerializationUtils:229","type":"CtLocalVariableImpl"},"status":-2},{"failures":[13,14,15,16,17],"variableMapping":{"dstPos":"offset","nInts":"offset"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:688","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1050","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5611","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.RandomStringUtils:226","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Right hand object cannot be null\")","position":"org.apache.commons.lang3.builder.DiffResult:80","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.Writer.write(org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.char)","position":"org.apache.commons.lang3.StringEscapeUtils:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.Conversion:1222","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:426","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:2119","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}","position":"org.apache.commons.lang3.ArrayUtils:5719","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 1 + (java.lang.StringBuilder.length())","position":"org.apache.commons.lang3.text.translate.OctalUnescaper:58","type":"CtReturnImpl"},"status":-2},{"failures":[18,19],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException()","position":"org.apache.commons.lang3.time.FastDatePrinter:824","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0)","position":"org.apache.commons.lang3.time.FastDateParser:285","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + 1))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:466","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1896","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:516","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrMatcher != null) {\n    this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:957","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int <= int ? int : -1","position":"org.apache.commons.lang3.StringUtils:6907","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[].clone()","position":"org.apache.commons.lang3.ArrayUtils:326","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = int >= (int) ? (int) - 1 : int","position":"org.apache.commons.lang3.text.StrBuilder:2423","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.getFraction(((int) / int), ((int) / int))","position":"org.apache.commons.lang3.math.Fraction:477","type":"CtReturnImpl"},"status":-2},{"failures":[20],"binaryOperator":"int - int","name":"math","position":"org.apache.commons.lang3.StringUtils:5557","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.text.StrBuilder:1686","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:132","type":"CtThrowImpl"},"status":-2},{"failures":[21,22,23,24],"variableMapping":{"str":"separator","middle":"separator","this":"this"},"name":"add","transplant":{"sourceCode":"if ((org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) || (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String))) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6452","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.Object[], java.lang.String, 0, java.lang.Object[].int)","position":"org.apache.commons.lang3.StringUtils:3952","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:749","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5910","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long[][int] = long[][int]","position":"org.apache.commons.lang3.ArrayUtils:1792","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = boolean[][int]","position":"org.apache.commons.lang3.ArrayUtils:1581","type":"CtAssignmentImpl"},"status":-2},{"failures":[25,26,27,28,29,30],"variableMapping":{"org.apache.commons.lang3.builder.DiffResult.OBJECTS_SAME_STRING":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.builder.DiffResult:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.substring(int)","position":"org.apache.commons.lang3.StringUtils:633","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1443","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.lang3.concurrent.LazyInitializer:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1375","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (char >= 'a') && (char <= 'z')","position":"org.apache.commons.lang3.CharUtils:498","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((((boolean[][int]) || ((java.lang.String[][int]) == null)) || (java.lang.String[][int].isEmpty())) || ((java.lang.String[][int]) == null)) {\n        continue;\n    } \n    int = java.lang.String.indexOf(java.lang.String[][int]);\n    if (int == (-1)) {\n        boolean[][int] = true;\n    } else {\n        if ((int == (-1)) || (int < int)) {\n            int = int;\n            int = int;\n        } \n    }\n}","position":"org.apache.commons.lang3.StringUtils:4722","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[] == boolean[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:971","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"c","b":"a","c":"a","this":"this"},"name":"add","transplant":{"sourceCode":"return java.lang.Math.java.lang.Math.max(java.lang.Math.java.lang.Math.max(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1297","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.min(float, float), float)","position":"org.apache.commons.lang3.math.NumberUtils:1191","type":"CtReturnImpl"},"status":-2},{"failures":[31,32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.StringUtils:3093","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int = org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, int)) != (org.apache.commons.lang3.StringUtils.int)) {\n    int++;\n    int += java.lang.CharSequence.length();\n}","position":"org.apache.commons.lang3.StringUtils:5817","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"short short = short","position":"org.apache.commons.lang3.Conversion:978","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1161","type":"CtAssignmentImpl"},"status":-2},{"failures":[13],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"rhs cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:102","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object))","position":"org.apache.commons.lang3.time.DateUtils:862","type":"CtThrowImpl"},"status":-1},{"failures":[33,34,35],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[][int])","position":"org.apache.commons.lang3.builder.ToStringStyle:1242","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"str1":"str1","str2":"str1"},"name":"add","transplant":{"sourceCode":"return java.lang.CharSequence == java.lang.CharSequence","position":"org.apache.commons.lang3.StringUtils:830","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, 0, java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:836","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int /= 2","position":"org.apache.commons.lang3.math.Fraction:597","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrTokenizer:805","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[36,37],"variableMapping":{"size":"size","buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"this.char[][(this.int)++] = 'a'","position":"org.apache.commons.lang3.text.StrBuilder:779","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[][(int)++] = 'l'","position":"org.apache.commons.lang3.text.StrBuilder:780","type":"CtAssignmentImpl"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.EqualsBuilder:479","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.EqualsBuilder:487","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"java.lang.Double.NaN":"a"},"name":"replace","transplant":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.NumberUtils:1037","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:107","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getNumerator()).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator())","position":"org.apache.commons.lang3.math.Fraction:913","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1362","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringBuilder.this(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:238","type":"CtInvocationImpl"},"status":-2},{"failures":[62],"variableMapping":{"startIndex":"shift","endIndex":"nHexs"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 4) + int;\n    final int int = 15 & (short >> int);\n    if ((int + int) == int) {\n        ++int;\n        java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    } else {\n        java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int));\n    }\n}","position":"org.apache.commons.lang3.Conversion:1478","type":"CtForImpl"},"status":-1},{"failures":[63,64,65,66],"variableMapping":{"duration":"arraySeparator"},"name":"add","transplant":{"sourceCode":"java.lang.String = java.lang.String.substring(1)","position":"org.apache.commons.lang3.time.DurationFormatUtils:194","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.lang.String = java.lang.String","position":"org.apache.commons.lang3.builder.ToStringStyle:1795","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","position":"org.apache.commons.lang3.ClassUtils:81","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = (int[].int) - 1 ; int >= 0 ; int--) {\n    final int int = int[][int];\n    if ((int - int) > 1) {\n        final int int = (int - int) - 1;\n        int -= int;\n        java.lang.System.java.lang.System.arraycopy(java.lang.Object, (int + 1), java.lang.Object, int, int);\n    } \n    int = int;\n}","position":"org.apache.commons.lang3.ArrayUtils:6036","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n    T = T;\n} ","position":"org.apache.commons.lang3.ObjectUtils:470","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256)","position":"org.apache.commons.lang3.StringUtils:4095","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int /= int","position":"org.apache.commons.lang3.math.Fraction:230","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\")","position":"org.apache.commons.lang3.BooleanUtils:335","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int + int","position":"org.apache.commons.lang3.text.StrSubstitutor:761","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Calendar.setTime(java.util.Date)","position":"org.apache.commons.lang3.time.FastDatePrinter:453","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.Null","position":"org.apache.commons.lang3.ObjectUtils:703","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue(java.lang.Class<L>.isInterface(), \"Class {0} is not an interface\", java.lang.Class<L>.getName())","position":"org.apache.commons.lang3.event.EventListenerSupport:142","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.util.concurrent.ExecutorService) != null) {\n    java.util.concurrent.ExecutorService.shutdown();\n} ","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:329","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutorService) == null) {\n    java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService = org.apache.commons.lang3.concurrent.BackgroundInitializer<T>.createExecutor();\n} else {\n    java.util.concurrent.ExecutorService = null;\n}","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:181","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set ExecutorService after start()!\")","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot convert an empty array.\")","position":"org.apache.commons.lang3.Conversion:302","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long long = long","position":"org.apache.commons.lang3.Conversion:729","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3140","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"dstPos":"length","nHex":"length"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n} ","position":"org.apache.commons.lang3.Conversion:906","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(float[], 0, float[].int)","position":"org.apache.commons.lang3.ArrayUtils:1537","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"code":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.NotImplementedException:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5515","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()])","position":"org.apache.commons.lang3.exception.ExceptionUtils:539","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ true , true , true , false }","position":"org.apache.commons.lang3.Conversion:177","type":"CtReturnImpl"},"status":-2},{"failures":[67],"binaryOperator":"((((int[] == null) && (int[] != null)) && ((int[].int) > 0)) || (((int[] == null) && (int[] != null)) && ((int[].int) > 0))) || (((int[] != null) && (int[] != null)) && ((int[].int) != (int[].int)))","name":"removeConditional","position":"org.apache.commons.lang3.ArrayUtils:1264","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.Range:410","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:820","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (java.util.Calendar.get(java.util.Calendar.int)) - (java.util.Calendar.get(java.util.Calendar.int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:290","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.math.Fraction(int , int)","position":"org.apache.commons.lang3.math.Fraction:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.isEmpty() ? null : java.lang.String","position":"org.apache.commons.lang3.StringUtils:529","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(java.lang.String, java.lang.String)) {\n    return java.lang.String.substring(0, ((java.lang.String.length()) - (java.lang.String.length())));\n} ","position":"org.apache.commons.lang3.StringUtils:4323","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return char;\n} ","position":"org.apache.commons.lang3.CharUtils:195","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startCutoff":"startCutoff","focus":"focus","java.util.Calendar.DAY_OF_WEEK":"startCutoff"},"name":"add","transplant":{"sourceCode":"int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:1194","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.util.Calendar.get(java.util.Calendar.int)) - 3","position":"org.apache.commons.lang3.time.DateUtils:1198","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return char[].clone()","position":"org.apache.commons.lang3.ArrayUtils:390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.text.StrBuilder:362","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:885","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence, java.lang.CharSequence, true)","position":"org.apache.commons.lang3.StringUtils:7189","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return byte","position":"org.apache.commons.lang3.math.NumberUtils:1265","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return byte;\n} ","position":"org.apache.commons.lang3.Conversion:1005","type":"CtIfImpl"},"status":-2},{"failures":[68],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(this)","position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl"},"status":-1},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"variableMapping":{"buffer":"buffer"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append('@')","position":"org.apache.commons.lang3.builder.ToStringStyle:1471","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int))","position":"org.apache.commons.lang3.time.FastDatePrinter:868","type":"CtInvocationImpl"},"status":-1},{"failures":[90],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 67 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ArrayUtils:5372","type":"CtLocalVariableImpl"},"status":-1},{"failures":[91],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.ClassUtils:525","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class<?>[], java.lang.Class<?>[], org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion.org.apache.commons.lang3.JavaVersion))","position":"org.apache.commons.lang3.ClassUtils:478","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.String>.put(\"long\", \"J\")","position":"org.apache.commons.lang3.ClassUtils:123","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>(java.util.List<java.lang.String>.size())","position":"org.apache.commons.lang3.ClassUtils:401","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Character[]","position":"org.apache.commons.lang3.ArrayUtils:754","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Character[] == null) || ((java.lang.Character[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Character[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:753","type":"CtIfImpl"},"status":-2},{"failures":[92],"variableMapping":{"obj":"array"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object.toString()","position":"org.apache.commons.lang3.text.StrLookup:169","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object , org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle).append(java.lang.Object).toString()","position":"org.apache.commons.lang3.ArrayUtils:178","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Date, java.lang.StringBuffer)","position":"org.apache.commons.lang3.time.FastDateFormat:462","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.apache.commons.lang3.ArrayUtils:5376","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.text.StrBuilder:1394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Comparator<T>) == (org.apache.commons.lang3.Range.ComparableComparator.org.apache.commons.lang3.Range.ComparableComparator)","position":"org.apache.commons.lang3.Range:207","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new boolean[]{ false , false , false , true }","position":"org.apache.commons.lang3.Conversion:225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new boolean[]{ false , true , true , false }","position":"org.apache.commons.lang3.Conversion:175","type":"CtReturnImpl"},"status":-2},{"failures":[93,94,95,96],"variableMapping":{"method":"method"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:444","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Method))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.MethodUtils:355","type":"CtIfImpl"},"status":-1},{"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"variableMapping":{"str":"this","startIndex":"len","length":"length","this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:969","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int))","position":"org.apache.commons.lang3.text.StrBuilder:545","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n    return 0;\n} else if (org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION)) {\n    throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\");\n} ","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:108","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(long).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:1039","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n    return java.lang.reflect.Method;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"org.apache.commons.lang3.reflect.MethodUtils:474","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.StringUtils:1554","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, false, false, null)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, float[], null)","position":"org.apache.commons.lang3.builder.ToStringBuilder:723","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    org.apache.commons.lang3.builder.ReflectionToStringBuilder.reflectionAppendArray(org.apache.commons.lang3.builder.ToStringBuilder.getObject());\n    return ;\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:514","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 'D' :\n    return new boolean[]{ true , false , true , true };","position":"org.apache.commons.lang3.Conversion:192","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY":"array","newSize":"index"},"name":"replace","transplant":{"sourceCode":"if (int <= 0) {\n    return char[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1045","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.((char[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(char[])), int)))","position":"org.apache.commons.lang3.ArrayUtils:4808","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext = new org.apache.commons.lang3.exception.DefaultExceptionContext()","position":"org.apache.commons.lang3.exception.ContextedException:148","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction","position":"org.apache.commons.lang3.math.Fraction:801","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n} ","position":"org.apache.commons.lang3.CharUtils:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:83","type":"CtLocalVariableImpl"},"status":-2},{"failures":[114],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"nBytes is greather than 16\")","position":"org.apache.commons.lang3.Conversion:1688","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","position":"org.apache.commons.lang3.text.StrTokenizer:584","type":"CtThrowImpl"},"status":-1},{"failures":[2,3,10,11],"variableMapping":{"quoteLen":"pos","pos":"trimStart"},"name":"add","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrTokenizer:788","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n    org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n    int += int * 2;\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:756","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 16\")","position":"org.apache.commons.lang3.Conversion:1360","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Cannot alter Diff object.\")","position":"org.apache.commons.lang3.builder.Diff:117","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (int) {\n    case 1 :\n        return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String.charAt(0), int);\n    case 2 :\n        final char char = java.lang.String.charAt(0);\n        final char char = java.lang.String.charAt(1);\n        final char[] char[] = new char[int];\n        for (int int = (int * 2) - 2 ; int >= 0 ; int-- , int--) {\n            char[][int] = char;\n            char[][(int + 1)] = char;\n        }\n        return new java.lang.String(char[]);\n    default :\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(int);\n        for (int int = 0 ; int < int ; int++) {\n            java.lang.StringBuilder.append(java.lang.String);\n        }\n        return java.lang.StringBuilder.toString();\n}","position":"org.apache.commons.lang3.StringUtils:5137","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Boolean[].int) ; int++) {\n    final java.lang.Boolean java.lang.Boolean = java.lang.Boolean[][int];\n    boolean[][int] = java.lang.Boolean == null ? boolean : java.lang.Boolean.booleanValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3462","type":"CtForImpl"},"status":-2},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1524","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 1 minutes\", \" 1 minute\")","position":"org.apache.commons.lang3.time.DurationFormatUtils:214","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"exceptionContext":"exceptionContext","label":"label","value":"value"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.lang3.exception.ExceptionContext.addContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedException:169","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.exception.ExceptionContext.setContextValue(java.lang.String, java.lang.Object)","position":"org.apache.commons.lang3.exception.ContextedException:188","type":"CtInvocationImpl"},"status":0},{"failures":[162,163,164,165,166],"binaryOperator":"int + 2","name":"math","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p>\n * A <em>builder<\/em> class for creating instances of {@code\n * BasicThreadFactory}.\n * <\/p>\n * <p>\n * Using this builder class instances of {@code BasicThreadFactory} can be\n * created and initialized. The class provides methods that correspond to\n * the configuration options supported by {@code BasicThreadFactory}. Method\n * chaining is supported. Refer to the documentation of {@code\n * BasicThreadFactory} for a usage example.\n * <\/p>\n * \n * @version $Id$\n */\npublic static class Builder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.concurrent.BasicThreadFactory> {\n    /** \n     * The wrapped factory.\n     */\nprivate java.util.concurrent.ThreadFactory wrappedFactory;\n\n    /** \n     * The uncaught exception handler.\n     */\nprivate java.lang.Thread.UncaughtExceptionHandler exceptionHandler;\n\n    /** \n     * The naming pattern.\n     */\nprivate java.lang.String namingPattern;\n\n    /** \n     * The priority.\n     */\nprivate java.lang.Integer priority;\n\n    /** \n     * The daemon flag.\n     */\nprivate java.lang.Boolean daemonFlag;\n\n    /** \n     * Sets the {@code ThreadFactory} to be wrapped by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param factory the wrapped {@code ThreadFactory} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the passed in {@code ThreadFactory}\n     * is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder wrappedFactory(final java.util.concurrent.ThreadFactory factory) {\n        if (java.util.concurrent.ThreadFactory == null) {\n            throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\");\n        } \n        java.util.concurrent.ThreadFactory = java.util.concurrent.ThreadFactory;\n        return this;\n    }\n\n    /** \n     * Sets the naming pattern to be used by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param pattern the naming pattern (must not be <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the naming pattern is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder namingPattern(final java.lang.String pattern) {\n        if (java.lang.String == null) {\n            throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n        } \n        java.lang.String = java.lang.String;\n        return this;\n    }\n\n    /** \n     * Sets the daemon flag for the new {@code BasicThreadFactory}. If this\n     * flag is set to <b>true<\/b> the new thread factory will create daemon\n     * threads.\n     * \n     * @param f the value of the daemon flag\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder daemon(final boolean f) {\n        java.lang.Boolean = java.lang.Boolean.java.lang.Boolean.valueOf(boolean);\n        return this;\n    }\n\n    /** \n     * Sets the priority for the threads created by the new {@code\n     * BasicThreadFactory}.\n     * \n     * @param prio the priority\n     * @return a reference to this {@code Builder}\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder priority(final int prio) {\n        java.lang.Integer = java.lang.Integer.java.lang.Integer.valueOf(int);\n        return this;\n    }\n\n    /** \n     * Sets the uncaught exception handler for the threads created by the\n     * new {@code BasicThreadFactory}.\n     * \n     * @param handler the {@code UncaughtExceptionHandler} (must not be\n     * <b>null<\/b>)\n     * @return a reference to this {@code Builder}\n     * @throws NullPointerException if the exception handler is <b>null<\/b>\n     */\npublic org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder uncaughtExceptionHandler(final java.lang.Thread.UncaughtExceptionHandler handler) {\n        if (java.lang.Thread.UncaughtExceptionHandler == null) {\n            throw new java.lang.NullPointerException(\"Uncaught exception handler must not be null!\");\n        } \n        java.lang.Thread.UncaughtExceptionHandler = java.lang.Thread.UncaughtExceptionHandler;\n        return this;\n    }\n\n    /** \n     * Resets this builder. All configuration options are set to default\n     * values. Note: If the {@link #build()} method was called, it is not\n     * necessary to call {@code reset()} explicitly because this is done\n     * automatically.\n     */\npublic void reset() {\n        java.util.concurrent.ThreadFactory = null;\n        java.lang.Thread.UncaughtExceptionHandler = null;\n        java.lang.String = null;\n        java.lang.Integer = null;\n        java.lang.Boolean = null;\n    }\n\n    /** \n     * Creates a new {@code BasicThreadFactory} with all configuration\n     * options that have been specified by calling methods on this builder.\n     * After creating the factory {@link #reset()} is called.\n     * \n     * @return the new {@code BasicThreadFactory}\n     */\n@java.lang.Override\n    public org.apache.commons.lang3.concurrent.BasicThreadFactory build() {\n        final org.apache.commons.lang3.concurrent.BasicThreadFactory org.apache.commons.lang3.concurrent.BasicThreadFactory = new org.apache.commons.lang3.concurrent.BasicThreadFactory(this);\n        org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder.reset();\n        return org.apache.commons.lang3.concurrent.BasicThreadFactory;\n    }\n}","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:254","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.ArrayUtils:2699","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","position":"org.apache.commons.lang3.math.Fraction:336","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Field name cannot be null\")","position":"org.apache.commons.lang3.builder.DiffBuilder:634","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.lang3.CharSet.contains(char[][int])) == boolean) {\n    java.lang.StringBuilder.append(char[][int]);\n} ","position":"org.apache.commons.lang3.CharSetUtils:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"long = (long & (~long)) | long","position":"org.apache.commons.lang3.Conversion:809","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.String.indexOf(java.lang.String.charAt(int))) >= 0) {\n    if (boolean || boolean) {\n        boolean = true;\n        if ((int++) == int) {\n            int = int;\n            boolean = false;\n        } \n        java.util.List<java.lang.String>.add(java.lang.String.substring(int, int));\n        boolean = false;\n    } \n    int = ++int;\n    continue;\n} ","position":"org.apache.commons.lang3.StringUtils:3132","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2822","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][int]) {\n    return 'd';\n} else {\n    return '5';\n}","position":"org.apache.commons.lang3.Conversion:430","type":"CtIfImpl"},"status":-2},{"failures":[167,168,169,170,171,172,173,174,175,176,177,178],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.equals(java.lang.String, org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getKey())) {\n    return org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.Object>.getValue();\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:93","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:700","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[])","position":"org.apache.commons.lang3.time.FastDatePrinter:251","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.Range:316","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.lang3.math.Fraction:260","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()","position":"org.apache.commons.lang3.text.StrBuilder:628","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"OpenBSD\")","position":"org.apache.commons.lang3.SystemUtils:1055","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.1\")","position":"org.apache.commons.lang3.SystemUtils:865","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":139,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testAddContextValue":167,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":141,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":36,"org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayString":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":138,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayBoolean":38,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":39,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToNull_String":27,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":46,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":76,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":78,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":44,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":146,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":112,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":86,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripStart_StringString":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":59,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":34,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":159,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":149,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":56,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":70,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodInaccessible":96,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":163,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":129,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":53,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":26,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":104,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":41,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":117,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":52,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray":23,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":152,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":145,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":17,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":43,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":113,"org.apache.commons.lang3.StringUtilsTest.testCenter_StringIntString":20,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetContextValues":170,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":135,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":158,"org.apache.commons.lang3.ConversionTest.testShortToHex":62,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":90,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":137,"org.apache.commons.lang3.StringUtilsTest.testJoin_Objects":24,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":28,"org.apache.commons.lang3.ArrayUtilsTest.testToString":92,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testGetFirstContextValue":169,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":133,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":105,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":103,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":144,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":126,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":65,"org.apache.commons.lang3.exception.ContextedExceptionTest.testAddContextValue":175,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":84,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":91,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":64,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":140,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":115,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArraySeparator":66,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":114,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":151,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetFirstContextValue":173,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":75,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":131,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":15,"org.apache.commons.lang3.time.DateUtilsTest.testRound":14,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":31,"org.apache.commons.lang3.text.StrTokenizerTest.test5":6,"org.apache.commons.lang3.text.StrTokenizerTest.test4":5,"org.apache.commons.lang3.reflect.TypeUtilsTest.testGenericArrayType":68,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":16,"org.apache.commons.lang3.text.StrTokenizerTest.test1":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":106,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":50,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":77,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":160,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":166,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":120,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":57,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetFirstContextValue":177,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripToEmpty_String":29,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":107,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":157,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":162,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":116,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":147,"org.apache.commons.lang3.exception.ContextedExceptionTest.testGetContextValues":178,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":54,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":134,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":124,"org.apache.commons.lang3.exception.ContextedExceptionTest.testSetContextValue":176,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":155,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testGetContextValues":174,"org.apache.commons.lang3.ConversionTest.testIntToHex":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":60,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testAddContextValue":171,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":85,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":58,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":82,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":37,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":81,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":47,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":7,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthInt":67,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":156,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":3,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":123,"org.apache.commons.lang3.time.FastDateParserTest.testParses":19,"org.apache.commons.lang3.text.StrMatcherTest.testTrimMatcher":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":132,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":18,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":73,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":98,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":109,"org.apache.commons.lang3.exception.DefaultExceptionContextTest.testSetContextValue":168,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":9,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":93,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":10,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":87,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":101,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":94,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":13,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":127,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":161,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_String":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":164,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":165,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":110,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":71,"org.apache.commons.lang3.exception.ContextedRuntimeExceptionTest.testSetContextValue":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":33,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_String":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":136,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":143,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":111}}]
