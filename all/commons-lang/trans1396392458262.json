[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:926","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output a two digit number.<\/p>\n */\nprivate static class TwoDigitNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    /** \n     * Constructs an instance of {@code TwoDigitNumberField} with the specified field.\n     * \n     * @param field the field\n     */\nTwoDigitNumberField(final int field) {\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 2;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 100) {\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:876","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments()","position":"org.apache.commons.lang3.reflect.TypeUtils:1380","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0],"variableMapping":{"padding":"buffer","pads":"strLen","padLen":"strLen","padChars":"chars"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    char[][int] = char[][(int % int)];\n}","position":"org.apache.commons.lang3.StringUtils:5434","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], 0, char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:729","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:900","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.awt.printerjob\")","position":"org.apache.commons.lang3.SystemUtils:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)))","position":"org.apache.commons.lang3.reflect.TypeUtils:1274","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.lang.reflect.Type);\n    return java.lang.reflect.Array.java.lang.reflect.Array.newInstance(java.lang.Class<?>, 0).getClass();\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1313","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.CharSequence = java.lang.CharSequence","position":"org.apache.commons.lang3.StringUtils:6776","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:1205","type":"CtIfImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:965","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType, java.lang.Class<?>, null);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:969","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:538","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:336","type":"CtThrowImpl"},"status":-2},{"failures":[2,3,4],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int[] == int[]) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:731","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((char[].int) != (char[].int)) {\n    int = (char[].int) < (char[].int) ? -1 : +1;\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:822","type":"CtIfImpl"},"status":-1},{"failures":[5,6,7,8,9],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1640","type":"CtReturnImpl"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"binaryOperator":"(int < (double[].int))","name":"conditionalBoundary","position":"org.apache.commons.lang3.builder.EqualsBuilder:840","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (int > int) {\n    short = short[][int];\n    short[][int] = short[][int];\n    short[][int] = short;\n    int--;\n    int++;\n}","position":"org.apache.commons.lang3.ArrayUtils:1860","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.(java.lang.Character.isUpperCase(java.lang.CharSequence.charAt(int))) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.StringUtils:6173","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"char char","position":"org.apache.commons.lang3.StringUtils:6789","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return byte","position":"org.apache.commons.lang3.mutable.MutableByte:212","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Integer[];\n} ","position":"org.apache.commons.lang3.ArrayUtils:3140","type":"CtIfImpl"},"status":-2},{"failures":[29,30],"variableMapping":{"buffer":"sb"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"null\")","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:148","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder, java.lang.String, false).append('|')","position":"org.apache.commons.lang3.time.FastDateParser:762","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final long long = 65535L << int","position":"org.apache.commons.lang3.Conversion:734","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = (boolean[][(int + int)] ? 1L : 0) << int","position":"org.apache.commons.lang3.Conversion:1053","type":"CtLocalVariableImpl"},"status":-2},{"failures":[31],"variableMapping":{"fieldName":"fieldName","lhs":"rhs","this":"this","rhs":"rhs"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:835","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String, ((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.DiffBuilder:838","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"classNameBuffer":"buf"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"[\")","position":"org.apache.commons.lang3.ClassUtils:966","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder, \" & \", java.lang.reflect.TypeVariable<?>.getBounds())","position":"org.apache.commons.lang3.reflect.TypeUtils:1769","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"str":"separator","separatorChars":"separator","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String, java.lang.String, -1, true)","position":"org.apache.commons.lang3.StringUtils:3014","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String, java.lang.String, -1, true)","position":"org.apache.commons.lang3.StringUtils:2753","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"replace","transplant":{"sourceCode":"return java.lang.String.isEmpty() ? null : java.lang.String","position":"org.apache.commons.lang3.StringUtils:529","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:5262","type":"CtIfImpl"},"status":-2},{"failures":[32],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:360","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Character.java.lang.Class<java.lang.Character>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((char[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:354","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(org.apache.commons.lang3.math.Fraction.int, int)","position":"org.apache.commons.lang3.math.Fraction:757","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, long)","position":"org.apache.commons.lang3.builder.ToStringBuilder:444","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (short[] == null) {\n    return ;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1478","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)","position":"org.apache.commons.lang3.builder.EqualsBuilder:833","type":"CtInvocationImpl"},"status":-2},{"failures":[33],"binaryOperator":"(0 == int)","name":"negateConditional","position":"org.apache.commons.lang3.Conversion:759","type":"mutation","status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.exception.ExceptionUtils:457","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == int) {\n    if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                java.util.Calendar.add(java.util.Calendar.int, 15);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -15);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else if (int == (java.util.Calendar.int)) {\n            if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                java.util.Calendar.add(java.util.Calendar.int, 12);\n            } else {\n                java.util.Calendar.add(java.util.Calendar.int, -12);\n                java.util.Calendar.add(java.util.Calendar.int, 1);\n            }\n        } else {\n            java.util.Calendar.add(int[][0], 1);\n        }\n    } \n    return ;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1010","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new java.lang.StringBuilder().append('(')","position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.ClassPathUtils:135","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.lang3.builder.ReflectionToStringBuilder(T , org.apache.commons.lang3.builder.ToStringStyle , null , java.lang.Class<? super T> , boolean , boolean)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:287","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:877","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.concurrent.BasicThreadFactory org.apache.commons.lang3.concurrent.BasicThreadFactory = new org.apache.commons.lang3.concurrent.BasicThreadFactory(this)","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:378","type":"CtLocalVariableImpl"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 9","position":"org.apache.commons.lang3.Conversion:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object)","position":"org.apache.commons.lang3.Range:492","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"eventSource"},"name":"add","transplant":{"sourceCode":"/** \n * A strategy to parse a single field from the parsing pattern\n */\nprivate abstract static class Strategy {\n    /** \n     * Is this field a number?\n     * The default implementation returns false.\n     * \n     * @return true, if field is a number\n     */\nboolean isNumber() {\n        return false;\n    }\n\n    /** \n     * Set the Calendar with the parsed field.\n     * \n     * The default implementation does nothing.\n     * \n     * @param parser The parser calling this strategy\n     * @param cal The <code>Calendar<\/code> to set\n     * @param value The parsed field to translate and set in cal\n     */\nvoid setCalendar(final org.apache.commons.lang3.time.FastDateParser parser, final java.util.Calendar cal, final java.lang.String value) {\n    }\n\n    /** \n     * Generate a <code>Pattern<\/code> regular expression to the <code>StringBuilder<\/code>\n     * which will accept this field\n     * @param parser The parser calling this strategy\n     * @param regex The <code>StringBuilder<\/code> to append to\n     * @return true, if this field will set the calendar;\n     * false, if this field is a constant value\n     */\nabstract boolean addRegex(org.apache.commons.lang3.time.FastDateParser parser, java.lang.StringBuilder regex);\n}","position":"org.apache.commons.lang3.time.FastDateParser:415","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, (\"add\" + (java.lang.Class<L>.getSimpleName())), L);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have an accessible add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Unable to add listener.\" , java.lang.reflect.InvocationTargetException.getCause());\n}","position":"org.apache.commons.lang3.event.EventUtils:49","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuilder = null;\n    boolean = false;\n} else {\n    java.lang.StringBuilder = new java.lang.StringBuilder();\n    java.util.ArrayList<org.apache.commons.lang3.time.DurationFormatUtils.Token>.add(new org.apache.commons.lang3.time.DurationFormatUtils.Token(java.lang.StringBuilder));\n    boolean = true;\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:498","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:571","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 31) + int","position":"org.apache.commons.lang3.ObjectUtils:243","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.ClassUtils:1112","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(org.apache.commons.lang3.CharSequenceUtils.(org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, char, 0)) < 0)","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:1769","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if (java.lang.Character.(java.lang.Character.isUpperCase(java.lang.CharSequence.charAt(int))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.StringUtils:6172","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.concurrent.ExecutorService = java.util.concurrent.ExecutorService","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:160","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"bufferEnd":"out","len":"out","pos":"out"},"name":"replace","transplant":{"sourceCode":"if ((int + int) > int) {\n    return 0;\n} ","position":"org.apache.commons.lang3.text.StrMatcher:368","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.Conversion:952","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method)","position":"org.apache.commons.lang3.reflect.MethodUtils:497","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String.substring(1)","position":"org.apache.commons.lang3.ClassUtils:307","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"user.language\")","position":"org.apache.commons.lang3.SystemUtils:814","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T[]","position":"org.apache.commons.lang3.Validate:253","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.lang3.math.NumberUtils:1403","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.Object java.lang.Object : T[]) {\n    org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object);\n}","position":"org.apache.commons.lang3.text.StrBuilder:1077","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str","padStr":"str"},"name":"add","transplant":{"sourceCode":"return java.lang.String.concat(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:619","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (((java.lang.Throwable != null) && (!(java.lang.Throwable instanceof java.lang.RuntimeException))) && (!(java.lang.Throwable instanceof java.lang.Error))) {\n    return java.lang.Throwable;\n} else {\n    throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + java.lang.Throwable));\n}","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Throwable","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:146","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"tokenLen":"startIndex"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    break;\n} ","position":"org.apache.commons.lang3.time.FastDatePrinter:188","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(char[], int, char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:757","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String = null","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:171","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.GenericDeclaration java.lang.reflect.GenericDeclaration = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.TypeVariable<?>)).getGenericDeclaration()","position":"org.apache.commons.lang3.reflect.TypeUtils:1688","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-1","position":"org.apache.commons.lang3.ArrayUtils:128","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(T[], T, int)","position":"org.apache.commons.lang3.ArrayUtils:5282","type":"CtAssignmentImpl"},"status":-2},{"failures":[81,82],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.lang.Throwable[].int) ; int++) {\n    if (java.lang.Class<?>.equals(java.lang.Throwable[][int].getClass())) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:404","type":"CtForImpl"},"status":-1},{"failures":[83],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:723","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.StrBuilder:439","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"suffix":"fieldName"},"name":"replace","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field != null), \"Cannot locate declared field %s.%s\", java.lang.Class<?>, java.lang.String)","position":"org.apache.commons.lang3.reflect.FieldUtils:471","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.math.Fraction:918","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.time.DurationFormatUtils:500","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:918","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char char = java.lang.CharSequence.charAt(int++)","position":"org.apache.commons.lang3.CharSequenceUtils:198","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:1071","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int - int","position":"org.apache.commons.lang3.StringUtils:5307","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"case 1 :\n    {\n        final char char = java.lang.String.charAt(0);\n        if ((((char == 'y') || (char == 'Y')) || (char == 't')) || (char == 'T')) {\n            return java.lang.Boolean.java.lang.Boolean;\n        } \n        if ((((char == 'n') || (char == 'N')) || (char == 'f')) || (char == 'F')) {\n            return java.lang.Boolean.java.lang.Boolean;\n        } \n        break;\n    }","position":"org.apache.commons.lang3.BooleanUtils:561","type":"CtCaseImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getField(java.lang.String);\n    org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), java.lang.String, java.lang.Class<?>);\n    java.lang.reflect.Field = java.lang.reflect.Field;\n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:123","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random)","position":"org.apache.commons.lang3.RandomStringUtils:311","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 2 :\n    if (((org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String[][0])) && (((java.lang.String[][0].length()) == 2) || ((java.lang.String[][0].length()) == 3))) && (((java.lang.String[][1].length()) == 0) || (((java.lang.String[][1].length()) == 2) && org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.String[][1]))))) && ((java.lang.String[][2].length()) > 0)) {\n        return new java.util.Locale(java.lang.String[][0] , java.lang.String[][1] , java.lang.String[][2]);\n    } ","position":"org.apache.commons.lang3.LocaleUtils:145","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.ArrayUtils:1357","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.math.Fraction.pow((int / 2))","position":"org.apache.commons.lang3.math.Fraction:559","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.Calendar.get(java.util.Calendar.int)","position":"org.apache.commons.lang3.time.DateUtils:977","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.InternalError(\"Unexpected IllegalAccessException\")","position":"org.apache.commons.lang3.builder.HashCodeBuilder:191","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((float[].int) != (float[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:867","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1305","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:937","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ false , true , false , true }","position":"org.apache.commons.lang3.Conversion:233","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.EqualsBuilder:812","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField()","position":"org.apache.commons.lang3.time.FastDatePrinter:922","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.startsWith(\"[\")) {\n    while ((java.lang.String.charAt(0)) == '[') {\n        java.lang.String = java.lang.String.substring(1);\n        java.lang.StringBuilder.append(\"[]\");\n    }\n    if (((java.lang.String.charAt(0)) == 'L') && ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == ';')) {\n        java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n    } \n    if (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)) {\n        java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    } \n} ","position":"org.apache.commons.lang3.ClassUtils:202","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.lang3.StringUtils:7055","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.mutable.MutableShort:222","type":"CtReturnImpl"},"status":-2},{"failures":[84],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:2950","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String, true)","position":"org.apache.commons.lang3.StringUtils:3204","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:7115","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:592","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = +1","position":"org.apache.commons.lang3.builder.CompareToBuilder:899","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>.get()","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:184","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return L","position":"org.apache.commons.lang3.tuple.ImmutablePair:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:630","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = 4294967295L << int","position":"org.apache.commons.lang3.Conversion:697","type":"CtLocalVariableImpl"},"status":-2},{"failures":[85],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \")","position":"org.apache.commons.lang3.time.StopWatch:303","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\")","position":"org.apache.commons.lang3.text.StrSubstitutor:1073","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 14","position":"org.apache.commons.lang3.Conversion:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.StringBuilder.toString());\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:347","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.FastDatePrinter.newCalendar()","position":"org.apache.commons.lang3.time.FastDatePrinter:452","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char char = java.lang.CharSequence.charAt(int)","position":"org.apache.commons.lang3.StringUtils:7092","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence, java.lang.CharSequence)","position":"org.apache.commons.lang3.StringUtils:7018","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += java.lang.String.length()","position":"org.apache.commons.lang3.math.NumberUtils:462","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.time.DurationFormatUtils.Token.increment()","position":"org.apache.commons.lang3.time.DurationFormatUtils:538","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.reflect.TypeUtils:662","type":"CtReturnImpl"},"status":-2},{"failures":[86],"variableMapping":{"srcPos":"numberOfSubstrings","shift":"numberOfSubstrings","i":"numberOfSubstrings"},"name":"replace","transplant":{"sourceCode":"int = (int * 1) + int","position":"org.apache.commons.lang3.Conversion:1661","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += 1","position":"org.apache.commons.lang3.StringUtils:2849","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[59],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.Date","position":"org.apache.commons.lang3.time.DateUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:569","type":"CtReturnImpl"},"status":-1},{"failures":[87],"variableMapping":{"firstDiff":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","shortestStrLen":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","longestStrLen":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND"},"name":"replace","transplant":{"sourceCode":"if ((int == (-1)) && (int != int)) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:6641","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:6542","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n}","position":"org.apache.commons.lang3.text.StrTokenizer:445","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.Class<?>, java.lang.Class<?>))) {\n    return null;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:850","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.Conversion:1368","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.regex.Matcher.regionStart()) != (java.util.regex.Matcher.regionEnd())) {\n    throw new java.lang.IllegalArgumentException((((\"Failed to parse \\\"\" + (java.lang.String)) + \"\\\" ; gave up at index \") + (java.util.regex.Matcher.regionStart())));\n} ","position":"org.apache.commons.lang3.time.FastDateParser:166","type":"CtIfImpl"},"status":-2},{"failures":[16,23,88,89,90,91],"variableMapping":{"obj":"rhs"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n    return false;\n} ","position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} ","position":"org.apache.commons.lang3.builder.EqualsBuilder:329","type":"CtIfImpl"},"status":-1},{"failures":[],"binaryOperator":"((\"Array element \" + int) + \", \\'\")","name":"math","position":"org.apache.commons.lang3.ArrayUtils:250","type":"mutation","status":-2},{"failures":[],"variableMapping":{"ch":"ch","this":"this","i":"i","buffer":"buffer","whitespace":"whitespace"},"name":"add","transplant":{"sourceCode":"if (java.lang.Character.java.lang.Character.isUpperCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} else if (java.lang.Character.java.lang.Character.isTitleCase(char)) {\n    char[][int] = java.lang.Character.java.lang.Character.toLowerCase(char);\n    boolean = false;\n} else if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","position":"org.apache.commons.lang3.text.WordUtils:461","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Character.java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.java.lang.Character.isWhitespace(char);\n}","position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, null)","position":"org.apache.commons.lang3.time.FastDateFormat:273","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(((java.lang.reflect.Type[].int) == 1) && (java.lang.Object.java.lang.Object.equals(java.lang.reflect.Type[][0])))) {\n    org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append(\" extends \"), \" & \", java.lang.reflect.Type[]);\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1813","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.time.FastDateParser:774","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"))","position":"org.apache.commons.lang3.math.NumberUtils:573","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + 1))","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:466","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"k":"arrayPos"},"name":"add","transplant":{"sourceCode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} ","position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence[][int].charAt(int)) != char) {\n    int = int;\n    break;\n} ","position":"org.apache.commons.lang3.StringUtils:6631","type":"CtIfImpl"},"status":0},{"failures":[92,93,94],"variableMapping":{"buffer":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuffer.append('0')","position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.time.FastDatePrinter:670","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","position":"org.apache.commons.lang3.text.StrTokenizer:739","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.ensureCapacity(((int) + 1))","position":"org.apache.commons.lang3.text.StrBuilder:1606","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.lang3.math.Fraction:897","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.time.DurationFormatUtils:614","type":"CtReturnImpl"},"status":-2},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"variableMapping":{"buf":"buf","length":"offset","this":"this"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:635","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, int, int, null)) > 0","position":"org.apache.commons.lang3.text.StrSubstitutor:735","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return '1'","position":"org.apache.commons.lang3.Conversion:439","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(byte[], byte)","position":"org.apache.commons.lang3.ArrayUtils:4772","type":"CtLocalVariableImpl"},"status":-2},{"failures":[129,130,131,132,133,134,135,136,137,138,139],"variableMapping":{"buf":"buffer"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append('[')","position":"org.apache.commons.lang3.Range:452","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))","position":"org.apache.commons.lang3.time.DurationFormatUtils:434","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.lang3.concurrent.ConcurrentException(java.util.concurrent.ExecutionException.getMessage() , java.util.concurrent.ExecutionException.getCause())","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.concurrent.ExecutionException == null) || ((java.util.concurrent.ExecutionException.getCause()) == null)) {\n    return null;\n} ","position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:61","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.join(java.lang.String[], char)","position":"org.apache.commons.lang3.StringUtils:6317","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return '3';\n} else {\n    return '2';\n}","position":"org.apache.commons.lang3.Conversion:568","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-4329119827877627683L","position":"org.apache.commons.lang3.text.CompositeFormat:38","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > (double[].int)) {\n    int = double[].int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean || ((int == 0) && (!boolean))) {\n    return org.apache.commons.lang3.StringUtils.int;\n} ","position":"org.apache.commons.lang3.StringUtils:6617","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.String[][]","position":"org.apache.commons.lang3.text.translate.EntityArrays:422","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.translate.EntityArrays.java.lang.String[][].clone()","position":"org.apache.commons.lang3.text.translate.EntityArrays:370","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return this.org.apache.commons.lang3.exception.ExceptionContext.getContextEntries()","position":"org.apache.commons.lang3.exception.ContextedException:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.org.apache.commons.lang3.exception.ExceptionContext.getContextValues(java.lang.String)","position":"org.apache.commons.lang3.exception.ContextedException:197","type":"CtReturnImpl"},"status":-2},{"failures":[140,141,142,143,29,144,145,146,147,148,149,150,151,152,153,154,155,156,157,30,158,159,160,161,162,163,164,165,166,167,168],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return int","position":"org.apache.commons.lang3.time.FastDateParser:685","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int - 1","position":"org.apache.commons.lang3.time.FastDateParser:802","type":"CtReturnImpl"},"status":-1},{"failures":[169,170],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.lang3.text.StrBuilder:778","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{"o1":"o2","o2":"o2","this":"this","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>.isAnnotation()) {\n    return org.apache.commons.lang3.AnnotationUtils.equals(((java.lang.annotation.Annotation)(java.lang.Object)), ((java.lang.annotation.Annotation)(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:273","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(java.lang.Class<?>.getComponentType(), java.lang.Object, java.lang.Object)","position":"org.apache.commons.lang3.AnnotationUtils:271","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new boolean[]{ true , true , false , true }","position":"org.apache.commons.lang3.Conversion:187","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:427","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} ","position":"org.apache.commons.lang3.Conversion:1656","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(int[], java.lang.Integer.int)","position":"org.apache.commons.lang3.StringUtils:6933","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","src":"src"},"name":"add","transplant":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return '7';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return '3';\n    }\n}","position":"org.apache.commons.lang3.Conversion:415","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n        return '5';\n    } else {\n        return '4';\n    }\n}","position":"org.apache.commons.lang3.Conversion:553","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 'd'","position":"org.apache.commons.lang3.Conversion:531","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(boolean[], boolean)) != (org.apache.commons.lang3.ArrayUtils.int)","position":"org.apache.commons.lang3.ArrayUtils:2940","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":9,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":114,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":109,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":169,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":129,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":62,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":131,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":27,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":28,"org.apache.commons.lang3.RangeTest.testIsEndedBy":66,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":150,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":92,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":11,"org.apache.commons.lang3.RangeTest.testGetMaximum":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":124,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":106,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":26,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":71,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":110,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":149,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":51,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArrayEqualAsObject":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":101,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":117,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":165,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":156,"org.apache.commons.lang3.builder.CompareToBuilderTest.testMultiCharArray":3,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":57,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":130,"org.apache.commons.lang3.RangeTest.testIsStartedBy":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":10,"org.apache.commons.lang3.RangeTest.testToStringFormat":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":128,"org.apache.commons.lang3.RangeTest.testToString":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":118,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":120,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":89,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":48,"org.apache.commons.lang3.RangeTest.testIntersectionWith":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":97,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":122,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArray":2,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":152,"org.apache.commons.lang3.RangeTest.testIsBeforeRange":69,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":98,"org.apache.commons.lang3.RangeTest.testGetMinimum":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":99,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":141,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":166,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":145,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":102,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":138,"org.apache.commons.lang3.StringUtilsTest.testDifferenceAt_StringString":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":42,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":100,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":82,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":143,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":158,"org.apache.commons.lang3.builder.CompareToBuilderTest.testCharArrayHiddenByObject":4,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":151,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetSuffix":85,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":32,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":134,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":50,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":148,"org.apache.commons.lang3.RangeTest.testIsWithCompare":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":112,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":81,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":23,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":146,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":164,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":15,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":29,"org.apache.commons.lang3.RangeTest.testContains":74,"org.apache.commons.lang3.ConversionTest.testShortArrayToInt":33,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":126,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":45,"org.apache.commons.lang3.time.DateUtilsTest.testRound":53,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":159,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":162,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":37,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":107,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":147,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendNewLine":83,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":93,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":127,"org.apache.commons.lang3.RangeTest.testIsBefore":73,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":142,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":108,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":140,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":59,"org.apache.commons.lang3.RangeTest.testIsAfter":79,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":144,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":47,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":135,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":111,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":88,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":163,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":43,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":8,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":91,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":24,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":154,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":22,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":21,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":170,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":105,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":13,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":139,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":44,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":90,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":160,"org.apache.commons.lang3.reflect.TypeUtilsTest.testDetermineTypeVariableAssignments":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":161,"org.apache.commons.lang3.time.FastDateParserTest.testParses":153,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":40,"org.apache.commons.lang3.RangeTest.testRangeOfChars":67,"org.apache.commons.lang3.RangeTest.testIsOverlappedBy":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":49,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":30,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":94,"org.apache.commons.lang3.RangeTest.testContainsRange":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":6,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":155,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":115,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":55,"org.apache.commons.lang3.RangeTest.testIsAfterRange":75,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":167,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":116,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":137,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":123,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":96,"org.apache.commons.lang3.RangeTest.testElementCompareTo":76,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":52,"org.apache.commons.lang3.StringUtilsTest.testSplitByCharacterTypeCamelCase":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":119,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":157,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":136,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":133,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":168,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":61,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":121}}]
