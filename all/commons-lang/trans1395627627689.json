[{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1065","sourceCode":"float = float[][int]","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:124","sourceCode":"if (T != null) {\n    return T;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:581","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"val":"result"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:248","sourceCode":"return (java.util.Comparator<T>.compare(T, T)) == 0","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.time.DateUtils:359","failures":[2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"java.util.Locale == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:166","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(java.lang.String)","type":"CtInvocationImpl"},"failures":[10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:652","sourceCode":"java.util.Calendar.setTime(java.util.Date)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1116","sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","type":"CtForImpl"},"failures":[19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:942","sourceCode":"long = long[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:191","sourceCode":"float = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(float[][int], float)","type":"CtAssignmentImpl"},"failures":[22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:744","sourceCode":"while (int < int) {\n    if (boolean) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n            if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n                org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n                int += int * 2;\n                int = org.apache.commons.lang3.text.StrBuilder.size();\n                continue;\n            } \n            boolean = false;\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    } else {\n        final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n            return int + int;\n        } \n        if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n            boolean = true;\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    }\n}","type":"CtWhileImpl"},"failures":[23,10,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,11,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:202","sourceCode":"throw new java.lang.IllegalArgumentException(\"The InputStream must not be null\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:411","sourceCode":"if (((int > 0) && (int > 0)) && (int >= int)) {\n    boolean boolean = true;\n    for (int int = 0 ; int < int ; int++) {\n        if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n            boolean = false;\n            break;\n        } \n    }\n    if (boolean) {\n        java.lang.StringBuffer.setLength((int - int));\n    } \n} ","type":"CtIfImpl"},"failures":[71,72,72,73,73,74,75,75,76,76,77,78,78,79,79,80,80,81,81,82,82,19,19,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,20,20,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,21,21,119,119,120,120,121,121,122,122,123,123,124,124,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,138,138,139,139,140,140,141,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,46,47,48,49,50,51,52,53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.BooleanUtils:910","failures":[203,204,205,206],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:667","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:660","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[207,208],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:123","sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:122","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (T != null) {\n            return T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:458","sourceCode":"for (final T T : T[]) {\n    if (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.compare(T, T, false)) > 0) {\n        T = T;\n    } \n}","type":"CtForEachImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1011","sourceCode":"if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n    if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n        if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n            java.util.Calendar.add(java.util.Calendar.int, 15);\n        } else {\n            java.util.Calendar.add(java.util.Calendar.int, -15);\n            java.util.Calendar.add(java.util.Calendar.int, 1);\n        }\n    } else if (int == (java.util.Calendar.int)) {\n        if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n            java.util.Calendar.add(java.util.Calendar.int, 12);\n        } else {\n            java.util.Calendar.add(java.util.Calendar.int, -12);\n            java.util.Calendar.add(java.util.Calendar.int, 1);\n        }\n    } else {\n        java.util.Calendar.add(int[][0], 1);\n    }\n} ","type":"CtIfImpl"},"failures":[211,212,213,214,215,216,217,218,219,220,221,222,223],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:309","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:180","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.FormatCache:201","sourceCode":"java.text.DateFormat = java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:198","sourceCode":"java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"formatter":"formatter","dateStyle":"timeStyle","locale":"locale","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"(this.short)--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:118","sourceCode":"(short)++","type":"CtUnaryOperatorImpl"},"failures":[225],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"value"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:664","sourceCode":"throw new java.lang.IllegalArgumentException(\"Specified class is not a superclass of the object\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:861","sourceCode":"throw new java.lang.ClassCastException((\"Could not truncate \" + java.lang.Object))","type":"CtThrowImpl"},"failures":[226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1479","failures":[227],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:373","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:302","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.this(java.lang.String, char)","type":"CtInvocationImpl"},"failures":[31,37,38,39,40,41,61,62,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:541","sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:201","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","type":"CtThrowImpl"},"failures":[228],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:516","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1767","sourceCode":"java.lang.String = \"\"","type":"CtAssignmentImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dec":"arrayEnd"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:259","sourceCode":"if (java.lang.Object == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:296","sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(java.lang.Object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:98","sourceCode":"synchronized(this) {\n    T = T;\n    if (T == null) {\n        T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:100","sourceCode":"if (T == null) {\n    T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n} ","type":"CtIfImpl"},"failures":[230,231],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","object":"result","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:225","sourceCode":"if (int == 0) {\n    return \"\";\n} else if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:310","sourceCode":"if (java.lang.String == null) {\n    return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 0, 0, false, false, null, org.apache.commons.lang3.RandomStringUtils.java.util.Random);\n} ","type":"CtIfImpl"},"failures":[232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count"}},{"transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:299","sourceCode":"int -= 1","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:738","sourceCode":"int = 16","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"seconds":"radix"}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:731","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1440","sourceCode":"if (java.lang.String == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[233,234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"osName","falseString":"osName"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:243","sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.Class<T>, \"class cannot be null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.CallableBackgroundInitializer:123","sourceCode":"throw new java.lang.IllegalArgumentException(\"Callable must not be null!\")","type":"CtThrowImpl"},"failures":[235,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:442","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:877","sourceCode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object[]);\n}","type":"CtIfImpl"},"failures":[75,77,19,83,97,104,119,129,131,142,145,150,153,158,161,166,169,174,177,182,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","fieldName":"fieldName","this":"this"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4209","sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:175","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[237,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"str","remove":"str"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1491","sourceCode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:125","sourceCode":"if (int >= 0) {\n    java.lang.StringBuilder.append(java.lang.String.substring(int, int));\n    java.lang.StringBuilder.append(java.lang.String);\n    int = int + 1;\n} else {\n    java.lang.StringBuilder.append(java.lang.String.substring(int));\n    int = int;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"str":"newLineStr","nullText":"str"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1663","sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:251","sourceCode":"if (java.util.Date == null) {\n    if (java.util.Locale.equals(org.apache.commons.lang3.time.FastDateParser.java.util.Locale)) {\n        throw new java.text.ParseException(((((((\"(The \" + (java.util.Locale)) + \" locale does not support dates before 1868 AD)\\n\") + \"Unparseable date: \\\"\") + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n    } \n    throw new java.text.ParseException((((\"Unparseable date: \\\"\" + java.lang.String) + \"\\\" does not match \") + (java.util.regex.Pattern.pattern())) , 0);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"date":"date"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrMatcher:194","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharMatcher(java.lang.String.charAt(0))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:196","sourceCode":"return new org.apache.commons.lang3.text.StrMatcher.CharSetMatcher(java.lang.String.toCharArray())","type":"CtReturnImpl"},"failures":[239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"chars":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1120","sourceCode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1160","sourceCode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()));\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        java.util.Calendar.add(java.util.Calendar.int, -1);\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            int = java.util.Calendar.int;\n            int = java.util.Calendar.int;\n        } \n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        switch (int) {\n            case org.apache.commons.lang3.time.DateUtils.int :\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.int;\n                int = java.util.Calendar.int;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.get(java.util.Calendar.int);\n                int = int - 1;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n                int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n                break;\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"));\n}","type":"CtSwitchImpl"},"failures":[240,241,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitNullCallable":235,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLong":152,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":179,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":103,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":132,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":176,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":185,"org.apache.commons.lang3.SystemUtilsTest.testIS_OS":233,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":88,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":173,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":112,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":113,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetArrayEnd":229,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":138,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":16,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":31,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":211,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":193,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":241,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":105,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":196,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":29,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":146,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":216,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":54,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":11,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":199,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":63,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":168,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":155,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":205,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":89,"org.apache.commons.lang3.SystemUtilsTest.testOSMatchesName":234,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_OK":4,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":76,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":148,"org.apache.commons.lang3.ObjectUtilsTest.testMax":210,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":64,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":237,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":215,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":150,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testBlank":175,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testBlank":143,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLong":144,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":162,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":110,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":180,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":107,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":23,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":169,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":116,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":232,"org.apache.commons.lang3.ConversionTest.testShortToHex":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":100,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":124,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":200,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":59,"org.apache.commons.lang3.concurrent.CallableBackgroundInitializerTest.testInitExecutorNullCallable":236,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":140,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":153,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":55,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testBlank":167,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":58,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":94,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":186,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":44,"org.apache.commons.lang3.time.DateUtilsTest.testParseDateWithLeniency":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":130,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":126,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":181,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":137,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":118,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":99,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":119,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":90,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_WITH_DE_LOCALE":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":139,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":95,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":197,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":182,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":62,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testBlank":183,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":32,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":242,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":104,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":92,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":224,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":86,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":121,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":68,"org.apache.commons.lang3.mutable.MutableShortTest.testIncrement":225,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":223,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":206,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":73,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":195,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":174,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":228,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":217,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetConcurrent":230,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":33,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":91,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":83,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":188,"org.apache.commons.lang3.time.DateUtilsTest.testRound":212,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":219,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":129,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":178,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":213,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":101,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testBlank":151,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":214,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":133,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetMultipleTimes":231,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":218,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":142,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":202,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":134,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_EN_FAIL":7,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":187,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":43,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":42,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":171,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":40,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":207,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":20,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":158,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL":9,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":159,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":123,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":149,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":145,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":131,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":222,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":71,"org.apache.commons.lang3.text.StrTokenizerTest.test1":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":70,"org.apache.commons.lang3.text.StrTokenizerTest.test3":48,"org.apache.commons.lang3.text.StrTokenizerTest.test2":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":98,"org.apache.commons.lang3.text.StrTokenizerTest.test8":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":93,"org.apache.commons.lang3.text.StrTokenizerTest.test5":50,"org.apache.commons.lang3.text.StrTokenizerTest.test4":49,"org.apache.commons.lang3.text.StrTokenizerTest.test7":52,"org.apache.commons.lang3.text.StrTokenizerTest.test6":51,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":189,"org.apache.commons.lang3.time.DateUtilsTest.testSetMilliseconds":12,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":21,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":226,"org.apache.commons.lang3.time.DateUtilsTest.testSetMinutes":13,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":35,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":161,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":238,"org.apache.commons.lang3.ArrayUtilsTest.testToString":201,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_OK":3,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":36,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":0,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":170,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":172,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_String":239,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":157,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":45,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":156,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":28,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":191,"org.apache.commons.lang3.RangeTest.testIsStartedBy":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":96,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":57,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":166,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":108,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":85,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":15,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":204,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":122,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":177,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":240,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":6,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":208,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":141}}]
