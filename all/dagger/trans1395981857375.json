[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String)","position":"dagger.internal.Linker:223","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"dagger.internal.Keys:271","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:190","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>)","position":"dagger.ObjectGraph:293","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object = dagger.internal.Binding<T>.get()","position":"dagger.internal.LazyBinding:59","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<T>.hashCode()","position":"dagger.internal.ModuleAdapter:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:94","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"linker\")","position":"dagger.ObjectGraph:147","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)","position":"dagger.internal.Keys:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"values":"values","this":"this"},"name":"add","transplant":{"sourceCode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)","position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>)","position":"dagger.internal.ProblemDetector:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"injectedConstructor":"constructor"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Constructor<T>.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    for (int int = 0 ; int < (dagger.internal.Binding<?>[].int) ; int++) {\n        if ((dagger.internal.Binding<?>[][int]) == null) {\n            dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Constructor<T>, java.lang.ClassLoader);\n        } \n        int++;\n    }\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:78","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"this":"linker"},"name":"replace","transplant":{"sourceCode":"this.dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(dagger.internal.Linker) {\n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n    dagger.internal.Linker.linkRequested();\n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n}","position":"dagger.ObjectGraph:281","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:131","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}","position":"dagger.internal.Memoizer:63","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"field":"field"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:158","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n    throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:155","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"this":"linker"},"name":"add","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    for (int int = 0 ; int < (dagger.internal.Binding<?>[].int) ; int++) {\n        if ((dagger.internal.Binding<?>[][int]) == null) {\n            dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Constructor<T>, java.lang.ClassLoader);\n        } \n        int++;\n    }\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:78","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.String.java.lang.String.format(\"Could not load class %s needed for binding %s\", java.lang.String, java.lang.String))","position":"dagger.internal.FailoverLoader:68","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n} catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:179","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedConstructor":"constructor","java.lang.reflect.Modifier.PRIVATE":"length"},"name":"replace","transplant":{"sourceCode":"if (((java.lang.reflect.Constructor<T>.getModifiers()) & (this.int)) != 0) {\n    throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:192","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    for (int int = 0 ; int < (dagger.internal.Binding<?>[].int) ; int++) {\n        if ((dagger.internal.Binding<?>[][int]) == null) {\n            dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Constructor<T>, java.lang.ClassLoader);\n        } \n        int++;\n    }\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:78","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (V != null) {\n    java.util.LinkedHashMap<K, V>.put(K, V);\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + V) + \"\\n    \") + V));\n} ","position":"dagger.internal.UniqueMap:27","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.AssertionError()","position":"dagger.internal.Linker:276","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.BuiltInBinding:39","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"dagger.internal.Linker:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.annotation.Annotation java.lang.annotation.Annotation = dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object)","position":"dagger.internal.Keys:92","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>))","position":"dagger.internal.SetBinding:41","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.AssertionError()","position":"dagger.internal.Linker:276","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"create returned null\")","position":"dagger.internal.Memoizer:58","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"allBindings":"addTo"},"name":"add","transplant":{"sourceCode":"new dagger.internal.ProblemDetector().detectProblems(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.values())","position":"dagger.ObjectGraph:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue())","position":"dagger.ObjectGraph:178","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"classLoader":"classLoader","className":"name"},"name":"replace","transplant":{"sourceCode":"return java.lang.ClassLoader.loadClass(java.lang.String)","position":"dagger.internal.Loader:34","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Memoizer<java.lang.ClassLoader, dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>>.get(java.lang.ClassLoader).get(java.lang.String)","position":"dagger.internal.Loader:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.Keys:94","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false)","position":"dagger.internal.Keys:167","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else if (java.lang.Class<?>.isPrimitive()) {\n    if (boolean) {\n        throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n    } \n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n} else {\n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n}","position":"dagger.internal.Keys:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (boolean.boolean))\n    return java.lang.Boolean.java.lang.Boolean;\n","position":"dagger.internal.Keys:267","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:109","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (V != null) {\n    java.util.LinkedHashMap<K, V>.put(K, V);\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + V) + \"\\n    \") + V));\n} ","position":"dagger.internal.UniqueMap:27","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)","position":"dagger.internal.SetBinding:38","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>))","position":"dagger.internal.Linker:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.lock()","position":"dagger.internal.Memoizer:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"include":"type","plugin":"this"},"name":"add","transplant":{"sourceCode":"dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Class<?>)","position":"dagger.internal.Modules:76","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.instantiate(java.lang.Class<?>.getName().concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.Class<?>.getClassLoader())","position":"dagger.internal.FailoverLoader:42","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:175","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:108","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T T","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return dagger.internal.Binding<T>.library()","position":"dagger.internal.Linker:389","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.isLinked()","position":"dagger.internal.Linker:381","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"k":"bits"},"name":"replace","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:142","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if ((!(dagger.internal.Binding<?>.library())) && (!(dagger.internal.Binding<?>.dependedOn()))) {\n        java.util.List<dagger.internal.Binding>.add(dagger.internal.Binding<?>);\n    } \n}","position":"dagger.internal.ProblemDetector:34","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>","position":"dagger.ObjectGraph:177","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<java.lang.String, java.lang.Class<?>>.getValue()","position":"dagger.ObjectGraph:247","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.attach(this)","position":"dagger.internal.Linker:173","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.annotation.Annotation)","position":"dagger.internal.Keys:78","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException","position":"dagger.internal.Linker:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}","position":"dagger.internal.Keys:153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}","position":"dagger.internal.Memoizer:63","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.ProblemDetector()","position":"dagger.ObjectGraph:254","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"dagger.internal.Linker:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.startsWith(\"@\")","position":"dagger.internal.Keys:238","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Float.java.lang.Float","position":"dagger.internal.Keys:268","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)))","position":"dagger.internal.Linker:158","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"k":"bits"},"name":"replace","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:122","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.loaders.ReflectiveAtInjectBinding<T>.injectMembers(T)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:113","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>() {\n    @java.lang.Override\n    protected java.lang.Class<?> create(java.lang.String className) {\n        try {\n            return java.lang.ClassLoader.loadClass(java.lang.String);\n        } catch (java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n            return java.lang.Void.java.lang.Void;\n        }\n    }\n}","position":"dagger.internal.Loader:31","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Character.class":"java.lang.Character.class"},"name":"replace","transplant":{"sourceCode":"return this.java.lang.Character.java.lang.Character","position":"dagger.internal.Keys:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (char.char))\n    return java.lang.Character.java.lang.Character;\n","position":"dagger.internal.Keys:266","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.String , (\"could not be bound with key \" + java.lang.String))","position":"dagger.internal.Linker:230","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.containsKey(java.lang.Class<?>))) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Class<?>);\n    java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.put(java.lang.Class<?>, dagger.internal.ModuleAdapter<?>);\n    dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>);\n} ","position":"dagger.internal.Modules:75","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Class<?>.getName())","position":"dagger.internal.Keys:149","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.Throwable instanceof java.lang.RuntimeException ? ((java.lang.RuntimeException)(java.lang.Throwable)) : new java.lang.RuntimeException(java.lang.Throwable)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:105","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"create returned null\")","position":"dagger.internal.Memoizer:58","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.Throwable instanceof java.lang.RuntimeException ? ((java.lang.RuntimeException)(java.lang.Throwable)) : new java.lang.RuntimeException(java.lang.Throwable)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:105","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Set<T> java.util.Set<T> = new java.util.LinkedHashSet<T>(java.util.Set<dagger.internal.Binding<?>>.size())","position":"dagger.internal.SetBinding:84","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getValue()) instanceof dagger.internal.SetBinding) {\n    dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>.put(java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getKey(), new dagger.internal.SetBinding<java.lang.Object>(((dagger.internal.SetBinding<java.lang.Object>)(java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getValue()))));\n} ","position":"dagger.ObjectGraph:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.Class<?>>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[][int], dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>)","position":"dagger.ObjectGraph:171","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()","position":"dagger.internal.SetBinding:86","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"V V = java.util.Map<K, V>.get(K)","position":"dagger.internal.Memoizer:47","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"V V = java.util.Map<K, V>.put(K, V)","position":"dagger.internal.Linker:329","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"create returned null\")","position":"dagger.internal.Memoizer:58","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")","position":"dagger.internal.Linker:84","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return V","position":"dagger.internal.Memoizer:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (V != null) {\n    return V;\n} ","position":"dagger.internal.Memoizer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.Keys:94","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?>.isCycleFree()) {\n    continue;\n} ","position":"dagger.internal.ProblemDetector:54","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.setValue(dagger.internal.StaticInjection)","position":"dagger.ObjectGraph:239","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.attach(dagger.internal.Linker)","position":"dagger.internal.Linker:353","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> : java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.entrySet()) {\n    dagger.internal.StaticInjection dagger.internal.StaticInjection = java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue();\n    if (dagger.internal.StaticInjection == null) {\n        dagger.internal.StaticInjection = dagger.internal.Loader.getStaticInjection(java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getKey());\n        java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.setValue(dagger.internal.StaticInjection);\n    } \n    dagger.internal.StaticInjection.attach(dagger.internal.Linker);\n}","position":"dagger.ObjectGraph:235","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((T)(dagger.internal.Binding<?>))","position":"dagger.internal.BuiltInBinding:44","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"dagger.internal.Linker:288","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\", \")","position":"dagger.internal.Keys:160","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>, new java.util.ArrayList<dagger.internal.Binding<?>>())","position":"dagger.internal.ProblemDetector:29","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.StaticInjection dagger.internal.StaticInjection = java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue()","position":"dagger.ObjectGraph:236","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<? super T>) != null) {\n    dagger.internal.Binding<? super T>.injectMembers(T);\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:122","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"binding"},"name":"add","transplant":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(false)","position":"dagger.internal.ProblemDetector:79","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(dagger.internal.Binding<?>.isLinked())) {\n    java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n} ","position":"dagger.internal.Linker:292","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\");\n} ","position":"dagger.internal.Linker:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = dagger.internal.Keys.dagger.internal.Keys.boxIfPrimitive(java.lang.reflect.Type)","position":"dagger.internal.Keys:93","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"dagger.ObjectGraph:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.linkRequested()","position":"dagger.ObjectGraph:283","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"create returned null\")","position":"dagger.internal.Memoizer:58","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\")","position":"dagger.ObjectGraph:202","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"injectableKey":"injectableKey","moduleClass":"moduleClass"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?> == null) {\n    throw new java.lang.IllegalArgumentException(((\"No inject registered for \" + java.lang.String) + \". You must explicitly add it to the \\'injects\\' option in one of your modules.\"));\n} ","position":"dagger.ObjectGraph:328","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (dagger.ObjectGraph.DaggerObjectGraph dagger.ObjectGraph.DaggerObjectGraph = this ; dagger.ObjectGraph.DaggerObjectGraph != null ; dagger.ObjectGraph.DaggerObjectGraph = dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph) {\n    java.lang.Class<?> = dagger.ObjectGraph.DaggerObjectGraph.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n    if (java.lang.Class<?> != null)\n        break;\n    \n}","position":"dagger.ObjectGraph:324","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")","position":"dagger.internal.Binding:28","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"plugin\")","position":"dagger.internal.Linker:66","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"f":"i","bindings":"fieldBindings","fields":"fields"},"name":"add","transplant":{"sourceCode":"this.java.lang.reflect.Field[][int].set(null, this.dagger.internal.Binding<?>[][int].get())","position":"dagger.internal.loaders.ReflectiveStaticInjection:53","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"onlyInstance":"dagger.internal.Linker.UNINITIALIZED","binding":"binding","dagger.internal.Linker.UNINITIALIZED":"onlyInstance"},"name":"replace","transplant":{"sourceCode":"synchronized(this) {\n    if ((this.java.lang.Object) == (this.java.lang.Object)) {\n        this.java.lang.Object = this.dagger.internal.Binding<T>.get();\n    } \n}","position":"dagger.internal.Linker:363","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n    synchronized(this) {\n        if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n            java.lang.Object = dagger.internal.Binding<T>.get();\n        } \n    }\n} ","position":"dagger.internal.Linker:362","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Void.java.lang.Void","position":"dagger.internal.Loader:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(true)","position":"dagger.internal.ProblemDetector:70","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkInjectableTypes()","position":"dagger.ObjectGraph:270","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = java.lang.Class<T>.isAnnotationPresent(javax.inject.Singleton.javax.inject.Singleton)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:145","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.reflect.Constructor<T>[])(java.lang.Class<T>.getDeclaredConstructors()))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"plugin\")","position":"dagger.internal.Linker:66","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>.getSimpleName()) + \" is an overriding module and cannot contribute set bindings.\"))","position":"dagger.ObjectGraph:180","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:94","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException((\"No injectable constructor on \" + (java.lang.Object.getClass().getName())))","position":"dagger.internal.Binding:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"delegate"},"name":"add","transplant":{"sourceCode":"if (dagger.internal.Binding<?> != null) {\n    return dagger.internal.Binding<?>;\n} ","position":"dagger.internal.FailoverLoader:63","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.BuiltInBinding:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    V V = java.util.Map<K, V>.get(K);\n    if (V != null) {\n        return V;\n    } \n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}","position":"dagger.internal.Memoizer:46","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new dagger.internal.loaders.ReflectiveAtInjectBinding<T>(java.lang.String , java.lang.String , boolean , java.lang.Class<T> , java.util.List<java.lang.reflect.Field>.toArray(new java.lang.reflect.Field[java.util.List<java.lang.reflect.Field>.size()]) , java.lang.reflect.Constructor<T> , int , java.lang.Class<? super T> , java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:225","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>() {\n    @java.lang.Override\n    public dagger.internal.Binding<?> put(java.lang.String key, dagger.internal.Binding<?> value) {\n        if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n            throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n        } \n        return dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>);\n    }\n}","position":"dagger.ObjectGraph:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:196","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A Binding that implements singleton behaviour around an existing binding.\n */\nprivate static class SingletonBinding<T> extends dagger.internal.Binding<T> {\n    private final dagger.internal.Binding<T> binding;\n\n    private volatile java.lang.Object onlyInstance = dagger.internal.Linker.java.lang.Object;\n\n    private SingletonBinding(dagger.internal.Binding<T> binding) {\n        dagger.internal.Binding<T>.super(dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>.java.lang.String, true, dagger.internal.Binding<T>.java.lang.Object);\n        this.dagger.internal.Binding<T> = dagger.internal.Binding<T>;\n    }\n\n    @java.lang.Override\n    public void attach(dagger.internal.Linker linker) {\n        dagger.internal.Binding<T>.attach(dagger.internal.Linker);\n    }\n\n    @java.lang.Override\n    public void injectMembers(T t) {\n        dagger.internal.Binding<T>.injectMembers(T);\n    }\n\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    @java.lang.Override\n    public T get() {\n        if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n            synchronized(this) {\n                if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n                    java.lang.Object = dagger.internal.Binding<T>.get();\n                } \n            }\n        } \n        return ((T)(java.lang.Object));\n    }\n\n    @java.lang.Override\n    public void getDependencies(java.util.Set<dagger.internal.Binding<?>> get, java.util.Set<dagger.internal.Binding<?>> injectMembers) {\n        dagger.internal.Binding<T>.getDependencies(java.util.Set<dagger.internal.Binding<?>>, java.util.Set<dagger.internal.Binding<?>>);\n    }\n\n    @java.lang.Override\n    public boolean isCycleFree() {\n        return dagger.internal.Binding<T>.isCycleFree();\n    }\n\n    @java.lang.Override\n    public boolean isLinked() {\n        return dagger.internal.Binding<T>.isLinked();\n    }\n\n    @java.lang.Override\n    public boolean isVisiting() {\n        return dagger.internal.Binding<T>.isVisiting();\n    }\n\n    @java.lang.Override\n    public boolean library() {\n        return dagger.internal.Binding<T>.library();\n    }\n\n    @java.lang.Override\n    public boolean dependedOn() {\n        return dagger.internal.Binding<T>.dependedOn();\n    }\n\n    @java.lang.Override\n    public void setCycleFree(final boolean cycleFree) {\n        dagger.internal.Binding<T>.setCycleFree(boolean);\n    }\n\n    @java.lang.Override\n    public void setVisiting(final boolean visiting) {\n        dagger.internal.Binding<T>.setVisiting(boolean);\n    }\n\n    @java.lang.Override\n    public void setLibrary(boolean library) {\n        dagger.internal.Binding<T>.setLibrary(true);\n    }\n\n    @java.lang.Override\n    public void setDependedOn(boolean dependedOn) {\n        dagger.internal.Binding<T>.setDependedOn(boolean);\n    }\n\n    @java.lang.Override\n    protected boolean isSingleton() {\n        return true;\n    }\n\n    @java.lang.Override\n    protected void setLinked() {\n        dagger.internal.Binding<T>.setLinked();\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return \"@Singleton/\" + (dagger.internal.Binding<T>.toString());\n    }\n}","position":"dagger.internal.Linker:343","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)","position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new dagger.internal.loaders.ReflectiveStaticInjection(java.lang.Class<?>.getClassLoader() , java.util.List<java.lang.reflect.Field>.toArray(new java.lang.reflect.Field[java.util.List<java.lang.reflect.Field>.size()]))","position":"dagger.internal.loaders.ReflectiveStaticInjection:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n    throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n} ","position":"dagger.internal.Linker:147","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"dagger.internal.Keys:158","type":"mutation","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveStaticInjection:64","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"onlyInstance":"cacheValue","binding":"delegate","dagger.internal.Linker.UNINITIALIZED":"cacheValue"},"name":"replace","transplant":{"sourceCode":"if ((this.java.lang.Object) == (this.java.lang.Object)) {\n    this.java.lang.Object = this.dagger.internal.Binding<T>.get();\n} ","position":"dagger.internal.Linker:364","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(this) {\n    if ((java.lang.Object) == (dagger.internal.LazyBinding.java.lang.Object)) {\n        java.lang.Object = dagger.internal.Binding<T>.get();\n    } \n}","position":"dagger.internal.LazyBinding:57","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int |= dagger.internal.Binding.int","position":"dagger.internal.Binding:106","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = java.lang.Class<T>.isInterface() ? java.lang.String : dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<T>)","position":"dagger.ObjectGraph:294","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.StaticInjection = dagger.internal.Loader.getStaticInjection(java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getKey())","position":"dagger.ObjectGraph:238","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"key == null\")","position":"dagger.internal.Memoizer:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")","position":"dagger.internal.Binding:28","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.Linker.fullyLinkedBindings()","position":"dagger.ObjectGraph:261","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.UniqueMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())","position":"dagger.internal.UniqueMap:35","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"synchronized(dagger.internal.Linker) {\n    if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.Linker.fullyLinkedBindings()) != null) {\n        return java.util.Map<java.lang.String, dagger.internal.Binding<?>>;\n    } \n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n    dagger.ObjectGraph.DaggerObjectGraph.linkInjectableTypes();\n    return dagger.internal.Linker.linkAll();\n}","position":"dagger.ObjectGraph:265","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:203","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()","position":"dagger.ObjectGraph:269","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Integer.java.lang.Integer","position":"dagger.internal.Keys:264","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.LazyBinding:45","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"constructor":"injectedConstructor"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.UnsupportedOperationException();\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n    throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:192","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>;\n    dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue());\n} catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.IllegalArgumentException(((dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>.getSimpleName()) + \" is an overriding module and cannot contribute set bindings.\"));\n}","position":"dagger.ObjectGraph:176","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"linker\")","position":"dagger.ObjectGraph:147","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return null","position":"dagger.internal.FailoverLoader:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)","position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}","position":"dagger.internal.Keys:165","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (dagger.ObjectGraph.DaggerObjectGraph dagger.ObjectGraph.DaggerObjectGraph = this ; dagger.ObjectGraph.DaggerObjectGraph != null ; dagger.ObjectGraph.DaggerObjectGraph = dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph) {\n    java.lang.Class<?> = dagger.ObjectGraph.DaggerObjectGraph.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n    if (java.lang.Class<?> != null)\n        break;\n    \n}","position":"dagger.ObjectGraph:324","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:114","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    java.lang.StringBuilder.append(java.lang.annotation.Annotation).append(\"/\");\n} ","position":"dagger.internal.Keys:77","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int != 0) {\n    java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n    }\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library())","position":"dagger.internal.Linker:144","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"attachSuccess":"attachSuccess"},"name":"replace","transplant":{"sourceCode":"this.boolean = false","position":"dagger.internal.Linker:288","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"dagger.internal.Linker:172","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[][int] = dagger.internal.Binding<?>[][int].get()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:98","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>)","position":"dagger.internal.Linker:159","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{}}]
