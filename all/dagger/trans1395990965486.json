[{"failures":[],"variableMapping":{"annotation":"annotation","result":"result"},"name":"add","transplant":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    java.lang.StringBuilder.append(java.lang.annotation.Annotation).append(\"/\");\n} ","position":"dagger.internal.Keys:77","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.annotation.Annotation).append(\"/\")","position":"dagger.internal.Keys:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.Binding<T>.isVisiting()","position":"dagger.internal.Linker:385","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"key == null\");\n} ","position":"dagger.internal.Memoizer:40","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String)","position":"dagger.internal.Linker:223","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.String , (\"could not be bound with key \" + java.lang.String))","position":"dagger.internal.Linker:230","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"bits":"start","dagger.internal.Binding.LINKED":"start"},"name":"replace","transplant":{"sourceCode":"int |= int","position":"dagger.internal.Binding:106","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.String.lastIndexOf('/')) + 1","position":"dagger.internal.Keys:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"k":"dagger.internal.Binding.LINKED"},"name":"add","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int |= dagger.internal.Binding.int","position":"dagger.internal.Binding:106","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"linkedBindings":"linkedBindings"},"name":"add","transplant":{"sourceCode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\");\n} ","position":"dagger.internal.Linker:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> = java.util.Collections.java.util.Collections.unmodifiableMap(java.util.Map<java.lang.String, dagger.internal.Binding<?>>)","position":"dagger.internal.Linker:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"attachSuccess":"attachSuccess"},"name":"add","transplant":{"sourceCode":"this.boolean = false","position":"dagger.internal.Linker:288","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"dagger.internal.Linker:172","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null","position":"dagger.internal.Linker:272","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = new dagger.internal.Linker.DeferredBinding(java.lang.String , java.lang.ClassLoader , java.lang.Object , boolean)","position":"dagger.internal.Linker:283","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"replace","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"dagger.internal.Keys:271","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (double.double))\n    return java.lang.Double.java.lang.Double;\n","position":"dagger.internal.Keys:269","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"errorHandler\")","position":"dagger.internal.Linker:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Deferred bindings must resolve first.\")","position":"dagger.internal.Linker:457","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"dagger.internal.FailoverLoader:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.Object.getClass().getClassLoader(), true, true)","position":"dagger.internal.Linker:236","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T = java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:102","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>)","position":"dagger.ObjectGraph:293","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:52","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return dagger.internal.Binding<T>.isCycleFree()","position":"dagger.internal.Linker:377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.dependedOn()","position":"dagger.internal.Linker:393","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}","position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\", \")","position":"dagger.internal.Keys:160","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()","position":"dagger.internal.Keys:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.annotation.Annotation == null) && (java.lang.reflect.Type instanceof java.lang.Class)) && (!(((java.lang.Class<?>)(java.lang.reflect.Type)).isArray()))) {\n    return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName();\n} ","position":"dagger.internal.Keys:73","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"create returned null\")","position":"dagger.internal.Memoizer:58","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError()","position":"dagger.internal.Linker:195","type":"CtThrowImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = dagger.internal.Keys.dagger.internal.Keys.boxIfPrimitive(java.lang.reflect.Type)","position":"dagger.internal.Keys:93","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())))","position":"dagger.internal.SetBinding:42","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"allBindings":"bindings"},"name":"replace","transplant":{"sourceCode":"new dagger.internal.ProblemDetector().detectProblems(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.values())","position":"dagger.ObjectGraph:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n    continue;\n} ","position":"dagger.internal.Linker:138","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.loaders.ReflectiveStaticInjection.dagger.internal.loaders.ReflectiveStaticInjection.create(java.lang.Class<?>)","position":"dagger.internal.FailoverLoader:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<T>.java.lang.String) != null) {\n    dagger.internal.Linker.putIfAbsent(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>);\n} ","position":"dagger.internal.Linker:309","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    T = java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    java.lang.Throwable java.lang.Throwable = java.lang.reflect.InvocationTargetException.getCause();\n    throw java.lang.Throwable instanceof java.lang.RuntimeException ? ((java.lang.RuntimeException)(java.lang.Throwable)) : new java.lang.RuntimeException(java.lang.Throwable);\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n} catch (java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(java.lang.InstantiationException);\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:101","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.Loader:79","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.Provides.Type()","position":"dagger.Provides:43","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.String != null) {\n    return new dagger.internal.BuiltInBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String);\n} ","position":"dagger.internal.Linker:212","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"private static class DeferredBinding extends dagger.internal.Binding<java.lang.Object> {\n    /** \n     * Loader originally intended to load this binding, to be used in loading the actual one\n     */\nfinal java.lang.ClassLoader classLoader;\n\n    final java.lang.String deferredKey;\n\n    final boolean mustHaveInjections;\n\n    private DeferredBinding(java.lang.String deferredKey ,java.lang.ClassLoader classLoader ,java.lang.Object requiredBy ,boolean mustHaveInjections) {\n        dagger.internal.Binding<java.lang.Object>.super(null, null, false, java.lang.Object);\n        this.java.lang.String = java.lang.String;\n        this.java.lang.ClassLoader = java.lang.ClassLoader;\n        this.boolean = boolean;\n    }\n\n    @java.lang.Override\n    public void injectMembers(java.lang.Object t) {\n        throw new java.lang.UnsupportedOperationException(\"Deferred bindings must resolve first.\");\n    }\n\n    @java.lang.Override\n    public void getDependencies(java.util.Set<dagger.internal.Binding<?>> get, java.util.Set<dagger.internal.Binding<?>> injectMembers) {\n        throw new java.lang.UnsupportedOperationException(\"Deferred bindings must resolve first.\");\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\";\n    }\n}","position":"dagger.internal.Linker:442","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"deferredKey":"dagger.internal.Keys.MEMBERS_INJECTOR_PREFIX"},"name":"add","transplant":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (this.dagger.internal.Keys.java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, \"members/\", dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:185","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((int) & (dagger.internal.Binding.int))","name":"removeConditional","position":"dagger.internal.Binding:126","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>)","position":"dagger.internal.ProblemDetector:85","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.List<dagger.internal.Binding>.isEmpty())) {\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    java.lang.StringBuilder.append(\"You have these unused @Provider methods:\");\n    for (int int = 0 ; int < (java.util.List<dagger.internal.Binding>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int + 1)).append(\". \").append(java.util.List<dagger.internal.Binding>.get(int).java.lang.Object);\n    }\n    java.lang.StringBuilder.append(\"\\n    Set library=true in your module to disable this check.\");\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} ","position":"dagger.internal.ProblemDetector:39","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"result","contribution":"contribution"},"name":"add","transplant":{"sourceCode":"java.util.Set<T>.add(((T)(java.lang.Object)))","position":"dagger.internal.SetBinding:90","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<T>.addAll(((java.util.Set<T>)(java.lang.Object)))","position":"dagger.internal.SetBinding:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return ","position":"dagger.internal.ThrowingErrorHandler:27","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return ;\n} ","position":"dagger.internal.ThrowingErrorHandler:26","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n    }\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:51","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.attach(this)","position":"dagger.internal.Linker:173","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:152","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"binding":"value"},"name":"add","transplant":{"sourceCode":"if (dagger.internal.Binding<?>.isCycleFree()) {\n    continue;\n} ","position":"dagger.internal.ProblemDetector:54","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n} ","position":"dagger.ObjectGraph:201","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((dagger.internal.SetBinding<T>)(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)))","position":"dagger.internal.SetBinding:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return V","position":"dagger.internal.Memoizer:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>","position":"dagger.internal.Modules:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.injectMembers(T)","position":"dagger.ObjectGraph:308","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>","position":"dagger.internal.Linker:319","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"dagger.internal.Binding<T>.attach(dagger.internal.Linker)","position":"dagger.internal.Linker:353","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> = dagger.internal.Linker.java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)","position":"dagger.internal.Linker:274","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"dagger.ObjectGraph:323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(null, new dagger.internal.FailoverLoader(), java.lang.Object[])","position":"dagger.ObjectGraph:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n    throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:155","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}","position":"dagger.internal.Keys:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || dagger.internal.Keys.(dagger.internal.Keys.isAnnotated(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String);\n} ","position":"dagger.internal.Linker:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"deferredKey":"dagger.internal.Keys.PROVIDER_PREFIX"},"name":"add","transplant":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (this.dagger.internal.Keys.java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:183","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.util.List<java.lang.reflect.Field>.isEmpty()) {\n    throw new java.lang.IllegalArgumentException((\"No static injections: \" + (java.lang.Class<?>.getName())));\n} ","position":"dagger.internal.loaders.ReflectiveStaticInjection:68","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    } \n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:62","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    return java.util.Map<java.lang.String, dagger.internal.Binding<?>>;\n} ","position":"dagger.internal.Linker:102","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>> != null) {\n    return java.util.Map<java.lang.String, dagger.internal.Binding<?>>;\n} ","position":"dagger.ObjectGraph:262","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Module adapter for \" + java.lang.Class<?>) + \" could not be loaded. \") + \"Please ensure that code generation was run for this module.\")","name":"math","position":"dagger.internal.:45","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new dagger.internal.BuiltInBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String)","position":"dagger.internal.Linker:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.FailoverLoader:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.ThrowingErrorHandler:29","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:149","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"V V = java.util.Map<K, V>.get(K)","position":"dagger.internal.Memoizer:47","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"V V = java.util.Map<K, V>.put(K, V)","position":"dagger.internal.Linker:329","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.clear()","position":"dagger.internal.Linker:185","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.ClassNotFoundException java.lang.ClassNotFoundException","position":"dagger.internal.Loader:35","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.putIfAbsent(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>)","position":"dagger.internal.Linker:310","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"dagger.internal.ModuleAdapter:66","type":"mutation","return":"return true","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    return java.util.Map<java.lang.String, dagger.internal.Binding<?>>;\n} ","position":"dagger.internal.Linker:102","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<java.lang.String, dagger.internal.Binding<?>>","position":"dagger.ObjectGraph:263","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return \"members/\".concat(java.lang.Class<?>.getName())","position":"dagger.internal.Keys:67","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"dagger.internal.Keys:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (dagger.internal.Binding<?> != null) {\n    return dagger.internal.Binding<?>;\n} ","position":"dagger.internal.FailoverLoader:63","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.BuiltInBinding:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n    }\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:51","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)));\n}","position":"dagger.internal.SetBinding:40","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)));\n}","position":"dagger.internal.SetBinding:44","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null","position":"dagger.internal.Keys:251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, \"members/\", dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}","position":"dagger.internal.Keys:184","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:109","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException","position":"dagger.internal.Linker:157","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n    continue;\n} ","position":"dagger.internal.Linker:138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(dagger.internal.Keys.dagger.internal.Memoizer<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Boolean>.get(java.lang.annotation.Annotation.annotationType()))) {\n    continue;\n} ","position":"dagger.internal.Keys:123","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.util.List<dagger.internal.Binding>.isEmpty())) {\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    java.lang.StringBuilder.append(\"You have these unused @Provider methods:\");\n    for (int int = 0 ; int < (java.util.List<dagger.internal.Binding>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int + 1)).append(\". \").append(java.util.List<dagger.internal.Binding>.get(int).java.lang.Object);\n    }\n    java.lang.StringBuilder.append(\"\\n    Set library=true in your module to disable this check.\");\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} ","position":"dagger.internal.ProblemDetector:39","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>;\n    dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue());\n} catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.IllegalArgumentException(((dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>.getSimpleName()) + \" is an overriding module and cannot contribute set bindings.\"));\n}","position":"dagger.ObjectGraph:176","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"dagger.internal.Linker:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof dagger.internal.ModuleAdapter<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = ((dagger.internal.ModuleAdapter<?>)(java.lang.Object));\n    return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>);\n} else {\n    return false;\n}","position":"dagger.internal.ModuleAdapter:67","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (java.lang.reflect.Field[].int)","name":"removeConditional","position":"dagger.internal.loaders.ReflectiveStaticInjection:43","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null","position":"dagger.internal.Linker:272","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)","position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:183","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:209","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"dagger.internal.Keys:201","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.ProblemDetector().detectProblems(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.values())","position":"dagger.ObjectGraph:254","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"resolvedBinding":"binding","binding":"binding"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library())","position":"dagger.internal.Linker:144","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n    dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n    dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n    dagger.internal.Binding<?>.setCycleFree(true);\n} finally {\n    java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n    dagger.internal.Binding<?>.setVisiting(false);\n}","position":"dagger.internal.ProblemDetector:72","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.InstantiationException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:111","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.Binding<java.lang.Object>(null, null, false, null) {\n    @java.lang.Override\n    public java.lang.Object get() {\n        throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\");\n    }\n\n    @java.lang.Override\n    public void injectMembers(java.lang.Object t) {\n        throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\");\n    }\n}","position":"dagger.internal.Binding:26","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{"dagger.internal.Keys.PROVIDER_PREFIX":"dagger.internal.Keys.PROVIDER_PREFIX","start":"start","this":"this","key":"dagger.internal.Keys.PROVIDER_PREFIX"},"name":"add","transplant":{"sourceCode":"return dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), this.dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:183","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, \"members/\", dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}","position":"dagger.internal.Keys:182","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n        try {\n            java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n        } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        }\n    } else if (boolean) {\n        throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n    } \n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:177","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.Linker.ErrorHandler.handleErrors(java.util.List<java.lang.String>);\n} finally {\n    java.util.List<java.lang.String>.clear();\n}","position":"dagger.internal.Linker:182","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>)","position":"dagger.internal.ProblemDetector:85","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null","position":"dagger.internal.Linker:272","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \")","position":"dagger.internal.ProblemDetector:63","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[].int) ; int++) {\n    java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[][int], null);\n}","position":"dagger.ObjectGraph:173","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int))","position":"dagger.internal.ProblemDetector:63","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (dagger.internal.Binding<?>[].int)","name":"conditionalBoundary","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:97","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException","position":"dagger.internal.Linker:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<? super T> java.lang.Class<? super T> = java.lang.Class<T>.getSuperclass()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:215","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.getDependencies(java.util.Set<dagger.internal.Binding<?>>, java.util.Set<dagger.internal.Binding<?>>)","position":"dagger.internal.Linker:373","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.ProblemDetector()","position":"dagger.ObjectGraph:254","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((dagger.internal.Binding<?> = java.util.Queue<dagger.internal.Binding<?>>.poll()) != null) {\n    if (dagger.internal.Binding<?> instanceof dagger.internal.Linker.DeferredBinding) {\n        dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>));\n        java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String;\n        boolean boolean = dagger.internal.Linker.DeferredBinding.boolean;\n        if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n            continue;\n        } \n        try {\n            dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n            dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n            dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n            if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n                throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n            } \n            dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n            java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n            dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n        } catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n            dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n            dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n            dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.RuntimeException java.lang.RuntimeException) {\n            throw java.lang.RuntimeException;\n        } catch (java.lang.Exception java.lang.Exception) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } else {\n        boolean = true;\n        dagger.internal.Binding<?>.attach(this);\n        if (boolean) {\n            dagger.internal.Binding<?>.setLinked();\n        } else {\n            java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n        }\n    }\n}","position":"dagger.internal.Linker:133","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.getMembersKey(T.getClass())","position":"dagger.ObjectGraph:303","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"constructor":"constructor"},"name":"add","transplant":{"sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.UnsupportedOperationException();\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.reflect.Constructor<T>.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n    continue;\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:169","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"dagger.ObjectGraph:323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"dagger.internal.Keys:124","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:94","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.AssertionError()","position":"dagger.internal.Linker:276","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"status":0},{"failures":[],"binaryOperator":"(int - int)","name":"math","position":"dagger.internal.ProblemDetector:63","type":"mutation","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)","position":"dagger.internal.SetBinding:38","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(int - int)","name":"math","position":"dagger.internal.ProblemDetector:63","type":"mutation","status":0},{"failures":[],"binaryOperator":"(java.lang.Object) == (dagger.internal.LazyBinding.java.lang.Object)","name":"removeConditional","position":"dagger.internal.:58","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T>.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.LazyBinding:26","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T> = ((dagger.internal.Binding<T>)(dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.ClassLoader)))","position":"dagger.internal.LazyBinding:41","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"synchronized(dagger.internal.Linker) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Class<?>, java.lang.ClassLoader, false, true);\n    if ((dagger.internal.Binding<?> == null) || (!(dagger.internal.Binding<?>.isLinked()))) {\n        dagger.internal.Linker.linkRequested();\n        dagger.internal.Binding<?> = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Class<?>, java.lang.ClassLoader, false, true);\n    } \n    return dagger.internal.Binding<?>;\n}","position":"dagger.ObjectGraph:333","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new dagger.internal.LazyBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String)","position":"dagger.internal.Linker:217","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"create returned null\");\n} ","position":"dagger.internal.Memoizer:57","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkInjectableTypes()","position":"dagger.ObjectGraph:270","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object = dagger.internal.Binding<T>.get()","position":"dagger.internal.LazyBinding:59","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))","position":"dagger.internal.Keys:166","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"classLoader"},"name":"add","transplant":{"sourceCode":"java.lang.ClassLoader.getSystemClassLoader()","position":"dagger.internal.Loader:69","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.ClassLoader = java.lang.ClassLoader != null ? java.lang.ClassLoader : java.lang.ClassLoader.java.lang.ClassLoader.getSystemClassLoader()","position":"dagger.internal.Loader:69","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"binding":"resolvedBinding"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Binding<?>.setLinked()","position":"dagger.internal.Linker:175","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn())","position":"dagger.internal.Linker:145","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.Set<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.Set<T>.add(((T)(java.lang.Object)));\n}","position":"dagger.internal.SetBinding:87","type":"CtIfImpl"},"status":0},{"failures":[],"binaryOperator":"(\"DeferredBinding[deferredKey=\" + (java.lang.String))","name":"math","position":"dagger.internal.DeferredBinding:465","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.getMembersKey(T.getClass())","position":"dagger.ObjectGraph:303","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.Linker:228","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"bindings":"bindings","length":"length","fields":"fields"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:52","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field[][int];\n    java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field);\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.reflect.Field, java.lang.ClassLoader);\n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:43","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return dagger.internal.Binding<T>.isLinked()","position":"dagger.internal.Linker:381","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.library()","position":"dagger.internal.Linker:389","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:152","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.annotation.Annotation java.lang.annotation.Annotation = dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object)","position":"dagger.internal.Keys:92","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:122","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{}}]
