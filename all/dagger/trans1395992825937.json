[{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>)","position":"dagger.internal.ProblemDetector:59","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.Class<?>> java.util.Map<java.lang.String, java.lang.Class<?>> = new java.util.LinkedHashMap<java.lang.String, java.lang.Class<?>>()","position":"dagger.ObjectGraph:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:146","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((java.lang.String.startsWith(\"java.\")) || (java.lang.String.startsWith(\"javax.\"))) || (java.lang.String.startsWith(\"android.\"))","position":"dagger.internal.Keys:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"newValue"},"name":"replace","transplant":{"sourceCode":"if (V != null) {\n    return V;\n} ","position":"dagger.internal.Memoizer:48","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return V","position":"dagger.internal.Memoizer:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(java.lang.String)","position":"dagger.internal.Linker:337","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.ModuleAdapter<?> == null) {\n    throw new java.lang.IllegalStateException((((\"Module adapter for \" + java.lang.Class<?>) + \" could not be loaded. \") + \"Please ensure that code generation was run for this module.\"));\n} ","position":"dagger.internal.FailoverLoader:44","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:130","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}","position":"dagger.internal.Keys:198","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:156","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkInjectableTypes()","position":"dagger.ObjectGraph:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n    dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n    dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n    dagger.internal.Binding<?>.setCycleFree(true);\n} finally {\n    java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n    dagger.internal.Binding<?>.setVisiting(false);\n}","position":"dagger.internal.ProblemDetector:72","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())","position":"dagger.internal.Keys:233","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.ObjectGraph.DaggerObjectGraph.linkEverything()","position":"dagger.ObjectGraph:253","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedConstructor":"injectedConstructor","type":"type"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(null, new dagger.internal.FailoverLoader(), java.lang.Object[])","position":"dagger.ObjectGraph:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.Linker.ErrorHandler.handleErrors(java.util.List<java.lang.String>);\n} finally {\n    java.util.List<java.lang.String>.clear();\n}","position":"dagger.internal.Linker:182","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:193","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(T, dagger.internal.Binding<?>[][int].get());\n    }\n    if ((dagger.internal.Binding<? super T>) != null) {\n        dagger.internal.Binding<? super T>.injectMembers(T);\n    } \n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:118","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Float.java.lang.Float","position":"dagger.internal.Keys:268","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.ObjectGraph.DaggerObjectGraph.linkEverything()","position":"dagger.ObjectGraph:253","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T T","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n  \")","position":"dagger.internal.ThrowingErrorHandler:32","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>)","position":"dagger.internal.Linker:156","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.UniqueMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())","position":"dagger.internal.UniqueMap:35","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"supertypeBinding"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(true)","position":"dagger.internal.ProblemDetector:70","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(T, dagger.internal.Binding<?>[][int].get());\n    }\n    if ((dagger.internal.Binding<? super T>) != null) {\n        dagger.internal.Binding<? super T>.injectMembers(T);\n    } \n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:118","type":"CtTryImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n    }\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:200","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \")","position":"dagger.internal.ProblemDetector:63","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> != null)\n    break;\n","position":"dagger.ObjectGraph:326","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)","position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"V V = dagger.internal.Memoizer<K, V>.create(K)","position":"dagger.internal.Memoizer:56","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedConstructor":"injectedConstructor","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection> java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection> = new java.util.LinkedHashMap<java.lang.Class<?>, dagger.internal.StaticInjection>()","position":"dagger.ObjectGraph:161","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = java.lang.Class<T>.isInterface() ? java.lang.String : dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<T>)","position":"dagger.ObjectGraph:294","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Class<? super T> java.lang.Class<? super T> = java.lang.Class<T>.getSuperclass()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:215","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.Linker.ErrorHandler() {\n    @java.lang.Override\n    public void handleErrors(java.util.List<java.lang.String> errors) {\n    }\n}","position":"dagger.internal.Linker:427","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"[]\")","position":"dagger.internal.Keys:168","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>","position":"dagger.internal.Modules:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:190","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.getMembersKey(T.getClass())","position":"dagger.ObjectGraph:303","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"No inject registered for \" + java.lang.String) + \". You must explicitly add it to the \\'injects\\' option in one of your modules.\"))","position":"dagger.ObjectGraph:329","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String)","position":"dagger.internal.ProblemDetector:63","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[].int) ; int++) {\n    java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[][int], null);\n}","position":"dagger.ObjectGraph:173","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.UnsupportedOperationException();\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.SetBinding<T>","position":"dagger.internal.SetBinding:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((java.lang.reflect.Constructor<T>[])(java.lang.Class<T>.getDeclaredConstructors()))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:232","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String == null) || dagger.internal.Keys.(dagger.internal.Keys.isAnnotated(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String);\n} ","position":"dagger.internal.Linker:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int + 1))","position":"dagger.internal.ProblemDetector:43","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n    continue;\n} ","position":"dagger.internal.Linker:138","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"dagger.internal.ArraySet:94","type":"mutation","return":"return true","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)","position":"dagger.internal.Keys:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"dagger.internal.ProblemDetector:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (byte.byte))\n    return java.lang.Byte.java.lang.Byte;\n","position":"dagger.internal.Keys:262","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((dagger.internal.Linker != this) && (!(dagger.internal.Binding<?>.isLinked())))\n    throw new java.lang.AssertionError();\n","position":"dagger.internal.Linker:276","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.putBinding(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:153","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<dagger.internal.Binding> java.util.List<dagger.internal.Binding> = new java.util.ArrayList<dagger.internal.Binding>()","position":"dagger.internal.ProblemDetector:33","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.reflect.Constructor<T>.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n    continue;\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:169","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Cannot inject into a Set binding\")","position":"dagger.internal.SetBinding:102","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} else if (java.lang.Object instanceof dagger.internal.ModuleAdapter<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = ((dagger.internal.ModuleAdapter<?>)(java.lang.Object));\n    return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>);\n} else {\n    return false;\n}","position":"dagger.internal.ModuleAdapter:65","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.ClassNotFoundException java.lang.ClassNotFoundException","position":"dagger.internal.Loader:35","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedConstructor":"injectedConstructor"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Constructor<T>.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> : dagger.internal.loaders.ReflectiveAtInjectBinding<T>.dagger.internal.loaders.ReflectiveAtInjectBinding.getConstructorsForType(java.lang.Class<T>)) {\n    if (!(java.lang.reflect.Constructor<T>.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n        continue;\n    } \n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n    } \n    java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:168","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getValue()) instanceof dagger.internal.SetBinding) {\n    dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>.put(java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getKey(), new dagger.internal.SetBinding<java.lang.Object>(((dagger.internal.SetBinding<java.lang.Object>)(java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getValue()))));\n} ","position":"dagger.ObjectGraph:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[].int) ; int++) {\n    java.util.Map<java.lang.String, java.lang.Class<?>>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[][int], dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>);\n}","position":"dagger.ObjectGraph:170","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"binding"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Binding<?>.setLinked()","position":"dagger.internal.Linker:175","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((dagger.internal.Binding<?> = java.util.Queue<dagger.internal.Binding<?>>.poll()) != null) {\n    if (dagger.internal.Binding<?> instanceof dagger.internal.Linker.DeferredBinding) {\n        dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>));\n        java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String;\n        boolean boolean = dagger.internal.Linker.DeferredBinding.boolean;\n        if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n            continue;\n        } \n        try {\n            dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n            dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n            dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n            if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n                throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n            } \n            dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n            java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n            dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n        } catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n            dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n            dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n            dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.RuntimeException java.lang.RuntimeException) {\n            throw java.lang.RuntimeException;\n        } catch (java.lang.Exception java.lang.Exception) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } else {\n        boolean = true;\n        dagger.internal.Binding<?>.attach(this);\n        if (boolean) {\n            dagger.internal.Binding<?>.setLinked();\n        } else {\n            java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n        }\n    }\n}","position":"dagger.internal.Linker:133","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"@Singleton/\" + (dagger.internal.Binding<T>.toString())","position":"dagger.internal.Linker:421","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.setDependedOn(boolean)","position":"dagger.internal.Linker:409","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.SetBinding<T>)","position":"dagger.internal.SetBinding:49","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null","position":"dagger.internal.Linker:272","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedConstructor":"injectedConstructor"},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Constructor<T>.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if ((!(dagger.internal.Binding<?>.library())) && (!(dagger.internal.Binding<?>.dependedOn()))) {\n        java.util.List<dagger.internal.Binding>.add(dagger.internal.Binding<?>);\n    } \n}","position":"dagger.internal.ProblemDetector:34","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedClass":"injectedClass","fields":"fields"},"name":"replace","transplant":{"sourceCode":"if (java.util.List<java.lang.reflect.Field>.isEmpty()) {\n    throw new java.lang.IllegalArgumentException((\"No static injections: \" + (java.lang.Class<?>.getName())));\n} ","position":"dagger.internal.loaders.ReflectiveStaticInjection:68","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    } \n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:62","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.SetBinding<T>.dagger.internal.SetBinding.prepareSetBinding(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.lang.String, dagger.internal.Binding<?>).java.util.Set<dagger.internal.Binding<?>>.add(dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>))","position":"dagger.internal.SetBinding:32","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Exception java.lang.Exception","position":"dagger.internal.Linker:165","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.Linker:228","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false)","position":"dagger.internal.Keys:167","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage()))","name":"math","position":"dagger.internal.Linker:155","type":"mutation","status":-2},{"failures":[],"variableMapping":{"newValue":"replaced"},"name":"replace","transplant":{"sourceCode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"create returned null\");\n} ","position":"dagger.internal.Memoizer:57","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (V != null) {\n    java.util.Map<K, V>.put(K, V);\n} ","position":"dagger.internal.Linker:330","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:293","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    return java.lang.ClassLoader.loadClass(java.lang.String);\n} catch (java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    return java.lang.Void.java.lang.Void;\n}","position":"dagger.internal.Loader:33","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"dagger.ObjectGraph:326","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.annotation.Annotation java.lang.annotation.Annotation = dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object)","position":"dagger.internal.Keys:92","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n} ","position":"dagger.internal.loaders.ReflectiveStaticInjection:63","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)","position":"dagger.internal.ProblemDetector:71","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.ClassLoader, true, true)","position":"dagger.internal.Linker:246","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}","position":"dagger.internal.Keys:165","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)","position":"dagger.internal.Keys:80","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.Linker:32","type":"CtNewClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.Exception)","position":"dagger.internal.Linker:166","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"dagger.internal.UniqueMap:31","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.annotation.Annotation == null) && (java.lang.reflect.Type instanceof java.lang.Class)) && (!(((java.lang.Class<?>)(java.lang.reflect.Type)).isArray()))) {\n    return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName();\n} ","position":"dagger.internal.Keys:73","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"message","i":"index"},"name":"replace","transplant":{"sourceCode":"if (int != 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","position":"dagger.internal.Keys:159","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n    java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n}","position":"dagger.internal.ProblemDetector:62","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.setLinked()","position":"dagger.internal.Linker:175","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.util.Map.Entry<java.lang.String, ? extends dagger.internal.Binding<?>> java.util.Map.Entry<java.lang.String, ? extends dagger.internal.Binding<?>> : java.util.Map<java.lang.String, ? extends dagger.internal.Binding<?>>.entrySet()) {\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.util.Map.Entry<java.lang.String, ? extends dagger.internal.Binding<?>>.getKey(), dagger.internal.Linker.dagger.internal.Linker.scope(java.util.Map.Entry<java.lang.String, ? extends dagger.internal.Binding<?>>.getValue()));\n}","position":"dagger.internal.Linker:86","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n} ","position":"dagger.internal.Keys:126","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} ","position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (dagger.ObjectGraph.DaggerObjectGraph dagger.ObjectGraph.DaggerObjectGraph = this ; dagger.ObjectGraph.DaggerObjectGraph != null ; dagger.ObjectGraph.DaggerObjectGraph = dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph) {\n    java.lang.Class<?> = dagger.ObjectGraph.DaggerObjectGraph.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String);\n    if (java.lang.Class<?> != null)\n        break;\n    \n}","position":"dagger.ObjectGraph:324","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.get()","position":"dagger.ObjectGraph:299","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Set<dagger.internal.Binding<?>>.addAll(java.util.Set<dagger.internal.Binding<?>>)","position":"dagger.internal.SetBinding:98","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.SetBinding<T>.dagger.internal.SetBinding.prepareSetBinding(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.lang.String, dagger.internal.Binding<?>).java.util.Set<dagger.internal.Binding<?>>.add(dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>))","position":"dagger.internal.SetBinding:32","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"deferredBinding"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(false)","position":"dagger.internal.ProblemDetector:79","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setDependedOn(true)","position":"dagger.internal.Linker:286","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","position":"dagger.internal.Keys:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<?> == null) || (!(dagger.internal.Binding<?>.isLinked()))) {\n    dagger.internal.Linker.linkRequested();\n    dagger.internal.Binding<?> = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Class<?>, java.lang.ClassLoader, false, true);\n} ","position":"dagger.ObjectGraph:335","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:107","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:134","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    return new dagger.internal.LazyBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String);\n} ","position":"dagger.internal.Linker:216","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"provideKey":"key","membersKey":"key"},"name":"replace","transplant":{"sourceCode":"return java.lang.String != null ? java.lang.String : java.lang.String","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}","position":"dagger.internal.Keys:198","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.setDependedOn(true)","position":"dagger.internal.Linker:286","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:101","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Deferred bindings must resolve first.\")","position":"dagger.internal.Linker:461","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String))","position":"dagger.internal.Linker:148","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.lock()","position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"dagger.internal.UniqueMap:31","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>))","position":"dagger.internal.Linker:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String)","position":"dagger.internal.Linker:223","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.String , (\"could not be bound with key \" + java.lang.String))","position":"dagger.internal.Linker:230","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(dagger.internal.Keys.dagger.internal.Memoizer<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Boolean>.get(java.lang.annotation.Annotation.annotationType()))) {\n    continue;\n} ","position":"dagger.internal.Keys:123","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"binding"},"name":"add","transplant":{"sourceCode":"if (dagger.internal.Binding<?>.isCycleFree()) {\n    continue;\n} ","position":"dagger.internal.ProblemDetector:54","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setLinked()","position":"dagger.internal.Linker:175","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"supertypeBinding"},"name":"add","transplant":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n} ","position":"dagger.ObjectGraph:201","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<? super T>.injectMembers(T)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:123","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:101","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.annotation.Annotation java.lang.annotation.Annotation : java.lang.annotation.Annotation[]) {\n    if (!(dagger.internal.Keys.dagger.internal.Memoizer<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Boolean>.get(java.lang.annotation.Annotation.annotationType()))) {\n        continue;\n    } \n    if (java.lang.annotation.Annotation != null) {\n        throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n    } \n    java.lang.annotation.Annotation = java.lang.annotation.Annotation;\n}","position":"dagger.internal.Keys:122","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.dependedOn()","position":"dagger.internal.Linker:393","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"linker":"linker","binding":"supertypeBinding"},"name":"replace","transplant":{"sourceCode":"if (dagger.internal.Binding<?> != null) {\n    if ((dagger.internal.Linker != this) && (!(dagger.internal.Binding<?>.isLinked())))\n        throw new java.lang.AssertionError();\n    \n    break;\n} ","position":"dagger.internal.Linker:275","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.Class<?>) != null) && ((dagger.internal.Binding<? super T>) == null)) {\n    dagger.internal.Binding<? super T> = ((dagger.internal.Binding<? super T>)(dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.String, java.lang.ClassLoader, false, true)));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.Keys:94","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:101","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (float.float))\n    return java.lang.Float.java.lang.Float;\n","position":"dagger.internal.Keys:268","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new dagger.internal.loaders.ReflectiveAtInjectBinding<T>(java.lang.String , java.lang.String , boolean , java.lang.Class<T> , java.util.List<java.lang.reflect.Field>.toArray(new java.lang.reflect.Field[java.util.List<java.lang.reflect.Field>.size()]) , java.lang.reflect.Constructor<T> , int , java.lang.Class<? super T> , java.util.List<java.lang.String>.toArray(new java.lang.String[java.util.List<java.lang.String>.size()]))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n    java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n}","position":"dagger.internal.ProblemDetector:62","type":"CtForImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()","position":"dagger.ObjectGraph:284","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"dagger.internal.Binding<?>.setCycleFree(true)","position":"dagger.internal.ProblemDetector:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<? super T>.injectMembers(T)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:123","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getValue()) instanceof dagger.internal.SetBinding) {\n    dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>.put(java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getKey(), new dagger.internal.SetBinding<java.lang.Object>(((dagger.internal.SetBinding<java.lang.Object>)(java.util.Map.Entry<java.lang.String, dagger.internal.Binding<?>>.getValue()))));\n} ","position":"dagger.ObjectGraph:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"linker\")","position":"dagger.ObjectGraph:147","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"dagger.internal.Keys:124","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true)","position":"dagger.internal.Keys:162","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:151","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<? super T> = null","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:218","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library())","position":"dagger.internal.SetBinding:48","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object)","position":"dagger.internal.SetBinding:47","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"plugin\")","position":"dagger.ObjectGraph:148","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No static injections: \" + (java.lang.Class<?>.getName())))","position":"dagger.internal.loaders.ReflectiveStaticInjection:69","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    java.lang.reflect.Field[][int].set(T, dagger.internal.Binding<?>[][int].get());\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:119","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException((\"No no-args constructor on \" + (java.lang.Object.getClass().getName())))","position":"dagger.internal.ModuleAdapter:60","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = dagger.internal.Linker.DeferredBinding.boolean","position":"dagger.internal.Linker:137","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (char.char))\n    return java.lang.Character.java.lang.Character;\n","position":"dagger.internal.Keys:266","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"dagger.internal.Linker:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>() {\n    @java.lang.Override\n    public dagger.internal.Binding<?> put(java.lang.String key, dagger.internal.Binding<?> value) {\n        if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n            throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n        } \n        return dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>);\n    }\n}","position":"dagger.ObjectGraph:199","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Linker.linkRequested()","position":"dagger.ObjectGraph:283","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()","position":"dagger.internal.Keys:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.String) != null ? java.lang.String : java.lang.String","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.getDependencies(java.util.Set<dagger.internal.Binding<?>>, java.util.Set<dagger.internal.Binding<?>>)","position":"dagger.internal.Linker:373","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = ((dagger.internal.ModuleAdapter<?>)(java.lang.Object))","position":"dagger.internal.ModuleAdapter:68","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> != null) {\n    return dagger.internal.Binding<?>;\n} ","position":"dagger.internal.Linker:227","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new dagger.internal.BuiltInBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String)","position":"dagger.internal.Linker:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> == null) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = new dagger.internal.Linker.DeferredBinding(java.lang.String , java.lang.ClassLoader , java.lang.Object , boolean);\n    dagger.internal.Binding<?>.setLibrary(boolean);\n    dagger.internal.Binding<?>.setDependedOn(true);\n    java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    boolean = false;\n    return null;\n} ","position":"dagger.internal.Linker:281","type":"CtIfImpl"},"status":-2},{"failureDictionary":{}}]
