[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.Linker.DeferredBinding) {\n    dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>));\n    java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String;\n    boolean boolean = dagger.internal.Linker.DeferredBinding.boolean;\n    if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n        continue;\n    } \n    try {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n        dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n        dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n        if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n            throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n        } \n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n        dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n    } catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n        dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n        dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.RuntimeException java.lang.RuntimeException) {\n        throw java.lang.RuntimeException;\n    } catch (java.lang.Exception java.lang.Exception) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} else {\n    boolean = true;\n    dagger.internal.Binding<?>.attach(this);\n    if (boolean) {\n        dagger.internal.Binding<?>.setLinked();\n    } else {\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    }\n}","position":"dagger.internal.Linker:134","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")","position":"dagger.internal.Linker:84","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"linker\")","position":"dagger.ObjectGraph:147","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (V != null) {\n    java.util.Map<K, V>.put(K, V);\n} ","position":"dagger.internal.Linker:330","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()","position":"dagger.internal.SetBinding:86","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"dagger.internal.Linker.linkRequested()","position":"dagger.internal.Linker:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.putIfAbsent(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>)","position":"dagger.internal.Linker:307","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"dagger.internal.Loader:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)","position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, \"members/\", dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:185","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.Linker:32","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library())","position":"dagger.internal.Linker:144","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.util.HashMap<java.lang.String, dagger.internal.Binding<?>>()","position":"dagger.internal.Linker:51","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"linker\")","position":"dagger.ObjectGraph:147","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl"},"status":0},{"failures":[],"name":"returnValue","position":"dagger.internal.SingletonBinding:413","type":"mutation","return":"return true","status":0},{"failures":[],"name":"returnValue","position":"dagger.internal.ArraySet:94","type":"mutation","return":"return true","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object> java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object> = new java.util.LinkedHashMap<dagger.internal.ModuleAdapter<?>, java.lang.Object>(java.lang.Object[].int)","position":"dagger.internal.Modules:36","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (V != null) {\n    java.util.Map<K, V>.put(K, V);\n} ","position":"dagger.internal.Linker:330","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No static injections: \" + (java.lang.Class<?>.getName())))","position":"dagger.internal.loaders.ReflectiveStaticInjection:69","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(T, dagger.internal.Binding<?>[][int].get());\n    }\n    if ((dagger.internal.Binding<? super T>) != null) {\n        dagger.internal.Binding<? super T>.injectMembers(T);\n    } \n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:118","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"map":"map","key":"key"},"name":"replace","transplant":{"sourceCode":"V V = java.util.Map<K, V>.get(K)","position":"dagger.internal.Memoizer:47","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"V V = java.util.Map<K, V>.put(K, V)","position":"dagger.internal.Linker:329","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)","position":"dagger.internal.Keys:197","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.Linker:298","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setDependedOn(true)","position":"dagger.internal.Linker:297","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.ProblemDetector:102","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.unlock()","position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"errorHandler\")","position":"dagger.internal.Linker:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")","position":"dagger.internal.Linker:84","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"dagger.internal.Keys:271","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (byte.byte))\n    return java.lang.Byte.java.lang.Byte;\n","position":"dagger.internal.Keys:262","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Float.java.lang.Float","position":"dagger.internal.Keys:268","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException","position":"dagger.internal.Linker:154","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n    continue;\n} ","position":"dagger.internal.Linker:138","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<T>.java.lang.String) != null) {\n    dagger.internal.Linker.putIfAbsent(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>);\n} ","position":"dagger.internal.Linker:309","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1))","position":"dagger.internal.ProblemDetector:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.Binding<java.lang.Object>(null, null, false, null) {\n    @java.lang.Override\n    public java.lang.Object get() {\n        throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\");\n    }\n\n    @java.lang.Override\n    public void injectMembers(java.lang.Object t) {\n        throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\");\n    }\n}","position":"dagger.internal.Binding:26","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1))","position":"dagger.internal.ProblemDetector:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} ","position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl"},"status":0},{"failures":[],"binaryOperator":"(\"Binding for \" + java.lang.String)","name":"math","position":"dagger.internal.InvalidBindingException:164","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ndagger.internal.Binding<T> dagger.internal.Binding<T> = dagger.ObjectGraph.DaggerObjectGraph.((dagger.internal.Binding<T>)(getInjectableTypeBinding(java.lang.ClassLoader, java.lang.String, java.lang.String)))","position":"dagger.ObjectGraph:306","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    Set library=true in your module to disable this check.\")","position":"dagger.internal.ProblemDetector:46","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)","position":"dagger.internal.Keys:80","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"dagger.internal.loaders.ReflectiveStaticInjection:55","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.reflect.Constructor<T>[])(java.lang.Class<T>.getDeclaredConstructors()))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:232","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"could not be bound with key \" + java.lang.String)","name":"math","position":"dagger.internal.Linker:230","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw java.lang.RuntimeException","position":"dagger.internal.Linker:164","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.Keys:76","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.StaticInjection dagger.internal.StaticInjection = dagger.internal.Loader.instantiate(java.lang.Class<?>.getName().concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.Class<?>.getClassLoader())","position":"dagger.internal.FailoverLoader:78","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.reflect.Field, java.lang.ClassLoader)","position":"dagger.internal.loaders.ReflectiveStaticInjection:46","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"k":"dagger.internal.Binding.CYCLE_FREE"},"name":"replace","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:130","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.util.List<dagger.internal.Binding>.size()) ; int++) {\n    java.lang.StringBuilder.append(\"\\n    \").append((int + 1)).append(\". \").append(java.util.List<dagger.internal.Binding>.get(int).java.lang.Object);\n}","position":"dagger.internal.ProblemDetector:42","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"replace","transplant":{"sourceCode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()","position":"dagger.internal.Keys:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))","position":"dagger.internal.Keys:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"[]\")","position":"dagger.internal.Keys:168","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>","position":"dagger.ObjectGraph:177","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\">\")","position":"dagger.internal.Keys:164","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.String, java.lang.Class<?>>.getValue()","position":"dagger.ObjectGraph:247","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"create returned null\");\n} ","position":"dagger.internal.Memoizer:57","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:98","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.RuntimeException java.lang.RuntimeException","position":"dagger.internal.Linker:163","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"dagger.internal.Loader:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Byte.java.lang.Byte","position":"dagger.internal.Keys:262","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)))","position":"dagger.internal.Linker:161","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.Linker.ErrorHandler.handleErrors(java.util.List<java.lang.String>);\n} finally {\n    java.util.List<java.lang.String>.clear();\n}","position":"dagger.internal.Linker:182","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Class<?> != null)\n    break;\n","position":"dagger.ObjectGraph:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else if (java.lang.Class<?>.isPrimitive()) {\n    if (boolean) {\n        throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n    } \n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n} else {\n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n}","position":"dagger.internal.Keys:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"result","contribution":"contribution"},"name":"replace","transplant":{"sourceCode":"java.util.Set<T>.add(((T)(java.lang.Object)))","position":"dagger.internal.SetBinding:90","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<T>.addAll(((java.util.Set<T>)(java.lang.Object)))","position":"dagger.internal.SetBinding:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"dagger.internal.Binding<?>.setCycleFree(true)","position":"dagger.internal.ProblemDetector:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.Linker.DeferredBinding) {\n    dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>));\n    java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String;\n    boolean boolean = dagger.internal.Linker.DeferredBinding.boolean;\n    if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n        continue;\n    } \n    try {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n        dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n        dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n        if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n            throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n        } \n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n        dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n    } catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n        dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n        dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.RuntimeException java.lang.RuntimeException) {\n        throw java.lang.RuntimeException;\n    } catch (java.lang.Exception java.lang.Exception) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} else {\n    boolean = true;\n    dagger.internal.Binding<?>.attach(this);\n    if (boolean) {\n        dagger.internal.Binding<?>.setLinked();\n    } else {\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    }\n}","position":"dagger.internal.Linker:134","type":"CtIfImpl"},"status":0},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"dagger.internal.loaders.ReflectiveStaticInjection:43","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new dagger.internal.LazyBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String)","position":"dagger.internal.Linker:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.String , (\"could not be bound with key \" + java.lang.String))","position":"dagger.internal.Linker:230","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return \"SetBinding\" + (java.util.Set<dagger.internal.Binding<?>>)","position":"dagger.internal.SetBinding:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.Linker.DeferredBinding) {\n    dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>));\n    java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String;\n    boolean boolean = dagger.internal.Linker.DeferredBinding.boolean;\n    if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n        continue;\n    } \n    try {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n        dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n        dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n        if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n            throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n        } \n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n        dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n    } catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n        dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n        dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n    } catch (java.lang.RuntimeException java.lang.RuntimeException) {\n        throw java.lang.RuntimeException;\n    } catch (java.lang.Exception java.lang.Exception) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} else {\n    boolean = true;\n    dagger.internal.Binding<?>.attach(this);\n    if (boolean) {\n        dagger.internal.Binding<?>.setLinked();\n    } else {\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    }\n}","position":"dagger.internal.Linker:134","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"errorHandler\")","position":"dagger.internal.Linker:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.Throwable instanceof java.lang.RuntimeException ? ((java.lang.RuntimeException)(java.lang.Throwable)) : new java.lang.RuntimeException(java.lang.Throwable)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:105","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.LazyBinding:26","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = dagger.internal.Binding<T>.get()","position":"dagger.internal.Linker:365","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n} catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:179","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (boolean.boolean))\n    return java.lang.Boolean.java.lang.Boolean;\n","position":"dagger.internal.Keys:267","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"moduleClass":"moduleClass"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<?> != null)\n    break;\n","position":"dagger.ObjectGraph:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    throw new java.lang.IllegalArgumentException(((\"No inject registered for \" + java.lang.String) + \". You must explicitly add it to the \\'injects\\' option in one of your modules.\"));\n} ","position":"dagger.ObjectGraph:328","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"supertype":"supertype"},"name":"add","transplant":{"sourceCode":"java.lang.Class<? super T> = null","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:218","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.Class<?>) != null) && ((dagger.internal.Binding<? super T>) == null)) {\n    dagger.internal.Binding<? super T> = ((dagger.internal.Binding<? super T>)(dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.String, java.lang.ClassLoader, false, true)));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:86","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (java.lang.reflect.Field[].int)","name":"conditionalBoundary","position":"dagger.internal.loaders.ReflectiveStaticInjection:52","type":"mutation","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int + 1)).append(\". \")","position":"dagger.internal.ProblemDetector:43","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Linker.installBindings(dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>)","position":"dagger.ObjectGraph:189","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:83","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\")","position":"dagger.ObjectGraph:202","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:209","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()","position":"dagger.internal.Keys:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.annotation.Annotation == null) && (java.lang.reflect.Type instanceof java.lang.Class)) && (!(((java.lang.Class<?>)(java.lang.reflect.Type)).isArray()))) {\n    return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName();\n} ","position":"dagger.internal.Keys:73","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>)","position":"dagger.internal.Modules:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (java.util.List<dagger.internal.Binding<?>>.size())","name":"conditionalBoundary","position":"dagger.internal.ProblemDetector:62","type":"mutation","status":0},{"failures":[],"variableMapping":{"result":"result"},"name":"replace","transplant":{"sourceCode":"return dagger.internal.StaticInjection","position":"dagger.internal.FailoverLoader:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.StaticInjection != null) {\n    return dagger.internal.StaticInjection;\n} ","position":"dagger.internal.FailoverLoader:80","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"returnValue","position":"dagger.internal.ModuleAdapter:71","type":"mutation","return":"return false","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:149","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> = new dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>()","position":"dagger.ObjectGraph:217","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = T.getClass().getClassLoader()","position":"dagger.ObjectGraph:304","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null","position":"dagger.internal.Keys:251","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"dagger.internal.Keys:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())","position":"dagger.internal.ThrowingErrorHandler:34","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.internal.Memoizer<java.lang.ClassLoader, dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>>.get(java.lang.ClassLoader).get(java.lang.String)","position":"dagger.internal.Loader:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = new dagger.internal.Linker.DeferredBinding(java.lang.String , java.lang.ClassLoader , java.lang.Object , boolean)","position":"dagger.internal.Linker:283","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.String java.lang.String","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:190","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String","position":"dagger.internal.Linker:136","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n} ","position":"dagger.internal.Keys:126","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"value":"newValue"},"name":"add","transplant":{"sourceCode":"if (V != null) {\n    return V;\n} ","position":"dagger.internal.Memoizer:48","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}","position":"dagger.internal.Memoizer:63","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int))","position":"dagger.internal.ProblemDetector:63","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"errorHandler\")","position":"dagger.internal.Linker:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to initialize \" + java.lang.String) , java.lang.InstantiationException)","position":"dagger.internal.Loader:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"binding"},"name":"add","transplant":{"sourceCode":"dagger.internal.Binding<?>.setCycleFree(true)","position":"dagger.internal.ProblemDetector:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} ","position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.attach(dagger.internal.Linker)","position":"dagger.internal.SetBinding:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean)","position":"dagger.internal.Linker:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"bits":"start","dagger.internal.Binding.LINKED":"start"},"name":"add","transplant":{"sourceCode":"int |= int","position":"dagger.internal.Binding:106","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (java.lang.String.lastIndexOf('/')) + 1","position":"dagger.internal.Keys:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Short.java.lang.Short","position":"dagger.internal.Keys:263","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n} ","position":"dagger.internal.Keys:126","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)))","position":"dagger.internal.Linker:161","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.SetBinding<T>.dagger.internal.SetBinding.prepareSetBinding(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.lang.String, dagger.internal.Binding<?>)","position":"dagger.internal.SetBinding:32","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException","position":"dagger.internal.Linker:154","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"dagger.ObjectGraph:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (dagger.internal.Binding<?>.isCycleFree()) {\n    continue;\n} ","position":"dagger.internal.ProblemDetector:54","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    dagger.internal.Binding<?>.setLinked();\n} else {\n    java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n}","position":"dagger.internal.Linker:174","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.ClassLoader.java.lang.ClassLoader.getSystemClassLoader()","position":"dagger.internal.Loader:69","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}","position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    return java.util.Map<java.lang.String, dagger.internal.Binding<?>>;\n} ","position":"dagger.internal.Linker:102","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field[][int].set(T, dagger.internal.Binding<?>[][int].get())","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:120","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((dagger.internal.SetBinding<T>)(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)))","position":"dagger.internal.SetBinding:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} ","position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)","position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true)","position":"dagger.internal.Keys:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.lock()","position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"dagger.ObjectGraph:326","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = dagger.internal.Linker.DeferredBinding.boolean","position":"dagger.internal.Linker:137","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.BuiltInBinding:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"dagger.internal.Keys:201","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[][int], null)","position":"dagger.ObjectGraph:174","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = null","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:207","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:126","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> : java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.entrySet()) {\n    java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject();\n}","position":"dagger.ObjectGraph:287","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.BuiltInBinding:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.List<java.lang.reflect.Field>.isEmpty()) {\n    throw new java.lang.IllegalArgumentException((\"No static injections: \" + (java.lang.Class<?>.getName())));\n} ","position":"dagger.internal.loaders.ReflectiveStaticInjection:68","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.put(java.lang.Class<?>, dagger.internal.ModuleAdapter<?>)","position":"dagger.internal.Modules:77","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((int) & (dagger.internal.Binding.int)) != 0","name":"removeConditional","position":"dagger.internal.Binding:118","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"dagger.internal.Binding<?>.setCycleFree(true)","position":"dagger.internal.ProblemDetector:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((dagger.internal.Binding<?> = java.util.Queue<dagger.internal.Binding<?>>.poll()) != null) {\n    if (dagger.internal.Binding<?> instanceof dagger.internal.Linker.DeferredBinding) {\n        dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>));\n        java.lang.String java.lang.String = dagger.internal.Linker.DeferredBinding.java.lang.String;\n        boolean boolean = dagger.internal.Linker.DeferredBinding.boolean;\n        if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n            continue;\n        } \n        try {\n            dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n            dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n            dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n            if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n                throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n            } \n            dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n            java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n            dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n        } catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n            dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n            dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n            dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n            java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n        } catch (java.lang.RuntimeException java.lang.RuntimeException) {\n            throw java.lang.RuntimeException;\n        } catch (java.lang.Exception java.lang.Exception) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } else {\n        boolean = true;\n        dagger.internal.Binding<?>.attach(this);\n        if (boolean) {\n            dagger.internal.Binding<?>.setLinked();\n        } else {\n            java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n        }\n    }\n}","position":"dagger.internal.Linker:133","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")","position":"dagger.internal.Linker:84","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")","position":"dagger.internal.Binding:28","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new dagger.internal.Linker.SingletonBinding<T>(dagger.internal.Binding<T>)","position":"dagger.internal.Linker:321","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"dagger.internal.Linker:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)","position":"dagger.internal.Keys:197","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>)","position":"dagger.internal.Modules:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:126","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"dagger.internal.Binding<T>.setLinked()","position":"dagger.internal.Linker:417","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.injectMembers(T)","position":"dagger.ObjectGraph:308","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Class<?> != null)\n    break;\n","position":"dagger.ObjectGraph:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.ModuleAdapter<?> == null) {\n    throw new java.lang.IllegalStateException((((\"Module adapter for \" + java.lang.Class<?>) + \" could not be loaded. \") + \"Please ensure that code generation was run for this module.\"));\n} ","position":"dagger.internal.FailoverLoader:44","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Failed to initialize \" + java.lang.String)","name":"math","position":"dagger.internal.Loader:89","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"errorHandler\")","position":"dagger.internal.Linker:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"dagger.internal.Loader:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{}}]
