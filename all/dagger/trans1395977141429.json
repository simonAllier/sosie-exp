[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.setLibrary(true)","position":"dagger.internal.Linker:405","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>)","position":"dagger.internal.Modules:57","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.Class<?> java.lang.Class<?> : dagger.internal.ModuleAdapter<?>.java.lang.Class<?>[]) {\n    if (!(java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.containsKey(java.lang.Class<?>))) {\n        dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Class<?>);\n        java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.put(java.lang.Class<?>, dagger.internal.ModuleAdapter<?>);\n        dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>);\n    } \n}","position":"dagger.internal.Modules:74","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()","position":"dagger.internal.Keys:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, null)","position":"dagger.internal.Keys:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.ArrayList<T>.iterator()","position":"dagger.internal.ProblemDetector:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n        dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n        java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n    } else {\n        dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n        java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n    }\n}","position":"dagger.internal.Modules:38","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:181","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule())","position":"dagger.internal.Modules:41","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.Keys:94","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException","position":"dagger.internal.Linker:157","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String)));\n}","position":"dagger.internal.SetBinding:40","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Constructor<T>.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n    continue;\n} ","position":"dagger.internal.Linker:138","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"contributor"},"name":"replace","transplant":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n} ","position":"dagger.ObjectGraph:201","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.Set<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.Set<T>.add(((T)(java.lang.Object)));\n}","position":"dagger.internal.SetBinding:87","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"try {\n    V V = java.util.Map<K, V>.get(K);\n    if (V != null) {\n        return V;\n    } \n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}","position":"dagger.internal.Memoizer:46","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}","position":"dagger.internal.Memoizer:63","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.clear()","position":"dagger.internal.Linker:185","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> : java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.entrySet()) {\n    java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject();\n}","position":"dagger.ObjectGraph:287","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"moduleClass":"c"},"name":"add","transplant":{"sourceCode":"if (java.lang.Class<?> != null)\n    break;\n","position":"dagger.ObjectGraph:326","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else if (java.lang.Class<?>.isPrimitive()) {\n    if (boolean) {\n        throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n    } \n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n} else {\n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n}","position":"dagger.internal.Keys:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} else if (java.lang.Object instanceof dagger.internal.ModuleAdapter<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = ((dagger.internal.ModuleAdapter<?>)(java.lang.Object));\n    return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>);\n} else {\n    return false;\n}","position":"dagger.internal.ModuleAdapter:65","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.getAtInjectBinding(java.lang.String, java.lang.String, java.lang.ClassLoader, boolean)","position":"dagger.internal.Linker:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean)","position":"dagger.internal.Linker:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?> = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.ClassLoader)","position":"dagger.internal.BuiltInBinding:35","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.unlock()","position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    java.lang.StringBuilder.append(java.lang.annotation.Annotation).append(\"/\");\n} ","position":"dagger.internal.Keys:77","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"deferredKey":"provideKey"},"name":"add","transplant":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (this.java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((((java.lang.Object.getClass().getSimpleName()) + \"[provideKey=\\\"\") + (java.lang.String)) + \"\\\", memberskey=\\\"\") + (java.lang.String)) + \"\\\"]\"","position":"dagger.internal.Binding:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Double.class":"java.lang.Double.class"},"name":"add","transplant":{"sourceCode":"return this.java.lang.Double.java.lang.Double","position":"dagger.internal.Keys:269","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (double.double))\n    return java.lang.Double.java.lang.Double;\n","position":"dagger.internal.Keys:269","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"dagger.internal.Keys:247","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"dependedOn":"visiting","binding":"binding"},"name":"replace","transplant":{"sourceCode":"this.dagger.internal.Binding<T>.setDependedOn(boolean)","position":"dagger.internal.Linker:409","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.setVisiting(boolean)","position":"dagger.internal.Linker:401","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"k":"parameterCount"},"name":"add","transplant":{"sourceCode":"int++","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(int + 1)","name":"math","position":"dagger.internal.ProblemDetector:43","type":"mutation","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[] java.lang.Object[] = new java.lang.Object[dagger.internal.Binding<?>[].int]","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = dagger.internal.Linker.DeferredBinding.boolean","position":"dagger.internal.Linker:137","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())","position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")","position":"dagger.internal.Linker:84","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.LazyBinding:45","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"dagger.internal.loaders.GeneratedAdapters.INJECT_ADAPTER_SUFFIX":"className","classLoader":"classLoader","this":"plugin","className":"className"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = this.dagger.internal.Loader.instantiate(java.lang.String.concat(java.lang.String), java.lang.ClassLoader)","position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.getAtInjectBinding(java.lang.String, java.lang.String, java.lang.ClassLoader, boolean)","position":"dagger.internal.Linker:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!java.lang.Thread.(java.lang.Thread.holdsLock(this)))\n    throw new java.lang.AssertionError();\n","position":"dagger.internal.Linker:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.containsKey(java.lang.Class<?>))) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Class<?>);\n    java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.put(java.lang.Class<?>, dagger.internal.ModuleAdapter<?>);\n    dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>);\n} ","position":"dagger.internal.Modules:75","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T> = ((dagger.internal.Binding<T>)(dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.ClassLoader)))","position":"dagger.internal.LazyBinding:41","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Field[][int].set(T, dagger.internal.Binding<?>[][int].get())","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:120","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n} ","position":"dagger.internal.Keys:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (java.util.List<dagger.internal.Binding<?>>.size())","name":"conditionalBoundary","position":"dagger.internal.ProblemDetector:62","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof dagger.internal.ModuleAdapter<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = ((dagger.internal.ModuleAdapter<?>)(java.lang.Object));\n    return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>);\n} else {\n    return false;\n}","position":"dagger.internal.ModuleAdapter:67","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.String.startsWith(\"java.\")) || (java.lang.String.startsWith(\"javax.\"))) || (java.lang.String.startsWith(\"android.\"))","position":"dagger.internal.Keys:258","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)","position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.FailoverLoader:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n} ","position":"dagger.internal.loaders.ReflectiveStaticInjection:63","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.annotation.Annotation)","position":"dagger.internal.Keys:96","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.StaticInjection == null) {\n    dagger.internal.StaticInjection = dagger.internal.Loader.getStaticInjection(java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getKey());\n    java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.setValue(dagger.internal.StaticInjection);\n} ","position":"dagger.ObjectGraph:237","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"plugin\")","position":"dagger.internal.Linker:66","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String))","position":"dagger.internal.Linker:148","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \")","position":"dagger.internal.ProblemDetector:63","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"dagger.internal.Linker:277","type":"CtBreakImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.Object.getClass().getClassLoader(), true, true)","position":"dagger.internal.Linker:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (float.float))\n    return java.lang.Float.java.lang.Float;\n","position":"dagger.internal.Keys:268","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return V","position":"dagger.internal.Memoizer:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.Memoizer<java.lang.ClassLoader, dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>>() {\n    @java.lang.Override\n    protected dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>> create(final java.lang.ClassLoader classLoader) {\n        return new dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>() {\n            @java.lang.Override\n            protected java.lang.Class<?> create(java.lang.String className) {\n                try {\n                    return java.lang.ClassLoader.loadClass(java.lang.String);\n                } catch (java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                    return java.lang.Void.java.lang.Void;\n                }\n            }\n        };\n    }\n}","position":"dagger.internal.Loader:29","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"dagger.internal.Keys:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<java.lang.String, dagger.internal.Binding<?>>","position":"dagger.internal.Linker:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"injectedConstructor":"injectedConstructor","type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(dagger.internal.Keys.dagger.internal.Memoizer<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Boolean>.get(java.lang.annotation.Annotation.annotationType()))) {\n    continue;\n} ","position":"dagger.internal.Keys:123","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Class<?> == null) {\n    throw new java.lang.IllegalArgumentException(((\"No inject registered for \" + java.lang.String) + \". You must explicitly add it to the \\'injects\\' option in one of your modules.\"));\n} ","position":"dagger.ObjectGraph:328","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.annotation.Annotation).append(\"/\")","position":"dagger.internal.Keys:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.concurrent.locks.Lock.lock()","position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.unlock()","position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Type == (float.float))\n    return java.lang.Float.java.lang.Float;\n","position":"dagger.internal.Keys:268","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (int.int))\n    return java.lang.Integer.java.lang.Integer;\n","position":"dagger.internal.Keys:264","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.UnsupportedOperationException();\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n} catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:179","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:94","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\")","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:173","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"java.lang.Void.class":"java.lang.Void.class"},"name":"add","transplant":{"sourceCode":"return this.java.lang.Void.java.lang.Void","position":"dagger.internal.Keys:270","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (void.void))\n    return java.lang.Void.java.lang.Void;\n","position":"dagger.internal.Keys:270","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"dagger.internal.Linker:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int) & (dagger.internal.Binding.int)) != 0","position":"dagger.internal.Binding:114","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:94","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:126","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw java.lang.RuntimeException","position":"dagger.internal.Linker:164","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:159","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.getClassName(java.lang.String)","position":"dagger.internal.Linker:220","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new dagger.internal.loaders.ReflectiveStaticInjection(java.lang.Class<?>.getClassLoader() , java.util.List<java.lang.reflect.Field>.toArray(new java.lang.reflect.Field[java.util.List<java.lang.reflect.Field>.size()]))","position":"dagger.internal.loaders.ReflectiveStaticInjection:71","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n    throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n} ","position":"dagger.internal.Linker:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object> java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object> : java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.entrySet()) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    dagger.internal.ModuleAdapter<java.lang.Object> dagger.internal.ModuleAdapter<java.lang.Object> = ((dagger.internal.ModuleAdapter<java.lang.Object>)(java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getKey()));\n    for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[].int) ; int++) {\n        java.util.Map<java.lang.String, java.lang.Class<?>>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[][int], dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>);\n    }\n    for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[].int) ; int++) {\n        java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[][int], null);\n    }\n    try {\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>;\n        dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue());\n    } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException(((dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>.getSimpleName()) + \" is an overriding module and cannot contribute set bindings.\"));\n    }\n}","position":"dagger.ObjectGraph:167","type":"CtForEachImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (java.lang.reflect.Field[].int)","name":"conditionalBoundary","position":"dagger.internal.loaders.ReflectiveStaticInjection:52","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.Linker:228","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((dagger.internal.Binding<T>.java.lang.String) != null) {\n    dagger.internal.Linker.putIfAbsent(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>);\n} ","position":"dagger.internal.Linker:309","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean);\n    dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn());\n    if ((!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String))) && (!(java.lang.String.equals(dagger.internal.Binding<?>.java.lang.String)))) {\n        throw new java.lang.IllegalStateException((\"Unable to create binding for \" + java.lang.String));\n    } \n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>);\n    java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    dagger.internal.Linker.putBinding(dagger.internal.Binding<?>);\n} catch (dagger.internal.Binding.InvalidBindingException dagger.internal.Binding.InvalidBindingException) {\n    dagger.internal.Linker.addError((((((dagger.internal.Binding.InvalidBindingException.java.lang.String) + \" \") + (dagger.internal.Binding.InvalidBindingException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n} catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n    dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n} catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)));\n    java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding.dagger.internal.Binding<java.lang.Object>);\n} catch (java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (java.lang.Exception java.lang.Exception) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}","position":"dagger.internal.Linker:141","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"linker\")","position":"dagger.ObjectGraph:147","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError()","position":"dagger.internal.Linker:276","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.Linker:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(dagger.internal.Binding<?>.library())) && (!(dagger.internal.Binding<?>.dependedOn()))) {\n    java.util.List<dagger.internal.Binding>.add(dagger.internal.Binding<?>);\n} ","position":"dagger.internal.ProblemDetector:35","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"injectableTypes\")","position":"dagger.ObjectGraph:150","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:210","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    dagger.internal.Linker.ErrorHandler.handleErrors(java.util.List<java.lang.String>);\n} finally {\n    java.util.List<java.lang.String>.clear();\n}","position":"dagger.internal.Linker:182","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:94","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")","position":"dagger.internal.Linker:84","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"dagger.internal.Linker:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.SetBinding<T>.dagger.internal.SetBinding.prepareSetBinding(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.lang.String, dagger.internal.Binding<?>)","position":"dagger.internal.SetBinding:32","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:220","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.StaticInjection != null) {\n    return dagger.internal.StaticInjection;\n} ","position":"dagger.internal.FailoverLoader:80","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"field":"field"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:158","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n    continue;\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:152","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"result":"result","i":"length"},"name":"replace","transplant":{"sourceCode":"if (int != 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","position":"dagger.internal.Keys:159","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}","position":"dagger.internal.Keys:158","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"dagger.internal.FailoverLoader:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} ","position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null","position":"dagger.internal.Linker:272","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)","position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.setLibrary(true)","position":"dagger.internal.Linker:405","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    Set library=true in your module to disable this check.\")","position":"dagger.internal.ProblemDetector:46","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.concurrent.locks.Lock.unlock()","position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append((int + 1)).append(\". \")","position":"dagger.internal.ProblemDetector:43","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ndagger.internal.Binding<T> dagger.internal.Binding<T> = dagger.ObjectGraph.DaggerObjectGraph.((dagger.internal.Binding<T>)(getInjectableTypeBinding(java.lang.ClassLoader, java.lang.String, java.lang.String)))","position":"dagger.ObjectGraph:306","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<java.lang.String, dagger.internal.Binding<?>>","position":"dagger.internal.Linker:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.linkRequested()","position":"dagger.internal.Linker:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Class<?>.getName())","position":"dagger.internal.Keys:151","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.annotation.Annotation","position":"dagger.internal.Keys:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(false)","position":"dagger.internal.ProblemDetector:79","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((dagger.internal.Binding<? super T>) != null) {\n    dagger.internal.Binding<? super T>.injectMembers(T);\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:122","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"T T","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nT T = ((T)(java.lang.Class<?>.newInstance()))","position":"dagger.internal.Loader:84","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<?>.setCycleFree(true)","position":"dagger.internal.ProblemDetector:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>))","position":"dagger.internal.SetBinding:45","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.Class<?>> java.util.Map<java.lang.String, java.lang.Class<?>> = new java.util.LinkedHashMap<java.lang.String, java.lang.Class<?>>()","position":"dagger.ObjectGraph:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n} ","position":"dagger.ObjectGraph:201","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject()","position":"dagger.ObjectGraph:288","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)","position":"dagger.internal.ModuleAdapter:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.SetBinding<T>.dagger.internal.SetBinding.prepareSetBinding(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.lang.String, dagger.internal.Binding<?>).java.util.Set<dagger.internal.Binding<?>>.add(dagger.internal.Linker.dagger.internal.Linker.scope(dagger.internal.Binding<?>))","position":"dagger.internal.SetBinding:32","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Byte.java.lang.Byte","position":"dagger.internal.Keys:262","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"dagger.internal.Binding<T>.setLinked()","position":"dagger.internal.Linker:417","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(this) {\n    if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n        java.lang.Object = dagger.internal.Binding<T>.get();\n    } \n}","position":"dagger.internal.Linker:363","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(null, new dagger.internal.FailoverLoader(), java.lang.Object[])","position":"dagger.ObjectGraph:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setLinked()","position":"dagger.internal.Linker:175","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(java.lang.String.lastIndexOf('/')) + 1","name":"math","position":"dagger.internal.Keys:210","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Set<dagger.internal.Binding<?>>) {\n    dagger.internal.Binding<?>.attach(dagger.internal.Linker);\n}","position":"dagger.internal.SetBinding:77","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:156","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"linker"},"name":"add","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    java.lang.reflect.Field java.lang.reflect.Field = java.lang.reflect.Field[][int];\n    java.lang.String java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field);\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.reflect.Field, java.lang.ClassLoader);\n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:43","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.annotation.Annotation)","position":"dagger.internal.Keys:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<dagger.internal.Binding>.add(dagger.internal.Binding<?>)","position":"dagger.internal.ProblemDetector:36","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null","position":"dagger.internal.Linker:272","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.createBinding(java.lang.String, dagger.internal.Binding<?>.java.lang.Object, dagger.internal.Linker.DeferredBinding.java.lang.ClassLoader, boolean)","position":"dagger.internal.Linker:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Type == (float.float))\n    return java.lang.Float.java.lang.Float;\n","position":"dagger.internal.Keys:268","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Collections.java.util.Collections.addAll(java.util.Set<dagger.internal.Binding<?>>, dagger.internal.Binding<?>[])","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:134","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"dagger.internal.Linker:413","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"dagger.internal.ModuleAdapter:71","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"result":"result","i":"length"},"name":"add","transplant":{"sourceCode":"if (int != 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","position":"dagger.internal.Keys:159","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}","position":"dagger.internal.Keys:153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Class<?> == null) {\n    throw new java.lang.IllegalArgumentException(((\"No inject registered for \" + java.lang.String) + \". You must explicitly add it to the \\'injects\\' option in one of your modules.\"));\n} ","position":"dagger.ObjectGraph:328","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = dagger.ObjectGraph.DaggerObjectGraph.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String)","position":"dagger.ObjectGraph:325","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.Linker.fullyLinkedBindings()","position":"dagger.ObjectGraph:261","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Class<?>, java.lang.ClassLoader, false, true)","position":"dagger.ObjectGraph:334","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = 0","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:134","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.LazyBinding:26","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.Class<?> java.lang.Class<?> : dagger.internal.ModuleAdapter<?>.java.lang.Class<?>[]) {\n    if (!(java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.containsKey(java.lang.Class<?>))) {\n        dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Class<?>);\n        java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.put(java.lang.Class<?>, dagger.internal.ModuleAdapter<?>);\n        dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>);\n    } \n}","position":"dagger.internal.Modules:74","type":"CtForEachImpl"},"status":0},{"failureDictionary":{}}]
