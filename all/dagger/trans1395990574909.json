[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)","position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\">\")","position":"dagger.internal.Keys:100","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.List<java.lang.String>.isEmpty()) {\n    return ;\n} ","position":"dagger.internal.ThrowingErrorHandler:26","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    if ((dagger.internal.Binding<?>[][int]) == null) {\n        dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n    } \n    int++;\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:72","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"create returned null\")","position":"dagger.internal.Memoizer:58","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")","position":"dagger.internal.Binding:31","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"dagger.internal.FailoverLoader:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.internal.BuiltInBinding:48","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"dagger.internal.FailoverLoader:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<?>","position":"dagger.ObjectGraph:339","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Type == (double.double))\n    return java.lang.Double.java.lang.Double;\n","position":"dagger.internal.Keys:269","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == (char.char))\n    return java.lang.Character.java.lang.Character;\n","position":"dagger.internal.Keys:266","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.installBindings(dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>)","position":"dagger.ObjectGraph:189","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((((java.lang.Object.getClass().getSimpleName()) + \"[provideKey=\\\"\") + (java.lang.String)) + \"\\\", memberskey=\\\"\")","name":"math","position":"dagger.internal.Binding:150","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ndagger.internal.Binding<T> dagger.internal.Binding<T> = dagger.ObjectGraph.DaggerObjectGraph.((dagger.internal.Binding<T>)(getInjectableTypeBinding(java.lang.ClassLoader, java.lang.String, java.lang.String)))","position":"dagger.ObjectGraph:306","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"linker"},"name":"replace","transplant":{"sourceCode":"this.dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(dagger.internal.Linker) {\n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n    dagger.internal.Linker.linkRequested();\n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n}","position":"dagger.ObjectGraph:281","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[][int] = dagger.internal.Binding<?>[][int].get()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:98","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.AssertionError()","position":"dagger.internal.Linker:276","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"key == null\")","position":"dagger.internal.Memoizer:41","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.injectMembers(T)","position":"dagger.internal.Linker:357","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"supertypeBinding"},"name":"replace","transplant":{"sourceCode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\");\n} ","position":"dagger.ObjectGraph:201","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((java.lang.Class<?>) != null) && ((dagger.internal.Binding<? super T>) == null)) {\n    dagger.internal.Binding<? super T> = ((dagger.internal.Binding<? super T>)(dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.String, java.lang.ClassLoader, false, true)));\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"synchronized(dagger.internal.Linker) {\n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n    dagger.internal.Linker.linkRequested();\n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n}","position":"dagger.ObjectGraph:281","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new dagger.internal.Memoizer<java.lang.ClassLoader, dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>>() {\n    @java.lang.Override\n    protected dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>> create(final java.lang.ClassLoader classLoader) {\n        return new dagger.internal.Memoizer<java.lang.String, java.lang.Class<?>>() {\n            @java.lang.Override\n            protected java.lang.Class<?> create(java.lang.String className) {\n                try {\n                    return java.lang.ClassLoader.loadClass(java.lang.String);\n                } catch (java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n                    return java.lang.Void.java.lang.Void;\n                }\n            }\n        };\n    }\n}","position":"dagger.internal.Loader:29","type":"CtNewClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String != null) {\n    return new dagger.internal.BuiltInBinding<java.lang.Object>(java.lang.String , java.lang.Object , java.lang.ClassLoader , java.lang.String);\n} ","position":"dagger.internal.Linker:212","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"binding":"binding"},"name":"add","transplant":{"sourceCode":"dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>))","position":"dagger.internal.Linker:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>)","position":"dagger.internal.ProblemDetector:59","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"key == null\")","position":"dagger.internal.Memoizer:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"injectedClass":"injectedClass","fields":"fields"},"name":"add","transplant":{"sourceCode":"if (java.util.List<java.lang.reflect.Field>.isEmpty()) {\n    throw new java.lang.IllegalArgumentException((\"No static injections: \" + (java.lang.Class<?>.getName())));\n} ","position":"dagger.internal.loaders.ReflectiveStaticInjection:68","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if (java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())) && (java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) {\n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    } \n}","position":"dagger.internal.loaders.ReflectiveStaticInjection:62","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"visiting":"cycleFree","binding":"binding"},"name":"replace","transplant":{"sourceCode":"this.dagger.internal.Binding<T>.setVisiting(boolean)","position":"dagger.internal.Linker:401","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.setCycleFree(boolean)","position":"dagger.internal.Linker:397","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"field":"field"},"name":"add","transplant":{"sourceCode":"java.lang.reflect.Field.setAccessible(true)","position":"dagger.internal.loaders.ReflectiveStaticInjection:64","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n    continue;\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:152","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"result":"result","contribution":"contribution"},"name":"add","transplant":{"sourceCode":"java.util.Set<T>.addAll(((java.util.Set<T>)(java.lang.Object)))","position":"dagger.internal.SetBinding:88","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<T>.add(((T)(java.lang.Object)))","position":"dagger.internal.SetBinding:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return java.lang.ClassLoader.loadClass(java.lang.String);\n} catch (java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    return java.lang.Void.java.lang.Void;\n}","position":"dagger.internal.Loader:33","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"dagger.ObjectGraph:179","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.containsKey(dagger.internal.ModuleAdapter<?>))) {\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} ","position":"dagger.internal.Modules:61","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<? super T> java.lang.Class<? super T> = java.lang.Class<T>.getSuperclass()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:215","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","position":"dagger.internal.Keys:159","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = boolean ? (int) | (dagger.internal.Binding.int) : (int) & (~(dagger.internal.Binding.int))","position":"dagger.internal.Binding:122","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"subject":"subject","qualifier":"qualifier"},"name":"replace","transplant":{"sourceCode":"if (java.lang.annotation.Annotation != null) {\n    throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n} ","position":"dagger.internal.Keys:126","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.lang.annotation.Annotation java.lang.annotation.Annotation : java.lang.annotation.Annotation[]) {\n    if (!(dagger.internal.Keys.dagger.internal.Memoizer<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Boolean>.get(java.lang.annotation.Annotation.annotationType()))) {\n        continue;\n    } \n    if (java.lang.annotation.Annotation != null) {\n        throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n    } \n    java.lang.annotation.Annotation = java.lang.annotation.Annotation;\n}","position":"dagger.internal.Keys:122","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Cannot inject into a Set binding\")","position":"dagger.internal.SetBinding:102","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")","position":"dagger.internal.Binding:28","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"delegatePrefix":"dagger.internal.Keys.PROVIDER_PREFIX","prefix":"dagger.internal.Keys.PROVIDER_PREFIX","start":"start","key":"dagger.internal.Keys.PROVIDER_PREFIX"},"name":"add","transplant":{"sourceCode":"return java.lang.String + (java.lang.String.substring((int + (java.lang.String.length())), ((java.lang.String.length()) - 1)))","position":"dagger.internal.Keys:228","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:183","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"errorHandler\")","position":"dagger.internal.Linker:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field))","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:156","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new dagger.internal.ProblemDetector().detectProblems(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.values())","position":"dagger.ObjectGraph:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.injectMembers(T)","position":"dagger.ObjectGraph:308","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.String>.clear()","position":"dagger.internal.Linker:185","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"linker"},"name":"add","transplant":{"sourceCode":"this.dagger.internal.Linker.assertLockHeld()","position":"dagger.internal.Linker:270","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.linkRequested()","position":"dagger.ObjectGraph:283","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (dagger.internal.Linker dagger.internal.Linker = this ; dagger.internal.Linker != null ; dagger.internal.Linker = dagger.internal.Linker.dagger.internal.Linker) {\n    dagger.internal.Binding<?> = dagger.internal.Linker.java.util.Map<java.lang.String, dagger.internal.Binding<?>>.get(java.lang.String);\n    if (dagger.internal.Binding<?> != null) {\n        if ((dagger.internal.Linker != this) && (!(dagger.internal.Binding<?>.isLinked())))\n            throw new java.lang.AssertionError();\n        \n        break;\n    } \n}","position":"dagger.internal.Linker:273","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(this) {\n    if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n        java.lang.Object = dagger.internal.Binding<T>.get();\n    } \n}","position":"dagger.internal.Linker:363","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()","position":"dagger.ObjectGraph:284","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"dagger.internal.loaders.ReflectiveStaticInjection:55","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return dagger.internal.Binding<T>.isCycleFree()","position":"dagger.internal.Linker:377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.String, java.lang.Class<?>> java.util.Map<java.lang.String, java.lang.Class<?>> = new java.util.LinkedHashMap<java.lang.String, java.lang.Class<?>>()","position":"dagger.ObjectGraph:160","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"linkedBindings":"bindings"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\");\n} ","position":"dagger.internal.Linker:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<java.lang.String, dagger.internal.Binding<?>>.containsKey(java.lang.String)) {\n    continue;\n} ","position":"dagger.internal.Linker:138","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = null","position":"dagger.ObjectGraph:323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)","position":"dagger.internal.Keys:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"new java.lang.Object()","position":"dagger.internal.LazyBinding:26","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule())","position":"dagger.internal.Modules:62","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int int","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:189","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.annotation.Annotation java.lang.annotation.Annotation = dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object)","position":"dagger.internal.Keys:92","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\");\n} ","position":"dagger.internal.Linker:83","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (dagger.internal.Binding<?> == null) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = new dagger.internal.Linker.DeferredBinding(java.lang.String , java.lang.ClassLoader , java.lang.Object , boolean);\n    dagger.internal.Binding<?>.setLibrary(boolean);\n    dagger.internal.Binding<?>.setDependedOn(true);\n    java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    boolean = false;\n    return null;\n} ","position":"dagger.internal.Linker:281","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)","position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> : java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>.values()) {\n    if (!(java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.containsKey(dagger.internal.ModuleAdapter<?>))) {\n        java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n    } \n}","position":"dagger.internal.Modules:60","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> : java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.keySet()) {\n    dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>);\n}","position":"dagger.internal.Modules:56","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Class<? super T> = null","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:218","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = dagger.ObjectGraph.DaggerObjectGraph.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String)","position":"dagger.ObjectGraph:325","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Modules.dagger.internal.Modules.collectIncludedModulesRecursively(dagger.internal.Loader, dagger.internal.ModuleAdapter<?>, java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>)","position":"dagger.internal.Modules:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (dagger.internal.StaticInjection == null) {\n    dagger.internal.StaticInjection = dagger.internal.Loader.getStaticInjection(java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getKey());\n    java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.setValue(dagger.internal.StaticInjection);\n} ","position":"dagger.ObjectGraph:237","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (java.util.Map.Entry<java.lang.String, java.lang.Class<?>> java.util.Map.Entry<java.lang.String, java.lang.Class<?>> : java.util.Map<java.lang.String, java.lang.Class<?>>.entrySet()) {\n    dagger.internal.Linker.requestBinding(java.util.Map.Entry<java.lang.String, java.lang.Class<?>>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.Class<?>>.getValue(), java.util.Map.Entry<java.lang.String, java.lang.Class<?>>.getValue().getClassLoader(), false, true);\n}","position":"dagger.ObjectGraph:246","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(false)","position":"dagger.internal.ProblemDetector:79","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))","position":"dagger.internal.Keys:166","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"dagger.internal.Keys:94","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"path":"path"},"name":"add","transplant":{"sourceCode":"java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1))","position":"dagger.internal.ProblemDetector:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n    java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n}","position":"dagger.internal.ProblemDetector:62","type":"CtForImpl"},"status":0},{"failures":[],"name":"returnValue","position":"dagger.internal.ModuleAdapter:66","type":"mutation","return":"return true","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.StaticInjection = dagger.internal.Loader.getStaticInjection(java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getKey())","position":"dagger.ObjectGraph:238","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(this) {\n    if ((java.lang.Object) == (dagger.internal.Linker.java.lang.Object)) {\n        java.lang.Object = dagger.internal.Binding<T>.get();\n    } \n}","position":"dagger.internal.Linker:363","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:107","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(null, dagger.internal.Loader, java.lang.Object[])","position":"dagger.ObjectGraph:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object = dagger.internal.Binding<T>.get()","position":"dagger.internal.Linker:365","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"dagger.internal.BuiltInBinding:39","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object> java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object> : java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.entrySet()) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    dagger.internal.ModuleAdapter<java.lang.Object> dagger.internal.ModuleAdapter<java.lang.Object> = ((dagger.internal.ModuleAdapter<java.lang.Object>)(java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getKey()));\n    for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[].int) ; int++) {\n        java.util.Map<java.lang.String, java.lang.Class<?>>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[][int], dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>);\n    }\n    for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[].int) ; int++) {\n        java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[][int], null);\n    }\n    try {\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>;\n        dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue());\n    } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException(((dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>.getSimpleName()) + \" is an overriding module and cannot contribute set bindings.\"));\n    }\n}","position":"dagger.ObjectGraph:167","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<dagger.internal.Binding<?>>.add(dagger.internal.Binding<? super T>)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:136","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"[]\")","position":"dagger.internal.Keys:168","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:202","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = ((dagger.internal.ModuleAdapter<?>)(java.lang.Object))","position":"dagger.internal.ModuleAdapter:68","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule())","position":"dagger.internal.Modules:41","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"result":"result","c":"c","this":"this"},"name":"replace","transplant":{"sourceCode":"dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false)","position":"dagger.internal.Keys:143","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.isArray()) {\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else if (java.lang.Class<?>.isPrimitive()) {\n    if (boolean) {\n        throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n    } \n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n} else {\n    java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n}","position":"dagger.internal.Keys:142","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.containsKey(dagger.internal.ModuleAdapter<?>))) {\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} ","position":"dagger.internal.Modules:61","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"dagger.internal.Binding<?>.attach(dagger.internal.Linker)","position":"dagger.internal.SetBinding:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.putBinding(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:153","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"dagger.DaggerObjectGraph:173","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"dagger.internal.Binding<T> = ((dagger.internal.Binding<T>)(dagger.internal.Linker.requestBinding(java.lang.String, java.lang.Object, java.lang.ClassLoader)))","position":"dagger.internal.LazyBinding:41","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"dagger.internal.UniqueMap:31","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.InstantiationException)","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:111","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n} catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:179","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>> java.util.Map<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>> = new java.util.LinkedHashMap<java.lang.Class<?>, dagger.internal.ModuleAdapter<?>>()","position":"dagger.internal.Modules:54","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()","position":"dagger.ObjectGraph:282","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ","position":"dagger.internal.ThrowingErrorHandler:27","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"staticInjections\")","position":"dagger.ObjectGraph:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + V) + \"\\n    \") + V))","position":"dagger.internal.UniqueMap:29","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (java.lang.annotation.Annotation java.lang.annotation.Annotation : java.lang.annotation.Annotation[]) {\n    if (!(dagger.internal.Keys.dagger.internal.Memoizer<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Boolean>.get(java.lang.annotation.Annotation.annotationType()))) {\n        continue;\n    } \n    if (java.lang.annotation.Annotation != null) {\n        throw new java.lang.IllegalArgumentException((\"Too many qualifier annotations on \" + java.lang.Object));\n    } \n    java.lang.annotation.Annotation = java.lang.annotation.Annotation;\n}","position":"dagger.internal.Keys:122","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<dagger.internal.Binding> java.util.List<dagger.internal.Binding> = new java.util.ArrayList<dagger.internal.Binding>()","position":"dagger.internal.ProblemDetector:33","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\"","position":"dagger.internal.Linker:465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.String) != null ? java.lang.String : java.lang.String","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"1 << 1","name":"math","position":"dagger.internal.Binding:41","type":"mutation","status":-2},{"failures":[],"binaryOperator":"(\"Unable to create binding for \" + java.lang.String)","name":"math","position":"dagger.internal.Linker:148","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:201","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"dagger.internal.ModuleAdapter:66","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"int < (java.lang.reflect.Field[].int)","name":"conditionalBoundary","position":"dagger.internal.loaders.ReflectiveStaticInjection:52","type":"mutation","status":0},{"failures":[],"variableMapping":{"constructor":"injectedConstructor"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.UnsupportedOperationException();\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != 0) {\n    java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n    }\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:200","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"static class ArraySet<T> extends java.util.AbstractSet<T> {\n    private final java.util.ArrayList<T> list = new java.util.ArrayList<T>();\n\n    @java.lang.Override\n    public boolean add(T t) {\n        java.util.ArrayList<T>.add(T);\n        return true;\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<T> iterator() {\n        return java.util.ArrayList<T>.iterator();\n    }\n\n    @java.lang.Override\n    public int size() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}","position":"dagger.internal.ProblemDetector:89","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<T>.setLibrary(true)","position":"dagger.internal.Linker:405","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"delegatePrefix":"dagger.internal.Keys.LAZY_PREFIX","prefix":"dagger.internal.Keys.LAZY_PREFIX","start":"start","key":"key"},"name":"add","transplant":{"sourceCode":"return java.lang.String + (java.lang.String.substring((int + (java.lang.String.length())), ((java.lang.String.length()) - 1)))","position":"dagger.internal.Keys:228","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String)","position":"dagger.internal.Keys:199","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.ObjectGraph.DaggerObjectGraph.linkEverything()","position":"dagger.ObjectGraph:219","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> = dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.initBaseBindings(dagger.ObjectGraph.DaggerObjectGraph)","position":"dagger.ObjectGraph:163","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>()","position":"dagger.internal.ProblemDetector:73","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.DeferredBinding dagger.internal.Linker.DeferredBinding = ((dagger.internal.Linker.DeferredBinding)(dagger.internal.Binding<?>))","position":"dagger.internal.Linker:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"linker":"this","binding":"binding"},"name":"add","transplant":{"sourceCode":"if (dagger.internal.Binding<?> != null) {\n    if ((dagger.internal.Linker != this) && (!(dagger.internal.Binding<?>.isLinked())))\n        throw new java.lang.AssertionError();\n    \n    break;\n} ","position":"dagger.internal.Linker:275","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.addError((((java.lang.IllegalArgumentException.getMessage()) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)))","position":"dagger.internal.Linker:161","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"staticInjections":"staticInjections"},"name":"replace","transplant":{"sourceCode":"for (java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection> : this.java.lang.Class<?>[].entrySet()) {\n    java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue().inject();\n}","position":"dagger.ObjectGraph:287","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object> java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object> : java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.entrySet()) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    dagger.internal.ModuleAdapter<java.lang.Object> dagger.internal.ModuleAdapter<java.lang.Object> = ((dagger.internal.ModuleAdapter<java.lang.Object>)(java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getKey()));\n    for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[].int) ; int++) {\n        java.util.Map<java.lang.String, java.lang.Class<?>>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[][int], dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>);\n    }\n    for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[].int) ; int++) {\n        java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<?>[][int], null);\n    }\n    try {\n        java.util.Map<java.lang.String, dagger.internal.Binding<?>> java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.ModuleAdapter<java.lang.Object>.boolean ? dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>> : dagger.internal.UniqueMap<java.lang.String, dagger.internal.Binding<?>>;\n        dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue());\n    } catch (java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException(((dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>.getSimpleName()) + \" is an overriding module and cannot contribute set bindings.\"));\n    }\n}","position":"dagger.ObjectGraph:167","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"No inject registered for \" + java.lang.String) + \". You must explicitly add it to the \\'injects\\' option in one of your modules.\"))","position":"dagger.ObjectGraph:329","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new dagger.internal.Binding.InvalidBindingException(dagger.internal.Keys.dagger.internal.Keys.getClassName(java.lang.String) , \"is exclusively members injected and therefore cannot be scoped\")","position":"dagger.internal.Binding:66","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = java.lang.Class<T>.getClassLoader()","position":"dagger.ObjectGraph:295","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<? super T> java.lang.Class<? super T> = java.lang.Class<T>.getSuperclass()","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:215","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The type of binding into which the return type of the annotated method contributes.\n */\nenum Type {\nUNIQUE, SET, SET_VALUES;}","position":"dagger.Provides:36","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.concurrent.locks.Lock.lock()","position":"dagger.internal.Memoizer:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[].int) ; int++) {\n    java.util.Map<java.lang.String, java.lang.Class<?>>.put(dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.String[][int], dagger.internal.ModuleAdapter<java.lang.Object>.java.lang.Class<java.lang.Object>);\n}","position":"dagger.ObjectGraph:170","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.putIfAbsent(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, dagger.internal.Binding<T>.java.lang.String, dagger.internal.Binding<T>)","position":"dagger.internal.Linker:310","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((int) & (dagger.internal.Binding.int)) != 0","name":"negateConditional","position":"dagger.internal.Binding:146","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (V != null) {\n    java.util.LinkedHashMap<K, V>.put(K, V);\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + V) + \"\\n    \") + V));\n} ","position":"dagger.internal.UniqueMap:27","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.library()","position":"dagger.internal.Linker:389","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.StaticInjection dagger.internal.StaticInjection = java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getValue()","position":"dagger.ObjectGraph:236","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"binding"},"name":"add","transplant":{"sourceCode":"return this.dagger.internal.Binding<T>.library()","position":"dagger.internal.Linker:389","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>.isLinked()","position":"dagger.internal.Linker:381","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"dagger.internal.Binding<?>.setDependedOn(true)","position":"dagger.internal.Linker:286","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Binding<?>.setLibrary(boolean)","position":"dagger.internal.Linker:285","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"dagger.internal.Binding<T>.setCycleFree(boolean)","position":"dagger.internal.Linker:397","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.ModuleAdapter<java.lang.Object>.getBindings(java.util.Map<java.lang.String, dagger.internal.Binding<?>>, java.util.Map.Entry<dagger.internal.ModuleAdapter<?>, java.lang.Object>.getValue())","position":"dagger.ObjectGraph:178","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException((\"No injectable constructor on \" + (java.lang.Object.getClass().getName())))","position":"dagger.internal.Binding:87","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = dagger.internal.Loader.loadClass(java.lang.ClassLoader, java.lang.String)","position":"dagger.internal.FailoverLoader:66","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"allBindings":"bindings"},"name":"replace","transplant":{"sourceCode":"new dagger.internal.ProblemDetector().detectProblems(java.util.Map<java.lang.String, dagger.internal.Binding<?>>.values())","position":"dagger.ObjectGraph:254","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Map<java.lang.String, dagger.internal.Binding<?>>.values()) {\n    if (!(dagger.internal.Binding<?>.isLinked())) {\n        java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    } \n}","position":"dagger.internal.Linker:105","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map<java.lang.String, dagger.internal.Binding<?>>","position":"dagger.internal.Linker:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} ","position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"binding":"scopedBinding"},"name":"add","transplant":{"sourceCode":"dagger.internal.Binding<?>.setVisiting(true)","position":"dagger.internal.ProblemDetector:70","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"dagger.internal.Linker.putBinding(dagger.internal.Binding<?>)","position":"dagger.internal.Linker:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new dagger.Provides.Type()","position":"dagger.Provides:51","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<java.lang.String, java.lang.Class<?>>.getValue()","position":"dagger.ObjectGraph:247","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new dagger.internal.Linker.SingletonBinding<T>(dagger.internal.Binding<T>)","position":"dagger.internal.Linker:321","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return dagger.internal.Binding<T>","position":"dagger.internal.Linker:319","type":"CtReturnImpl"},"status":0},{"failureDictionary":{}}]
