{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"22c337fb-794d-11e5-abcb-cb16feacbeb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:855","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.release()"},"status":-2},{"failures":[],"tindex":"22c35f0c-794d-11e5-abcb-11cf15303fb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:136","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"variableMap":{"lat":"normedDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:62","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-2},{"failures":[],"tindex":"22c35f0d-794d-11e5-abcb-0dc394729f3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"variableMap":{"name":"fileName","location":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:68","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[],"tindex":"22c35f0e-794d-11e5-abcb-21bc79097114","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:341","type":"CtIfImpl","sourcecode":"if (boolean && ((java.util.Random.nextInt(100)) < (int))) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int];\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int != int)\n        com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n    \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":-2},{"failures":[],"tindex":"22c35f0f-794d-11e5-abcb-59a728757056","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:156","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"22c35f10-794d-11e5-abcb-5b275e041fc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"to","index":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:250","type":"CtIfImpl","sourcecode":"if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n    int = int;\n    int = int + 1;\n} else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n    int = int;\n    int = int + (int);\n} "},"status":-2},{"failures":[],"tindex":"22c38621-794d-11e5-abcb-9de55372fb1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:570","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"variableMap":{"edgeId":"com.graphhopper.routing.QueryGraph.VE_BASE","virtualEdges":"virtualEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:683","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = boolean ? java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int))) : java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-2},{"failures":[],"tindex":"22c38622-794d-11e5-abcb-21d3df619ed9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"segmentSizeInBytes","nextEdgeOther":"segmentSizeInBytes","nodeOther":"segmentSizeInBytes","nextEdge":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:268","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, java.io.RandomAccessFile.length(), int)"},"status":-2},{"failures":[],"tindex":"22c38623-794d-11e5-abcb-7791a5ee8e98","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"status":-2},{"failures":[],"tindex":"22c38624-794d-11e5-abcb-57fb77e2150a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-2},{"failures":[],"tindex":"22c38625-794d-11e5-abcb-2102f1c2e4da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"sumBytes","lastKey":"sumBytes","key":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:58","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    byte[] byte[] = new byte[8 * 1024];\n    while (java.util.zip.ZipEntry != null) {\n        if (java.util.zip.ZipEntry.isDirectory()) {\n            new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n        } else {\n            double double = 1;\n            if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n                double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n            \n            java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n            java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n            try {\n                int int;\n                while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                    java.io.FileOutputStream.write(byte[], 0, int);\n                    long += int * double;\n                    if (com.graphhopper.util.ProgressListener != null)\n                        com.graphhopper.util.ProgressListener.update(long);\n                    \n                }\n            } finally {\n                java.io.FileOutputStream.close();\n            }\n        }\n        java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    }\n    java.util.zip.ZipInputStream.closeEntry();\n} finally {\n    java.util.zip.ZipInputStream.close();\n}"},"status":-2},{"failures":[],"tindex":"22c3ad36-794d-11e5-abcb-c54916b8b8bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"flags","tmpValue":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true)"},"status":-2},{"failures":[],"tindex":"22c3ad37-794d-11e5-abcb-b5338c672e29","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:55","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.Helper.loadProperties(java.util.Map<java.lang.String, java.lang.String>, new java.io.StringReader(new java.lang.String(byte[] , com.graphhopper.util.Helper.java.nio.charset.Charset)));\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.IllegalStateException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"22c3ad38-794d-11e5-abcb-d3e51baebfd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:138","type":"CtForImpl","sourcecode":"for (int int = int + 1 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    if (java.lang.Double.isNaN(double)) {\n        continue;\n    } \n    double double = com.graphhopper.util.PointList.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (double < double) {\n        int = int;\n        double = double;\n    } \n}"},"status":-2},{"failures":[],"tindex":"22c3ad39-794d-11e5-abcb-2ba8b298a554","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1020","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = java.util.List<com.graphhopper.storage.index.QueryResult>.get(0)"},"variableMap":{"qResults":"qResults"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1042","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = java.util.List<com.graphhopper.storage.index.QueryResult>.get(int)"},"status":-2},{"failures":[],"tindex":"22c3ad3a-794d-11e5-abcb-3b01c867a8a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"22c3d44b-794d-11e5-abcb-4b994fbd5b75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:152","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"22c3d44c-794d-11e5-abcb-956e5d5641b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:70","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Dijkstra.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"22c3d44d-794d-11e5-abcb-cfc280984e76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"tmp","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8)"},"status":-2},{"failures":[],"tindex":"22c3d44e-794d-11e5-abcb-6bec418ac14d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"nodeThis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:188","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}