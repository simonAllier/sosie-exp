{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":373,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.reader.OSMReaderTest.testFerry":290,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":278,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":125,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":311,"com.graphhopper.coll.CompressedArrayTest.testCompress":8,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":96,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":48,"com.graphhopper.util.BitUtilBigTest.testReverse":390,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":348,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":372,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":336,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":364,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":166,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":356,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":211,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":388,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":268,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":351,"com.graphhopper.GraphHopperTest.testLoadOSM":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":194,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":212,"com.graphhopper.reader.OSMReaderTest.testSort":293,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":229,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":67,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":109,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":329,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":305,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":158,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":354,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":206,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":165,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":247,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":253,"com.graphhopper.coll.CompressedArrayTest.testCompress2":7,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":244,"com.graphhopper.GraphHopperAPITest.testLoad":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":234,"com.graphhopper.reader.OSMReaderTest.testBarriers":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":80,"com.graphhopper.util.GHUtilityTest.testCopy":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":177,"com.graphhopper.routing.PathTest.testFindInstruction":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":174,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":68,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":262,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":121,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":153,"com.graphhopper.util.InstructionListTest.testWayList2":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":220,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":267,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":318,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":245,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":167,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":38,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":154,"com.graphhopper.routing.PathBidirRefTest.testExtract":306,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":270,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":203,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":225,"com.graphhopper.util.GHUtilityTest.testSort2":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":370,"com.graphhopper.reader.OSMReaderTest.testMain":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":231,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":257,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":128,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":2,"com.graphhopper.storage.GraphHopperStorageTest.testClone":41,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":151,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":51,"com.graphhopper.util.BitUtilBigTest.testToFloat":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":82,"com.graphhopper.routing.PathTest.testTime":382,"com.graphhopper.util.InstructionListTest.testCreateGPX":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":135,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":95,"com.graphhopper.util.GHUtilityTest.testSortDirected":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":140,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":9,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":326,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":168,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":91,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":214,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":321,"com.graphhopper.routing.QueryGraphTest.testOneWay":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":210,"com.graphhopper.reader.OSMReaderTest.testWithBounds":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":310,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":256,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":249,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":389,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":37,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":355,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":70,"com.graphhopper.util.InstructionListTest.testWayList":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":138,"com.graphhopper.GraphHopperAPITest.testDisconnected179":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":83,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":78,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":111,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":23,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":349,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":61,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":377,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":31,"com.graphhopper.routing.PathTest.testWayList":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":378,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":209,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":114,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":118,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":240,"com.graphhopper.util.BitUtilBigTest.testToBitString":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":387,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":1,"com.graphhopper.util.GHUtilityTest.testSort":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":216,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":162,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":269,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":117,"com.graphhopper.util.BitUtilBigTest.testToInt":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":159,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":319,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":230,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":376,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":101,"com.graphhopper.routing.PathTest.testFound":381,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":352,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":246,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":0,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":86,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":46,"com.graphhopper.util.InstructionListTest.testEmptyList":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":368,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":157,"com.graphhopper.reader.PrinctonReaderTest.testRead":288,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":131,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":251,"com.graphhopper.reader.OSMReaderTest.testFoot":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":99,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":218,"com.graphhopper.reader.OSMReaderTest.testOneWay":304,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":50,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":263,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":346,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":350,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":339,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":160,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":325,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":119,"com.graphhopper.routing.PathBidirRefTest.testExtract2":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":353,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":195,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":391,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":207,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":188,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":213,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":164,"com.graphhopper.GraphHopperTest.testFootAndCar":24,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":192,"com.graphhopper.util.BitUtilLittleTest.testReverse":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":237,"com.graphhopper.GraphHopperTest.testPrepareOnly":13,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":178,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":365,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":300,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":120,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":62,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":92,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":139,"com.graphhopper.util.InstructionListTest.testFind":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":226},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"ecd5f54a-791f-11e5-8f98-01b4752a6d50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"ecd5f54b-791f-11e5-8f98-575078381555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":0},{"failures":[],"tindex":"ecd61c5c-791f-11e5-8f98-0beb03c1eb9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"status":0},{"failures":[7,8],"tindex":"ecd61c5d-791f-11e5-8f98-bbcf707ad684","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:163","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 56"},"status":-1},{"failures":[],"tindex":"ecd61c5e-791f-11e5-8f98-2fcc8a04d2d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:271","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"))"},"status":-2},{"failures":[],"tindex":"ecd61c5f-791f-11e5-8f98-75e381887a6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:150","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"status":0},{"failures":[9,10,11],"tindex":"ecd61c60-791f-11e5-8f98-899520973d9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trk>\")"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,11,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"tindex":"ecd64371-791f-11e5-8f98-d5505110d32b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"N_ELE","edgeId":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[14,15,16,17,18,19,32,36,37,38,39,41,42,44,46,50,51,52,53,55,56,57,60,61,63,64,65,66,68,73,75,76,77,79,80,82,84,88,89,90,91,93,94,95,98,99,101,102,103,104,106,111,117,124,127,128,129,130,132,133,135,137,141,142,143,144,146,147,148,151,152,154,155,156,157,159,164,168,169,170,174,175,176,179,180,181,182,183,185,186,188,190,193,196,198,199,200,201,202,203,204,207,208,211,214,216,217,218,219,220,221,222,225,226,232,233,234,235,237,238,240,242,246,247,248,249,251,252,253,256,257,259,260,261,262,264,269,271,272,274,275,276,278,279,280,282,283,284,11,286,288,289,305,306,307,308,309,310,311,312,313,314,315,316,320,321,322,323,324,326,327,328,330,331,332,333,335,338,339,340,341,342,344,346,347,348,351,356,357,358,359,360,361,362,363,364,369,370,371,372,375,376,377,378,379,380,383,384,387,388],"tindex":"ecd66a82-791f-11e5-8f98-e14de7910f61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"a","b":"a","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double).setFlags(com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-1},{"failures":[389,390,391,392],"tindex":"ecd69193-791f-11e5-8f98-2d89892fcd77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"strLen","index":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:181","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long <<= 1;\n    if ((java.lang.String.charAt(int)) != '0')\n        long |= 1;\n    \n}"},"status":-1},{"failures":[],"tindex":"ecd69194-791f-11e5-8f98-11c6c8f75ee9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:881","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareHighwayNode(long)"},"status":-2},{"failures":[],"tindex":"ecd69195-791f-11e5-8f98-d737169ae936","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:774","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"ecd69196-791f-11e5-8f98-df88af5f33d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"motorcarTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-2},{"failures":[],"tindex":"ecd69197-791f-11e5-8f98-9f866016d333","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:91","type":"CtIfImpl","sourcecode":"if (\"iw\".equals(java.util.Locale.getLanguage()))\n    java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation);\n"},"status":-2},{"failures":[],"tindex":"ecd6b8a8-791f-11e5-8f98-d19e9ef07219","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[],"tindex":"ecd6b8a9-791f-11e5-8f98-89aa30945954","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"ecd6b8aa-791f-11e5-8f98-3b0ecf78f97d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ecd6b8ab-791f-11e5-8f98-99e52f9e0aa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"status":-2},{"failures":[],"tindex":"ecd6b8ac-791f-11e5-8f98-79272bbc9c2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:487","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"edgeId":"segmentsToCreate","shortcutCount":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"ecd6b8ad-791f-11e5-8f98-53d24b6f591c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"variableMap":{"sb":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}