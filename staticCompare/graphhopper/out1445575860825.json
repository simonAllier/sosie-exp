{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":29,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":49,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":80,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":81,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":46,"com.graphhopper.routing.QueryGraphTest.testOneWay":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":196,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":65,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":279,"com.graphhopper.GraphHopperTest.testPrepare":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":98,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":112,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":54,"com.graphhopper.util.BitUtilLittleTest.testToBitString":0,"com.graphhopper.util.InstructionListTest.testWayList":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":83,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":88,"com.graphhopper.GraphHopperAPITest.testDisconnected179":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":44,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":235,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":205,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":155,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":130,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":253,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":161,"com.graphhopper.util.PointListTest.testReverse":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":203,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":53,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":35,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":96,"com.graphhopper.routing.PathTest.testWayList":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":21,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":48,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":250,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":210,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":268,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":43,"com.graphhopper.util.GHUtilityTest.testSort":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":186,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":265,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":58,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":236,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":171,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":238,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":209,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":168,"com.graphhopper.GraphHopperAPITest.testLoad":94,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":223,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":63,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.routing.PathTest.testFound":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.util.GHUtilityTest.testCopy":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":184,"com.graphhopper.routing.PathTest.testFindInstruction":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":219,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":169,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":121,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":110,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":89,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":221,"com.graphhopper.reader.PrinctonReaderTest.testRead":71,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":274,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":11,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":259,"com.graphhopper.util.InstructionListTest.testWayList2":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":201,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":135,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":234,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":251,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":246,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":218,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":193,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":4,"com.graphhopper.routing.PathBidirRefTest.testExtract":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":239,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":164,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":75,"com.graphhopper.util.GHUtilityTest.testSort2":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":262,"com.graphhopper.routing.PathBidirRefTest.testExtract2":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":156,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":167,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":9,"com.graphhopper.storage.GraphHopperStorageTest.testClone":102,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":258,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":108,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":185,"com.graphhopper.routing.PathTest.testTime":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":195,"com.graphhopper.util.GHUtilityTest.testSortDirected":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":249,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":172,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":151,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":50,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":159,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":192,"com.graphhopper.util.InstructionListTest.testFind":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":243},"transformations":[{"failures":[],"tindex":"a852023f-7941-11e5-98cd-69c98ecc0bf0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:179","type":"CtWhileImpl","sourcecode":"while (!(java.util.zip.Deflater.finished())) {\n    int int = java.util.zip.Deflater.deflate(byte[]);\n    java.io.ByteArrayOutputStream.write(byte[], 0, int);\n}"},"status":0},{"failures":[0,1],"tindex":"a8522950-7941-11e5-98cd-65a60fa95d69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:122","type":"CtIfImpl","sourcecode":"if ((byte & byte) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268],"tindex":"a8522951-7941-11e5-98cd-8b5525bd2499","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"b","adjNode":"b","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:409","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int, double, boolean)"},"status":-1},{"failures":[],"tindex":"a8525062-7941-11e5-98cd-555f18e186e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:88","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:111","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"builddate\") , com.graphhopper.util.Helper.java.nio.charset.Charset))"},"status":-2},{"failures":[41],"tindex":"a8525063-7941-11e5-98cd-877df5a14e70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:99","type":"CtIfImpl","sourcecode":"if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n    int--;\n"},"status":-1},{"failures":[31,41,45,48,49,54,59,269,74,75,76,78,270,271,272,84,91,94,98,273,274,179,275,276,210,277,278,241,279,280],"tindex":"a8525064-7941-11e5-98cd-dfaf57d0d135","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"status":-1},{"failures":[],"tindex":"a8527775-7941-11e5-98cd-d55f7024fd9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:395","type":"CtReturnImpl","sourcecode":"return double"},"variableMap":{"dijkstraTime":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:119","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[281],"tindex":"a8527776-7941-11e5-98cd-1d22b9eba6dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"a8527777-7941-11e5-98cd-09a6a891808c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.CHEdgeIteratorState.getWeight()"},"variableMap":{"tmp":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:52","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[282],"tindex":"a8527778-7941-11e5-98cd-21fe1ff20681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:137","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting());\n}"},"status":-1},{"failures":[],"tindex":"a8527779-7941-11e5-98cd-09172a29a54d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"variableMap":{"segmentSizeInBytes":"nodeId","newBytes":"bytePos","segmentsToCreate":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"a852777a-7941-11e5-98cd-f5efd9c650bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"a8529e8b-7941-11e5-98cd-b1ffc8d7025a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:892","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a8529e8c-7941-11e5-98cd-9f554d33e619","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:283","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"nodeId":"visitedNodesSum","nodeIdOffset":"visitedNodesSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":-2},{"failures":[],"tindex":"a8529e8d-7941-11e5-98cd-933da3c370ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:898","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"a8529e8e-7941-11e5-98cd-a172e2be31c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"currentIndex","edgeId":"currentIndex","com.graphhopper.storage.EdgeAccess.NO_NODE":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"a8529e8f-7941-11e5-98cd-2726dca8f771","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtWhileImpl","sourcecode":"while ((!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) && (!com.graphhopper.routing.AbstractRoutingAlgorithm.(isWeightLimitExceeded()))) {\n    if ((!(boolean)) && (!(boolean))) {\n        if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n        else\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n        \n    } else if (!(boolean)) {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    } else {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    }\n}"},"status":-2},{"failures":[],"tindex":"a8529e90-7941-11e5-98cd-59f6c57f2aef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:251","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"a852c5a1-7941-11e5-98cd-cb5a0a56248a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"variableMap":{"elem":"elem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:104","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"a852c5a2-7941-11e5-98cd-b371db0b1549","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:251","type":"CtReturnImpl","sourcecode":"return long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}