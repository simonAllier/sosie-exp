{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":176,"com.graphhopper.reader.OSMReaderTest.testFerry":308,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":288,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":289,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":1,"com.graphhopper.routing.QueryGraphTest.testOneWay":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":212,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":159,"com.graphhopper.reader.OSMReaderTest.testWithBounds":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":97,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":129,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":329,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":213,"com.graphhopper.GraphHopperTest.testPrepare":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":252,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":267,"com.graphhopper.util.InstructionListTest.testWayList":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":145,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":202,"com.graphhopper.GraphHopperAPITest.testDisconnected179":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":180,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":70,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":77,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":122,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":196,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":300,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":114,"com.graphhopper.GraphHopperTest.testLoadOSM":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":161,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":190,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":258,"com.graphhopper.reader.OSMReaderTest.testSort":311,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":76,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":208,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":85,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":233,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":307,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":61,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":230,"com.graphhopper.routing.PathTest.testWayList":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":222,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":158,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":205,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":94,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":304,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":69,"com.graphhopper.util.GHUtilityTest.testSort":285,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":226,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":123,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":237,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":183,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":83,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":330,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":191,"com.graphhopper.GraphHopperAPITest.testLoad":325,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":104,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":187,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":88,"com.graphhopper.reader.OSMReaderTest.testBarriers":312,"com.graphhopper.routing.PathTest.testFound":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.util.GHUtilityTest.testCopy":284,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":89,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":100,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":272,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":243,"com.graphhopper.util.InstructionListTest.testEmptyList":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":175,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":265,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":116,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":253,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":102,"com.graphhopper.reader.PrinctonReaderTest.testRead":323,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":186,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":195,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":217,"com.graphhopper.util.InstructionListTest.testWayList2":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":135,"com.graphhopper.reader.OSMReaderTest.testFoot":309,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":166,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":227,"com.graphhopper.reader.OSMReaderTest.testOneWay":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":206,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":262,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":99,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":146,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":235,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":242,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":313,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":46,"com.graphhopper.routing.PathBidirRefTest.testExtract":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":154,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":287,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":164,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":141,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":294,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":293,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":173,"com.graphhopper.util.GHUtilityTest.testSort2":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.reader.OSMReaderTest.testMain":310,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":225,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":220,"com.graphhopper.routing.PathBidirRefTest.testExtract2":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":170,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":144,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":126,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":111,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":162,"com.graphhopper.storage.GraphHopperStorageTest.testClone":238,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":228,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":215,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":248,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":255,"com.graphhopper.GraphHopperTest.testFootAndCar":301,"com.graphhopper.routing.PathTest.testTime":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":214,"com.graphhopper.util.GHUtilityTest.testSortDirected":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":204,"com.graphhopper.GraphHopperTest.testPrepareOnly":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":178,"com.graphhopper.GraphHopperTest.testVia":298,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":318,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":128,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":185,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":259,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":281,"com.graphhopper.GraphHopperTest.testFootOnly":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":134,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":136,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":65,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":203,"com.graphhopper.util.InstructionListTest.testFind":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":194},"transformations":[{"failures":[],"tindex":"fc16795e-791a-11e5-837f-6116cc8cebf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:78","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"variableMap":{"heights":"nodesCH","da":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:670","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"fc16a06f-791a-11e5-837f-4f5abf412b03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:491","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,299,300,300,301,301,302,303,304,304,305,306,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"fc16a070-791a-11e5-837f-a9e4931f5436","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:113","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder)"},"status":-1},{"failures":[327,328,281,329,297,298,299,300,301,302,303,305,330,309,310,311,312,315,316,318,319,320],"tindex":"fc16c781-791a-11e5-837f-e942668415c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:279","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"fc16c782-791a-11e5-837f-b940d90c82ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean)"},"variableMap":{"tmpCalcPoints":"tmpCalcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker)"},"status":-2},{"failures":[],"tindex":"fc16c783-791a-11e5-837f-57a6770069b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"r_lat","tmp":"a_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:229","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"fc16c784-791a-11e5-837f-2b3b9d341562","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":-2},{"failures":[],"tindex":"fc16c785-791a-11e5-837f-a5ee0e966c33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"java.lang.Integer.MAX_VALUE","noOfStates":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:365","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    return java.lang.Integer.int;\n"},"status":-2},{"failures":[],"tindex":"fc16c786-791a-11e5-837f-e7c3bd4f115d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >>> 8))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"fc16ee97-791a-11e5-837f-f9f4b5d9a9d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"bytePointer","flags":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:87","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"fc16ee98-791a-11e5-837f-6398ab13a0de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"com.graphhopper.util.AngleCalc.PI3_4","dist":"absY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"fc16ee99-791a-11e5-837f-07d4249a9754","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"fc16ee9a-791a-11e5-837f-230b493f1236","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"fc16ee9b-791a-11e5-837f-c14a65abb506","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:218","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"fc16ee9c-791a-11e5-837f-43499f0a7c42","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"timeout"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Downloader:57","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"fc16ee9d-791a-11e5-837f-db2bc65efe23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:500","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.BaseGraph.EdgeIterable.init(int, int)"},"status":-2},{"failures":[],"tindex":"fc1715ae-791a-11e5-837f-2fb0a47118ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"prepareContractedNodes","hash":"prepareContractedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:577","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.contracted-nodes\", int)"},"status":-2},{"failures":[],"tindex":"fc1715af-791a-11e5-837f-4dbf09d13de0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:267","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-2},{"failures":[],"tindex":"fc1715b0-791a-11e5-837f-f12d7bad31fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"size","mSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"fc1715b1-791a-11e5-837f-a90f637403c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1195","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"variableMap":{"fullyLoaded":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:111","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.needsTurnCostsSupport()) || ((com.graphhopper.routing.util.Weighting) == null))\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension());\nelse\n    com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(java.util.Arrays.asList(com.graphhopper.routing.util.Weighting) , com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.GraphExtension.NoOpExtension());\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}