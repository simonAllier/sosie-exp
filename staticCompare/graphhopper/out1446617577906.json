{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.reader.OSMReaderTest.testFerry":85,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":81,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":337,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":449,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":117,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":149,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":419,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":133,"com.graphhopper.GraphHopperTest.testPrepare":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":402,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":344,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":22,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":175,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":43,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":301,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.GraphHopperTest.testLoadOSM":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":191,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":176,"com.graphhopper.reader.OSMReaderTest.testSort":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":66,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":439,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":428,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":403,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":51,"com.graphhopper.routing.DijkstraTest.initializationError":225,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":460,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":378,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":437,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":431,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":199,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":409,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":384,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":442,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":423,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":450,"com.graphhopper.GraphHopperAPITest.testLoad":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":273,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":162,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":69,"com.graphhopper.reader.OSMReaderTest.testBarriers":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.util.GHUtilityTest.testCopy":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":345,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":255,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":429,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":266,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":289,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":9,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":388,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":376,"com.graphhopper.util.InstructionListTest.testWayList2":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":181,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":370,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":210,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":158,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":90,"com.graphhopper.routing.AStarTest.initializationError":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":135,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":304,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":358,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":465,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":197,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":332,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":294,"com.graphhopper.util.GHUtilityTest.testSort2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":31,"com.graphhopper.reader.OSMReaderTest.testMain":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":441,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":253,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":123,"com.graphhopper.storage.GraphHopperStorageTest.testClone":414,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":375,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":240,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":389,"com.graphhopper.routing.PathTest.testTime":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":323,"com.graphhopper.util.InstructionListTest.testCreateGPX":468,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":183,"com.graphhopper.reader.OSMReaderTest.testRelation":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":395,"com.graphhopper.util.GHUtilityTest.testSortDirected":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":128,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":467,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":48,"com.graphhopper.GraphHopperTest.testFootOnly":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":237,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":40,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":393,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":178,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":45,"com.graphhopper.routing.QueryGraphTest.testOneWay":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":174,"com.graphhopper.reader.OSMReaderTest.testWithBounds":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":269,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":461,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":396,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":456,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":452,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":157,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":77,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":430,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":292,"com.graphhopper.GraphHopperAPITest.testDisconnected179":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":142,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":264,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":361,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":405,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":109,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":416,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":218,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":11,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":293,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":28,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":194,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":36,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":313,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":23,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":455,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":308,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":422,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":355,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":252,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":318,"com.graphhopper.util.GHUtilityTest.testSort":72,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":338,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":464,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":258,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":59,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":316,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":111,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":453,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":151,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":291,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":186,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":391,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":230,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":377,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":139,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":342,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":299,"com.graphhopper.reader.OSMReaderTest.testFoot":86,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":331,"com.graphhopper.reader.OSMReaderTest.testOneWay":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":382,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":163,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":365,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":459,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":8,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":147,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":4,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":80,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":334,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":392,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":138,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":356,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":326,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":435,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":200,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":328,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":383,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":244,"com.graphhopper.GraphHopperTest.testFootAndCar":110,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":121,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":319,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":445,"com.graphhopper.GraphHopperTest.testPrepareOnly":99,"com.graphhopper.GraphHopperTest.testVia":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":26,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":93,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":119,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":79,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":426,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":278,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":92,"com.graphhopper.routing.AStarBidirectionTest.initializationError":224,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":394,"com.graphhopper.util.InstructionListTest.testFind":76,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":284,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":203},"transformations":[{"failures":[],"tindex":"1829412e-82bb-11e5-a3c5-f1d1797be8ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:197","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((\"nodes:\" + (com.graphhopper.util.PointList.getSize())) + \"; \") + (com.graphhopper.util.PointList.toString())"},"status":-2},{"failures":[0,1],"tindex":"182aa0bf-82bb-11e5-a3c5-bf64245cd2f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.insert(int, int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"182aa0c0-82bb-11e5-a3c5-cdb5e5f59408","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:155","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-1},{"failures":[8,9,14,221,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,222,223,34,35,36,37,224,225,226,45,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,58,59,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,60,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,64,65,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,85,86,87,88,89,90,348,91,92,349,350,93,94,95,351,96,99,110,115,352,116,353,354,117,118,355,356,119,120,357,358,121,359,360,361,122,362,123,124,125,363,364,365,366,367,126,127,368,369,128,129,370,130,371,372,131,132,373,133,374,375,134,376,135,136,137,377,378,379,138,380,381,382,383,384,139,140,141,385,386,387,388,389,142,143,390,391,144,145,392,146,393,394,147,148,395,149,396,397,150,398,151,152,153,399,400,401,154,402,403,404,405,406,407,155,408,409,410,411,156,412,157,158,159,413,414,415,416,417,160,161,418,419,162,163,420,164,421,422,165,166,423,167,424,425,168,426,169,170,171,427,428,429,172,430,431,432,433,434,435,178,185,436,193,200,203,437,438,439,440,441,442,204,443,205,206,207,444,445,446,447,448,208,209,449,450,210,211,451,212,452,453,213,214,454,215,455,456,216,457,217,218,219,458,459,460,220,461,462,463,464,465],"tindex":"182aeee1-82bb-11e5-a3c5-cdae9d0bca7e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"usedBits","end":"nextRelBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[466],"tindex":"182b15f2-82bb-11e5-a3c5-11357a698109","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:274","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.StringBuilder.append(\", \");\n"},"status":-1},{"failures":[],"tindex":"182b15f3-82bb-11e5-a3c5-178f63ed2955","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:255","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:985","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(java.util.List<com.graphhopper.util.shapes.GHPoint>.size())"},"status":-2},{"failures":[],"tindex":"182b15f4-82bb-11e5-a3c5-477ef6715cd4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:48","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStarBidirection"},"variableMap":{"aStarBi":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"182b3d05-82bb-11e5-a3c5-5d7061c84e02","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"from","tmpSize":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:65","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n} "},"status":0},{"failures":[253,295,335],"tindex":"182b3d06-82bb-11e5-a3c5-151ec1efb85d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:388","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"182b3d07-82bb-11e5-a3c5-fb12ead5d2cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:184","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)))"},"status":-2},{"failures":[],"tindex":"182b3d08-82bb-11e5-a3c5-7f32d10aeb72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:67","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[288,349],"tindex":"182b3d09-82bb-11e5-a3c5-878ec03214de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"flags","weightLong":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[21,24,29,30,33,37,107,108,111,112],"tindex":"182b641a-82bb-11e5-a3c5-d5ff6c43776c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:174","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"182b641b-82bb-11e5-a3c5-732f76a73cab","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":0},{"failures":[64,66,67,96,128,130,137,144,146,153,162,164,171,210,212,219],"tindex":"182b641c-82bb-11e5-a3c5-15db2c0988d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, com.graphhopper.storage.index.Location2IDQuadtree.int)"},"variableMap":{"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT":"com.graphhopper.storage.EdgeAccess.NO_NODE","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.int)"},"status":-1},{"failures":[],"tindex":"182b641d-82bb-11e5-a3c5-bde1880f6a7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:173","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"variableMap":{"nodesContracted":"absY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"182b8b2e-82bb-11e5-a3c5-b714e64109b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:91","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"status":-2},{"failures":[467,468,79],"tindex":"182b8b2f-82bb-11e5-a3c5-bf0cd353e0b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:118","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lon=\")"},"variableMap":{"txt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"status":-1},{"failures":[99,107,108,109,110,111,112,114,115,352],"tindex":"182b8b30-82bb-11e5-a3c5-c7911a2ffcf2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"status":-1},{"failures":[],"tindex":"182b8b31-82bb-11e5-a3c5-b7e6c2b4e2a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}