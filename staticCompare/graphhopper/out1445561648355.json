{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":36,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":35,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":33,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":34,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.coll.CompressedArrayTest.testCompress2":29,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":31,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.coll.CompressedArrayTest.testCompress":30,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":13,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":32,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.reader.OSMReaderTest.testSort":17},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"9106bb99-7920-11e5-9a6a-f724ad3db416","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"includeWay","capacity":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:243","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay);\n}"},"status":-1},{"failures":[29,30,31,32,33,34,35,36],"tindex":"9106bb9a-7920-11e5-9a6a-05453ea59dd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"9106e2ab-7920-11e5-9a6a-db67c151767e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:149","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.poll()"},"status":-2},{"failures":[],"tindex":"9106e2ac-7920-11e5-9a6a-6591743041b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:153","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:172","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.AStar.AStarEdge.int) == (int)"},"status":-2},{"failures":[],"tindex":"9106e2ad-7920-11e5-9a6a-0f556a2ed938","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"variableMap":{"properties":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"status":-2},{"failures":[],"tindex":"9106e2ae-7920-11e5-9a6a-53e8aefcd62d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"code","edgeFrom":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"9106e2af-7920-11e5-9a6a-05d5f0402c78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"delta_lon","incDist2DSum":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-2},{"failures":[],"tindex":"9106e2b0-7920-11e5-9a6a-99a671589960","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"charI","indexDivisor":"charI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"9106e2b1-7920-11e5-9a6a-47989071b6a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:164","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-2},{"failures":[],"tindex":"9106e2b2-7920-11e5-9a6a-0b43505d5377","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"y","com.graphhopper.util.DistanceCalcEarth.C":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"910709c3-7920-11e5-9a6a-8d7b4e6fe861","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:113","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"variableMap":{"raFile":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:272","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.getFD().sync()"},"status":-2},{"failures":[],"tindex":"910709c4-7920-11e5-9a6a-bf68ade970fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"toMoveNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:655","type":"CtForImpl","sourcecode":"for ( ; int >= 0 ; int--) {\n    if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"910709c5-7920-11e5-9a6a-651ee7e28e6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:944","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"variableMap":{"equalNormedDelta":"weightLimit","tmpNormedDist":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:190","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) > (double)"},"status":-2},{"failures":[],"tindex":"910709c6-7920-11e5-9a6a-af36d2bdd51f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"variableMap":{"is3D":"is3D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:139","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int), com.graphhopper.util.PointAccess.getElevation(int));\nelse\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int));\n"},"status":-2},{"failures":[],"tindex":"910709c7-7920-11e5-9a6a-fbf329555286","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:135","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"910709c8-7920-11e5-9a6a-ef23c0f4a860","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"length","bLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:68","type":"CtTryImpl","sourcecode":"try {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter);\n    byte[] byte[] = java.io.StringWriter.toString().getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    com.graphhopper.storage.DataAccess.setBytes(0, byte[], byte[].int);\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"910730d9-7920-11e5-9a6a-6dcb97b55c56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"variableMap":{"list":"pl","points":"pl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:65","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D())"},"status":-2},{"failures":[],"tindex":"910730da-7920-11e5-9a6a-994e78a9619c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:51","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode())"},"variableMap":{"opts":"opts","g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:49","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"910730db-7920-11e5-9a6a-fd89f11327ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:52","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"910730dc-7920-11e5-9a6a-99ef708ae3c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:102","type":"CtTryImpl","sourcecode":"try {\n    while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n        if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n            continue;\n        } \n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            continue;\n        } \n        int int = java.lang.String.indexOf(\"=\");\n        if (int < 0) {\n            com.graphhopper.util.Helper.com.graphhopper.util.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n            continue;\n        } \n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n    }\n} finally {\n    java.io.BufferedReader.close();\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}