{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":33,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":53,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":115,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":116,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":50,"com.graphhopper.routing.QueryGraphTest.testOneWay":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":319,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":171,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":242,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":290,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":241,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":240,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":195,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":320,"com.graphhopper.GraphHopperTest.testPrepare":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":251,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":135,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":150,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":15,"com.graphhopper.util.InstructionListTest.testWayList":119,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":118,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":123,"com.graphhopper.GraphHopperAPITest.testDisconnected179":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":229,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":172,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":48,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":292,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":254,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":107,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":284,"com.graphhopper.GraphHopperTest.testLoadOSM":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":198,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":173,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":301,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":75,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":316,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":161,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":37,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":58,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":39,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":131,"com.graphhopper.routing.PathTest.testWayList":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":22,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":52,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":296,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":209,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":335,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":47,"com.graphhopper.util.GHUtilityTest.testSort":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":230,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":332,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":293,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":214,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":295,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":186,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":259,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":270,"com.graphhopper.GraphHopperAPITest.testLoad":129,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":36,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":71,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":262,"com.graphhopper.routing.PathTest.testFound":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":244,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":20,"com.graphhopper.util.GHUtilityTest.testCopy":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":226,"com.graphhopper.routing.PathTest.testFindInstruction":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":13,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":272,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":231,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":212,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":162,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":124,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":274,"com.graphhopper.reader.PrinctonReaderTest.testRead":79,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":9,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":49,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":323,"com.graphhopper.util.InstructionListTest.testWayList2":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":201,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":247,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":178,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":167,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":68,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":314,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":306,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":8,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":136,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":237,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":2,"com.graphhopper.routing.PathBidirRefTest.testExtract":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":299,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":294,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":207,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":245,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":99,"com.graphhopper.util.GHUtilityTest.testSort2":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":234,"com.graphhopper.reader.OSMReaderTest.testMain":84,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":297,"com.graphhopper.routing.PathBidirRefTest.testExtract2":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":210,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":317,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":282,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":7,"com.graphhopper.storage.GraphHopperStorageTest.testClone":138,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":174,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":322,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":147,"com.graphhopper.GraphHopperTest.testFootAndCar":108,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":228,"com.graphhopper.routing.PathTest.testTime":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":239,"com.graphhopper.util.GHUtilityTest.testSortDirected":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":321,"com.graphhopper.GraphHopperTest.testPrepareOnly":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":312,"com.graphhopper.GraphHopperTest.testVia":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":215,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":25,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":194,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":298,"com.graphhopper.GraphHopperTest.testFootOnly":113,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":200,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":311,"com.graphhopper.util.InstructionListTest.testFind":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":304},"transformations":[{"failures":[],"tindex":"ba831bef-792a-11e5-8e65-036f2b48cd94","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"ba834300-792a-11e5-8e65-05a2770d479c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"nodeA","from":"nodeB","end":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-1},{"failures":[89],"tindex":"ba836a11-792a-11e5-8e65-9d067634ae2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:52","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equalsIgnoreCase(\"member\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>.add(new com.graphhopper.reader.OSMRelation.Member(javax.xml.stream.XMLStreamReader));\n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-1},{"failures":[],"tindex":"ba836a12-792a-11e5-8e65-f539b0cf90d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"edges","da":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:421","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"ba836a13-792a-11e5-8e65-05df59516b70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"lat","x":"prevLat","absY":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:774","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"ba836a14-792a-11e5-8e65-0140536b1eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"status":-2},{"failures":[],"tindex":"ba839125-792a-11e5-8e65-8fd36179e0ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"variableMap":{"val":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:556","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLon(int)"},"status":-2},{"failures":[],"tindex":"ba839126-792a-11e5-8e65-bb90cfa871dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n} else {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null;\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true);\n    if (boolean)\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    else\n        com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false);\n}"},"status":-2},{"failures":[],"tindex":"ba839127-792a-11e5-8e65-43a772fd14e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"variableMap":{"turnRestrictionBit":"flags","restricted":"backward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:297","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"ba839128-792a-11e5-8e65-8fb7e31b372a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"ba839129-792a-11e5-8e65-69504537498c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"status":-2},{"failures":[],"tindex":"ba83912a-792a-11e5-8e65-9b90e7210f95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"elevation","hasRel":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:354","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ba83b83b-792a-11e5-8e65-fbe08e5af562","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:275","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"ba83b83c-792a-11e5-8e65-4b9586f28f60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":-2},{"failures":[],"tindex":"ba83b83d-792a-11e5-8e65-694d36021815","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"edgeId","nodeCount":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:228","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(int)"},"status":-2},{"failures":[],"tindex":"ba83b83e-792a-11e5-8e65-89d87aafddd1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:517","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"variableMap":{"osmFile":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SimpleFSLockFactory:61","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String);\n    if ((java.io.File.exists()) && (!(java.io.File.delete())))\n        throw new java.lang.RuntimeException((\"Cannot delete \" + java.io.File));\n    \n} "},"status":-2},{"failures":[],"tindex":"ba83b83f-792a-11e5-8e65-3939d9dbbced","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-2},{"failures":[],"tindex":"ba83b840-792a-11e5-8e65-79da1bc72e27","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"a_lon","tmp":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-2},{"failures":[],"tindex":"ba83df51-792a-11e5-8e65-d9048d7ba8a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:147","type":"CtAssignmentImpl","sourcecode":"int = int - (java.util.List<java.nio.ByteBuffer>.size())"},"status":-2},{"failures":[],"tindex":"ba83df52-792a-11e5-8e65-df314f62d4ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:66","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.AlgorithmOptions.getHints().get((java.lang.String + \".approximation\"), \"BeelineSimplification\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}