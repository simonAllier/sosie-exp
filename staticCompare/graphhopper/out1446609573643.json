{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":46,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":81,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":55,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":51,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":75,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":35,"com.graphhopper.routing.QueryGraphTest.testOneWay":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":62,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":37,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":45,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":61,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":49,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.GraphHopperTest.testFootAndCar":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":32,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":79,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":6,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":58,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":53,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":7,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":63,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":47,"com.graphhopper.GraphHopperAPITest.testLoad":72,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":68,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":64,"com.graphhopper.GraphHopperTest.testFootOnly":71,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":36,"com.graphhopper.GraphHopperTest.testLoadOSM":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":12},"transformations":[{"failures":[],"tindex":"752da397-82a8-11e5-9bdf-7dea6df1e3f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:46","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil"},"variableMap":{"com.graphhopper.util.BitUtil.BIG":"com.graphhopper.util.BitUtil.BIG"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:45","type":"CtIfImpl","sourcecode":"if (java.nio.ByteOrder.equals(java.nio.ByteOrder.java.nio.ByteOrder))\n    return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil;\nelse\n    return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil;\n"},"status":-2},{"failures":[0,1,2],"tindex":"752df1b8-82a8-11e5-9bdf-1373357a0b63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:130","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"752df1b9-82a8-11e5-9bdf-352c6cb24577","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:831","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.NodeAccess.getDimension()"},"status":-2},{"failures":[],"tindex":"752df1ba-82a8-11e5-9bdf-35d58d8e0546","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:162","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"752df1bb-82a8-11e5-9bdf-8fd2dd28ecac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:362","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"variableMap":{"this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1004","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false);\n    if ((!boolean) && (com.graphhopper.GHRequest.hasFavoredHeading(0)))\n        throw new java.lang.IllegalStateException(\"Heading is not (fully) supported for CHGraph. See issue #483\");\n    \n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n    com.graphhopper.storage.Graph = com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting);\n} else\n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n"},"status":-2},{"failures":[],"tindex":"752e18cc-82a8-11e5-9bdf-7f02d7720f23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:216","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"To access instructions you need to enable creation before routing\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:222","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"))"},"status":0},{"failures":[],"tindex":"752e18cd-82a8-11e5-9bdf-357ced714741","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"mSize":"dLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[3,4,5,6,7,8,9,10],"tindex":"752e18ce-82a8-11e5-9bdf-578a1c240a3a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","edgeTo":"i","edgeFrom":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"752e3fdf-82a8-11e5-9bdf-91a3cf915ccb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"752e3fe0-82a8-11e5-9bdf-e34a0b115175","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"variableMap":{"initialized":"doReverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-1},{"failures":[28,29,30,16,31,32,33,34,19,21,22,24],"tindex":"752e66f1-82a8-11e5-9bdf-23b3cf5da0c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"b_lon_deg","azimuth":"b_lon_deg","java.lang.Math.PI":"shrinkFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:180","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"752e66f2-82a8-11e5-9bdf-d92b6a73855e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:741","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.get(int)"},"status":-1},{"failures":[],"tindex":"752e66f3-82a8-11e5-9bdf-4974b6bdf9c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:343","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int);\n}"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57],"tindex":"752e66f4-82a8-11e5-9bdf-a7d603bb7016","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"752e8e05-82a8-11e5-9bdf-eb8b158059e8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"variableMap":{"logMessages":"orientation","logMessagesPercentage":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"status":-2},{"failures":[58,59,60,61,62,37,63,64,65,66,38],"tindex":"752e8e06-82a8-11e5-9bdf-ef04e24867d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:428","type":"CtTryImpl","sourcecode":"try {\n    if (!(com.graphhopper.util.Constants.boolean)) {\n        java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))));\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"752e8e07-82a8-11e5-9bdf-03863e39f31d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:81","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-1},{"failures":[11,12,13,14,15,67,28,29,30,16,68,69,70,71,72],"tindex":"752e8e08-82a8-11e5-9bdf-2b80d332ee98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"variableMap":{"pavementName":"vehicle","wayTypeName":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:261","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[11,12,13,14,15,28,16,73,74,75,17,18,19,76,77,78,20,21,79,80,81,22,82,23,24,25,26,27],"tindex":"752eb519-82a8-11e5-9bdf-b12ee1a0ad57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:174","type":"CtAssignmentImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(5)"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:175","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.put(int, java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":-1},{"failures":[],"tindex":"752eb51a-82a8-11e5-9bdf-01e21c7275f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:55","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"size":"nodes","fromHeap":"openSetTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:65","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"752e18cc-82a8-11e5-9bdf-7f02d7720f23","diffs":[{"branches":{"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b"],"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.AbstractDataAccess.getFullName"]},"type":"staticDiff"}]}]}