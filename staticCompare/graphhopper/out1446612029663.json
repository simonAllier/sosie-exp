{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":91,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":98,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":21,"com.graphhopper.routing.PathTest.testFindInstruction":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":135,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":82,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":129,"com.graphhopper.routing.QueryGraphTest.testOneWay":105,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":18,"com.graphhopper.storage.VLongStorageTest.testWrite":114,"com.graphhopper.reader.OSMReaderTest.testWithBounds":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":89,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":8,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":100,"com.graphhopper.coll.CompressedArrayTest.testCompress":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":45,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":94,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":10,"com.graphhopper.GraphHopperTest.testPrepare":68,"com.graphhopper.util.InstructionListTest.testWayList2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":128,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":83,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":107,"com.graphhopper.util.InstructionListTest.testWayList":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":23,"com.graphhopper.reader.OSMReaderTest.testOneWay":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":125,"com.graphhopper.GraphHopperAPITest.testDisconnected179":81,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":7,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":138,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":131,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":2,"com.graphhopper.GraphHopperTest.testLoadOSM":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":122,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":64,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":9,"com.graphhopper.reader.OSMReaderTest.testSort":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":29,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":54,"com.graphhopper.reader.OSMReaderTest.testMain":48,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":13,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":93,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":142,"com.graphhopper.routing.PathTest.testWayList":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":31,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":51,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":118,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":34,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":88,"com.graphhopper.GraphHopperTest.testFootAndCar":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":22,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":136,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":33,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":101,"com.graphhopper.GraphHopperTest.testPrepareOnly":59,"com.graphhopper.coll.CompressedArrayTest.testCompress2":116,"com.graphhopper.GraphHopperTest.testVia":67,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":74,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":141,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":53,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":40,"com.graphhopper.GraphHopperAPITest.testLoad":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":32,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":99,"com.graphhopper.GraphHopperTest.testFootOnly":75,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":36,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":37,"com.graphhopper.reader.OSMReaderTest.testBarriers":50,"com.graphhopper.util.InstructionListTest.testFind":77,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":28},"transformations":[{"failures":[0],"tindex":"2d33d4a1-82ae-11e5-96b5-6510ad75f77f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:397","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"2d3a3d42-82ae-11e5-96b5-111aa8ef5bb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"status":-1},{"failures":[3,17,18,19,4,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,5,35,36,37,38,39,40,41,42,43,44,8,10,45,13,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,14,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,15,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,16,108],"tindex":"2d3a3d43-82ae-11e5-96b5-1f4b88d6057c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"status":-1},{"failures":[51],"tindex":"2d3a3d44-82ae-11e5-96b5-35b396b3a15f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"variableMap":{"intLow":"edgeId","intHigh":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-1},{"failures":[109,110,111,112,113],"tindex":"2d3a6455-82ae-11e5-96b5-8b287c6c4cd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"from","nodeCount":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)))"},"status":-1},{"failures":[114,115,116,117],"tindex":"2d3a6456-82ae-11e5-96b5-d7868cc589fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:74","type":"CtAssignmentImpl","sourcecode":"this.long = byte"},"variableMap":{"byteCapacity":"i","cap":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"status":-1},{"failures":[],"tindex":"2d3a6457-82ae-11e5-96b5-3d3f34d90095","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"tmp","speed":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:246","type":"CtIfImpl","sourcecode":"if (boolean) {\n    double = double[][int];\n    double[][int] = double[][int];\n    double[][int] = double;\n} "},"status":0},{"failures":[47,70,75,118,119],"tindex":"2d3a6458-82ae-11e5-96b5-eb4fde2cab22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,0,145],"tindex":"2d3a8b69-82ae-11e5-96b5-f59ab98a9ff0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"2d3a8b6a-82ae-11e5-96b5-63bdf6062289","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:400","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"2d3a8b6b-82ae-11e5-96b5-bf8726a6e426","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"osmReaderWayPointMaxDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:581","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"osmreader.wayPointMaxDistance\", double)"},"status":0},{"failures":[],"tindex":"2d3ab27c-82ae-11e5-96b5-59b92e7a1fb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.ViaInstruction:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setTime(com.graphhopper.util.Instruction.getTime())"},"variableMap":{"instr":"this","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setDistance(com.graphhopper.util.Instruction.getDistance())"},"status":0},{"failures":[],"tindex":"2d3ab27d-82ae-11e5-96b5-4d348a4c7451","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:113","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"2d3ab27e-82ae-11e5-96b5-3b16b674cec5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:98","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"variableMap":{"node":"fromNode","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:44","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"2d3ad98f-82ae-11e5-96b5-a3f07ba91f9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_EDGE":"com.graphhopper.util.Constants.VERSION_SHORTCUT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"shortcuts.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"2d3ad990-82ae-11e5-96b5-a70900966bbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"method"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors()) {\n    throw new java.lang.RuntimeException(((((\"You cannot call \" + java.lang.String) + \" if response contains errors. Check this with ghResponse.hasErrors(). \") + \"Errors are: \") + com.graphhopper.GHResponse.(getErrors())));\n} "},"status":-2},{"failures":[],"tindex":"2d3ad991-82ae-11e5-96b5-af4b8ac6a680","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"ferryBit","highKey":"acceptBit","key":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:207","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n        return long;\n    \n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"2d3b00a2-82ae-11e5-96b5-4b80eb65e5e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:101","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"status":0},{"failures":[],"tindex":"2d3b00a3-82ae-11e5-96b5-17d714523edd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:172","type":"CtLocalVariableImpl","sourcecode":"java.nio.ByteBuffer java.nio.ByteBuffer = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:338","type":"CtLocalVariableImpl","sourcecode":"java.nio.ByteBuffer java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2d3b00a2-82ae-11e5-96b5-4b80eb65e5e9","diffs":[{"methodsDiff":{"delete":["java.io.RandomAccessFile.seek"]},"type":"staticDiff"}]},{"transformation":"2d3a8b6b-82ae-11e5-96b5-bf8726a6e426","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getDouble"]},"type":"staticDiff"}]}]}