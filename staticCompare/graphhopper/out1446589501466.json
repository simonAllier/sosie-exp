{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":16,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":77,"com.graphhopper.reader.OSMReaderTest.testMain":9,"com.graphhopper.reader.OSMReaderTest.testFerry":8,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":46,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":68,"com.graphhopper.routing.QueryGraphTest.testOneWay":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":60,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":51,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":65,"com.graphhopper.reader.OSMReaderTest.testWithBounds":17,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":13,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":76,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":49,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":26,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":45,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":44,"com.graphhopper.reader.OSMReaderTest.testFoot":36,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":29,"com.graphhopper.reader.OSMReaderTest.testOneWay":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":40,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":67,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":41,"com.graphhopper.GraphHopperTest.testPrepareOnly":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":57,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":81,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":15,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":12,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":38,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":78,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":4,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":53,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":63,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":75,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":14,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":62,"com.graphhopper.reader.OSMReaderTest.testBarriers":11,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":72,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":23,"com.graphhopper.reader.OSMReaderTest.testSort":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":56},"transformations":[{"failures":[],"tindex":"b938f6dc-8279-11e5-a179-05fe5377fce4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:360","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(gnu.trove.list.TLongList.get(((gnu.trove.list.TLongList.size()) - 1)))"},"status":-2},{"failures":[],"tindex":"b938f6dd-8279-11e5-a179-01ee4aebec7c","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:51","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(5)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double), double, double)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"b938f6de-8279-11e5-a179-ef9db0187093","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"nextPillarId","dLat":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:599","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[20,21,22,23,24,2,3,25,4,5,7,26,27,28,29,30],"tindex":"b9391def-8279-11e5-a179-0d72376aa9cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap((int + 1))"},"variableMap":{"this":"clonePL","nodeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:358","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][int], double[][int])"},"status":-1},{"failures":[],"tindex":"b9391df0-8279-11e5-a179-85aff157bb5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeWrapper.ensureCapacity(int)"},"status":0},{"failures":[],"tindex":"b9391df1-8279-11e5-a179-d78a5076b1db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:859","type":"CtAssignmentImpl","sourcecode":"gnu.trove.set.hash.TLongHashSet = null"},"status":0},{"failures":[31,32],"tindex":"b9391df2-8279-11e5-a179-875322acb077","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-1},{"failures":[],"tindex":"b9391df3-8279-11e5-a179-4bba5fb7cdb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:92","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(((int) / (int)) * double))"},"status":-2},{"failures":[0,33,1,24,2,3,25,4,5,6,7,34,35,8,36,9,10,11,12,37,13,14,15,16,17,18,19],"tindex":"b9391df4-8279-11e5-a179-cf5f71a0eeb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:672","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (gnu.trove.list.TLongList.size()) ; int++) {\n        long long = gnu.trove.list.TLongList.get(int);\n        int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long);\n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int))\n            continue;\n        \n        if (int == (com.graphhopper.reader.OSMReader.int)) {\n            if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n                int = int;\n                int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n                int = (-int) - 3;\n                if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n                    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                    com.graphhopper.util.PointList.clear();\n                    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n                } \n                int = int;\n                int = -1;\n            } \n            continue;\n        } \n        if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n            throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n        \n        if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n            boolean boolean = (int == 0) || (int == int);\n            if (!boolean) {\n                int = int;\n            } \n            int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean);\n        } \n        if (int < (com.graphhopper.reader.OSMReader.int)) {\n            int = (-int) - 3;\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            if (int >= 0) {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n                com.graphhopper.util.PointList.clear();\n                com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n            } \n            int = int;\n        } \n    }\n} catch (java.lang.RuntimeException ex) {\n    com.graphhopper.reader.OSMReader.org.slf4j.Logger.error((\"Couldn\\'t properly add edge with osm ids:\" + gnu.trove.list.TLongList), java.lang.RuntimeException);\n    if (boolean)\n        throw java.lang.RuntimeException;\n    \n}"},"status":-1},{"failures":[38,39,40,41,42],"tindex":"b9394505-8279-11e5-a179-65b244099d0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"maxTurnCosts","dy":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"b9394506-8279-11e5-a179-cf1a50ba1864","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"status":0},{"failures":[],"tindex":"b9394507-8279-11e5-a179-e55e55496176","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:90","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[43,44,45,46,47,48,49],"tindex":"b9394508-8279-11e5-a179-9d939cb5dd68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:854","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,19,74,75,76,77,78],"tindex":"b9396c19-8279-11e5-a179-b5a84e2a47d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"status":-1},{"failures":[79,80],"tindex":"b9396c1a-8279-11e5-a179-a56ec9f8446e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:445","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"b9396c1b-8279-11e5-a179-25eb42375a0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:149","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"variableMap":{"cp":"_location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:45","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[13,38,39,40,41],"tindex":"b9396c1c-8279-11e5-a179-d18ea739641b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"turnRestrictionBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:634","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"b9396c1d-8279-11e5-a179-19c7a7929a53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"b9396c1e-8279-11e5-a179-cdae7a32c20d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:362","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":0},{"failures":[81],"tindex":"b9396c1f-8279-11e5-a179-df5160167421","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:247","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b9391df0-8279-11e5-a179-85aff157bb5d","diffs":[{"branches":{"com.graphhopper.util.EdgeWrapperTest.testPut":["com.graphhopper.util.EdgeWrapper_void_ensureCapacity(int).b","com.graphhopper.util.EdgeWrapper_void_ensureCapacity(int).t1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.EdgeWrapper.ensureCapacity"]},"type":"staticDiff"}]},{"transformation":"b9396c1e-8279-11e5-a179-cdae7a32c20d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.checkInit"]},"type":"staticDiff"}]},{"transformation":"b9396c1b-8279-11e5-a179-25eb42375a0e","diffs":[{"methodsDiff":{"delete":["java.io.File.getAbsolutePath"]},"type":"staticDiff"}]}]}