{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":199,"com.graphhopper.reader.OSMReaderTest.testFerry":341,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":119,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":88,"com.graphhopper.reader.OSMReaderTest.testWithBounds":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":125,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":289,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":219,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":84,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":138,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":230,"com.graphhopper.GraphHopperTest.testPrepare":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":231,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":244,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":93,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":300,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":234,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":368,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":250,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":187,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":32,"com.graphhopper.GraphHopperTest.testLoadOSM":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":91,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":268,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":301,"com.graphhopper.reader.OSMReaderTest.testSort":344,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":18,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":351,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":319,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":274,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":143,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":28,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":243,"com.graphhopper.routing.DijkstraTest.initializationError":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":111,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":312,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":333,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":13,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":167,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":340,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":196,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":180,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":153,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":155,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":302,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":295,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":246,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.reader.OSMReaderTest.testBarriers":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":320,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":45,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":173,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":40,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":72,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":275,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":189,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":175,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":168,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":204,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":97,"com.graphhopper.reader.OSMReaderTest.testFoot":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":113,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":338,"com.graphhopper.reader.OSMReaderTest.testOneWay":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":65,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":317,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":308,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":172,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":216,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":245,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":252,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":346,"com.graphhopper.routing.AStarTest.initializationError":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":102,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":92,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":212,"com.graphhopper.reader.OSMReaderTest.testMain":343,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":336,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":284,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":321,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":70,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":288,"com.graphhopper.storage.GraphHopperStorageTest.testClone":248,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":228,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":140,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":258,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":265,"com.graphhopper.GraphHopperTest.testFootAndCar":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":54,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":315,"com.graphhopper.GraphHopperTest.testPrepareOnly":364,"com.graphhopper.GraphHopperTest.testVia":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":16,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":293,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":269,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":359,"com.graphhopper.GraphHopperTest.testFootOnly":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":137,"com.graphhopper.routing.AStarBidirectionTest.initializationError":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":215,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":314,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":305},"transformations":[{"failures":[],"tindex":"e33e861a-8278-11e5-bfec-73286f4dd4ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:143","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity()"},"status":-2},{"failures":[],"tindex":"e33ead2b-8278-11e5-bfec-13cd2297f59a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"intVal","to":"degree","lonSize":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"status":-2},{"failures":[],"tindex":"e33ead2c-8278-11e5-bfec-a36746163233","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"e33ead2d-8278-11e5-bfec-c5b2951c66d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"encoderList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"e33ed43e-8278-11e5-bfec-113b8859b3c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:613","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = new com.graphhopper.routing.VirtualEdgeIterator(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:677","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator com.graphhopper.routing.VirtualEdgeIterator = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>.get(int)"},"status":-2},{"failures":[],"tindex":"e33ed43f-8278-11e5-bfec-a7bcc07f9dc4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:695","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":0},{"failures":[],"tindex":"e33efb50-8278-11e5-bfec-7b0595cfdf40","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:275","type":"CtReturnImpl","sourcecode":"return ((short)((int[][][int][int]) >> 16))"},"variableMap":{"index":"bufferIndex","bufferIndex":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"status":-2},{"failures":[],"tindex":"e33efb51-8278-11e5-bfec-2f73974ab2c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"lon","angleXY":"precision"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:221","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"status":-2},{"failures":[357,48,49,50,53,55,57,59,61,73,74,76,77,81,85,87,89,96,97,99,100,104,108,110,112,115,116,118,121,126,129,343,344,346,349,352],"tindex":"e33efb52-8278-11e5-bfec-875dc421c8c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)) {\n    throw new java.lang.IllegalArgumentException(((\"Azimuth \" + double) + \" must be in (0, 360)\"));\n} "},"variableMap":{"azimuth":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:534","type":"CtIfImpl","sourcecode":"if (double < (int)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[358,359],"tindex":"e33efb53-8278-11e5-bfec-0f5eeb9b3355","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:991","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"<->\""},"variableMap":{"str":"str","from":"kmInteger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"e33f2264-8278-11e5-bfec-93ce39878bef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:111","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"e33f2265-8278-11e5-bfec-4d80546f76e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:74","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e33f2266-8278-11e5-bfec-5f39661fff0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    com.graphhopper.storage.RAMIntDataAccess.int[][][int] = java.util.Arrays.copyOf(int[], int[].int);\n}"},"variableMap":{"length":"length","rda":"this","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:196","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"rw\");\n    try {\n        long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity();\n        com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        for (int int = 0 ; int < (int[][].int) ; int++) {\n            int[] int[] = int[][][int];\n            int int = int[].int;\n            byte[] byte[] = new byte[int * 4];\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n            }\n            java.io.RandomAccessFile.write(byte[]);\n        }\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Couldn\\'t store integers to \" + com.graphhopper.storage.AbstractDataAccess.(toString())) , java.lang.Exception);\n}"},"status":-2},{"failures":[360,341],"tindex":"e33f2267-8278-11e5-bfec-9d9923bff2ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"e33f2268-8278-11e5-bfec-afa12291cec2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:233","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"e33f2269-8278-11e5-bfec-fdfb979ec86f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"dist","java.lang.Math.PI":"maxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:150","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[361,362],"tindex":"e33f497a-8278-11e5-bfec-eb78074829c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"to","mainNodes":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:303","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"status":-1},{"failures":[],"tindex":"e33f497b-8278-11e5-bfec-b5d03d5985c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:121","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"variableMap":{"ret":"N_ADDITIONAL","retBucket":"nodeEntryBytes","i":"nodeEntryBytes","storedKey":"oldCapacity","bucketSize":"N_ADDITIONAL","key":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:287","type":"CtForImpl","sourcecode":"for (long long = long + (int) ; long < long ; long += int) {\n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n}"},"status":-2},{"failures":[341,342,343,344,345,346,347,348,349,350,351,352,353,354,363,364,365,366,367,368,355,369,370,371,372,373,356],"tindex":"e33f497c-8278-11e5-bfec-456da7841aa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:592","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double);\n} else if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e33f2269-8278-11e5-bfec-fdfb979ec86f","diffs":[{"branches":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":["com.graphhopper.util.Helper_double_round4(double).b"]},"type":"branch"}]}]}