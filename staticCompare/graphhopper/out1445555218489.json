{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"988731de-7911-11e5-8e8a-1f5eef61dc2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"preparePeriodicUpdates","mSize":"preparePeriodicUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:574","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.updates.periodic\", int)"},"status":-2},{"failures":[],"tindex":"988758ef-7911-11e5-8e8a-33a7cf52e8bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"988758f0-7911-11e5-8e8a-bf2d39da160e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"oldCap","key":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)));\n"},"status":-2},{"failures":[],"tindex":"988758f1-7911-11e5-8e8a-dbbbc4bd6dee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:570","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.this.setWeight(this, double)"},"variableMap":{"weight":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:84","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n        continue;\n    \n    for (int int, int int = 0 ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            if (double <= 0)\n                break;\n            \n            com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"988758f2-7911-11e5-8e8a-1f6d835c2c9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:177","type":"CtTryImpl","sourcecode":"try {\n    java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n    break;\n} catch (java.io.IOException tmpex) {\n    java.io.IOException = java.io.IOException;\n    int++;\n    com.graphhopper.util.Helper.cleanHack();\n    try {\n        java.lang.Thread.sleep(5);\n    } catch (java.lang.InterruptedException iex) {\n    }\n}"},"status":-2},{"failures":[],"tindex":"98878003-7911-11e5-8e8a-c9fcf6435e9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"variableMap":{"res":"res","dist":"foundDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n        continue;\n    } \n    for (int int = 0, int int ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if (double < 0)\n            continue;\n        \n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            double = double;\n        } \n        if (int > 0)\n            continue;\n        \n        int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n            if (double < double) {\n                com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n                if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                \n                double = double;\n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"98878004-7911-11e5-8e8a-219f2c079924","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"nextEdgeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:201","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[],"tindex":"98878005-7911-11e5-8e8a-a5e03eb808fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"minLat","azimuth":"minLat","java.lang.Math.PI":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"98878006-7911-11e5-8e8a-1f614fd375d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"code","guess":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"9887a717-7911-11e5-8e8a-b7470dd7f3ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:164","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"9887a718-7911-11e5-8e8a-adef80a6d003","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:37","type":"CtConstructorCallImpl","sourcecode":"new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.util.Weighting)"},"status":-2},{"failures":[],"tindex":"9887a719-7911-11e5-8e8a-4ddbd05bc14f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:676","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"9887a71a-7911-11e5-8e8a-dfdc9db7c571","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"9887a71b-7911-11e5-8e8a-1fb3236281b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:107","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int[][int])"},"status":-2},{"failures":[],"tindex":"9887a71c-7911-11e5-8e8a-5fe8b48c1940","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.CHEdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"9887ce2d-7911-11e5-8e8a-53f5acbd63cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:288","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"9887ce2e-7911-11e5-8e8a-652bc33cf00b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:75","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9887ce2f-7911-11e5-8e8a-03739fb069a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:184","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / long"},"status":-2},{"failures":[],"tindex":"9887ce30-7911-11e5-8e8a-77171933f754","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"variableMap":{"traversalMode":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    java.lang.Object = null;\nelse if (java.lang.Object instanceof java.lang.String) {\n    java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n    java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n    if (java.lang.String.isEmpty())\n        java.lang.Object = null;\n    else\n        try {\n            java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n        } catch (java.lang.NumberFormatException ex) {\n            return ;\n        }\n    \n} else\n    java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n"},"status":-2},{"failures":[],"tindex":"9887ce31-7911-11e5-8e8a-11684a72e28d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), com.graphhopper.storage.index.LocationIndexTree.calcChecksum())"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}