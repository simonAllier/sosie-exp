{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":69,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":8,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":30,"com.graphhopper.routing.PathTest.testFindInstruction":80,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":71,"com.graphhopper.routing.QueryGraphTest.testOneWay":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":62,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":9,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":26,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":97,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":94,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":4,"com.graphhopper.util.InstructionListTest.testWayList2":89,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":102,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":50,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":74,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":79,"com.graphhopper.util.InstructionListTest.testWayList":88,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":46,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":86,"com.graphhopper.coll.OSMIDMapTest.testGet":75,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":111,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":106,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":17,"com.graphhopper.reader.OSMReaderTest.testSort":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":16,"com.graphhopper.util.DistanceCalcEarthTest.testEdgeDistance":40,"com.graphhopper.reader.OSMReaderTest.testMain":42,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":96,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":101,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":95,"com.graphhopper.routing.PathTest.testWayList":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":59,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":34,"com.graphhopper.coll.OSMIDMapTest.testGet2":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":5,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":41,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":3,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":36,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":38,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":92,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":48,"com.graphhopper.coll.OSMIDMapTest.testGetLong":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":31,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":53,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":32,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":6,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":58,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":82,"com.graphhopper.util.InstructionListTest.testFind":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":108},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"a4dde417-8283-11e5-9e32-57c68e897416","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"variableMap":{"latSize":"mainNodes","lonSize":"mainNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:621","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"status":-1},{"failures":[],"tindex":"a4def588-8283-11e5-9e32-6b08b78a0072","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:115","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[27],"tindex":"a4def589-8283-11e5-9e32-954dcd83e74f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:412","type":"CtIfImpl","sourcecode":"if (\"none\".equals(java.lang.String))\n    return 140;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:418","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\":urban\"))\n    return 50;\n"},"status":-1},{"failures":[],"tindex":"a4df1c9a-8283-11e5-9e32-a79a0c8b0b3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[28,29,30,31,32,33,34,35],"tindex":"a4df1c9b-8283-11e5-9e32-310b2def12b2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"foundDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:120","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[1,3,4,36,37,38,39,40,41,42,43,44,20,21,22,23,24,25,29,30,31,32,45,46,47,48,49,50,34,51,52,53,54,55,56,57,58,35,59,60],"tindex":"a4df1c9c-8283-11e5-9e32-11d18f7136a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"delta_lat","shrinkFactor":"a_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:166","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-1},{"failures":[],"tindex":"a4df43ad-8283-11e5-9e32-1de6f4b9b1b0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"daPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:118","type":"CtIfImpl","sourcecode":"if (int < ((int) - 1))\n    int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n"},"status":0},{"failures":[],"tindex":"a4df43ae-8283-11e5-9e32-c3ed359963c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"a4df43af-8283-11e5-9e32-6168d865d4be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:158","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[int][]"},"variableMap":{"segmentCount":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:68","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][]"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69],"tindex":"a4df43b0-8283-11e5-9e32-75e3dad9487f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n        return true;\n    \n}"},"status":-1},{"failures":[0,1,2,3,4,5,70,71,6,7,8,72,9,10,11,12,13,14,73,74,15,16,17,18,19,44,22,26],"tindex":"a4df6ac1-8283-11e5-9e32-69a04a509e4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:174","type":"CtAssignmentImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(5)"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:175","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.put(int, java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":-1},{"failures":[],"tindex":"a4df6ac2-8283-11e5-9e32-df416095718f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:479","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[],"tindex":"a4df6ac3-8283-11e5-9e32-1f8c7b81ec52","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"variableMap":{"name":"message","refName":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"a4df6ac4-8283-11e5-9e32-a7cc6589e40e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"graphIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:872","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":0},{"failures":[75,76,77,78],"tindex":"a4df91d5-8283-11e5-9e32-99c58d3ef9a3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"variableMap":{"high":"noEntryValue","highKey":"retIndex","key":"retIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:95","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return int;\n"},"status":-1},{"failures":[79],"tindex":"a4df91d6-8283-11e5-9e32-67b01192722b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:291","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"status":-1},{"failures":[80,81],"tindex":"a4df91d7-8283-11e5-9e32-ef081449c820","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"prevLat","orientation":"currLat","java.lang.Math.PI":"currLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:326","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"a4df91d8-8283-11e5-9e32-351d6d2fb1f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:541","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long)(((int + int) + 1))) * 4))"},"variableMap":{"intIndex":"shortcutCount","dataAccess":"shortcuts","len":"shortcutCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 1) * (int)))"},"status":0},{"failures":[82,83,84,85],"tindex":"a4dfb8e9-8283-11e5-9e32-732ce1f6e9f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"clockwise","dy":"clockwise"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:100","type":"CtReturnImpl","sourcecode":"return ((java.lang.Math.double) * (int)) - (double)"},"status":-1},{"failures":[86,87,70,7,8,9,11,12,13,73,74,88,89,42,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,45,106,53,107,108,109,110,111,112],"tindex":"a4dfb8ea-8283-11e5-9e32-cf57d54075b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:399","type":"CtAssignmentImpl","sourcecode":"int = 4"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a4df1c9a-8283-11e5-9e32-a79a0c8b0b3e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]},{"transformation":"a4df6ac4-8283-11e5-9e32-a7cc6589e40e","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.geohash.SpatialKeyAlgo_void_decode(long,com.graphhopper.util.shapes.GHPoint).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"]},"type":"branch"}]}]}