{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":315,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":69,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":42,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":159,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":267,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":249,"com.graphhopper.routing.QueryGraphTest.testOneWay":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":182,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":65,"com.graphhopper.reader.OSMReaderTest.testWithBounds":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":259,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":260,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":324,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":26,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":228,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":332,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":314,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":110,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":320,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":297,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":33,"com.graphhopper.util.InstructionListTest.testWayList":48,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":143,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":306,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":97,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":172,"com.graphhopper.GraphHopperAPITest.testDisconnected179":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":148,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":264,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":230,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":298,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":291,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":346,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":166,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":283,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":243,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":335,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":333,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":85,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":134,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":161,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":309,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":262,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":201,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":140,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":204,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":319,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":248,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":344,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":105,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":282,"com.graphhopper.routing.PathTest.testWayList":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":192,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":25,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":144,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":210,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":153,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":95,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":311,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":290,"com.graphhopper.util.GHUtilityTest.testSort":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":71,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":300,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":241,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":152,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":193,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":255,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":202,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":160,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":216,"com.graphhopper.GraphHopperAPITest.testLoad":342,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":318,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":157,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":112,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":265,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":179,"com.graphhopper.routing.PathTest.testFound":284,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":79,"com.graphhopper.util.GHUtilityTest.testCopy":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":302,"com.graphhopper.routing.PathTest.testFindInstruction":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":294,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":218,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":103,"com.graphhopper.util.InstructionListTest.testEmptyList":46,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":36,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":141,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":310,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":51,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":191,"com.graphhopper.util.shapes.CircleTest.testContains":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":326,"com.graphhopper.reader.PrinctonReaderTest.testRead":345,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":156,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":165,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":187,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":253,"com.graphhopper.util.InstructionListTest.testWayList2":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":88,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":75,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":72,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":146,"com.graphhopper.reader.OSMReaderTest.testOneWay":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":239,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":106,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":254,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":167,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":235,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":98,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":118,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":61,"com.graphhopper.routing.PathBidirRefTest.testExtract":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":323,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":242,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":339,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":338,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":337,"com.graphhopper.util.GHUtilityTest.testSort2":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":312,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":194,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":195,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":154,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":250,"com.graphhopper.routing.PathBidirRefTest.testExtract2":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":96,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":180,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":229,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":245,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":68,"com.graphhopper.storage.GraphHopperStorageTest.testClone":114,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":124,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":28,"com.graphhopper.routing.PathTest.testTime":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":308,"com.graphhopper.util.GHUtilityTest.testSortDirected":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":209,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":174,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":39,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":307,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":20,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":347,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":155,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":272,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":50,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":87,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":89,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":286,"com.graphhopper.util.InstructionListTest.testFind":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":164},"transformations":[{"failures":[],"tindex":"fbf20e56-827f-11e5-aed8-33f55a8b4cd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtLocalVariableImpl","sourcecode":"double double = -com.graphhopper.util.AngleCalc.(calcOrientation(double, double, double, double))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"fbf23567-827f-11e5-aed8-43cbd7578c42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:509","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getElevation(int)"},"variableMap":{"mainNodeAccess":"nodeAccess","nodeId":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:532","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"fbf23568-827f-11e5-aed8-311771dacbd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"status":-1},{"failures":[24],"tindex":"fbf25c79-827f-11e5-aed8-b3adbea20f2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"fbf25c7a-827f-11e5-aed8-c7e01d7c7aef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:110","type":"CtReturnImpl","sourcecode":"return int * (int)"},"variableMap":{"retBucket":"visitedCount","bucketSize":"visitedCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:178","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"fbf25c7b-827f-11e5-aed8-ef468108dbb6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:70","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Dijkstra.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[25,26],"tindex":"fbf25c7c-827f-11e5-aed8-bb709903ce1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"variableMap":{"res":"key","maxBit":"key","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint)"},"status":-1},{"failures":[27,28,29,30,31],"tindex":"fbf2838d-827f-11e5-aed8-dd4143ee3705","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double)"},"status":-1},{"failures":[32],"tindex":"fbf2838e-827f-11e5-aed8-415ab5c9b83a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:215","type":"CtAssignmentImpl","sourcecode":"double[] = null"},"variableMap":{"weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:114","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[18],"tindex":"fbf2838f-827f-11e5-aed8-771bea147bfd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"edgeId","edgeFrom":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-1},{"failures":[33],"tindex":"fbf28390-827f-11e5-aed8-89350b33c553","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.setMemory(((long) + long), ((long) - long), ((byte)(0)));\n"},"status":-1},{"failures":[],"tindex":"fbf2aaa1-827f-11e5-aed8-f5275e41102e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:440","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-2},{"failures":[],"tindex":"fbf2aaa2-827f-11e5-aed8-b312d8853ab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:618","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double)"},"status":0},{"failures":[],"tindex":"fbf2aaa3-827f-11e5-aed8-7966f705327a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:309","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":0},{"failures":[],"tindex":"fbf2aaa4-827f-11e5-aed8-59c0b9491994","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"preciseIndexResolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:590","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.highResolution\", int)"},"status":0},{"failures":[],"tindex":"fbf2aaa5-827f-11e5-aed8-a9474a771aef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:314","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int)"},"status":-2},{"failures":[],"tindex":"fbf2d1b6-827f-11e5-aed8-3d24389a2ef3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:156","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-2},{"failures":[],"tindex":"fbf2d1b7-827f-11e5-aed8-2f2aa4337150","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:85","type":"CtReturnImpl","sourcecode":"return java.lang.Long.parseLong(java.lang.String)"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":0},{"failures":[34,35,36,37,38,39,40,41],"tindex":"fbf2d1b8-827f-11e5-aed8-d37584660568","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n        continue;\n    } \n    for (int int = 0, int int ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if (double < 0)\n            continue;\n        \n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            double = double;\n        } \n        if (int > 0)\n            continue;\n        \n        int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n            if (double < double) {\n                com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n                if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                \n                double = double;\n            } \n        } \n    }\n}"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,25,65,66,67,68,69,70,71,72,73,74,75,34,76,77,78,35,36,37,38,39,40,79,80,81,82,26,83,84,85,86,87,88,89,90,91,92,93,41,94,95,96,97,98,99,100,101,102,103,104,105,27,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,28,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,29,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,32,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,0,1,336,337,338,339,340,341,2,3,4,5,6,7,8,9,10,11,12,342,343,344,345,346,13,14,15,16,17,30,31,18,19,347,20,348,21,22,23],"tindex":"fbf2f8c9-827f-11e5-aed8-6da2054c9883","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"fbf2d1b7-827f-11e5-aed8-2f2aa4337150","diffs":[{"branchesDiff":{"delete":["c0"]},"type":"staticDiff"}]},{"transformation":"fbf2aaa2-827f-11e5-aed8-b312d8853ab0","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.AbstractRoutingAlgorithm.setWeightLimit"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_setWeightLimit(double).b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_setWeightLimit(double).b"]},"type":"branch"}]},{"transformation":"fbf2aaa4-827f-11e5-aed8-59c0b9491994","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}