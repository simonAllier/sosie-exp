{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":106,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":151,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":157,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":102,"com.graphhopper.reader.OSMReaderTest.testFerry":67,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":148,"com.graphhopper.routing.QueryGraphTest.testOneWay":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":141,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":180,"com.graphhopper.reader.OSMReaderTest.testWithBounds":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":45,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":11,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":84,"com.graphhopper.util.BitUtilBigTest.testReverse":245,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":18,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":96,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":8,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.util.InstructionListTest.testWayList":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":123,"com.graphhopper.GraphHopperAPITest.testDisconnected179":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":219,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":50,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":181,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":5,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":49,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":239,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":110,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":208,"com.graphhopper.GraphHopperTest.testLoadOSM":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":168,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":182,"com.graphhopper.reader.OSMReaderTest.testSort":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":48,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":117,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":172,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":198,"com.graphhopper.routing.PathTest.testWayList":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.util.PointListTest.testIterable":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":222,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":30,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":195,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":104,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":137,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":133,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":205,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":95,"com.graphhopper.GraphHopperAPITest.testLoad":66,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":44,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":82,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":51,"com.graphhopper.reader.OSMReaderTest.testBarriers":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":28,"com.graphhopper.util.GHUtilityTest.testCopy":122,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":207,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":105,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":159,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":13,"com.graphhopper.reader.PrinctonReaderTest.testRead":77,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":17,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":118,"com.graphhopper.util.InstructionListTest.testWayList2":125,"com.graphhopper.reader.OSMReaderTest.testFoot":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":107,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":188,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":89,"com.graphhopper.reader.OSMReaderTest.testOneWay":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":200,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":16,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":81,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":10,"com.graphhopper.routing.PathBidirRefTest.testExtract":128,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":210,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":175,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":213,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":36,"com.graphhopper.reader.OSMReaderTest.testMain":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":230,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":146,"com.graphhopper.routing.PathBidirRefTest.testExtract2":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":169,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":178,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":97,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":240,"com.graphhopper.util.SimpleIntDequeTest.testPush":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":183,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":203,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":214,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":231,"com.graphhopper.GraphHopperTest.testFootAndCar":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":166,"com.graphhopper.util.BitUtilLittleTest.testReverse":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":139,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":32,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":73,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":165,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":152,"com.graphhopper.GraphHopperTest.testFootOnly":65,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":170,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":171,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":2,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":191},"transformations":[{"failures":[],"tindex":"b42050a5-8271-11e5-bca7-0585ffb4ffba","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"b42077b6-8271-11e5-bca7-cfe3a6248638","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:237","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"variableMap":{"logSize":"flags","java.lang.Integer.MAX_VALUE":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"b42077b7-8271-11e5-bca7-63698ce876f9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"nEdge","edgeEntry":"nEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:97","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":0},{"failures":[],"tindex":"b42077b8-8271-11e5-bca7-cb8a63562408","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:101","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHLongIntBTree.BTreeEntry.get(long)"},"variableMap":{"root":"root","key":"com.graphhopper.util.Helper.MB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:121","type":"CtReturnImpl","sourcecode":"return java.lang.Math.round(((com.graphhopper.coll.GHLongIntBTree.BTreeEntry.getCapacity()) / (com.graphhopper.util.Helper.long)))"},"status":-2},{"failures":[127,67],"tindex":"b42077b9-8271-11e5-bca7-9b2113405138","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:98","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception ex) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[128,129,3,8,9,10,11,12,13,130,14,15,16,17,18,19,20,21,22,23,24,25,26,131,28,30,31,33,34,35,36,37,38,132,39,40,41,42,133,55,57,58,61,66,69,72,75,134,135,87,136,137,98,138,139,108,140,141,119,122,124,142,126],"tindex":"b4209eca-8271-11e5-bca7-3780e9470072","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR","lat2":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR","lon1":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR","lon2":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR","shrinkFactor":"com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:107","type":"CtReturnImpl","sourcecode":"return int / (com.graphhopper.storage.EdgeAccess.double)"},"status":-1},{"failures":[49,143,144,145,146],"tindex":"b4209ecb-8271-11e5-bca7-7b7a9a515d31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"b4209ecc-8271-11e5-bca7-f5ab45d67b0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:551","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b4209ecd-8271-11e5-bca7-bde65daa74cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.this(10, com.graphhopper.util.Translation)"},"status":-2},{"failures":[147,148,149,150,151,152,153,154,6,155,7,156,157,158,28,159,34,35,38,53,54,55,56,57,160,58,59,60,61,62,63,64,65,66,161,69,162,70,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"b4209ece-8271-11e5-bca7-d7dcb322eb28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:218","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"b420c5df-8271-11e5-bca7-a193f4bc71d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"variableMap":{"turnCosts":"wayGeometry","nodeIndex":"byteLength","turnCostsEntryBytes":"byteLength"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:949","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + int))"},"status":0},{"failures":[],"tindex":"b420c5e0-8271-11e5-bca7-930a16165b33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:396","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[198,81,82,199,200,86,201,143,202,88,203,204,205,92,93,206,207,96,97,208,144,209,99,210,102,103,211,212,106,107,213,145,214,109,215,216,217,218,113,114,219,220,118,221,146,222,120,223],"tindex":"b420c5e1-8271-11e5-bca7-43ef7163e187","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"variableMap":{"i":"nodeEntryBytes","lastIndex":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:328","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.DataAccess.ensureCapacity((((long)(int)) * (int)))"},"status":-1},{"failures":[],"tindex":"b420c5e2-8271-11e5-bca7-3d25ecca7f55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"len","noOfStates":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[149,224,225,226,71,227],"tindex":"b420c5e3-8271-11e5-bca7-0b9e4a6532c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"nextTurnBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:204","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[228,229,230,231,232,233,234,235,58,59,60,61,62,63,236,64,237,67,68,69,162,70,238,239,71,72,73,74,75,240,241,76,142],"tindex":"b420ecf4-8271-11e5-bca7-dfdba135be10","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:251","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"b420ecf5-8271-11e5-bca7-65d7b1d47656","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:45","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[242,243,244,245],"tindex":"b420ecf6-8271-11e5-bca7-f3ec13216332","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:183","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"b420ecf7-8271-11e5-bca7-399b521e1676","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:116","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[246],"tindex":"b420ecf8-8271-11e5-bca7-37b2a3b29ac5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:77","type":"CtIfImpl","sourcecode":"if ((int) > int) {\n    int = com.graphhopper.util.SimpleIntDeque.getSize();\n    int[] int[] = new int[(int) + 10];\n    java.lang.System.arraycopy(int[], int, int[], 0, int);\n    int[] = int[];\n    int = 0;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b420c5df-8271-11e5-bca7-a193f4bc71d9","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.ensureCapacity"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":["com.graphhopper.storage.RAMDataAccess_boolean_ensureCapacity(long).t2"]},"type":"branch"}]}]}