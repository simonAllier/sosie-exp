{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":70,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":80,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.reader.OSMReaderTest.testFerry":103,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":336,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":337,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":77,"com.graphhopper.routing.QueryGraphTest.testOneWay":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":274,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":195,"com.graphhopper.reader.OSMReaderTest.testWithBounds":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":232,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":231,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":230,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":177,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":275,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":33,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":139,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.util.InstructionListTest.testWayList":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":332,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":330,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":218,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":193,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":196,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":32,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":97,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":325,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":243,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":318,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":180,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":197,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":254,"com.graphhopper.reader.OSMReaderTest.testSort":106,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":96,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":42,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":84,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":23,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":283,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":79,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":298,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":248,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":300,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":289,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":31,"com.graphhopper.util.GHUtilityTest.testSort":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":219,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":286,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":89,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":326,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":171,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":312,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":247,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":157,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":141,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":303,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":309,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":252,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":99,"com.graphhopper.reader.OSMReaderTest.testBarriers":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":294,"com.graphhopper.routing.PathTest.testFound":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":271,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":215,"com.graphhopper.util.GHUtilityTest.testCopy":340,"com.graphhopper.routing.PathTest.testFindInstruction":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":295,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":305,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":220,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":169,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":151,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":320,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":307,"com.graphhopper.reader.PrinctonReaderTest.testRead":117,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":44,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":76,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":278,"com.graphhopper.util.InstructionListTest.testWayList2":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":183,"com.graphhopper.reader.OSMReaderTest.testFoot":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":237,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":202,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":155,"com.graphhopper.reader.OSMReaderTest.testOneWay":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":101,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":268,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":260,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":304,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":163,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":227,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":108,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":279,"com.graphhopper.routing.PathBidirRefTest.testExtract":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":328,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":236,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":327,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":235,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":209,"com.graphhopper.util.GHUtilityTest.testSort2":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":223,"com.graphhopper.reader.OSMReaderTest.testMain":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":249,"com.graphhopper.routing.PathBidirRefTest.testExtract2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":192,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":272,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":316,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.storage.GraphHopperStorageTest.testClone":126,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":198,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":277,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":135,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":217,"com.graphhopper.routing.PathTest.testTime":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":297,"com.graphhopper.util.GHUtilityTest.testSortDirected":342,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":266,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":172,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":176,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":250,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":182,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":184,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":226,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":265,"com.graphhopper.util.InstructionListTest.testFind":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":290},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"b19df071-793a-11e5-b9f0-a1a0b75ccea7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"variableMap":{"index":"edgePointer","entriesPerSegment":"E_NODEA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:152","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-1},{"failures":[],"tindex":"b19e3e92-793a-11e5-b9f0-3537ea6db6b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"b19e3e93-793a-11e5-b9f0-ef4bb93a0349","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:264","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b19e3e94-793a-11e5-b9f0-c9c5bebfb176","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"toWayID","capacity":"toWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:926","type":"CtIfImpl","sourcecode":"if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"b19e3e95-793a-11e5-b9f0-93ed62271951","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:835","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"variableMap":{"len":"s","dim":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:199","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"b19e3e96-793a-11e5-b9f0-1f9d3de6c0f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:90","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"b19e65a7-793a-11e5-b9f0-9d75bc280e07","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"names","index":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"b19e65a8-793a-11e5-b9f0-552577f5a510","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"variableMap":{"initialBits":"prev","allBits":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:685","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int)"},"status":-2},{"failures":[],"tindex":"b19e65a9-793a-11e5-b9f0-fb35ce17266b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:349","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)]);\n}"},"status":-2},{"failures":[],"tindex":"b19e65aa-793a-11e5-b9f0-4d96379cc070","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:160","type":"CtIfImpl","sourcecode":"if ((java.util.List<com.graphhopper.routing.util.TIntArrayList>.size()) <= 1)\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"b19e65ab-793a-11e5-b9f0-677759606064","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:221","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:238","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int))"},"status":-2},{"failures":[],"tindex":"b19e65ac-793a-11e5-b9f0-bdf0d9399f6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:63","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"b19e65ad-793a-11e5-b9f0-a52a1897049a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:122","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"b19e8cbe-793a-11e5-b9f0-efc693615884","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:106","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b19e8cbf-793a-11e5-b9f0-6504d1331996","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"b19e8cc0-793a-11e5-b9f0-b14a747e86c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"variableMap":{"workerThreads":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint)"},"status":-2},{"failures":[],"tindex":"b19e8cc1-793a-11e5-b9f0-656663b8a925","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:183","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[],"tindex":"b19e8cc2-793a-11e5-b9f0-c381fe23f8de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"variableMap":{"com.graphhopper.storage.DAType.RAM_INT_STORE":"com.graphhopper.storage.DAType.RAM_INT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:68","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":-2},{"failures":[],"tindex":"b19e8cc3-793a-11e5-b9f0-9fd82bdc57d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"sb":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\").append(com.graphhopper.util.Instruction.getSign())"},"status":-2},{"failures":[],"tindex":"b19e8cc4-793a-11e5-b9f0-a90fcee99b99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"lineNo","retBucket":"lineNo","i":"lineNo","bucketSize":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:60","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}