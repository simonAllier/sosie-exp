{"failureDictionary":{"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":75,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":51,"com.graphhopper.reader.OSMReaderTest.testFerry":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":171,"com.graphhopper.util.InstructionListTest.testEmptyList":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":47,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":106,"com.graphhopper.reader.OSMReaderTest.testWithBounds":134,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":178,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":117,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":189,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":122,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":53,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":54,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":8,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":150,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":61,"com.graphhopper.util.PointListTest.testAddPL":16,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":155,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":154,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":46,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":96,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":109,"com.graphhopper.coll.OSMIDMapTest.testGet":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":161,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":123,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":116,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":182,"com.graphhopper.storage.RAMDataAccessTest.testCopy":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":181,"com.graphhopper.GraphHopperTest.testLoadOSM":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":137,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":140,"com.graphhopper.reader.OSMReaderTest.testSort":128,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":163,"com.graphhopper.storage.RAMDataAccessTest.testSegments":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":60,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":105,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":81,"com.graphhopper.reader.OSMReaderTest.testMain":127,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":172,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":45,"com.graphhopper.coll.OSMIDMapTest.testGet2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":29,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":33,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":151,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":104,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":87,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":2,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":94,"com.graphhopper.coll.OSMIDMapTest.testGetLong":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":93,"com.graphhopper.util.InstructionListTest.testCreateGPX":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":9,"com.graphhopper.GraphHopperTest.testVia":143,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":125,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":100,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":153,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":41,"com.graphhopper.GraphHopperAPITest.testLoad":15,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":144,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":67,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":110,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":69,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":37,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":147,"com.graphhopper.reader.OSMReaderTest.testBarriers":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":28,"com.graphhopper.util.GHUtilityTest.testCopy":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":114,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":165},"transformations":[{"failures":[0],"tindex":"c5bf85a1-8291-11e5-9daf-1fc4c87541f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:114","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    break;\n"},"status":-1},{"failures":[],"tindex":"c5bfacb2-8291-11e5-9daf-e75b1f26dec7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:657","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n    break;\n"},"variableMap":{"removedNodes":"filledIndices","toMoveNodes":"locs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:189","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    int int = ((int)(com.graphhopper.geohash.KeyAlgo.encode(double, double)));\n    long long = ((long)(int)) * 4;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        int int = com.graphhopper.storage.DataAccess.getInt(long);\n        com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n        if (double < double) {\n            com.graphhopper.storage.DataAccess.setInt(long, int);\n        } \n    } else {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"c5bfd3c3-8291-11e5-9daf-fb23b27f5bcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"skippedEdge2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"c5bfd3c4-8291-11e5-9daf-fd450bf82f1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"size":"delta","i":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"status":0},{"failures":[],"tindex":"c5bfd3c5-8291-11e5-9daf-df97ae6f9d53","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:221","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"c5bffad6-8291-11e5-9daf-15b4a5517538","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"variableMap":{"is3D":"is3D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:843","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n    int += 4;\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n    int += 4;\n    if (boolean) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n        int += 4;\n    } \n}"},"status":-1},{"failures":[],"tindex":"c5bffad7-8291-11e5-9daf-ed0343c182d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:591","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getElevation(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[12,13,14],"tindex":"c5bffad8-8291-11e5-9daf-1fa4248e0d2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:144","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.InstructionList.(size()) - 1) ; int++) {\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = int > 0 ? com.graphhopper.util.InstructionList.get((int - 1)) : null;\n    boolean boolean = com.graphhopper.util.Instruction == null;\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((int + 1));\n    com.graphhopper.util.Instruction.checkOne();\n    long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean);\n}"},"status":-1},{"failures":[],"tindex":"c5bffad9-8291-11e5-9daf-d315a8698922","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"c5c021ea-8291-11e5-9daf-edc250728ba8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:136","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"variableMap":{"lat":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:402","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[15,16,17,18,19,20],"tindex":"c5c021eb-8291-11e5-9daf-a7b2de5ff416","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:163","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getElevation(int)"},"variableMap":{"tmp":"i","i":"i","elevations":"latitudes","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:160","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[21,22,23,24,25,15,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,6,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,10,11,130,131,132,133,134,135,136,137,138,139,140,141,142,143,17,18,19,144,145,146,20],"tindex":"c5c021ec-8291-11e5-9daf-c907c10a2f9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[138],"tindex":"c5c048fd-8291-11e5-9daf-b15307fca844","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:107","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"c5c048fe-8291-11e5-9daf-03081a560b3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"c5c048ff-8291-11e5-9daf-cda3c445ed8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"variableMap":{"str":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:298","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"c5c04900-8291-11e5-9daf-4fc2411d4b7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[12,13,14],"tindex":"c5c07011-8291-11e5-9daf-65daddbb9098","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:177","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.GPXEntry>.add(new com.graphhopper.util.GPXEntry(double , double , double , long))"},"status":-1},{"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,136],"tindex":"c5c07012-8291-11e5-9daf-01fa3bae75cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-1},{"failures":[188,189,123],"tindex":"c5c07013-8291-11e5-9daf-a7fc2cb634ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"nn","NO_TURN_ENTRY":"oldPrio"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:347","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.update(int, int, int)"},"status":-1},{"failures":[],"tindex":"c5c07014-8291-11e5-9daf-07ba919876f4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:91","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty())\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n"},"variableMap":{"tmpPoints":"clonePL","fullPoints":"clonePL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:361","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c5c07014-8291-11e5-9daf-07ba919876f4","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.util.PointList_boolean_isEmpty().b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.PointList_boolean_isEmpty().b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.util.PointList_boolean_isEmpty().b"]},"type":"branch"}]},{"transformation":"c5c048fe-8291-11e5-9daf-03081a560b3c","diffs":[{"methodsDiff":{"delete":["java.nio.ByteBuffer.get"]},"type":"staticDiff"}]}]}