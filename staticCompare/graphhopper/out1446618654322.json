{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":77,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":14,"com.graphhopper.routing.PathTest.testFindInstruction":107,"com.graphhopper.reader.OSMReaderTest.testFerry":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":13,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":52,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":53,"com.graphhopper.GraphHopperTest.testPrepare":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":11,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":40,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":65,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":91,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":46,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":55,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":44,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":54,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":84,"com.graphhopper.reader.OSMReaderTest.testSort":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":74,"com.graphhopper.reader.OSMReaderTest.testMain":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":82,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":30,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":104,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":106,"com.graphhopper.GraphHopperTest.testFootAndCar":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":15,"com.graphhopper.coll.IntIntBinHeapTest.testSize":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.GraphHopperTest.testVia":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":69,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":25,"com.graphhopper.GraphHopperAPITest.testLoad":92,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":38,"com.graphhopper.GraphHopperTest.testFootOnly":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":80,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":102,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":87,"com.graphhopper.reader.OSMReaderTest.testBarriers":99,"com.graphhopper.util.InstructionListTest.testFind":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":64,"com.graphhopper.util.GHUtilityTest.testCopy":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":24},"transformations":[{"failures":[0,1],"tindex":"99af4b85-82bd-11e5-977a-2fd4a32788e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:111","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLongitude(int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"99af7296-82bd-11e5-977a-ed6d484eff96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:525","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"99af99a7-82bd-11e5-977a-4b2f653f2639","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:164","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-1},{"failures":[],"tindex":"99af99a8-82bd-11e5-977a-cd49dc2208cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:136","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"variableMap":{"lat":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:218","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"99af99a9-82bd-11e5-977a-b1962486d778","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[84],"tindex":"99af99aa-82bd-11e5-977a-97c9922522a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"allSegments","hash":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:274","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"99afc0bb-82bd-11e5-977a-35dda519aef4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"segmentSizePower","tmpSize":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:100","type":"CtTryImpl","sourcecode":"try {\n    long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long);\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)));\n}"},"status":-1},{"failures":[],"tindex":"99afc0bc-82bd-11e5-977a-3f69d5e4f150","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[85],"tindex":"99afc0bd-82bd-11e5-977a-47955a5d1fa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:494","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeExplorer == null) || (com.graphhopper.util.EdgeExplorer == null)) {\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , true , false));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n} "},"status":-1},{"failures":[86,87],"tindex":"99afe7ce-82bd-11e5-977a-19a0e3e2ed51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:500","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[88,89,90,91],"tindex":"99afe7cf-82bd-11e5-977a-41ccf172a4fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"size","child":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:110","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"99afe7d0-82bd-11e5-977a-651902d57252","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:411","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"99afe7d1-82bd-11e5-977a-ad3107b6f308","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:185","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[92,93,34,35,36,37,94,95,38,39,40,96,41,97,98,99,100,101,102,103,104,105,106],"tindex":"99b00ee2-82bd-11e5-977a-915f51911e0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"lastIndex","i":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"99b00ee3-82bd-11e5-977a-f3c6f7830586","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:199","type":"CtIfImpl","sourcecode":"if (java.io.IOException == null) {\n    throw new java.lang.AssertionError(\"internal problem as the exception \\'ioex\\' shouldn\\'t be null\");\n} "},"variableMap":{"ioex":"ex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:150","type":"CtTryImpl","sourcecode":"try {\n    this.java.io.File = java.io.File.getCanonicalFile();\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"99b00ee4-82bd-11e5-977a-5b1302599c84","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:887","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"variableMap":{"weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"status":-2},{"failures":[107,108],"tindex":"99b035f5-82bd-11e5-977a-a9c4f07e1073","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"pointIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:316","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"99b035f6-82bd-11e5-977a-95ccf70e12e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:536","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:166","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"99b035f7-82bd-11e5-977a-0de6a9f98bc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[104,105],"tindex":"99b035f8-82bd-11e5-977a-ade2469c30ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:107","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"99b035f7-82bd-11e5-977a-0de6a9f98bc7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.close"]},"type":"staticDiff"}]}]}