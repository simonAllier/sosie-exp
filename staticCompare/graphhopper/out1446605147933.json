{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":111,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":119,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":141,"com.graphhopper.GraphHopperAPITest.testNoLoad":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":176,"com.graphhopper.reader.OSMReaderTest.testFerry":59,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":219,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":220,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":172,"com.graphhopper.reader.OSMReaderTest.testWithBounds":70,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":144,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":228,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":125,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":193,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":134,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":110,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":76,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":93,"com.graphhopper.util.BitUtilLittleTest.testToBitString":207,"com.graphhopper.util.InstructionListTest.testWayList":53,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.GraphHopperAPITest.testDisconnected179":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":25,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":224,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":17,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":46,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":204,"com.graphhopper.GraphHopperTest.testLoadOSM":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":174,"com.graphhopper.reader.OSMReaderTest.testSort":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":105,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":69,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":85,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":16,"com.graphhopper.routing.PathTest.testWayList":22,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":168,"com.graphhopper.coll.OSMIDMapTest.testGet2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":100,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":107,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":139,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":151,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":24,"com.graphhopper.util.GHUtilityTest.testSort":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":96,"com.graphhopper.coll.OSMIDMapTest.testGetLong":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":126,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":198,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.GraphHopperAPITest.testLoad":73,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":39,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":197,"com.graphhopper.util.TranslationMapTest.testToString":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":131,"com.graphhopper.reader.OSMReaderTest.testBarriers":63,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":199,"com.graphhopper.routing.PathTest.testFound":18,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":98,"com.graphhopper.util.GHUtilityTest.testCopy":211,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":143,"com.graphhopper.routing.PathTest.testFindInstruction":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":90,"com.graphhopper.util.InstructionListTest.testEmptyList":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":82,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":190,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":218,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":200,"com.graphhopper.util.InstructionListTest.testWayList2":57,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":178,"com.graphhopper.reader.OSMReaderTest.testOneWay":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":189,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":147,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":0,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":64,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":145,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":165,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":226,"com.graphhopper.coll.OSMIDMapTest.testGet":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":148,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":33,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":210,"com.graphhopper.storage.RAMDataAccessTest.testCopy":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":32,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":225,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":167,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":194,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":29,"com.graphhopper.storage.RAMDataAccessTest.testSegments":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":185,"com.graphhopper.util.GHUtilityTest.testSort2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":108,"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":136,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":135,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":170,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":154,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.routing.PathTest.testTime":19,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":140,"com.graphhopper.util.BitUtilLittleTest.testToFloat":208,"com.graphhopper.util.InstructionListTest.testCreateGPX":56,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":157,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":104,"com.graphhopper.util.GHUtilityTest.testSortDirected":223,"com.graphhopper.GraphHopperTest.testPrepareOnly":27,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":117,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":103,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":166,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":129,"com.graphhopper.GraphHopperTest.testFootOnly":44,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":58,"com.graphhopper.util.BitUtilLittleTest.testToInt":209,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":161,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":20,"com.graphhopper.util.InstructionListTest.testFind":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":201},"transformations":[{"failures":[0,1,2,3,4],"tindex":"274169a5-829e-11e5-ae4a-df021ad746c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:258","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"274190b6-829e-11e5-ae4a-eb9d7d4adb6a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:145","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        continue;\n    } \n    int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n    if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    } else {\n        java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n        java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n        try {\n            java.lang.String.format(java.lang.String, java.lang.Object[]);\n        } catch (java.lang.Exception ex) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"2741b7c7-829e-11e5-ae4a-7772a97f3204","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"2741ded8-829e-11e5-ae4a-2f125504a5cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:745","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.get(int)"},"status":-2},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,22,117,118,119,120,121,122,27,28,29,30,31,32,33,35,36,37,38,39,40,42,43,44,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,53,57,212,213,214,215,216,59,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"274205e9-829e-11e5-ae4a-d1f538875aba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[77,217,92,93,102,106],"tindex":"27438c8a-829e-11e5-ae4a-a7c18eef1329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIteratorState.isShortcut())\n    return com.graphhopper.util.CHEdgeIteratorState.getWeight();\n"},"status":-1},{"failures":[90,93,94,98,101,102,106,107,109,110,112,113,115,116,28,29,30,31,32,35,36,37,38,39,40,43],"tindex":"27438c8b-829e-11e5-ae4a-cd8ea0fd58ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"variableMap":{"degree":"i","lon":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:417","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[78,217,218,90,93,94,102,105,107,108,109,110,114,116,28,29,30,31,32],"tindex":"27438c8c-829e-11e5-ae4a-2959dd04d5ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:159","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"27438c8d-829e-11e5-ae4a-9d1f26d38cf4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"variableMap":{"node":"len","onStack":"indicesCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:255","type":"CtIfImpl","sourcecode":"if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n    int = int;\n    int = int + (int);\n} "},"status":-2},{"failures":[37,219,220,221,222,223,62],"tindex":"2743b39e-829e-11e5-ae4a-09f044ee7834","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:43","type":"CtWhileImpl","sourcecode":"while ((gnu.trove.stack.array.TIntArrayStack.size()) > 0) {\n    int = gnu.trove.stack.array.TIntArrayStack.pop();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n            if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n                gnu.trove.stack.array.TIntArrayStack.push(int);\n            } \n        }\n        com.graphhopper.coll.GHBitSet.add(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"2743b39f-829e-11e5-ae4a-6d4c0089ba95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"visitedCountFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:158","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"2743b3a0-829e-11e5-ae4a-19d44fc589f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"variableMap":{"com.graphhopper.routing.util.PriorityWeighting.class":"com.graphhopper.routing.util.PriorityWeighting.class","weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:884","type":"CtIfImpl","sourcecode":"if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-2},{"failures":[224],"tindex":"2743dab1-829e-11e5-ae4a-b508475773e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:69","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n    continue;\n} "},"status":-1},{"failures":[225],"tindex":"2743dab2-829e-11e5-ae4a-d99c8578bfdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:275","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1},{"failures":[23,49],"tindex":"2743dab3-829e-11e5-ae4a-c7c27b8c51ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:323","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"2743dab4-829e-11e5-ae4a-052d4c61df06","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:342","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.put(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.put(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.put(byte[], 0, int);\n}"},"status":0},{"failures":[226,227,228,229],"tindex":"2743dab5-829e-11e5-ae4a-398380aeb63b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"start","i":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"status":-1},{"failures":[],"tindex":"274401c6-829e-11e5-ae4a-094c54813112","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"newWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:311","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n} "},"status":-1},{"failures":[],"tindex":"274401c7-829e-11e5-ae4a-0f8782820a77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((((((((((((((((((((((((\"took:\" + ((int)(com.graphhopper.util.StopWatch.stop().getSeconds()))) + \", new shortcuts: \") + (com.graphhopper.util.Helper.nf(int))) + \", \") + (com.graphhopper.routing.ch.PreparationWeighting)) + \", \") + (com.graphhopper.routing.util.FlagEncoder)) + \", dijkstras:\") + (long)) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", initSize:\") + int) + \", periodic:\") + (int)) + \", lazy:\") + (int)) + \", neighbor:\") + (int)) + \", \") + (com.graphhopper.util.Helper.getMemInfo())))"},"status":0},{"failures":[],"tindex":"274401c8-829e-11e5-ae4a-b9c059b37c33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\nelse\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"274401c7-829e-11e5-ae4a-0f8782820a77","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.routing.ch.PrepareContractionHierarchies.getTimesAsString","com.graphhopper.util.StopWatch.getSeconds","com.graphhopper.util.Helper.getMemInfo","com.graphhopper.util.Helper.nf","org.slf4j.Logger.info"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.ch.PreparationWeighting_java.lang.String_toString().b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.routing.ch.PreparationWeighting_java.lang.String_toString().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.routing.ch.PreparationWeighting_java.lang.String_toString().b"]},"type":"branch"}]}]}