{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":68,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":139,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":148,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":95,"com.graphhopper.reader.OSMReaderTest.testFerry":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":7,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":23,"com.graphhopper.routing.QueryGraphTest.testOneWay":147,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":79,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":27,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":66,"com.graphhopper.reader.OSMReaderTest.testWithBounds":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":20,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":43,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":135,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":104,"com.graphhopper.GraphHopperTest.testPrepare":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":67,"com.graphhopper.reader.OSMReaderTest.testFoot":158,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":87,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":85,"com.graphhopper.reader.OSMReaderTest.testOneWay":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":77,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":26,"com.graphhopper.GraphHopperAPITest.testDisconnected179":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":12,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":11,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":18,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":46,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":132,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":92,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":47,"com.graphhopper.GraphHopperTest.testLoadOSM":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":117,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":5,"com.graphhopper.reader.OSMReaderTest.testSort":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":128,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":91,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":65,"com.graphhopper.reader.OSMReaderTest.testMain":123,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":114,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":72,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":15,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":120,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":150,"com.graphhopper.util.SimpleIntDequeTest.testSmall":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":106,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":57,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":109,"com.graphhopper.util.SimpleIntDequeTest.testPush":152,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":64,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":153,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":155,"com.graphhopper.GraphHopperTest.testFootAndCar":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":84,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":53,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":61,"com.graphhopper.reader.OSMReaderTest.testRelation":163,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":76,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":143,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":28,"com.graphhopper.GraphHopperTest.testVia":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":97,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":99,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":134,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":60,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":165,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":116,"com.graphhopper.GraphHopperAPITest.testLoad":121,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":107,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":141,"com.graphhopper.GraphHopperTest.testFootOnly":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":71,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":112,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":162,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":113,"com.graphhopper.reader.OSMReaderTest.testBarriers":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":52,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":90},"transformations":[{"failures":[],"tindex":"89ebb8b1-82bb-11e5-a72e-d79d33a928aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.int , int , double , double)"},"status":-1},{"failures":[],"tindex":"89ebdfc2-82bb-11e5-a72e-fbba22fa6673","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:110","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    boolean = true;\n    boolean = true;\n} "},"status":-1},{"failures":[0,1,2,3],"tindex":"89ec06d3-82bb-11e5-a72e-8164fb9958bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"89ec06d4-82bb-11e5-a72e-d9dfe70a38df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"89ec06d5-82bb-11e5-a72e-7be647bcc3d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:127","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"89ec06d6-82bb-11e5-a72e-a37c44ea516d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":0},{"failures":[4,19,20,21,5,6,7,22,23,24,8,9,10,25,26,27,11,12,13,28,29,30,14,15,16,31,32,17,18],"tindex":"89ec2de7-82bb-11e5-a72e-7d4b2294f420","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"mSize","tmpSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"89ec2de8-82bb-11e5-a72e-af00f809afb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:93","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.closeEntry()"},"status":-2},{"failures":[],"tindex":"89ec2de9-82bb-11e5-a72e-2fc81ef9b338","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"status":-2},{"failures":[],"tindex":"89ec2dea-82bb-11e5-a72e-63f033b37490","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"counter","backwardBit":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:233","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":0},{"failures":[0,33,34,35,36,1,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"89ec2deb-82bb-11e5-a72e-d3e7dab615e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:99","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[74,55,58,63,64,67,73],"tindex":"89ec54fc-82bb-11e5-a72e-aba7fa58d52e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:103","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult)"},"status":-1},{"failures":[],"tindex":"89ec54fd-82bb-11e5-a72e-3bee0d25d82a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:236","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable com.graphhopper.storage.BaseGraph.EdgeIterable = com.graphhopper.storage.EdgeAccess.createSingleEdge(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"variableMap":{"this":"edgeAccess","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:499","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable com.graphhopper.storage.BaseGraph.EdgeIterable = new com.graphhopper.storage.BaseGraph.EdgeIterable(this , com.graphhopper.storage.EdgeAccess , com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"89ec54fe-82bb-11e5-a72e-97d496dc47ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"segmentSizeInBytes","bytes":"segmentSizeInBytes","segmentSizeInBytes":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:180","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    byte[] byte[] = new byte[int];\n    int int = com.graphhopper.storage.UnsafeDataAccess.getSegments();\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[75,76,77],"tindex":"89ec7c0f-82bb-11e5-a72e-3b5d1fc5cc66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"status":-1},{"failures":[74,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,34,35,132,133,36,1,134,38,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,55,58,63,64,67,73],"tindex":"89ec7c10-82bb-11e5-a72e-f74db32e8601","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"variableMap":{"from":"closestEdge","to":"detach"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"status":-1},{"failures":[],"tindex":"89ec7c11-82bb-11e5-a72e-859987c4071d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"89ec7c12-82bb-11e5-a72e-b1b68e4840c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:272","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-2},{"failures":[150,151,152],"tindex":"89eca323-82bb-11e5-a72e-2d5833d153ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.reverseEdgeKey(int)"},"variableMap":{"edgeKey":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"status":-1},{"failures":[121,122,153,154,155,156,157,158,123,124,125,159,160,161,162,163,164,165,166,167,168,169,170,171,0,33,34,35,132,133,36,1,37,134,38,2],"tindex":"89eca324-82bb-11e5-a72e-bf22391b135b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:44","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection;\nelse\n    com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"89ec06d6-82bb-11e5-a72e-a37c44ea516d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]}]}