{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":124,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.reader.OSMReaderTest.testFerry":2,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":303,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":304,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":226,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":322,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":242,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":345,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":349,"com.graphhopper.GraphHopperTest.testPrepare":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":123,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":96,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":290,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":106,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":76,"com.graphhopper.util.InstructionListTest.testWayList":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":115,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":68,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":311,"com.graphhopper.GraphHopperAPITest.testDisconnected179":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":44,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":197,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":136,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":341,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":251,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":240,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":88,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":282,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":158,"com.graphhopper.GraphHopperTest.testLoadOSM":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":198,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":246,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":293,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":99,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":128,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":324,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":58,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":334,"com.graphhopper.routing.PathTest.testWayList":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":129,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":113,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":300,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":146,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":281,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":120,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":340,"com.graphhopper.util.GHUtilityTest.testSort":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":164,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":214,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":269,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":323,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":172,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":92,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":166,"com.graphhopper.GraphHopperAPITest.testLoad":94,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":127,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":286,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":77,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":278,"com.graphhopper.reader.OSMReaderTest.testBarriers":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":21,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":233,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":16,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":220,"com.graphhopper.util.GHUtilityTest.testCopy":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":70,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":53,"com.graphhopper.routing.PathTest.testFindInstruction":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":141,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":167,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":298,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":160,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":347,"com.graphhopper.reader.PrinctonReaderTest.testRead":135,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":250,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":37,"com.graphhopper.util.InstructionListTest.testWayList2":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":48,"com.graphhopper.reader.OSMReaderTest.testFoot":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":232,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":326,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":202,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":301,"com.graphhopper.reader.OSMReaderTest.testOneWay":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":163,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":252,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":296,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":229,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":277,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":284,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":189,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":351,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":52,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":85,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":235,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":165,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":234,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":209,"com.graphhopper.util.GHUtilityTest.testSort2":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":121,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":267,"com.graphhopper.routing.PathBidirRefTest.testExtract2":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":266,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":194,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":261,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":17,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":199,"com.graphhopper.storage.GraphHopperStorageTest.testClone":280,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":297,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":352,"com.graphhopper.GraphHopperTest.testFootAndCar":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":143,"com.graphhopper.util.GHUtilityTest.testSortDirected":316,"com.graphhopper.GraphHopperTest.testPrepareOnly":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":257,"com.graphhopper.GraphHopperTest.testVia":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":57,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":116,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":353,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":180,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":321,"com.graphhopper.GraphHopperTest.testFootOnly":93,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":185,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":186,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":336,"com.graphhopper.util.InstructionListTest.testFind":305,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":249},"transformations":[{"failures":[0,1],"tindex":"f95a787f-8292-11e5-b734-e31999d8d1fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:95","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"f95a9f90-8292-11e5-b734-abd1c9bee756","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:705","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"variableMap":{"graphHopperFolder":"classBicycle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"status":-1},{"failures":[71,72],"tindex":"f95ac6a1-8292-11e5-b734-1b2bce126436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:397","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[73,74,75,76],"tindex":"f95ac6a2-8292-11e5-b734-116dd3bb3027","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:144","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[77,78,79],"tindex":"f95ac6a3-8292-11e5-b734-4ff6ac082d1a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"start","NO_TURN_ENTRY":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:120","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"f95ac6a4-8292-11e5-b734-31f0ede31c9a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:52","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1019","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>(((java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) - 1))"},"status":-2},{"failures":[],"tindex":"f95aedb5-8292-11e5-b734-d7c9b9c2130a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"lon","dy":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:289","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":0},{"failures":[],"tindex":"f95aedb6-8292-11e5-b734-89bc558cb2e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"f95aedb7-8292-11e5-b734-ede3f0ea6947","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-1},{"failures":[130,91,131,92],"tindex":"f95aedb8-8292-11e5-b734-d728f8a66e05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), com.graphhopper.storage.index.LocationIndexTree.calcChecksum())"},"status":-1},{"failures":[],"tindex":"f95b14c9-8292-11e5-b734-c3b25cf127b9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":0},{"failures":[132,130,80,81,82,83,84,85,86,87,88,89,90,91,131,92,93,133,2,3,4,5,71,6,7,8,9,72,10,12,134,135,136,94,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,77,328,329,330,331,332,78,79,333,334,335,336,337,338,339,340,341,342,96,343,97,344,345,346,347,348,98,99,100,101,349,350,351,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"f95b14ca-8292-11e5-b734-c577ffc3ab8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"edgeEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:311","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[10],"tindex":"f95b3bdb-8292-11e5-b734-e31a12b71841","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:250","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"workerThreads":"lastInBoundsPillarNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:693","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f95b3bdc-8292-11e5-b734-3990dcb1f7a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-2},{"failures":[],"tindex":"f95b3bdd-8292-11e5-b734-95819afbb84f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:191","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0},{"failures":[],"tindex":"f95b62ee-8292-11e5-b734-bb72d5fe3f8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:104","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[352,319],"tindex":"f95b62ef-8292-11e5-b734-15e4556c7d16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:526","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"status":-1},{"failures":[],"tindex":"f95b62f0-8292-11e5-b734-37774d916be3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:87","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.Arrays.asList(\"OsmSchema-V0.6\", \"DenseNodes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:111","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"builddate\") , com.graphhopper.util.Helper.java.nio.charset.Charset))"},"status":-2},{"failures":[353],"tindex":"f95b62f1-8292-11e5-b734-7d76435be83e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-1},{"failures":[],"tindex":"f95b62f2-8292-11e5-b734-151a9cd722d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:487","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f95aedb5-8292-11e5-b734-d7c9b9c2130a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalc.calcNormalizedDist"]},"type":"staticDiff"}]},{"transformation":"f95b3bdd-8292-11e5-b734-95819afbb84f","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).t9"],"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":["com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9"],"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":["com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9","com.graphhopper.routing.util.MotorcycleFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).t9"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e11","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e10","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).e9","com.graphhopper.routing.util.CarFlagEncoder_long_acceptWay(com.graphhopper.reader.OSMWay).t9"]},"type":"branch"}]}]}