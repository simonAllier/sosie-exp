{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"7aaf1725-7914-11e5-a741-bfbf1dafe2dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"status":-2},{"failures":[],"tindex":"7aaf3e36-7914-11e5-a741-7394e6daa914","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"directionBitMask","blockByDefault":"locked"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:245","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n        return long;\n    \n}"},"status":-2},{"failures":[],"tindex":"7aaf3e37-7914-11e5-a741-d5b112525654","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:143","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity()"},"status":-2},{"failures":[],"tindex":"7aaf3e38-7914-11e5-a741-49bce1b501a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:380","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"7aaf3e39-7914-11e5-a741-517387c14d7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"incomingEdgeOrigCount","nodeThis":"skippedEdge1","edgeId":"incomingEdgeOrigCount","nodeOther":"w_toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:632","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int)"},"status":-2},{"failures":[],"tindex":"7aaf654a-7914-11e5-a741-61a13568d145","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-2},{"failures":[],"tindex":"7aaf654b-7914-11e5-a741-e16c03cb81b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"offset","speed":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"7aaf654c-7914-11e5-a741-6b5b962c40de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:307","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(2000, ((int)(double * double)))"},"variableMap":{"dist":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:81","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.Location2IDFullWithEdgesIndex.findClosest(double, double, com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter).getClosestNode()"},"status":-2},{"failures":[],"tindex":"7aaf654d-7914-11e5-a741-33650d381078","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-2},{"failures":[],"tindex":"7aaf654e-7914-11e5-a741-cf5d5ded7fe3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:317","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"7aaf654f-7914-11e5-a741-437056afc0ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:175","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1 ; ) {\n    try {\n        java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n        break;\n    } catch (java.io.IOException tmpex) {\n        java.io.IOException = java.io.IOException;\n        int++;\n        com.graphhopper.util.Helper.cleanHack();\n        try {\n            java.lang.Thread.sleep(5);\n        } catch (java.lang.InterruptedException iex) {\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"7aaf8c60-7914-11e5-a741-314315819f85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:51","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(5)"},"status":-2},{"failures":[],"tindex":"7aaf8c61-7914-11e5-a741-f5750dee58c8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 1)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"list","com.graphhopper.util.PointList.EMPTY":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"7aaf8c62-7914-11e5-a741-0d420c1a8caa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:52","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.storage.DataAccess.getCapacity()))"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:121","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"7aaf8c63-7914-11e5-a741-57e9ccba7575","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"maxEle","lon":"maxEle","lat":"maxEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:198","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.String += ((\",\" + (double)) + \",\") + (double);\n"},"status":-2},{"failures":[],"tindex":"7aaf8c64-7914-11e5-a741-732c2627ca23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"com.graphhopper.util.EdgeIterator.NO_EDGE","edge2":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:283","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"7aaf8c65-7914-11e5-a741-29a19d7a71e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:279","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int)"},"variableMap":{"ase":"parent","traversalId":"edge","this":"this","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:108","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n        continue;\n    \n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n    float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n    if (java.lang.Double.isInfinite(float))\n        continue;\n    \n    com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n    if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n        double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n        double = float + double;\n        if (com.graphhopper.routing.AStar.AStarEdge == null) {\n            com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n            com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n        } else {\n            assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.routing.AStar.AStarEdge.double = double;\n            com.graphhopper.routing.AStar.AStarEdge.double = float;\n        }\n        com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"7aafb376-7914-11e5-a741-c19cf8a66539","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"shift","frontIndex":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:603","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7aafb377-7914-11e5-a741-15e6da92b525","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:173","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"status":-2},{"failures":[],"tindex":"7aafb378-7914-11e5-a741-7908005b0815","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"prevEle","x":"ele","absY":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:771","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}