{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":25,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":22,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":67,"com.graphhopper.storage.MMapDataAccessTest.testHeader":66,"com.graphhopper.storage.MMapDataAccessTest.testCopy":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":58,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":54,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":21,"com.graphhopper.storage.MMapDataAccessTest.testSegments":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":46,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":2,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":53,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":10,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":3,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":19,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":64,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":43,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":26,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":59,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"60e1a905-7934-11e5-8db8-6777b2b4afcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:116","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"variableMap":{"currentBucket":"indexDivisor","retBucket":"indexDivisor","currentIndex":"indexDivisor","bucketSize":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:304","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[61,62,63,2,4,64,5,65,6,7,8,9,66,10,11,12,13,14,15,16,17,18,19,20,21,22,23,67,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"60e1a906-7934-11e5-8db8-d97106473bd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-1},{"failures":[],"tindex":"60e1d017-7934-11e5-8db8-5fd218d43c91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:505","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot copy EMPTY PointList\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:222","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"))"},"status":0},{"failures":[],"tindex":"60e1d018-7934-11e5-8db8-efb18806a90f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:869","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"status":-2},{"failures":[],"tindex":"60e1d019-7934-11e5-8db8-c3f94f5f0f67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:724","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    if (int >= 0) {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n        com.graphhopper.util.PointList.clear();\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    } \n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"60e1d01a-7934-11e5-8db8-87826b2b7b98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"flags","highKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:280","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"60e1d01b-7934-11e5-8db8-a9164b6a8b69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:310","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.close();\n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:186","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.create(long);\n}"},"status":-2},{"failures":[],"tindex":"60e1f72c-7934-11e5-8db8-09f1566cf574","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:89","type":"CtOperatorAssignmentImpl","sourcecode":"long += byte[].int"},"status":-2},{"failures":[],"tindex":"60e1f72d-7934-11e5-8db8-5fe3d2fd0875","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:72","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"variableMap":{"param":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:925","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.search.NameIndex.put(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"60e1f72e-7934-11e5-8db8-3fa6c19b5a8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:81","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"60e1f72f-7934-11e5-8db8-771120f35fe9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:70","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"60e1f730-7934-11e5-8db8-bddd3679dc5a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"status":-2},{"failures":[],"tindex":"60e1f731-7934-11e5-8db8-9ff9815bdbc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"60e21e42-7934-11e5-8db8-7b83b2178ea3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:455","type":"CtReturnImpl","sourcecode":"return java.text.NumberFormat.getInstance(java.util.Locale.java.util.Locale).format(long)"},"status":-2},{"failures":[],"tindex":"60e21e43-7934-11e5-8db8-db6000121ad4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:497","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"variableMap":{"nodeB":"additionalValue","this":"that","nodeA":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:117","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField()) && ((com.graphhopper.storage.BaseGraph.int) >= 0)) {\n    com.graphhopper.storage.BaseGraph.ensureNodeIndex(int);\n    long long = ((long)(int)) * (com.graphhopper.storage.BaseGraph.int);\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), int);\n} else {\n    throw new java.lang.AssertionError(\"This graph does not provide an additional node field\");\n}"},"status":-2},{"failures":[],"tindex":"60e21e44-7934-11e5-8db8-271ef66ea886","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"java.lang.Double.NaN","angle":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:118","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.reader.PillarInfo.(is3D()))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"60e21e45-7934-11e5-8db8-d9f3b0c3c192","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"com.graphhopper.reader.OSMElement.RELATION","lastIndex":"com.graphhopper.reader.OSMElement.WAY","fromIndex":"com.graphhopper.reader.OSMElement.NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:286","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    switch (com.graphhopper.reader.OSMElement.getType()) {\n        case com.graphhopper.reader.OSMElement.int :\n            if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n            } \n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n            break;\n    }\n    if (((++long) % 100000000) == 0) {\n        com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n}"},"status":-2},{"failures":[],"tindex":"60e24556-7934-11e5-8db8-93ad7862769f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge2","b":"from","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"60e24557-7934-11e5-8db8-757e850c17b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"midLon","x":"midLon","absY":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-2},{"failures":[],"tindex":"60e24558-7934-11e5-8db8-879e2ee6714a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:143","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n    int = int;\n    if ((int++) > 1000) {\n        throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n    } \n}"},"variableMap":{"turnCosts":"index","tmp":"nodeId","previousEntryIndex":"nodeId","i":"nodeId","turnCostsEntryBytes":"nodeId","TC_NEXT":"nodeId","NO_TURN_ENTRY":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}