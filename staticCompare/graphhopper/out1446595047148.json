{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":280,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":230,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":88,"com.graphhopper.reader.OSMReaderTest.testFerry":240,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":144,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":145,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":324,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":275,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":93,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":163,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":164,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":180,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":98,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":285,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":188,"com.graphhopper.GraphHopperTest.testPrepare":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":212,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":127,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":176,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":195,"com.graphhopper.util.InstructionListTest.testWayList":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":303,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":329,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":150,"com.graphhopper.GraphHopperAPITest.testDisconnected179":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":322,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":201,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":175,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":307,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":96,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":247,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":191,"com.graphhopper.GraphHopperTest.testLoadOSM":0,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":71,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":107,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":139,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":207,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":165,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":217,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":316,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":170,"com.graphhopper.routing.PathTest.testWayList":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":194,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":312,"com.graphhopper.reader.OSMNodeTest.testSetTags":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":67,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":266,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":288,"com.graphhopper.util.GHUtilityTest.testSort":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":74,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":311,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":86,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":232,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":42,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":278,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":162,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":129,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":100,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":200,"com.graphhopper.util.GHUtilityTest.testCopy":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":332,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":40,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":44,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":91,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":130,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":182,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":87,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":187,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":120,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":291,"com.graphhopper.util.InstructionListTest.testWayList2":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":305,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":99,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":318,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":302,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":231,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":142,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":95,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":309,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":11,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":169,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":319,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":81,"com.graphhopper.util.GHUtilityTest.testSort2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":210,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":249,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":68,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":296,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":260,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":252,"com.graphhopper.GraphHopperTest.testFootAndCar":16,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":292,"com.graphhopper.util.InstructionListTest.testCreateGPX":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":206,"com.graphhopper.reader.OSMReaderTest.testRelation":241,"com.graphhopper.util.GHUtilityTest.testSortDirected":153,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":113,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":89,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":205,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":64,"com.graphhopper.reader.OSMElementTest.testHasTag":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":105,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":228,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":3,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":60,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":320,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":61,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":112,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":172,"com.graphhopper.util.InstructionListTest.testFind":225,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":197,"com.graphhopper.reader.OSMElementTest.testSetTags":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":110},"transformations":[{"failures":[0],"tindex":"a2c92dfc-8286-11e5-af68-b33904cfe58e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:662","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"status":-1},{"failures":[1],"tindex":"a2cab49d-8286-11e5-af68-b33fcc9fd964","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"variableMap":{"dX":"value","dY":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"status":-1},{"failures":[2,3],"tindex":"a2cadbae-8286-11e5-af68-8d065716a4a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"variableMap":{"sb":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,0,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"a2cadbaf-8286-11e5-af68-4fe35e49971a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:518","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"variableMap":{"id":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:157","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[4,14,15,17,0,18,19,20,23,24,25,26,27,29,30,36,38,49,52,54,219,57,220,58,70,221,71,87,98,101,103,222,106,108,119,122,124,223,125,127,138,141,143,224,225,146,147,148,226,227,155,156,228,157,229,158,159,230,160,231,232,233,215],"tindex":"a2cb50e0-8286-11e5-af68-8b86f8e81388","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"variableMap":{"bits":"tmpRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:834","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-1},{"failures":[],"tindex":"a2cb50e1-8286-11e5-af68-57f1e9141ec2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":0},{"failures":[],"tindex":"a2cb77f2-8286-11e5-af68-dbf7617fae95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:314","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-1},{"failures":[],"tindex":"a2cb77f3-8286-11e5-af68-17c0a890a379","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:401","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1))"},"variableMap":{"com.graphhopper.routing.QueryGraph.ac":"com.graphhopper.routing.QueryGraph.ac","edgeOrientation":"edgeOrientation","wayGeo":"wayGeo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:397","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)))"},"status":0},{"failures":[],"tindex":"a2cb77f4-8286-11e5-af68-c37484f51412","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:95","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return int;\n"},"variableMap":{"retIndex":"edgePointer","noEntryValue":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:153","type":"CtIfImpl","sourcecode":"if (int == int)\n    return com.graphhopper.storage.DataAccess.getInt((long + (int)));\n"},"status":0},{"failures":[6,7,8,9,10,11,13,14,15,16,17,0,19,20,34,176,178,184,185,186,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"a2cb77f5-8286-11e5-af68-39b778374544","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:258","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.setEdgeEntry(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n    com.graphhopper.routing.PathBidirRef.setEdgeEntryTo(com.graphhopper.storage.EdgeEntry);\n} "},"status":-1},{"failures":[],"tindex":"a2cb9f06-8286-11e5-af68-2766b3874fcf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"status":-2},{"failures":[],"tindex":"a2cb9f07-8286-11e5-af68-816b3cff721e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:235","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[40,234,43,44,47,52,53,89,235,92,93,96,101,102,110,236,113,114,117,122,123,129,237,132,133,136,141,142,161,165,166],"tindex":"a2cb9f08-8286-11e5-af68-f974e2db2cd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:716","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int);\n    int int = com.graphhopper.coll.SparseIntIntArray.valueAt(int);\n    long long = ((long)(int)) * (int);\n    long long = ((long)(int)) * (int);\n    for (long long = 0 ; long < (int) ; long += 4) {\n        com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"a2cbc619-8286-11e5-af68-415eacc2f2dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:683","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"a2cbc61a-8286-11e5-af68-fdbd2ce9aa59","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:39","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(1, ((int) / 3))"},"variableMap":{"counts":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"status":-2},{"failures":[],"tindex":"a2cbc61b-8286-11e5-af68-b5421be185c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetTo","ase":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:141","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[],"tindex":"a2cbc61c-8286-11e5-af68-a5ca3aa7fc17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":0},{"failures":[],"tindex":"a2cbed2d-8286-11e5-af68-574eadd206f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:167","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll()"},"status":-2},{"failures":[],"tindex":"a2cbed2e-8286-11e5-af68-cbde047127db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"java.lang.Math.PI","lon":"angleXY","lat":"angleXY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"status":-2},{"failures":[4,5,12,13,14,15,16,17,0,18,19,20,21,238,239,240,22,23,24,25,26,27,28,29,241,30,31,32,242,243,33,244,3,245,246,247,248,249,250,251,252,253,254,255,256,257,231,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"a2cbed2f-8286-11e5-af68-eb1bdc64e837","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a2cb77f3-8286-11e5-af68-17c0a890a379","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.getLat","com.graphhopper.util.AngleCalc.calcOrientation","com.graphhopper.util.PointList.getLon"]},"type":"staticDiff"}]},{"transformation":"a2cbc61c-8286-11e5-af68-a5ca3aa7fc17","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append","com.graphhopper.util.Instruction.getTime"]},"type":"staticDiff"}]}]}