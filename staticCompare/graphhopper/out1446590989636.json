{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":49,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":83,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":86,"com.graphhopper.reader.OSMReaderTest.testMain":68,"com.graphhopper.util.BitUtilLittleTest.testToLong":55,"com.graphhopper.reader.OSMReaderTest.testFerry":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":35,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":46,"com.graphhopper.GHResponseTest.testToString":85,"com.graphhopper.coll.OSMIDMapTest.testGet2":52,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":42,"com.graphhopper.reader.OSMReaderTest.testWithBounds":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":14,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":80,"com.graphhopper.reader.PrinctonReaderTest.testRead":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":11,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":48,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":20,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":54,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":41,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":33,"com.graphhopper.GraphHopperTest.testPrepare":63,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.reader.OSMReaderTest.testFoot":77,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":84,"com.graphhopper.coll.OSMIDMapTest.testGetLong":53,"com.graphhopper.util.InstructionListTest.testCreateGPX":59,"com.graphhopper.reader.OSMReaderTest.testOneWay":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":16,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":25,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":45,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":44,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":66,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":30,"com.graphhopper.GraphHopperTest.testPrepareOnly":73,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":23,"com.graphhopper.util.BitUtilBigTest.testToLong":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":12,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":19,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":38,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":43,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":58,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":81,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":79,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":61,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":6,"com.graphhopper.GraphHopperTest.testFootOnly":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":24,"com.graphhopper.coll.OSMIDMapTest.testGet":51,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":64,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":71,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":37,"com.graphhopper.reader.OSMReaderTest.testBarriers":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":17,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.reader.OSMReaderTest.testSort":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":28},"transformations":[{"failures":[],"tindex":"303f3624-827d-11e5-8b65-5fe6ca8a3c82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:85","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[0,1],"tindex":"303f8445-827d-11e5-8b65-37cc4a5f5f73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:685","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    if ((!(com.graphhopper.util.PointList.isEmpty())) && (int > (-(com.graphhopper.reader.OSMReader.int)))) {\n        int = int;\n        int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, null, true);\n        int = (-int) - 3;\n        if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n            com.graphhopper.util.PointList.clear();\n            com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n        } \n        int = int;\n        int = -1;\n    } \n    continue;\n} "},"status":-1},{"failures":[],"tindex":"303f8446-827d-11e5-8b65-93a7e0cc6989","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:75","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"303f8447-827d-11e5-8b65-2f46b4571866","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:137","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[2,3,4,5,6,7,8],"tindex":"303fab58-827d-11e5-8b65-0504c733c3ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:242","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"variableMap":{"ab_rb":"lon","ab_ar":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return ((com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"303fab59-827d-11e5-8b65-532e54c5c997","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"303fab5a-827d-11e5-8b65-336168867a02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getInstructions\")"},"status":-2},{"failures":[51,52,53,54,55,56],"tindex":"303fab5b-827d-11e5-8b65-cf8aa0fb5dde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"variableMap":{"res":"value","maxBit":"value","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-1},{"failures":[],"tindex":"303fd26c-827d-11e5-8b65-b31c6e2cdbba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:241","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"variableMap":{"minLon":"lon","maxLon":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:177","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.DistanceCalc.calcDist(double, double, com.graphhopper.util.shapes.Circle.double, com.graphhopper.util.shapes.Circle.double)) <= double"},"status":-2},{"failures":[57],"tindex":"303fd26d-827d-11e5-8b65-55bf2b269b83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"x1","azimuth":"x2","java.lang.Math.PI":"x2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"status":-1},{"failures":[58,59,60],"tindex":"303fd26e-827d-11e5-8b65-97b1a27a9bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLat()))"},"status":-1},{"failures":[61],"tindex":"303fd26f-827d-11e5-8b65-a9f10c159d74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:151","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Empty edge cannot happen\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:278","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String))"},"status":-1},{"failures":[],"tindex":"303ff980-827d-11e5-8b65-7b235405fb78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"x1":"maxLon","x2":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[62,63,64,61,65,66,67,68,69,70,71,1,9,72],"tindex":"303ff981-827d-11e5-8b65-9f14a6a33afe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:190","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"303ff982-827d-11e5-8b65-194dbeeef32c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.reader.OSMReader.TOWER_NODE","prevOrNextEdgeId":"com.graphhopper.reader.OSMReader.TOWER_NODE","weight":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[62,73,74,2,63,64,3,61,65,66,67,4,75,76,77,68,69,78,70,79,80,71,81,0,1,82,9],"tindex":"30402093-827d-11e5-8b65-5748df591afb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:729","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n    com.graphhopper.util.PointList.clear();\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n} "},"status":-1},{"failures":[83,84],"tindex":"30402094-827d-11e5-8b65-6b00abe5151d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:163","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2))"},"status":-1},{"failures":[],"tindex":"30402095-827d-11e5-8b65-6f0f0a3b1f0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:483","type":"CtReturnImpl","sourcecode":"return gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.valueCollection()"},"status":-2},{"failures":[85,86],"tindex":"30402096-827d-11e5-8b65-c315302787bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:288","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}