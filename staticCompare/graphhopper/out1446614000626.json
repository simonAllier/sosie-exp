{"failureDictionary":{"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":3,"com.graphhopper.reader.OSMReaderTest.testOneWay":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.coll.CompressedArrayTest.testCompress2":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":4,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":2,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":25,"com.graphhopper.coll.CompressedArrayTest.testCompress":12,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":6,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":19,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21},"transformations":[{"failures":[],"tindex":"c3ddca09-82b2-11e5-9acf-3d915d9db07d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:114","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int)"},"status":-2},{"failures":[],"tindex":"c3ddf11a-82b2-11e5-9acf-f1e55a8a926f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:141","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3],"tindex":"c3ddf11b-82b2-11e5-9acf-bd368ed2ad57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:338","type":"CtAssignmentImpl","sourcecode":"byte[][] = java.util.Arrays.copyOf(byte[][], int)"},"status":-1},{"failures":[4,5,6,7,8,9],"tindex":"c3ddf11c-82b2-11e5-9acf-d7007c20bdfe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:134","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = com.graphhopper.storage.index.Location2IDQuadtree.fillQuadtree(((int) * (int)))"},"status":-1},{"failures":[],"tindex":"c3de182d-82b2-11e5-9acf-3d37aa4f7c2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:70","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeIteratorState.getDistance()) / double) * (com.graphhopper.routing.util.FastestWeighting.double)"},"status":-2},{"failures":[],"tindex":"c3de182e-82b2-11e5-9acf-35c7112ff490","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:124","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.build()"},"status":0},{"failures":[],"tindex":"c3de182f-82b2-11e5-9acf-05b80b0616d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"status":0},{"failures":[],"tindex":"c3de1830-82b2-11e5-9acf-251d6df0a90d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:101","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"c3de3f41-82b2-11e5-9acf-994f8925fc5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:129","type":"CtIfImpl","sourcecode":"if (double < double) {\n    java.lang.String = \"N\";\n} else if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"c3de3f42-82b2-11e5-9acf-8db72adb23c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"id","speed":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":0},{"failures":[],"tindex":"c3de3f43-82b2-11e5-9acf-fb78e5fd2574","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"c3de3f44-82b2-11e5-9acf-fdfac84f2859","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:156","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[10],"tindex":"c3de3f45-82b2-11e5-9acf-6f9c306a1bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:86","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[11,12],"tindex":"c3de6656-82b2-11e5-9acf-9719c9948154","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"i","flags":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:157","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 49"},"status":-1},{"failures":[13,14,15,16],"tindex":"c3de6657-82b2-11e5-9acf-bb2c742b2dc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:606","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[],"tindex":"c3de6658-82b2-11e5-9acf-f58e084fff5d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:724","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)))"},"status":-2},{"failures":[17,18],"tindex":"c3de6659-82b2-11e5-9acf-f1dc63ff0c0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:370","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleNodeTags(com.graphhopper.reader.OSMNode)"},"status":-1},{"failures":[],"tindex":"c3de8d6a-82b2-11e5-9acf-cde7655bbb7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"tmpNewShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:698","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[19,20,21,22,23],"tindex":"c3de8d6b-82b2-11e5-9acf-591bde4e739f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:128","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((java.util.List<java.lang.Integer>.size()) != (java.util.List<java.lang.Integer>.size())) {\n        throw new java.lang.RuntimeException(((((\"Number of tag keys (\" + (java.util.List<java.lang.Integer>.size())) + \") and tag values (\") + (java.util.List<java.lang.Integer>.size())) + \") don\\'t match\"));\n    } \n} "},"variableMap":{"keys":"edgePositions","values":"edgePositions","checkData":"enforcementOccured"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[24,25],"tindex":"c3deb47c-82b2-11e5-9acf-d3b7f270e7b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"itemsToMove","capacity":"toMoveNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:644","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n    }\n    int--;\n    for ( ; int >= 0 ; int--) {\n        if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n            break;\n        \n    }\n    if (int >= int)\n        com.graphhopper.coll.SparseIntIntArray.put(int, int);\n    \n    int++;\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c3de182e-82b2-11e5-9acf-35c7112ff490","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphBuilder.build"]},"type":"staticDiff"}]},{"transformation":"c3de182f-82b2-11e5-9acf-05b80b0616d6","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.GraphHopper_void_printInfo().b","com.graphhopper.util.Constants_java.lang.String_getVersions().b","com.graphhopper.GraphHopper_void_printInfo().t1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.GraphHopper_void_printInfo().b","com.graphhopper.util.Constants_java.lang.String_getVersions().b","com.graphhopper.GraphHopper_void_printInfo().t1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.printInfo"]},"type":"staticDiff"}]}]}