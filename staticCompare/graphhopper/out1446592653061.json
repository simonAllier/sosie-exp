{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":82,"com.graphhopper.routing.PathTest.testFindInstruction":1,"com.graphhopper.reader.OSMReaderTest.testFerry":66,"com.graphhopper.routing.QueryGraphTest.testOneWay":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":7,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":48,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":12,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":61,"com.graphhopper.GraphHopperTest.testPrepare":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.util.InstructionListTest.testWayList2":26,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":19,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":22,"com.graphhopper.util.InstructionListTest.testWayList":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":6,"com.graphhopper.GraphHopperAPITest.testDisconnected179":75,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":55,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":97,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":88,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":87,"com.graphhopper.GraphHopperTest.testLoadOSM":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":32,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":53,"com.graphhopper.reader.OSMReaderTest.testSort":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":33,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":101,"com.graphhopper.reader.OSMReaderTest.testMain":28,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":62,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":80,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":94,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":103,"com.graphhopper.routing.PathTest.testWayList":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":57,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":51,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":76,"com.graphhopper.storage.GraphHopperStorageTest.testClone":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":8,"com.graphhopper.GraphHopperTest.testFootAndCar":40,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":60,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":58,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":2,"com.graphhopper.GraphHopperTest.testVia":37,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":13,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":99,"com.graphhopper.GraphHopperAPITest.testLoad":23,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":78,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":16,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":27,"com.graphhopper.GraphHopperTest.testFootOnly":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":52,"com.graphhopper.util.InstructionListTest.testFind":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":4,"com.graphhopper.util.GHUtilityTest.testCopy":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":47},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"0fb88104-8281-11e5-9afd-473f9e3a0bd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"mode","end":"mode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:916","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[],"tindex":"0fb8a815-8281-11e5-9afd-d9cca8d14f2b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:236","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>) == (gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>)"},"status":-2},{"failures":[],"tindex":"0fb8cf26-8281-11e5-9afd-01e28e0e00b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"variableMap":{"initialBits":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"status":0},{"failures":[],"tindex":"0fb8cf27-8281-11e5-9afd-b3c6653f4ca5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.NaN","speed":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:118","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.reader.PillarInfo.(is3D()))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[42],"tindex":"0fb8cf28-8281-11e5-9afd-7df57a73186c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:450","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"status":-1},{"failures":[66],"tindex":"0fb8cf29-8281-11e5-9afd-19a0a7060be0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"longTripsSpeed","speed":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"0fb91d4a-8281-11e5-9afd-876946649d12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:296","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"forceClean":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:198","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.String += ((\",\" + (double)) + \",\") + (double);\n"},"status":0},{"failures":[67,68,69],"tindex":"0fb91d4b-8281-11e5-9afd-7df8d421feb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:260","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"0fb91d4c-8281-11e5-9afd-4d4b609a8147","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"variableMap":{"maxLatTmp":"factor","minLatTmp":"factor","lat":"factor","hash":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:78","type":"CtWhileImpl","sourcecode":"while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n    java.io.FileOutputStream.write(byte[], 0, int);\n    long += int * double;\n    if (com.graphhopper.util.ProgressListener != null)\n        com.graphhopper.util.ProgressListener.update(long);\n    \n}"},"status":0},{"failures":[],"tindex":"0fb91d4d-8281-11e5-9afd-99d531c43eee","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:70","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"0fb91d4e-8281-11e5-9afd-f3682916f94c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"edgeEntryBytes","lastIndex":"edgeEntryBytes","fromIndex":"edgeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":0},{"failures":[70,71,72,73,74],"tindex":"0fb9445f-8281-11e5-9afd-cb7edc9590aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-1},{"failures":[75],"tindex":"0fb94460-8281-11e5-9afd-5983c6012645","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"allFound"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:114","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"));\n} "},"status":-1},{"failures":[],"tindex":"0fb94461-8281-11e5-9afd-ab19254044fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.close()"},"status":-2},{"failures":[76,77],"tindex":"0fb94462-8281-11e5-9afd-1d52e4bcd45a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:292","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[][][(int + 1)]"},"status":-1},{"failures":[33],"tindex":"0fb94463-8281-11e5-9afd-b3a58f52309c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:193","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.RoutingAlgorithmFactorySimple().createAlgo(com.graphhopper.storage.Graph, com.graphhopper.routing.AlgorithmOptions)"},"variableMap":{"opts":"opts","qGraph":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:42","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.Dijkstra(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode())"},"status":-1},{"failures":[37,78,79,80,81,82,83],"tindex":"0fb94464-8281-11e5-9afd-ef22ce821827","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"status":-1},{"failures":[84,85,86,87,88,89,90,91],"tindex":"0fb96b75-8281-11e5-9afd-ad9fda8a7ed9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"base","b":"adj","this":"toGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:285","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"status":-1},{"failures":[],"tindex":"0fb96b76-8281-11e5-9afd-a576fbc2e82d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"status":0},{"failures":[92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"0fb96b77-8281-11e5-9afd-59273f3a8e18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:119","type":"CtIfImpl","sourcecode":"if (java.lang.Class<T>.equals(com.graphhopper.storage.Graph.com.graphhopper.storage.Graph))\n    return ((T)(com.graphhopper.storage.BaseGraph));\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0fb96b76-8281-11e5-9afd-a576fbc2e82d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.getProperties"]},"type":"staticDiff"}]},{"transformation":"0fb91d4c-8281-11e5-9afd-4d4b609a8147","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.ProgressListener.update","java.io.FileOutputStream.write"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]},{"transformation":"0fb91d4a-8281-11e5-9afd-876946649d12","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}