{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":140,"com.graphhopper.routing.PathTest.testFindInstruction":18,"com.graphhopper.reader.OSMReaderTest.testFerry":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":93,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":34,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":168,"com.graphhopper.routing.QueryGraphTest.testOneWay":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":124,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":95,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":84,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":107,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":97,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":163,"com.graphhopper.GraphHopperTest.testPrepare":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.util.InstructionListTest.testWayList2":54,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":171,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":176,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":130,"com.graphhopper.util.InstructionListTest.testWayList":53,"com.graphhopper.reader.OSMReaderTest.testOneWay":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":159,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":181,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":144,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":16,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":86,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":164,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":118,"com.graphhopper.reader.OSMReaderTest.testSort":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":70,"com.graphhopper.util.GHUtilityTest.testSort2":49,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":137,"com.graphhopper.reader.OSMReaderTest.testMain":57,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":167,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":31,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":42,"com.graphhopper.storage.RAMDataAccessTest.testHeader":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":165,"com.graphhopper.storage.MMapDataAccessTest.testHeader":169,"com.graphhopper.routing.PathTest.testWayList":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":143,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":121,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":161,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":105,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":109,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":160,"com.graphhopper.storage.StorablePropertiesTest.testStore":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":127,"com.graphhopper.storage.GraphHopperStorageTest.testClone":173,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.GraphHopperTest.testFootAndCar":78,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":13,"com.graphhopper.util.GHUtilityTest.testSort":51,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":108,"com.graphhopper.coll.BigLongIntMapTest.testPut":185,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":94,"com.graphhopper.GraphHopperTest.testPrepareOnly":4,"com.graphhopper.GraphHopperTest.testVia":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":149,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":81,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":117,"com.graphhopper.GraphHopperAPITest.testLoad":48,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":106,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":39,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":55,"com.graphhopper.GraphHopperTest.testFootOnly":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":112,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":113,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":172,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":1,"com.graphhopper.util.InstructionListTest.testFind":52,"com.graphhopper.reader.OSMReaderTest.testBarriers":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":157},"transformations":[{"failures":[0],"tindex":"d9cdbf00-828c-11e5-8a42-8d0759f6de71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:243","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"d9cde611-828c-11e5-8a42-37b48c860f3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:566","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long)((int + 1))) * 4))"},"variableMap":{"intIndex":"turnCostsEntryBytes","dataAccess":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"status":0},{"failures":[],"tindex":"d9cde612-828c-11e5-8a42-09e875ae5b11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"variableMap":{"minLatInit":"minLon","maxLonInit":"maxLon","minLonInit":"maxLon","bounds":"this","maxLatInit":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"d9ce0d23-828c-11e5-8a42-91e3b296b8c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[1,2],"tindex":"d9ce0d24-828c-11e5-8a42-9f14c9ba65ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"minutes","size":"minutes","lonSize":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[3],"tindex":"d9ce0d25-828c-11e5-8a42-65abd7f6ee50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:285","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireNodeField()) {\n    for (long long = long + (int) ; long < long ; long += int) {\n        com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n    }\n} "},"status":-1},{"failures":[],"tindex":"d9ce0d26-828c-11e5-8a42-2fc02ceb62e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:38","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[],"tindex":"d9ce3437-828c-11e5-8a42-71a59f822cf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:296","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"variableMap":{"index":"segmentSizePower","entrySize":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:252","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":0},{"failures":[],"tindex":"d9ce3438-828c-11e5-8a42-e12434823138","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:648","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[4,5,6,7,8,3,9,10,11,12,13,14,15],"tindex":"d9ce3439-828c-11e5-8a42-3b2fd4a48207","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:100","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getHeader((3 * 4))"},"variableMap":{"index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:52","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.storage.DataAccess.getCapacity()))"},"status":-1},{"failures":[],"tindex":"d9ce343a-828c-11e5-8a42-577dafdf6eef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"orientation","speed":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"d9ce5b4b-828c-11e5-8a42-2921c12b465a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"variableMap":{"str":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"d9ce5b4c-828c-11e5-8a42-7b7251476d4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.setSourceNode(int)"},"status":0},{"failures":[],"tindex":"d9ce5b4d-828c-11e5-8a42-65ae922e1644","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:147","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"d9ce5b4e-828c-11e5-8a42-318e42e7a759","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"shift","backwardBit":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,2,56,57,58,59,60,61,62,63,64,65,66,67,68,4,69,70,71,72,73,74,75,76,77,78,5,6,7,8,79,80,81,82,83,84,85,86,87,88,89,90,91,3,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,13,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,14,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"tindex":"d9ce825f-828c-11e5-8a42-c7b37b545e86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:369","type":"CtReturnImpl","sourcecode":"return ((int)(double * (com.graphhopper.util.Helper.float)))"},"status":-1},{"failures":[],"tindex":"d9ce8260-828c-11e5-8a42-a1fbd063500c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"visitedCount","hash":"visitedCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:100","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"d9ce8261-828c-11e5-8a42-51fada64ed9d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:85","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.util.zip.InflaterInputStream(java.io.InputStream , new java.util.zip.Inflater(true))"},"variableMap":{"is":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:44","type":"CtAssignmentImpl","sourcecode":"this.java.io.InputStream = java.io.InputStream"},"status":0},{"failures":[185],"tindex":"d9cea972-828c-11e5-8a42-2189ee75cc83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:85","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.map.hash.TLongIntHashMap[].int) ; int++) {\n    long += gnu.trove.map.hash.TLongIntHashMap[][int].size();\n}"},"status":-1},{"failures":[],"tindex":"d9cea973-828c-11e5-8a42-fb987a9d34bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:141","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double)) {\n    continue;\n} "},"variableMap":{"lat":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d9ce5b4c-828c-11e5-8a42-7b7251476d4b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.ConsistentWeightApproximator.setSourceNode"]},"type":"staticDiff"}]}]}