{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":50,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":141,"com.graphhopper.GraphHopperAPITest.testNoLoad":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":36,"com.graphhopper.reader.OSMReaderTest.testFerry":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":255,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":207,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":224,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":129,"com.graphhopper.reader.OSMReaderTest.testWithBounds":201,"com.graphhopper.storage.MMapDataAccessTest.testSegments":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":149,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":56,"com.graphhopper.coll.CompressedArrayTest.testCompress":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":82,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":55,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":238,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":66,"com.graphhopper.GraphHopperTest.testPrepare":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":219,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":96,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":146,"com.graphhopper.GraphHopperAPITest.testDisconnected179":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":143,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":131,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":210,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":154,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":225,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":70,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":167,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":226,"com.graphhopper.reader.OSMReaderTest.testSort":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":91,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":200,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":173,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":100,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":245,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":138,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":92,"com.graphhopper.storage.MMapDataAccessTest.testHeader":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":139,"com.graphhopper.storage.MMapDataAccessTest.testCopy":23,"com.graphhopper.routing.PathTest.testWayList":160,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":69,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":114,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":250,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":218,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":216,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":102,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":229,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":259,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":181,"com.graphhopper.coll.BigLongIntMapTest.testPut":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":124,"com.graphhopper.coll.CompressedArrayTest.testCompress2":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":120,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":165,"com.graphhopper.GraphHopperAPITest.testLoad":3,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.GHRequestTest.testGetHint":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":184,"com.graphhopper.reader.OSMReaderTest.testBarriers":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":108,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":148,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":81,"com.graphhopper.routing.PathTest.testFindInstruction":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":130,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":186,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":31,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":41,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":28,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":145,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":122,"com.graphhopper.reader.OSMReaderTest.testFoot":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":232,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":258,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":254,"com.graphhopper.reader.OSMReaderTest.testOneWay":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":133,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":52,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":171,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":156,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":12,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":205,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":248,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":48,"com.graphhopper.reader.OSMReaderTest.testMain":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":152,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":203,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":151,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":83,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":121,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":155,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":126,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":42,"com.graphhopper.routing.PathTest.testTime":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":157,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":158,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":54,"com.graphhopper.GraphHopperTest.testVia":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":37,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":183,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":206,"com.graphhopper.GraphHopperTest.testFootOnly":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":243,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":51,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":188,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":107,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":235},"transformations":[{"failures":[0],"tindex":"845a4237-82b4-11e5-8872-b96ab7ee0377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:53","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.hash.TLongIntHashMap[][int] = new gnu.trove.map.hash.TLongIntHashMap(int , 1.4F , int , int)"},"status":-1},{"failures":[],"tindex":"845a6948-82b4-11e5-8872-6d8c5112c015","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:806","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"edgeId":"intIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"status":0},{"failures":[1,2],"tindex":"845a6949-82b4-11e5-8872-5b56934bd93e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:98","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[],"tindex":"845a694a-82b4-11e5-8872-7fed5f217b0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"nodeCHEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"845a905b-82b4-11e5-8872-c7fd6e5e44f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1179","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GraphHopper.getGraphHopperLocation().isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot clean GraphHopper without specified graphHopperLocation\");\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:328","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-1},{"failures":[],"tindex":"845a905c-82b4-11e5-8872-2bb3f9915905","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[17],"tindex":"845a905d-82b4-11e5-8872-6938c943a7e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:216","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"To access instructions you need to enable creation before routing\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:706","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\")"},"status":-1},{"failures":[],"tindex":"845a905e-82b4-11e5-8872-7b1147f7d67e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"encoded","tmpValue":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"845a905f-82b4-11e5-8872-cf246775b718","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:102","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"variableMap":{"cacheDir":"lockDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SimpleFSLockFactory:45","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"845ab770-82b4-11e5-8872-f978f0a0075e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1201","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"variableMap":{"allowWrites":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:175","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1 ; ) {\n    try {\n        java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n        break;\n    } catch (java.io.IOException tmpex) {\n        java.io.IOException = java.io.IOException;\n        int++;\n        com.graphhopper.util.Helper.cleanHack();\n        try {\n            java.lang.Thread.sleep(5);\n        } catch (java.lang.InterruptedException iex) {\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"845ab771-82b4-11e5-8872-318acafc77a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:228","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"fwdFaster":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:540","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":0},{"failures":[],"tindex":"845ab772-82b4-11e5-8872-8d536ab6a01b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:58","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n    gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n} "},"status":-2},{"failures":[90],"tindex":"845ab773-82b4-11e5-8872-05acacc4167b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.Set<java.lang.String>))\n    return long;\n"},"variableMap":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:259","type":"CtIfImpl","sourcecode":"if ((((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>)))) && (!(com.graphhopper.reader.OSMNode.hasTag(\"ford\", \"no\")))) {\n    return long;\n} "},"status":-1},{"failures":[],"tindex":"845ab774-82b4-11e5-8872-8fd1c10bc576","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":0},{"failures":[91],"tindex":"845ade85-82b4-11e5-8872-fd09a70ad1b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:79","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[],"tindex":"845ade86-82b4-11e5-8872-251e14ad7e5a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[92,93,94,95,96,97,91,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,35,41,43,168,64,66,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,87,197,198,199,200,201,202,203,204,205,206,6,207,208,209,13,14,15,2,210,16,211],"tindex":"845ade87-82b4-11e5-8872-f7accd920ee5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[119,120,32,212,55,72,213,85,214],"tindex":"845ade88-82b4-11e5-8872-091a2b07ab96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:902","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[215,216],"tindex":"845b0599-82b4-11e5-8872-474c01f89695","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"storedKey","nodeFlags":"storedKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.storage.VLongStorage.readVLong()"},"status":-1},{"failures":[217,98,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,175,177,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,178,3,4,193,194,195,7,8,9,10,11,12,208,209,13,14,15,2,16,251,252,253,254,255,256,257,258,259],"tindex":"845b059a-82b4-11e5-8872-c1f0ee0b75a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"spatialKey","pointer":"spatialKey","maxCapacity":"spatialKey","baseCapacity":"spatialKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"845ab771-82b4-11e5-8872-318acafc77a2","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testOneWay":["com.graphhopper.routing.util.AbstractFlagEncoder_long_setSpeed(long,double).t3"]},"type":"branch"}]}]}