{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":0,"com.graphhopper.reader.OSMReaderTest.testFerry":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":160,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":176,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":213,"com.graphhopper.reader.OSMReaderTest.testWithBounds":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":80,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":141,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":178,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":161,"com.graphhopper.GraphHopperTest.testPrepare":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":98,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":89,"com.graphhopper.util.InstructionListTest.testWayList":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":4,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":203,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":122,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":81,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":11,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":72,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":115,"com.graphhopper.GraphHopperTest.testLoadOSM":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":181,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":37,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":148,"com.graphhopper.reader.OSMReaderTest.testSort":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":95,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":22,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":210,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":116,"com.graphhopper.routing.PathTest.testWayList":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":13,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":76,"com.graphhopper.GraphHopperAPITest.testLoad":123,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":145,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":83,"com.graphhopper.reader.OSMReaderTest.testBarriers":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":158,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":2,"com.graphhopper.util.GHUtilityTest.testCopy":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":202,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":49,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":204,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":58,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":108,"com.graphhopper.reader.PrinctonReaderTest.testRead":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":164,"com.graphhopper.util.InstructionListTest.testWayList2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":183,"com.graphhopper.reader.OSMReaderTest.testFoot":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":8,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":40,"com.graphhopper.reader.OSMReaderTest.testOneWay":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":7,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":105,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":195,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":97,"com.graphhopper.reader.OSMReaderTest.testMain":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":42,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":23,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":56,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":140,"com.graphhopper.storage.GraphHopperStorageTest.testClone":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":27,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":163,"com.graphhopper.GraphHopperTest.testFootAndCar":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":179,"com.graphhopper.reader.OSMReaderTest.testRelation":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":154,"com.graphhopper.GraphHopperTest.testPrepareOnly":194,"com.graphhopper.GraphHopperTest.testVia":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":94,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":133,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":14,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":63,"com.graphhopper.GraphHopperTest.testFootOnly":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":184,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":47},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"321ff08f-8270-11e5-b5cc-976837166ee8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:720","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"variableMap":{"nodeEntryBytes":"low","newI":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:113","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"status":-1},{"failures":[],"tindex":"322017a0-8270-11e5-b5cc-739d00575df3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:416","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.FlagEncoder>"},"status":-2},{"failures":[138],"tindex":"322017a1-8270-11e5-b5cc-db325da9db5d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"size","nextTurnCostIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:616","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member = com.graphhopper.reader.OSMRelation.getMembers().get(int);\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) != (com.graphhopper.reader.OSMRelation.Member.int))\n        continue;\n    \n    long long = com.graphhopper.reader.OSMRelation.Member.ref();\n    long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long);\n    long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n    if (long != long)\n        com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n    \n}"},"status":-1},{"failures":[12,139,140,141,142,13,143,14,144,145,146,15,147,148,149,16,17,150,151,18,19,152,20,21,153,154,155,156,157,22,158,23,159,160,161,162,163,24,164,25,165,166,26,167,168,169,170,171,172,27,173,174,175,176,177,178,179,180,181,182,41,183,184,185,186,187,188,189,190,191,192,42,193,64,65,194,66,67,195,68,69,196,197,70,71,74,75,198,199,86,87,88,89,90,91,200,201,202,203,92,204,93,94,205,95,96,206,97,207,98,208,209,99,100,210,101,102,103,104,105,106,107,108,211,109,110,111,112,113,212,114,115],"tindex":"322017a2-8270-11e5-b5cc-c3d262bb5967","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:280","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n        throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n    \n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:137","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting());\n}"},"status":-1},{"failures":[71,74,75,93,209,100,101,104,106,109,111,112,212,114],"tindex":"32203eb3-8270-11e5-b5cc-e38ad39c3967","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:219","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int)"},"status":-1},{"failures":[],"tindex":"32203eb4-8270-11e5-b5cc-b7e00793478c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"speed","lat":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:251","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":0},{"failures":[],"tindex":"32203eb5-8270-11e5-b5cc-5d6183e08534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:126","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-1},{"failures":[],"tindex":"32203eb6-8270-11e5-b5cc-fd97523eab66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"32203eb7-8270-11e5-b5cc-43afcc99be01","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:525","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"graph.dataaccess.segmentSize\", int)"},"variableMap":{"args":"args","defaultSegmentSize":"workerThreads"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:586","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"osmreader.workerThreads\", int)"},"status":0},{"failures":[213,214,215],"tindex":"32203eb8-8270-11e5-b5cc-b108f2d122db","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:69","type":"CtIfImpl","sourcecode":"if ((java.io.File.exists()) && (!(java.io.File.delete())))\n    throw new java.lang.RuntimeException((\"Cannot delete \" + java.io.File));\n"},"variableMap":{"lockFile":"cacheDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:150","type":"CtTryImpl","sourcecode":"try {\n    this.java.io.File = java.io.File.getCanonicalFile();\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-1},{"failures":[216,217,151,25,172,218,38,219,220,57,221,64,72],"tindex":"322065c9-8270-11e5-b5cc-5f46fbdb136c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"variableMap":{"from":"from","to":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()).setWayGeometry(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.fetchWayGeometry(0))"},"status":-1},{"failures":[],"tindex":"322065ca-8270-11e5-b5cc-a516d1d3d431","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[222],"tindex":"322065cb-8270-11e5-b5cc-dd7f4ac0c2a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:475","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-1},{"failures":[],"tindex":"322065cc-8270-11e5-b5cc-d3fd8b2189ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[223,194,197,70,71,72,74,75,198,76,199,126,128,129,130,224,215,131,132,133,134,135,136,137],"tindex":"322065cd-8270-11e5-b5cc-7fc2bf996976","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"status":-1},{"failures":[225],"tindex":"322065ce-8270-11e5-b5cc-8540f24f555c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:286","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(')')"},"status":-1},{"failures":[],"tindex":"32208cdf-8270-11e5-b5cc-297ebc35ab06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:286","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"32208ce0-8270-11e5-b5cc-07c01f6979c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:218","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"32208ce1-8270-11e5-b5cc-bd34e20da292","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"status":0},{"failures":[],"tindex":"32208ce2-8270-11e5-b5cc-dd778477a327","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"updateCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:282","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"32208ce1-8270-11e5-b5cc-bd34e20da292","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.util.GHUtilityTest.testSort":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.reader.PrinctonReaderTest.testRead":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.util.InstructionListTest.testWayList":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.util.BreadthFirstSearchTest.testBFS":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.PathBidirRefTest.testExtract":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperAPITest.testDisconnected179":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}