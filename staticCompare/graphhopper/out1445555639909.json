{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":6,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":19,"com.graphhopper.routing.PathTest.testFindInstruction":1,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":23,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":10,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":20,"com.graphhopper.routing.QueryGraphTest.testOneWay":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":26,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":21,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":30,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":31,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":36,"com.graphhopper.storage.EdgeTest.testCloneFull":0,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":8,"com.graphhopper.util.InstructionListTest.testFind":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":39,"com.graphhopper.GraphHopperTest.testFootAndCar":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":38},"transformations":[{"failures":[0],"tindex":"93b87670-7912-11e5-b07d-5912b87b53e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:54","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"93b8c491-7912-11e5-b07d-abe1c271a9e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"ab_y","incDist2DSum":"rb_x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-1},{"failures":[],"tindex":"93b8c492-7912-11e5-b07d-79fa5eb3f2b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:526","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"variableMap":{"nodeB":"speed","edgeId":"speed","nodeA":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"93b8eba3-7912-11e5-b07d-695e279b3a7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"adjNode","bytes":"adjNode","segmentSizeInBytes":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.routing.AStar.AStarEdge.int, int), com.graphhopper.routing.AStar.AStarEdge, int)"},"status":-2},{"failures":[],"tindex":"93b8eba4-7912-11e5-b07d-a1ba6a8ea6e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"tmpIndex","retBucket":"tmpIndex","i":"tmpIndex","bucketSize":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-2},{"failures":[],"tindex":"93b8eba5-7912-11e5-b07d-996f33a4588d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"x1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:43","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-2},{"failures":[],"tindex":"93b8eba6-7912-11e5-b07d-c16f230be861","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"93b912b7-7912-11e5-b07d-b97ab6888598","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"minNetworkSize","hash":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:563","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.minNetworkSize\", int)"},"status":-2},{"failures":[],"tindex":"93b912b8-7912-11e5-b07d-89362bdfc4ff","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[],"tindex":"93b912b9-7912-11e5-b07d-bd17b035b4ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:99","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getHeader((2 * 4))"},"variableMap":{"index":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:192","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-2},{"failures":[],"tindex":"93b912ba-7912-11e5-b07d-5135f7f7ce13","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:82","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:75","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 7)] = ((byte)(long >> 56))"},"status":-2},{"failures":[],"tindex":"93b939cb-7912-11e5-b07d-550aa844d230","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"lon","angleXY":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-2},{"failures":[],"tindex":"93b939cc-7912-11e5-b07d-0d9bca04fcf5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"lat","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"N\";\nelse\n    java.lang.String += \"S\";\n"},"status":-2},{"failures":[],"tindex":"93b939cd-7912-11e5-b07d-3f31ada69f61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-2},{"failures":[],"tindex":"93b939ce-7912-11e5-b07d-417eee2115f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"status":-2},{"failures":[],"tindex":"93b939cf-7912-11e5-b07d-17db081b7608","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:130","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return 0;\n"},"variableMap":{"phrase":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:713","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"93b960e0-7912-11e5-b07d-c70b5d55e0f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"length","nodeId":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = com.graphhopper.reader.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                TLongList TLongList = new TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                com.graphhopper.reader.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"93b960e1-7912-11e5-b07d-d76c2347dedd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:897","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int))"},"status":-2},{"failures":[],"tindex":"93b960e2-7912-11e5-b07d-11007ba82af6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"priorityFromRelation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:352","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-2},{"failures":[],"tindex":"93b987f3-7912-11e5-b07d-2565619dafae","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:100","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"variableMap":{"ret":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:51","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}