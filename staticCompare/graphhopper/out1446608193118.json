{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":310,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":119,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":155,"com.graphhopper.reader.OSMReaderTest.testFerry":28,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":271,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":272,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":5,"com.graphhopper.routing.QueryGraphTest.testOneWay":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":242,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":115,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":85,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":285,"com.graphhopper.geohash.LinearKeyAlgoTest.testEncode":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":0,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":317,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":134,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":241,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":323,"com.graphhopper.GraphHopperTest.testPrepare":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":309,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":170,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":313,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":203,"com.graphhopper.util.InstructionListTest.testWayList":268,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":150,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":350,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":280,"com.graphhopper.GraphHopperAPITest.testDisconnected179":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":210,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":298,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":116,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":261,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":345,"com.graphhopper.util.HelperTest.testUnzip":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":219,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":226,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":337,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":50,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":107,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":102,"com.graphhopper.GraphHopperTest.testLoadOSM":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":117,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":194,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":220,"com.graphhopper.reader.OSMReaderTest.testSort":31,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":304,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":73,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":312,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":331,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":27,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":165,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":336,"com.graphhopper.routing.PathTest.testWayList":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":252,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":114,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":299,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":82,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":259,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":306,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":69,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":58,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":264,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":344,"com.graphhopper.util.GHUtilityTest.testSort":277,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":295,"com.graphhopper.coll.IntIntBinHeapTest.testSize":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":111,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":173,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":333,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":253,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":72,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":282,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":221,"com.graphhopper.GraphHopperAPITest.testLoad":61,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":92,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":216,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":13,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":239,"com.graphhopper.routing.PathTest.testFound":338,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":130,"com.graphhopper.util.GHUtilityTest.testCopy":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":297,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":59,"com.graphhopper.routing.PathTest.testFindInstruction":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":77,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":88,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":208,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":179,"com.graphhopper.util.InstructionListTest.testEmptyList":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":201,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":104,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":189,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":319,"com.graphhopper.reader.PrinctonReaderTest.testRead":260,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":19,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":225,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":247,"com.graphhopper.util.InstructionListTest.testWayList2":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":140,"com.graphhopper.reader.OSMReaderTest.testFoot":29,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":125,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":122,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":206,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":81,"com.graphhopper.coll.IntIntBinHeapTest.testClear":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":109,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":281,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":227,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":22,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":87,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":151,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":171,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":178,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":316,"com.graphhopper.routing.PathBidirRefTest.testExtract":334,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":263,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":273,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":289,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":217,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":129,"com.graphhopper.util.GHUtilityTest.testSort2":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":307,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":254,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":255,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":43,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":250,"com.graphhopper.routing.PathBidirRefTest.testExtract2":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":249,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":149,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":196,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":240,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":99,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":118,"com.graphhopper.storage.GraphHopperStorageTest.testClone":174,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":207,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":245,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":60,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":184,"com.graphhopper.GraphHopperTest.testFootAndCar":51,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":191,"com.graphhopper.routing.PathTest.testTime":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":135,"com.graphhopper.reader.OSMReaderTest.testRelation":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":244,"com.graphhopper.util.GHUtilityTest.testSortDirected":278,"com.graphhopper.GraphHopperTest.testPrepareOnly":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":234,"com.graphhopper.GraphHopperTest.testVia":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":157,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":302,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":68,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":133,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":214,"com.graphhopper.GraphHopperTest.testFootOnly":56,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":195,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":139,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":141,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":233,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":340,"com.graphhopper.util.InstructionListTest.testFind":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":224},"transformations":[{"failures":[],"tindex":"3e52b3c4-82a5-11e5-a1b7-ed42951d7328","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"3e52dad5-82a5-11e5-a1b7-63265ddb8d45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"variableMap":{"adjNodesToDelIter":"baseRevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:628","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[],"tindex":"3e5301e6-82a5-11e5-a1b7-b5800725804c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:359","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(gnu.trove.list.TLongList.get(0))"},"status":-2},{"failures":[13],"tindex":"3e5301e7-82a5-11e5-a1b7-2503fbf4f994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[14,15,16,17,18,19,20],"tindex":"3e5301e8-82a5-11e5-a1b7-f5183d85b5f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"skippedEdge2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\nelse\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n"},"status":-1},{"failures":[21],"tindex":"3e5328f9-82a5-11e5-a1b7-136ae97cb9cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:150","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[22,23,24,25,26],"tindex":"3e5328fa-82a5-11e5-a1b7-b768a8c654cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_key()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.poll_element()"},"status":-1},{"failures":[],"tindex":"3e5328fb-82a5-11e5-a1b7-d72025662a83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"frontIndex","entityType":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"3e5328fc-82a5-11e5-a1b7-838d6a1532ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:58","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc"},"variableMap":{"calc":"calc","com.graphhopper.util.Helper.DIST_EARTH":"calc"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection"},"status":-1},{"failures":[],"tindex":"3e53500d-82a5-11e5-a1b7-57ade2133657","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:188","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[63],"tindex":"3e53500e-82a5-11e5-a1b7-3d735627876e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:66","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir()"},"status":-1},{"failures":[64,65,13],"tindex":"3e53500f-82a5-11e5-a1b7-c3caf4e46102","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:51","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,39,40,41,42,44,45,50,51,52,55,57],"tindex":"3e535010-82a5-11e5-a1b7-79fb8f1e4f1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:753","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension)"},"status":-1},{"failures":[21,66,67],"tindex":"3e537621-82a5-11e5-a1b7-1fce0b6c3ec4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"lonSize","hash":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:150","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[68,69],"tindex":"3e537622-82a5-11e5-a1b7-27471c33d8a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,21,66,67,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,0,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,27,260,261,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,1,2,262,3,4,263,47,48,49,50,51,52,53,264,54,56,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,61,62,281,282,283,64,284,285,286,287,288,65,13,289,290,291,292,14,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,15,16,312,17,313,314,315,316,317,318,319,320,321,322,18,19,323,324,325,20,326,326,5,5,327,327,328,328,6,6,329,329,7,7,8,8,330,330,331,331,9,9,10,10,11,11,332,332,333,333,12,12,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"3e537623-82a5-11e5-a1b7-c9e1a94b88f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[346,347,151,152,21,66,348,67],"tindex":"3e539d34-82a5-11e5-a1b7-e1128f70fd3e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:57","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-1},{"failures":[],"tindex":"3e53c445-82a5-11e5-a1b7-f5c3ebfdc3c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:102","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long)"},"status":-1},{"failures":[349],"tindex":"3e53c446-82a5-11e5-a1b7-2f60fbe56cbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"variableMap":{"degree":"degree","lon":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"status":-1},{"failures":[350],"tindex":"3e53c447-82a5-11e5-a1b7-3f7746ea6474","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"nextLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:233","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLatitude(1)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}