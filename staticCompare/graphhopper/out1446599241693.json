{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":108,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":103,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":213,"com.graphhopper.GraphHopperAPITest.testNoLoad":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.reader.OSMReaderTest.testFerry":376,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":395,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":283,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":345,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":119,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":440,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":148,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":184,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":309,"com.graphhopper.GraphHopperTest.testPrepare":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":46,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":400,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":246,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":393,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":28,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":256,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":370,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":68,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":435,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":62,"com.graphhopper.GraphHopperTest.testLoadOSM":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":257,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":286,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":102,"com.graphhopper.reader.OSMReaderTest.testSort":379,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":121,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":329,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":203,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":161,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":10,"com.graphhopper.routing.DijkstraTest.initializationError":0,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":375,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":318,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":327,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":325,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":36,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":97,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":25,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":332,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":346,"com.graphhopper.GraphHopperAPITest.testLoad":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":104,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":185,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":336,"com.graphhopper.reader.OSMReaderTest.testBarriers":380,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":132,"com.graphhopper.util.GHUtilityTest.testCopy":409,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":215,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":441,"com.graphhopper.routing.PathTest.testFindInstruction":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":212,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":204,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":364,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":350,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":101,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":313,"com.graphhopper.util.InstructionListTest.testWayList2":405,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":265,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":369,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":247,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":174,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":381,"com.graphhopper.routing.AStarTest.initializationError":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":314,"com.graphhopper.routing.PathBidirRefTest.testExtract":64,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":114,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":260,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":372,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":422,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":154,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":420,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":270,"com.graphhopper.util.GHUtilityTest.testSort2":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":37,"com.graphhopper.reader.OSMReaderTest.testMain":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":359,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":288,"com.graphhopper.storage.GraphHopperStorageTest.testClone":177,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":87,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":134,"com.graphhopper.routing.PathTest.testTime":70,"com.graphhopper.util.InstructionListTest.testCreateGPX":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":251,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":147,"com.graphhopper.util.GHUtilityTest.testSortDirected":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":300,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":402,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":7,"com.graphhopper.GraphHopperTest.testFootOnly":438,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":248,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":143,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":259,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":2,"com.graphhopper.routing.QueryGraphTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":227,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":255,"com.graphhopper.reader.OSMReaderTest.testWithBounds":388,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":368,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":351,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":173,"com.graphhopper.search.NameIndexTest.testFlush":442,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":22,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":206,"com.graphhopper.util.InstructionListTest.testWayList":401,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":298,"com.graphhopper.GraphHopperAPITest.testDisconnected179":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":135,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":130,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":163,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":427,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":362,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":60,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":197,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":34,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":237,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":44,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":172,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":165,"com.graphhopper.routing.PathTest.testWayList":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":272,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":276,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":342,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":75,"com.graphhopper.util.GHUtilityTest.testSort":410,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":322,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":371,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":214,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":275,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":319,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":328,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":330,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":98,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":429,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":280,"com.graphhopper.routing.PathTest.testFound":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":153,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":434,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":19,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":348,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":138,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":182,"com.graphhopper.util.InstructionListTest.testEmptyList":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":77,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":317,"com.graphhopper.reader.PrinctonReaderTest.testRead":373,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":127,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":353,"com.graphhopper.reader.OSMReaderTest.testFoot":377,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":323,"com.graphhopper.reader.OSMReaderTest.testOneWay":391,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":186,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":57,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":145,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":181,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":221,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":107,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":141,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":99,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":320,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":169,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":390,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":277,"com.graphhopper.routing.PathBidirRefTest.testExtract2":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":245,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":199,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":226,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":383,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":258,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":324,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":411,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":91,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":194,"com.graphhopper.GraphHopperTest.testFootAndCar":428,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":282,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":339,"com.graphhopper.GraphHopperTest.testPrepareOnly":417,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":216,"com.graphhopper.GraphHopperTest.testVia":425,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":32,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":386,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":385,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":278,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":198,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":110,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":384,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":236,"com.graphhopper.routing.AStarBidirectionTest.initializationError":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":144,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":299,"com.graphhopper.util.InstructionListTest.testFind":397,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":326},"transformations":[{"failures":[0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435],"tindex":"66d9cf78-8290-11e5-aaa3-4f0243407bdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"secondary\") , int)"},"status":-1},{"failures":[6,8,19,21,22,32,33,34,35,73,74,107,436,437,119,131,133,135,138,148,149,153,157,159,160,168,177,179,181,184,194,195,199,203,205,206,276,277,278,292,294,296,299,309,310,314,318,320,321,330,339,341,343,346,356,357,361,365,367,368,376,377,378,379,380,381,382,383,384,386,387,388,389,391,408,410,412,416,417,424,425,426,427,428,429,430,432,433,438,434],"tindex":"66d9f689-8290-11e5-aaa3-bf0a3799fc66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"a","adjNode":"a","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"status":-1},{"failures":[],"tindex":"66d9f68a-8290-11e5-aaa3-d3d961253764","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:45","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"66da1d9b-8290-11e5-aaa3-1152bbb1e508","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"shift","child":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:123","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[251],"tindex":"66da1d9c-8290-11e5-aaa3-d17e75b0eb55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:207","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-1},{"failures":[439,440,382],"tindex":"66da1d9d-8290-11e5-aaa3-8f5f37be6cd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.dem.HeightTile == null) {\n    if (!(java.io.File.exists()))\n        java.io.File.mkdirs();\n    \n    java.lang.String java.lang.String = com.graphhopper.reader.dem.SRTMProvider.getFileString(double, double);\n    if (java.lang.String == null)\n        return 0;\n    \n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1);\n    com.graphhopper.reader.dem.HeightTile.setCalcMean(boolean);\n    gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile);\n    com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int));\n    com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess);\n    boolean boolean = false;\n    try {\n        boolean = com.graphhopper.storage.DataAccess.loadExisting();\n    } catch (java.lang.Exception ex) {\n        org.slf4j.Logger.warn((((\"cannot load dem\" + int) + \", error:\") + (java.lang.Exception.getMessage())));\n    }\n    if (!boolean) {\n        byte[] byte[] = new byte[(2 * (int)) * (int)];\n        com.graphhopper.storage.DataAccess.create(byte[].int);\n        try {\n            java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n            java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n            java.io.InputStream java.io.InputStream;\n            if (!(java.io.File.exists())) {\n                for (int int = 0 ; int < 3 ; int++) {\n                    try {\n                        com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                        break;\n                    } catch (java.net.SocketTimeoutException ex) {\n                        java.lang.Thread.sleep(2000);\n                        continue;\n                    } catch (java.io.FileNotFoundException ex) {\n                        java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                        continue;\n                    }\n                }\n            } \n            java.io.InputStream = new java.io.FileInputStream(java.io.File);\n            java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n            java.util.zip.ZipInputStream.getNextEntry();\n            java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n            int int;\n            while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n                for (int int = 0 ; int < int ; int += 2) {\n                    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                    if ((short < (-1000)) || (short > 12000))\n                        short = java.lang.Short.short;\n                    \n                    com.graphhopper.storage.DataAccess.setShort(int, short);\n                }\n            }\n            com.graphhopper.storage.DataAccess.flush();\n        } catch (java.lang.Exception ex) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } \n} "},"status":-1},{"failures":[],"tindex":"66da44ae-8290-11e5-aaa3-df9a5a2c054e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"fwdSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:230","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"66da44af-8290-11e5-aaa3-73700f878023","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.clear()"},"status":-2},{"failures":[441],"tindex":"66da44b0-8290-11e5-aaa3-a19664182b88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Node: \")"},"variableMap":{"txt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:278","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(double[][int])"},"status":-1},{"failures":[],"tindex":"66da44b1-8290-11e5-aaa3-1b21270d6aca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    if (java.lang.Integer != null) {\n        if (!(com.graphhopper.reader.OSMWay.hasTag(\"service\")))\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n}"},"status":-2},{"failures":[89],"tindex":"66da44b2-8290-11e5-aaa3-35c978b83ecf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:219","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"66da44b3-8290-11e5-aaa3-27b48f8ab5a8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"adjNode","factor":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:78","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[442,166,168,273,277,282,326,330,417,429,430,432,433],"tindex":"66da6bc4-8290-11e5-aaa3-811093c96f56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-1},{"failures":[],"tindex":"66da6bc5-8290-11e5-aaa3-a79c411fe628","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][int]) & 255) << 24) | (((byte[][++int]) & 255) << 16)) | (((byte[][++int]) & 255) << 8)) | ((byte[][++int]) & 255)"},"status":-2},{"failures":[],"tindex":"66da6bc6-8290-11e5-aaa3-fbd920fdb0f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:164","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"status":-2},{"failures":[],"tindex":"66da6bc7-8290-11e5-aaa3-9326beb32a47","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[],"tindex":"66da6bc8-8290-11e5-aaa3-bfc19e6f5e2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"start","entrySize":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":0},{"failures":[],"tindex":"66da6bc9-8290-11e5-aaa3-f174c8085875","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:304","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"b":"empty","updateBestPath":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"66da92da-8290-11e5-aaa3-032c861f1fd6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"66da92db-8290-11e5-aaa3-11f600660b6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"N_ADDITIONAL","segmentSizeIntsPower":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:269","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}