{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":318,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":344,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.reader.OSMReaderTest.testFerry":247,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":273,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":274,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":341,"com.graphhopper.routing.QueryGraphTest.testOneWay":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":227,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":7,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":374,"com.graphhopper.storage.VLongStorageTest.testWrite":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":70,"com.graphhopper.reader.OSMReaderTest.testWithBounds":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":289,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":290,"com.graphhopper.coll.CompressedArrayTest.testCompress":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":182,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":181,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":88,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":257,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":336,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":317,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":125,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":324,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":300,"com.graphhopper.util.InstructionListTest.testWayList":26,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":156,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":376,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":282,"com.graphhopper.GraphHopperAPITest.testDisconnected179":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":197,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":169,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":71,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":367,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":212,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":195,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":131,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":339,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":72,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":148,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":207,"com.graphhopper.reader.OSMReaderTest.testSort":249,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":312,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":254,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":223,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":153,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":333,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":322,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":349,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":244,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":358,"com.graphhopper.routing.PathTest.testWayList":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":172,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":236,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":69,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":307,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":220,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":39,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":102,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":314,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":3,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":366,"com.graphhopper.util.GHUtilityTest.testSort":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":76,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":66,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":128,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":354,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":108,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":237,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":348,"com.graphhopper.coll.CompressedArrayTest.testCompress2":4,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":286,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":30,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":42,"com.graphhopper.GraphHopperAPITest.testLoad":283,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":321,"com.graphhopper.util.TranslationMapTest.testToString":372,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":204,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.reader.OSMReaderTest.testBarriers":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":224,"com.graphhopper.routing.PathTest.testFound":360,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":166,"com.graphhopper.util.GHUtilityTest.testCopy":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":305,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":9,"com.graphhopper.routing.PathTest.testFindInstruction":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":34,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":44,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":171,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":110,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":154,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":59,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":143,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":330,"com.graphhopper.reader.PrinctonReaderTest.testRead":245,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":203,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":335,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":231,"com.graphhopper.util.InstructionListTest.testWayList2":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":94,"com.graphhopper.reader.OSMReaderTest.testFoot":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":184,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":77,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":241,"com.graphhopper.reader.OSMReaderTest.testOneWay":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":64,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":13,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":285,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":334,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":104,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":126,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":178,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":251,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":338,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":327,"com.graphhopper.routing.PathBidirRefTest.testExtract":356,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":264,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":275,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":205,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":261,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":84,"com.graphhopper.util.GHUtilityTest.testSort2":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":174,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":238,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":201,"com.graphhopper.routing.PathBidirRefTest.testExtract2":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":81,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":103,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":225,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":86,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":252,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":55,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":73,"com.graphhopper.storage.GraphHopperStorageTest.testClone":129,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":160,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":230,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":138,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":145,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":168,"com.graphhopper.routing.PathTest.testTime":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":229,"com.graphhopper.util.GHUtilityTest.testSortDirected":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":219,"com.graphhopper.GraphHopperTest.testPrepareOnly":258,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":113,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":310,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":202,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":346,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":14,"com.graphhopper.GraphHopperTest.testFootOnly":267,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":93,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":177,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":218,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":362,"com.graphhopper.util.InstructionListTest.testFind":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":302,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":210},"transformations":[{"failures":[],"tindex":"a24601f9-828b-11e5-9fba-05289fc65cf1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"a246290a-828b-11e5-9fba-17cd80d6ad14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"variableMap":{"offset":"pointer","bytes":"bytes","value":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:72","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[6],"tindex":"a246290b-828b-11e5-9fba-1dd4335025a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"maxX","x":"deltaX","absY":"deltaX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"a246501c-828b-11e5-9fba-f722bf8c9bc2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:89","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:140","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[7,8,9,10,6,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"a246501d-828b-11e5-9fba-9fb3a7e874b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:257","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,15,249,250,251,16,252,17,253,254,18,255,256,257,258,259,260,261,262,263,264,265,19,20,21,22,23,24,266,25,267,268,269,270,26,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"tindex":"a246501e-828b-11e5-9fba-955c006472dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"sizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:297","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"a2469e3f-828b-11e5-9fba-5d571a6d24e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:204","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"status":0},{"failures":[],"tindex":"a2469e40-828b-11e5-9fba-6b5ff4b89ed5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"status":-2},{"failures":[28,33,44,47,49,55,56,66,126,137,140,142,148,149,159,162,173,176,178,184,185,195,209,220,223,225,231,232,242],"tindex":"a2469e41-828b-11e5-9fba-4d0c0ae42eec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:566","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((((long)((int + 1))) * 4))"},"variableMap":{"intIndex":"edgeCount","dataAccess":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:526","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 1) * (int)))"},"status":-1},{"failures":[104,105,106,107,368,108],"tindex":"a2469e42-828b-11e5-9fba-e5702d82ca82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"resolution","currentIndex":"resolution","bucketSize":"resolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initLatLonSize(int)"},"status":-1},{"failures":[],"tindex":"a246c553-828b-11e5-9fba-a3d4151430b0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"variableMap":{"mode":"mode","pointList":"com.graphhopper.util.PointList.EMPTY","com.graphhopper.util.PointList.EMPTY":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:87","type":"CtIfImpl","sourcecode":"if (int == 3)\n    return com.graphhopper.util.PointList.clone(false);\nelse if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":0},{"failures":[369,370,371],"tindex":"a246c554-828b-11e5-9fba-fbb9060cc85d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.hasTag(java.lang.String))\n    return com.graphhopper.reader.OSMElement.getTag(java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"a246c555-828b-11e5-9fba-57692c2f12a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long)"},"variableMap":{"bytes":"byteCount","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"status":0},{"failures":[260,262,263,22,298,300,301,308,313,314,315,317,322,332,334],"tindex":"a246ec66-828b-11e5-9fba-1d2653ff5d77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"switchWrapper"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:72","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n} "},"status":-1},{"failures":[],"tindex":"a246ec67-828b-11e5-9fba-f5ddfebab7c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"fullWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.routing.Path.getWeight()"},"status":-2},{"failures":[372],"tindex":"a246ec68-828b-11e5-9fba-9d8bd131867e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:123","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2))"},"status":-1},{"failures":[],"tindex":"a246ec69-828b-11e5-9fba-394932d811b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"a247137a-828b-11e5-9fba-9f689439361e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:275","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\")"},"status":-2},{"failures":[373,374,375,376],"tindex":"a247137b-828b-11e5-9fba-5b74ba16681b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:604","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[],"tindex":"a247137c-828b-11e5-9fba-5fecb9d92a87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"capacity","nodeFlags":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:98","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a246c555-828b-11e5-9fba-57692c2f12a4","diffs":[{"branches":{"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":["com.graphhopper.storage.UnsafeDataAccess_boolean_ensureCapacity(long,boolean).t1"]},"type":"branch"}]},{"transformation":"a2469e3f-828b-11e5-9fba-5d571a6d24e6","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}