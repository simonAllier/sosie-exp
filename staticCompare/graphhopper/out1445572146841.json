{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":269,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":363,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":130,"com.graphhopper.GraphHopperAPITest.testNoLoad":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":1,"com.graphhopper.reader.OSMReaderTest.testFerry":403,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":436,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":437,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":303,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":172,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":41,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":21,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":76,"com.graphhopper.GraphHopperTest.testPrepare":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":268,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":310,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":435,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":38,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":252,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":138,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":329,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":433,"com.graphhopper.GraphHopperTest.testLoadOSM":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":114,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":139,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":316,"com.graphhopper.reader.OSMReaderTest.testSort":406,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":414,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":156,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":238,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":34,"com.graphhopper.routing.DijkstraTest.initializationError":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":85,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":250,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":357,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":126,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":92,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":265,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":398,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":159,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":371,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":173,"com.graphhopper.GraphHopperAPITest.testLoad":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":359,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":220,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.reader.OSMReaderTest.testBarriers":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":352,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":311,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":396,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":368,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":379,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":239,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":390,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":6,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":147,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":324,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":397,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":69,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":94,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":408,"com.graphhopper.routing.AStarTest.initializationError":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":81,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":369,"com.graphhopper.routing.PathBidirRefTest.testExtract":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":266,"com.graphhopper.reader.OSMReaderTest.testMain":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":377,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":212,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":78,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":20,"com.graphhopper.reader.OSMReaderTest.testRelation":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":67,"com.graphhopper.GraphHopperTest.testFootOnly":431,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":141,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":137,"com.graphhopper.reader.OSMReaderTest.testWithBounds":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":312,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":185,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":178,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":251,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":65,"com.graphhopper.GraphHopperAPITest.testDisconnected179":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":8,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":388,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":419,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":337,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":424,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":214,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":189,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":360,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":321,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":263,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":120,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":160,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":341,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":336,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":169,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":198,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":211,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":131,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":155,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":344,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":399,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":426,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":26,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":317,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":432,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":248,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":175,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":11,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":278,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":84,"com.graphhopper.reader.PrinctonReaderTest.testRead":418,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":327,"com.graphhopper.reader.OSMReaderTest.testFoot":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":144,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":145,"com.graphhopper.reader.OSMReaderTest.testOneWay":417,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":236,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":307,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":18,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":330,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":362,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":300,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":14,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":87,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":44,"com.graphhopper.routing.PathBidirRefTest.testExtract2":402,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":127,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":234,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":108,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":364,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":91,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":292,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":229,"com.graphhopper.GraphHopperTest.testFootAndCar":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":4,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":166,"com.graphhopper.GraphHopperTest.testPrepareOnly":420,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":133,"com.graphhopper.GraphHopperTest.testVia":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":261,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":413,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":45,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":233,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":365,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":411,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":17,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":66,"com.graphhopper.routing.AStarBidirectionTest.initializationError":277,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":153},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"029e8c8a-7939-11e5-883d-9f57f8466a80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:174","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[],"tindex":"029edaab-7939-11e5-883d-474f202eb8a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"029f01bc-7939-11e5-883d-e9567310687b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextTurnCostIndex":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:247","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"));\n    if (boolean || boolean) {\n        boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n        if (boolean)\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"029f01bd-7939-11e5-883d-f9b6312d2dfa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"switchWrapper"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:49","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-2},{"failures":[],"tindex":"029f28ce-7939-11e5-883d-3f01b70d2d02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"variableMap":{"storedKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:467","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"029f28cf-7939-11e5-883d-df4590e37ad3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"029f28d0-7939-11e5-883d-a7a3730a0e4e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"indexDivisor","mainNodes":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:312","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"029f28d1-7939-11e5-883d-c3b721f1e3e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge2\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"029f4fe2-7939-11e5-883d-1bba689d0708","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:762","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"029f4fe3-7939-11e5-883d-2fc5d0e9966c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:179","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((5 * 4)))"},"status":-2},{"failures":[],"tindex":"029f4fe4-7939-11e5-883d-25f1e845060d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:104","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult)"},"status":-2},{"failures":[],"tindex":"029f4fe5-7939-11e5-883d-1f60381ba2e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:96","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"029f4fe6-7939-11e5-883d-e589ac825a0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(byte[].int)"},"status":-2},{"failures":[],"tindex":"029f76f7-7939-11e5-883d-fb20c0540e8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"029f76f8-7939-11e5-883d-57f68eff8214","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"status":-2},{"failures":[],"tindex":"029f76f9-7939-11e5-883d-7b604eef7b46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"status":-2},{"failures":[],"tindex":"029f76fa-7939-11e5-883d-7ffc935644a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:97","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"variableMap":{"minLat":"distEdge","lat":"distEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"status":-2},{"failures":[],"tindex":"029f9e0b-7939-11e5-883d-3b2bf322e897","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:101","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.isWeightLimitExceeded())\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:146","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.isEmpty())\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-2},{"failures":[],"tindex":"029f9e0c-7939-11e5-883d-ed52c4763198","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"variableMap":{"value":"lonDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}