{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":326,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":352,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":30,"com.graphhopper.reader.OSMReaderTest.testFerry":390,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":116,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":222,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":406,"com.graphhopper.storage.MMapDataAccessTest.testSegments":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":370,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":74,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":49,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":184,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":405,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":344,"com.graphhopper.GraphHopperTest.testPrepare":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":325,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":332,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":410,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":309,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":9,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":154,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":387,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":302,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":379,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":347,"com.graphhopper.GraphHopperTest.testLoadOSM":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":155,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":224,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":78,"com.graphhopper.reader.OSMReaderTest.testSort":393,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":372,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":264,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":203,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":62,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":357,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":404,"com.graphhopper.storage.MMapDataAccessTest.testHeader":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":378,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":298,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":255,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":307,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":150,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":262,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":281,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":287,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":278,"com.graphhopper.GraphHopperAPITest.testLoad":77,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":185,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":375,"com.graphhopper.reader.OSMReaderTest.testBarriers":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":34,"com.graphhopper.util.GHUtilityTest.testCopy":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":17,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":94,"com.graphhopper.routing.PathTest.testFindInstruction":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":269,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":122,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":204,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":189,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":35,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":343,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":250,"com.graphhopper.util.InstructionListTest.testWayList2":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":163,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":301,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":364,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":279,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":21,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":174,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":251,"com.graphhopper.routing.PathBidirRefTest.testExtract":376,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":221,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":304,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":80,"com.graphhopper.util.GHUtilityTest.testSort2":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":323,"com.graphhopper.reader.OSMReaderTest.testMain":392,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":265,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":291,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":225,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":102,"com.graphhopper.storage.GraphHopperStorageTest.testClone":177,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":248,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":36,"com.graphhopper.routing.PathTest.testTime":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":48,"com.graphhopper.util.GHUtilityTest.testSortDirected":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":237,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":354,"com.graphhopper.GraphHopperTest.testFootOnly":92,"com.graphhopper.util.BitUtilLittleTest.testToInt":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":22,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":44,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":157,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":349,"com.graphhopper.routing.QueryGraphTest.testOneWay":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":135,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":153,"com.graphhopper.reader.OSMReaderTest.testWithBounds":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":300,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":283,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":173,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":308,"com.graphhopper.util.BitUtilLittleTest.testToBitString":99,"com.graphhopper.util.InstructionListTest.testWayList":113,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":206,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":5,"com.graphhopper.GraphHopperAPITest.testDisconnected179":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":37,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":292,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":32,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":389,"com.graphhopper.util.HelperTest.testUnzip":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":64,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":87,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":345,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":197,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":330,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":169,"com.graphhopper.storage.MMapDataAccessTest.testCopy":8,"com.graphhopper.routing.PathTest.testWayList":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":149,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":315,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":213,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":217,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":274,"com.graphhopper.util.BitUtilBigTest.testToBitString":97,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":386,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":7,"com.graphhopper.util.GHUtilityTest.testSort":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":159,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":259,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":26,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":216,"com.graphhopper.util.BitUtilBigTest.testToInt":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":256,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":356,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":365,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":71,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":54,"com.graphhopper.routing.PathTest.testFound":380,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":305,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":280,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":101,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":211,"com.graphhopper.util.InstructionListTest.testEmptyList":111,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":321,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":254,"com.graphhopper.reader.PrinctonReaderTest.testRead":388,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":16,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":228,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":409,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":4,"com.graphhopper.reader.OSMReaderTest.testFoot":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":52,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":260,"com.graphhopper.reader.OSMReaderTest.testOneWay":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":186,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":230,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":297,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":46,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":181,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":346,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":335,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":257,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":353,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":171,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":67,"com.graphhopper.routing.PathBidirRefTest.testExtract2":377,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":151,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":199,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":134,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":156,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":261,"com.graphhopper.GraphHopperTest.testFootAndCar":88,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":33,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":271,"com.graphhopper.GraphHopperTest.testPrepareOnly":95,"com.graphhopper.GraphHopperTest.testVia":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":125,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":318,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":399,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":398,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":218,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":115,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":198,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":397,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":45,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":236,"com.graphhopper.util.InstructionListTest.testFind":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69},"transformations":[{"failures":[0,1,2],"tindex":"7694b22f-82a1-11e5-b68f-b9348592e3ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"7694d940-82a1-11e5-b68f-bfa6880108fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:179","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"76950051-82a1-11e5-b68f-dfa7d994df6d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"bufferStart","nanoTime":"bufferStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:146","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.util.List<java.nio.ByteBuffer>.size()) * long"},"status":-1},{"failures":[75,76],"tindex":"76950052-82a1-11e5-b68f-abea15396468","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:111","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"76950053-82a1-11e5-b68f-b155e9ac6b67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":-2},{"failures":[],"tindex":"76950054-82a1-11e5-b68f-93964e8ac749","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"dataAccess","da":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"76952765-82a1-11e5-b68f-5d1983e79dbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtReturnImpl","sourcecode":"return \"hiking\".equals(java.lang.String)"},"variableMap":{"sacScale":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:217","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[93],"tindex":"76952766-82a1-11e5-b68f-bb09b9d2b91d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:242","type":"CtInvocationImpl","sourcecode":"java.io.File.createNewFile()"},"variableMap":{"file":"toFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:66","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir()"},"status":-1},{"failures":[94],"tindex":"76952767-82a1-11e5-b68f-c1bd4f401994","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[95,96],"tindex":"76952768-82a1-11e5-b68f-cb524a538edd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n    throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n} "},"status":-1},{"failures":[97,98,99,100,101,7,102,103],"tindex":"76954e79-82a1-11e5-b68f-09551ff64389","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int, 0)"},"status":-1},{"failures":[],"tindex":"76954e7a-82a1-11e5-b68f-8dd674c21235","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"variableMap":{"lazySW":"sw2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[77,104,85,86,87,88,89,90,91],"tindex":"76954e7b-82a1-11e5-b68f-131dcffe0871","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean).setSimplifyResponse(((boolean) && (double > 0))).doWork(com.graphhopper.GHResponse, java.util.List<com.graphhopper.routing.Path>, com.graphhopper.util.TranslationMap.getWithFallBack(java.util.Locale))"},"status":-1},{"failures":[],"tindex":"7695758c-82a1-11e5-b68f-bfab565ea188","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"visitedCount","indexDivisor":"visitedCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:100","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"7695758d-82a1-11e5-b68f-4f497e123942","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[77,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,17,125,126,127,128,129,130,18,131,132,133,134,135,136,75,137,138,139,140,141,142,143,144,145,146,147,148,149,19,150,151,152,76,153,154,155,156,157,158,159,160,161,162,163,164,165,20,166,167,168,21,22,23,24,25,26,169,27,170,28,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,29,30,31,32,33,34,35,36,37,38,39,211,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,212,213,214,215,216,217,67,218,219,220,221,68,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,69,70,263,264,71,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,72,396,397,398,399,400,401,402,403,404,405,95,79,80,81,82,83,84,406,85,86,87,88,89,90,407,91,92,96],"tindex":"76959c9e-82a1-11e5-b68f-851c9ff97935","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.byteOrder\", com.graphhopper.storage.Directory.getByteOrder())"},"status":-1},{"failures":[],"tindex":"7695c3af-82a1-11e5-b68f-8b3de3eaad2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":0},{"failures":[408,409,410],"tindex":"7695c3b0-82a1-11e5-b68f-6d94b8f19309","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"trackType","configuredCHWeightings":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:158","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"7695c3b1-82a1-11e5-b68f-edf63091de07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"7695c3b2-82a1-11e5-b68f-5b5fe4d0809c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:215","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return \"\";\n"},"variableMap":{"azimuth":"speedFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:829","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"76954e7a-82a1-11e5-b68f-8dd674c21235","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]},{"transformation":"7695c3af-82a1-11e5-b68f-8b3de3eaad2f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.ensureNotLoaded"]},"type":"staticDiff"}]}]}