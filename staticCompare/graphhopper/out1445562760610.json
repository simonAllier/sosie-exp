{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":60,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":37,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":4,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":54,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":58,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":47,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":39,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":10,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":30,"com.graphhopper.GraphHopperTest.testFootOnly":24,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":16,"com.graphhopper.reader.OSMReaderTest.testBarriers":27,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":13,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":59},"transformations":[{"failures":[],"tindex":"27fb12fa-7923-11e5-8915-1776ccda2603","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"approxBytesPerEntry","end":"entriesPerSegment"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:80","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.VLongStorage) == null)\n    com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)));\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"27fb3a0b-7923-11e5-8915-09a7676849ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"current","green":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:40","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.XFirstSearch.(goFurther(int)))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"27fb3a0c-7923-11e5-8915-b7c399307435","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"27fb3a0d-7923-11e5-8915-5d516c0ad8a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"27fb611e-7923-11e5-8915-050bbbe5cc03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"variableMap":{"flags":"flags","backward":"reverse","reverseSpeedEncoder":"reverseSpeedEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false);\n"},"status":-2},{"failures":[],"tindex":"27fb611f-7923-11e5-8915-09e4b7450496","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:283","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"nodeId":"guess","nodeIdOffset":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"status":-2},{"failures":[],"tindex":"27fb6120-7923-11e5-8915-b5e9bf56363b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:135","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-2},{"failures":[],"tindex":"27fb6121-7923-11e5-8915-a769ffb98009","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1195","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"variableMap":{"fullyLoaded":"isRoundabout"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:207","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n        long |= long;\n    } else {\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n        long |= long;\n    }\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"27fb6122-7923-11e5-8915-7512fffcd5e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:249","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    byte[] byte[] = new byte[(2 * (int)) * (int)];\n    com.graphhopper.storage.DataAccess.create(byte[].int);\n    try {\n        java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n        java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n        java.io.InputStream java.io.InputStream;\n        if (!(java.io.File.exists())) {\n            for (int int = 0 ; int < 3 ; int++) {\n                try {\n                    com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                    break;\n                } catch (java.net.SocketTimeoutException ex) {\n                    java.lang.Thread.sleep(2000);\n                    continue;\n                } catch (java.io.FileNotFoundException ex) {\n                    java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                    continue;\n                }\n            }\n        } \n        java.io.InputStream = new java.io.FileInputStream(java.io.File);\n        java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n        java.util.zip.ZipInputStream.getNextEntry();\n        java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n        int int;\n        while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n            for (int int = 0 ; int < int ; int += 2) {\n                short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                if ((short < (-1000)) || (short > 12000))\n                    short = java.lang.Short.short;\n                \n                com.graphhopper.storage.DataAccess.setShort(int, short);\n            }\n        }\n        com.graphhopper.storage.DataAccess.flush();\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"status":-2},{"failures":[],"tindex":"27fb8833-7923-11e5-8915-e915aed76803","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"status":-2},{"failures":[],"tindex":"27fb8834-7923-11e5-8915-cbeeda03922d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"variableMap":{"location":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"status":-2},{"failures":[],"tindex":"27fb8835-7923-11e5-8915-e735987ee13c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"firstLat","resultOrientation":"firstLon","baseOrientation":"lastLon","java.lang.Math.PI":"firstLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:363","type":"CtIfImpl","sourcecode":"if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n} "},"status":-2},{"failures":[],"tindex":"27fb8836-7923-11e5-8915-4b7215059823","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"edgeTo","edgeEntry":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:315","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"27fb8837-7923-11e5-8915-b7fefe52dc87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:143","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('\\n')"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:141","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('=')"},"status":-2},{"failures":[],"tindex":"27fb8838-7923-11e5-8915-d7088ca9089a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:197","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Long.parseLong(java.lang.String)"},"status":-2},{"failures":[],"tindex":"27fb8839-7923-11e5-8915-d785557a9a68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"minLat","yend":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"27fbaf4a-7923-11e5-8915-a3ad63e93dc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\").append(java.lang.String).append(\"<\/gh:direction>\")"},"status":-2},{"failures":[],"tindex":"27fbaf4b-7923-11e5-8915-cb7b1a14e1fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"foundDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:144","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"27fbaf4c-7923-11e5-8915-7dae75b7eba5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setBytes(0, byte[], byte[].int)"},"status":-2},{"failures":[],"tindex":"27fbaf4d-7923-11e5-8915-f3c89a6411eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:168","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess)).close(boolean)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}