{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":52,"com.graphhopper.util.BitUtilLittleTest.testToLong":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.coll.OSMIDMapTest.testGet2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":65,"com.graphhopper.util.BitUtilLittleTest.testToDouble":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":26,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":29,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":30,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":13,"com.graphhopper.search.NameIndexTest.testFlush":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":40,"com.graphhopper.coll.OSMIDMapTest.testGetLong":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":25,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":48,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":75,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":47,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":23,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":57,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":69,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":58,"com.graphhopper.coll.OSMIDMapTest.testGet":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":71,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":11,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":73,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":33,"com.graphhopper.GraphHopperTest.testLoadOSM":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":42,"com.graphhopper.util.GHUtilityTest.testCopy":74},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"af2c5ce7-792c-11e5-878d-a323705f3b80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:164","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n    int[] int[] = new int[int];\n    for (int int = 0 ; int < int ; int++) {\n        int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n    }\n    int[][][int] = int[];\n}"},"status":-1},{"failures":[0,8,1,9,2,10],"tindex":"af2c83f8-792c-11e5-878d-6dde43a24d2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:103","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeLong(long)"},"status":-1},{"failures":[11,12,13,14],"tindex":"af2c83f9-792c-11e5-878d-3bd087fc36cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:100","type":"CtReturnImpl","sourcecode":"return ((java.lang.Math.double) * (int)) - (double)"},"status":-1},{"failures":[0,15,16,8,1,9,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,7,69,70,71,72,73,74],"tindex":"af2c83fa-792c-11e5-878d-03e74cb8c643","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.flush()"},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-1},{"failures":[],"tindex":"af2cab0b-792c-11e5-878d-2919e0bb0021","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"maxLat","toHeight":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[75,76,77,78,79,80,81],"tindex":"af2cab0c-792c-11e5-878d-f186ac4034ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 40))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:82","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long))"},"status":-1},{"failures":[],"tindex":"af2cab0d-792c-11e5-878d-fb2e6776d2dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"af2cab0e-792c-11e5-878d-191142b335bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"variableMap":{"factor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:651","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double, double);\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double);\n"},"status":-2},{"failures":[],"tindex":"af2cd21f-792c-11e5-878d-d90ceb14944a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"variableMap":{"cap":"turnCostPtr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:188","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.DataAccess.getInt((long + (int)))))\n    return com.graphhopper.storage.DataAccess.getInt((long + (int)));\n"},"status":-2},{"failures":[],"tindex":"af2cd220-792c-11e5-878d-ddbbbd3df5a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:647","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint)"},"status":-2},{"failures":[],"tindex":"af2cd221-792c-11e5-878d-89de1a1d8e80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:101","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"af2cd222-792c-11e5-878d-d7ca4328a968","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[],"tindex":"af2cd223-792c-11e5-878d-473d91f4c3df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-2},{"failures":[],"tindex":"af2cf834-792c-11e5-878d-c9109ca64c60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.writeOsm2Graph(java.io.File)"},"status":-2},{"failures":[],"tindex":"af2cf835-792c-11e5-878d-e77a1c0b2f91","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:547","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"variableMap":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:352","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"af2cf836-792c-11e5-878d-91d818421ca8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:196","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"af2cf837-792c-11e5-878d-ef9b53027929","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"-1\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\", \"no\"))"},"status":-2},{"failures":[],"tindex":"af2cf838-792c-11e5-878d-fb2622e8f3a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:942","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"af2cf839-792c-11e5-878d-17a80af59667","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:862","type":"CtReturnImpl","sourcecode":"return \"true\".equals(com.graphhopper.storage.GraphHopperStorage.getProperties().get(\"prepare.done\"))"},"status":-2},{"failures":[],"tindex":"af2cf83a-792c-11e5-878d-db448303cf2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"from","currentIndex":"from","bucketSize":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}