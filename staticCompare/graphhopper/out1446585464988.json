{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":291,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":94,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":277,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":100,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":101,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":30,"com.graphhopper.routing.QueryGraphTest.testOneWay":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":259,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":144,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":298,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":348,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":297,"com.graphhopper.coll.CompressedArrayTest.testCompress":372,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":296,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":168,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":260,"com.graphhopper.GraphHopperTest.testPrepare":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":307,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":210,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":76,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":364,"com.graphhopper.util.InstructionListTest.testWayList":104,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":85,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":103,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":108,"com.graphhopper.GraphHopperAPITest.testDisconnected179":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":284,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":145,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":350,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":310,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":126,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":199,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":342,"com.graphhopper.GraphHopperTest.testLoadOSM":129,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":146,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":216,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":239,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":88,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":255,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":66,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":316,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":373,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":98,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":189,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":346,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":249,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":268,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":313,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":143,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":322,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":232,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":182,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":275,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":25,"com.graphhopper.util.GHUtilityTest.testSort":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":285,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":272,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":370,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":43,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":231,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":269,"com.graphhopper.coll.CompressedArrayTest.testCompress2":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":159,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":315,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":357,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":327,"com.graphhopper.GraphHopperAPITest.testLoad":134,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":333,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":236,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":195,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":362,"com.graphhopper.routing.PathTest.testFound":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":300,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":81,"com.graphhopper.util.GHUtilityTest.testCopy":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":281,"com.graphhopper.routing.PathTest.testFindInstruction":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":73,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":329,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":358,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":286,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":137,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":353,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":222,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":89,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":109,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":331,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":235,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":68,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":263,"com.graphhopper.util.InstructionListTest.testWayList2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":174,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":303,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":151,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":227,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":54,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":253,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":245,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":67,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":184,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":293,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":178,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":264,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":359,"com.graphhopper.routing.PathBidirRefTest.testExtract":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":162,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":114,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":122,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":302,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":352,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":180,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":356,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":118,"com.graphhopper.util.GHUtilityTest.testSort2":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":289,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":233,"com.graphhopper.routing.PathBidirRefTest.testExtract2":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":183,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":257,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":354,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":147,"com.graphhopper.storage.GraphHopperStorageTest.testClone":197,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":228,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":262,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":206,"com.graphhopper.GraphHopperTest.testFootAndCar":127,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":283,"com.graphhopper.routing.PathTest.testTime":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":295,"com.graphhopper.util.GHUtilityTest.testSortDirected":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":321,"com.graphhopper.GraphHopperTest.testPrepareOnly":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":251,"com.graphhopper.GraphHopperTest.testVia":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":140,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":86,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":167,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":234,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":106,"com.graphhopper.GraphHopperTest.testFootOnly":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":173,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":175,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":21,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":292,"com.graphhopper.util.InstructionListTest.testFind":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":312},"transformations":[{"failures":[],"tindex":"53520456-8270-11e5-b55a-03a746c01fea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:55","type":"CtLocalVariableImpl","sourcecode":"int int = javax.xml.stream.XMLStreamReader.getEventType()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"53525277-8270-11e5-b55a-416b1c809dd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:297","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"53527988-8270-11e5-b55a-91aba97e1d87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"variableMap":{"midLat":"meanDegree","spatialKey":"dijkstraCount","bits":"dijkstraCount","lat":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:294","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((((((((((((((((((com.graphhopper.util.Helper.nf(long)) + \", updates:\") + int) + \", nodes: \") + (com.graphhopper.util.Helper.nf(com.graphhopper.coll.GHTreeMapComposed.getSize()))) + \", shortcuts:\") + (com.graphhopper.util.Helper.nf(int))) + \", dijkstras:\") + (com.graphhopper.util.Helper.nf(long))) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", algo:\") + (com.graphhopper.routing.DijkstraOneToMany.getMemoryUsageAsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())))"},"status":0},{"failures":[353],"tindex":"53527989-8270-11e5-b55a-3fe8c392d2db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"5352798a-8270-11e5-b55a-19379258e385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:579","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":0},{"failures":[],"tindex":"5352798b-8270-11e5-b55a-a942253677d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"5352a09c-8270-11e5-b55a-8d611e049db4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"prevOrNextEdgeId","incomingEdges":"edgeState","prepareWeighting":"superWeighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:73","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":0},{"failures":[],"tindex":"5352a09d-8270-11e5-b55a-272f2ba44c78","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:244","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[],"tindex":"5352a09e-8270-11e5-b55a-53babcfeb46b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:999","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"idLookup:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":-2},{"failures":[],"tindex":"5352a09f-8270-11e5-b55a-d74352a15741","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:291","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[],"tindex":"5352c7b0-8270-11e5-b55a-c57418d898c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:833","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":0},{"failures":[354,355,356,357],"tindex":"5352c7b1-8270-11e5-b55a-dfba3eedadc8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"speed","maxLeafEntries":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:371","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"5352c7b2-8270-11e5-b55a-293541c3b23a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:510","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[358,359,360,361,362,363,364],"tindex":"5352c7b3-8270-11e5-b55a-8d41b3d8fe77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"length","edgeTo":"length","edgeFrom":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:246","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[][int] = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getByte((((long) + long) + int));\n}"},"status":-1},{"failures":[365],"tindex":"5352eec4-8270-11e5-b55a-dbe21ae33017","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[17,18,21,22,25,26,366,367,365,368],"tindex":"5352eec5-8270-11e5-b55a-dd0dd28f9b8f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:586","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"variableMap":{"shift":"shift","nodeBitMask":"roundaboutBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:185","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[369,370,371,372],"tindex":"5352eec6-8270-11e5-b55a-b7ad06221f41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-1},{"failures":[67,75,124,128,129,132,232],"tindex":"5352eec7-8270-11e5-b55a-15457ded5acf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:108","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-1},{"failures":[373],"tindex":"535315d8-8270-11e5-b55a-e3eb3326a50d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5352a09c-8270-11e5-b55a-8d611e049db4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.Weighting.calcWeight"]},"type":"staticDiff"}]},{"transformation":"5352c7b0-8270-11e5-b55a-c57418d898c5","diffs":[{"branches":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.PathTest.testWayList":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]},{"transformation":"53527988-8270-11e5-b55a-91aba97e1d87","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.ch.PrepareContractionHierarchies.getTimesAsString","com.graphhopper.util.Helper.getMemInfo","com.graphhopper.util.Helper.nf","com.graphhopper.coll.GHTreeMapComposed.getSize","org.slf4j.Logger.info","com.graphhopper.routing.DijkstraOneToMany.getMemoryUsageAsString"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e1","com.graphhopper.routing.DijkstraOneToMany$TIntArrayListWithCap_int_getCapacity().b","com.graphhopper.coll.IntDoubleBinHeap_int_getCapacity().b","com.graphhopper.routing.DijkstraOneToMany_java.lang.String_getMemoryUsageAsString().b","com.graphhopper.storage.CHGraphImpl$CHEdgeIteratorImpl_boolean_canBeOverwritten(long).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e4","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e2","com.graphhopper.routing.ch.PrepareEncoder_boolean_canBeOverwritten(long,long).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e3"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.routing.DijkstraOneToMany$TIntArrayListWithCap_int_getCapacity().b","com.graphhopper.coll.IntDoubleBinHeap_int_getCapacity().b","com.graphhopper.routing.DijkstraOneToMany_java.lang.String_getMemoryUsageAsString().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.routing.DijkstraOneToMany$TIntArrayListWithCap_int_getCapacity().b","com.graphhopper.coll.IntDoubleBinHeap_int_getCapacity().b","com.graphhopper.routing.DijkstraOneToMany_java.lang.String_getMemoryUsageAsString().b"]},"type":"branch"}]},{"transformation":"5352a09f-8270-11e5-b55a-d74352a15741","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}