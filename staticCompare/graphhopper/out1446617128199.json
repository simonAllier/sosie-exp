{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":83,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":130,"com.graphhopper.reader.OSMReaderTest.testFerry":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":60,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":44,"com.graphhopper.routing.QueryGraphTest.testOneWay":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":136,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":52,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":2,"com.graphhopper.storage.VLongStorageTest.testWrite":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":75,"com.graphhopper.reader.OSMReaderTest.testWithBounds":149,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":14,"com.graphhopper.coll.CompressedArrayTest.testCompress":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":111,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":58,"com.graphhopper.util.BitUtilBigTest.testReverse":95,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":97,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":53,"com.graphhopper.reader.OSMReaderTest.testFoot":140,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":17,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":93,"com.graphhopper.reader.OSMReaderTest.testOneWay":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":70,"com.graphhopper.GraphHopperAPITest.testDisconnected179":82,"com.graphhopper.util.PointListTest.testAddPL":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":43,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":100,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":144,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":118,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":59,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":128,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":26,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":50,"com.graphhopper.reader.OSMReaderTest.testSort":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":138,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":74,"com.graphhopper.reader.OSMReaderTest.testMain":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":89,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":78,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":85,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":49,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":62,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":113,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":3,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":106,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":36,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":38,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":48,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":66,"com.graphhopper.util.InstructionListTest.testCreateGPX":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":135,"com.graphhopper.util.BitUtilLittleTest.testReverse":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":40,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":15,"com.graphhopper.GraphHopperTest.testPrepareOnly":98,"com.graphhopper.coll.CompressedArrayTest.testCompress2":107,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":71,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":119,"com.graphhopper.GraphHopperAPITest.testLoad":81,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":86,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":77,"com.graphhopper.GraphHopperTest.testFootOnly":80,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":116,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":117,"com.graphhopper.reader.OSMReaderTest.testBarriers":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":65,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":137},"transformations":[{"failures":[],"tindex":"0c0bb5bf-82ba-11e5-938d-5d47925738fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:541","type":"CtIfImpl","sourcecode":"if (((int < 0) && (int != (java.lang.Integer.int))) || (int >= (int)))\n    throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"));\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"0c0c03e0-82ba-11e5-938d-cb6cb3658e54","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:215","type":"CtAssignmentImpl","sourcecode":"double[] = null"},"variableMap":{"weights":"longitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:112","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"0c0c03e1-82ba-11e5-938d-e7e5b17eb80c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"0c0c03e2-82ba-11e5-938d-2135bfab6e7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,0,68,69,1,70,71,72,73,2,3,74,75,4,76,5,77,78,6,22,23,24,25,26,79,27,28,29,30,31,32,33,80,81,82],"tindex":"0c0c03e3-82ba-11e5-938d-85406820d2fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:320","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"variableMap":{"initialized":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\nelse\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,0,68,69,1,70,71,72,73,2,3,74,75,4,83,76,5,77,78,6,22,23,24,25,26,79,27,28,29,30,31,32,33,80,81,82],"tindex":"0c0c2af4-82ba-11e5-938d-fb041f2e6d90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[82],"tindex":"0c0c2af5-82ba-11e5-938d-4bd0b24c9ad5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1068","type":"CtAssertImpl","sourcecode":"assert boolean"},"variableMap":{"ret":"allFound"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:114","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"));\n} "},"status":-1},{"failures":[84,85],"tindex":"0c0c5206-82ba-11e5-938d-1351bd4cfc8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"0c0c5207-82ba-11e5-938d-ff9e5225873e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:359","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(gnu.trove.list.TLongList.get(0))"},"status":-2},{"failures":[],"tindex":"0c0c5208-82ba-11e5-938d-e991239e62b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0c0c5209-82ba-11e5-938d-39e2ece3283d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"variableMap":{"fromStr":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SimpleFSLockFactory:63","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[],"tindex":"0c0c520a-82ba-11e5-938d-9d2946435a27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:80","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.write(byte[], 0, int)"},"status":0},{"failures":[86,87,88,89,90,91,92,93,94,95],"tindex":"0c0c791b-82ba-11e5-938d-2172921b1460","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:130","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"flags":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:254","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[96],"tindex":"0c0c791c-82ba-11e5-938d-b5677988802b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:926","type":"CtIfImpl","sourcecode":"if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-1},{"failures":[],"tindex":"0c0c791d-82ba-11e5-938d-076f47ce5647","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"c_lat","angle":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:167","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, (double / double), double, double)"},"status":-2},{"failures":[1,2,3,4,97,98,22,23,24,25,26,79,99,27,28,29,30,31,32,100,33,80,101,102],"tindex":"0c0c791e-82ba-11e5-938d-b11f7bccc6d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double)"},"status":-2},{"failures":[36,37,38],"tindex":"0c0ca02f-82ba-11e5-938d-4b5fafedc372","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"counter","index":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:160","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    for (int int = int + 1 ; int < int ; int++) {\n        com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n        int++;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n}"},"status":-1},{"failures":[103,104,105,106,107,108],"tindex":"0c0ca030-82ba-11e5-938d-6554a5706adb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:61","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[1,2,3,4,97,98,22,23,24,25,26,79,99,27,28,29,30,31,32,100,33,80,101,109,110,86,111,112,113,114,115,116,87,117,88,89,118,119,120,121,122,123,124,90,125,126,127,128,129,130,91,131,92,93,132,133,134,135,136,137,138,139,140,141,142,143,144,145,96,146,147,148,149,150,151,81,82],"tindex":"0c0ca031-82ba-11e5-938d-85f6514046e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:194","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"status":-1},{"failures":[152,153],"tindex":"0c0ca032-82ba-11e5-938d-8f8ff311583d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\")"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0c0bb5bf-82ba-11e5-938d-5d47925738fa","diffs":[{"branches":{"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":["com.graphhopper.storage.BaseGraph$EdgeIterable_boolean_init(int,int).t2","com.graphhopper.util.Helper_java.lang.String_nf(long).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.nf"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"0c0c520a-82ba-11e5-938d-9d2946435a27","diffs":[{"methodsDiff":{"delete":["java.io.FileOutputStream.write"]},"type":"staticDiff"}]}]}