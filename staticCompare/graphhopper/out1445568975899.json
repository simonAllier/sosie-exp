{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":74,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":124,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":244,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":51,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":52,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":195,"com.graphhopper.routing.QueryGraphTest.testOneWay":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":171,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":240,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":102,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":296,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":139,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":84,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":222,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":217,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":73,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":80,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":325,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":56,"com.graphhopper.util.InstructionListTest.testWayList":40,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":340,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":200,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":161,"com.graphhopper.GraphHopperAPITest.testDisconnected179":346,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":136,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":15,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":62,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":241,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":119,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":298,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":155,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":189,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":313,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":290,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":249,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":225,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":242,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":331,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":68,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":259,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":89,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":78,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":129,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":36,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":194,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":110,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":301,"com.graphhopper.routing.PathTest.testWayList":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":181,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":63,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":239,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":268,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":236,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":188,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":70,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":118,"com.graphhopper.util.GHUtilityTest.testSort":46,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":185,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":299,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":283,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":140,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":197,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":212,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":260,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":274,"com.graphhopper.GraphHopperAPITest.testLoad":345,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":145,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":309,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":198,"com.graphhopper.routing.PathTest.testFound":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":256,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":218,"com.graphhopper.util.GHUtilityTest.testCopy":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":61,"com.graphhopper.routing.PathTest.testFindInstruction":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":53,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":276,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":255,"com.graphhopper.util.InstructionListTest.testEmptyList":38,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":207,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":338,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":69,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":292,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":278,"com.graphhopper.reader.PrinctonReaderTest.testRead":34,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":91,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":154,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":176,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":199,"com.graphhopper.util.InstructionListTest.testWayList2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":228,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":247,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":343,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":165,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":303,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":156,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":335,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":275,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":308,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":315,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":83,"com.graphhopper.routing.PathBidirRefTest.testExtract":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":215,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":300,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":234,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.util.GHUtilityTest.testSort2":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":71,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":184,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":142,"com.graphhopper.routing.PathBidirRefTest.testExtract2":97,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":178,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":100,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":237,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":169,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":287,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":191,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":243,"com.graphhopper.storage.GraphHopperStorageTest.testClone":311,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":187,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":174,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":321,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":147,"com.graphhopper.routing.PathTest.testTime":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":67,"com.graphhopper.util.GHUtilityTest.testSortDirected":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":267,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":163,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":210,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":66,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":221,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":143,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":42,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":227,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":114,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":162,"com.graphhopper.util.InstructionListTest.testFind":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":257},"transformations":[{"failures":[],"tindex":"a09732ec-7931-11e5-a6a9-9f55e91c5317","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:137","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"variableMap":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"a09759fd-7931-11e5-a6a9-b5610f0cc879","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:331","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.DataAccess.getCapacity()"},"variableMap":{"nodes":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:269","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getCapacity()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"tindex":"a097a81e-7931-11e5-a6a9-09dc866bc021","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"segmentSizeInBytes","index":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[1,9,10,13,14,15,17,45,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,136,139,140,141,142,143,144,145,218,219,220],"tindex":"a0986b6f-7931-11e5-a6a9-5bf1b760ee53","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.freeze()"},"variableMap":{"listener":"listener"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:272","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.initStorage()"},"status":-1},{"failures":[],"tindex":"a0989280-7931-11e5-a6a9-27d599c21cfa","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList)"},"status":0},{"failures":[],"tindex":"a0989281-7931-11e5-a6a9-41a0d8f3df31","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a098b992-7931-11e5-a6a9-d17de95527e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","tmpNode":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n} else {\n    long = long | com.graphhopper.routing.util.AbstractFlagEncoder.(handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"a098b993-7931-11e5-a6a9-b7ef30b45a1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"N_ADDITIONAL","degree":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:269","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[88,90,91],"tindex":"a098b994-7931-11e5-a6a9-bdbdad69cd23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:43","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[],"tindex":"a098e0a5-7931-11e5-a6a9-e1873ebb9ead","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"a098e0a6-7931-11e5-a6a9-873e74fa21b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:308","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.close()"},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":-2},{"failures":[],"tindex":"a098e0a7-7931-11e5-a6a9-67044925a7f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:91","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"a098e0a8-7931-11e5-a6a9-8f1b3d23c6db","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:71","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"variableMap":{"bs":"indicesCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:264","type":"CtIfImpl","sourcecode":"if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n    int = int + 1;\n    int = int;\n} else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n    int = int + (int);\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"a098e0a9-7931-11e5-a6a9-c3a13ea86923","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_GEOMETRY":"com.graphhopper.util.Constants.VERSION_EDGE","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"a09907ba-7931-11e5-a6a9-3d1470ffdee5","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"tmpOsmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:511","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String)))\n    java.lang.String = java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"a09907bb-7931-11e5-a6a9-eb120fa3c232","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:841","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((com.graphhopper.storage.GraphHopperStorage.isCHPossible()) && com.graphhopper.GraphHopper.(isPrepared()))\n        throw new java.lang.IllegalArgumentException(\"Sorting a prepared CHGraph is not possible yet. See #12\");\n    \n    com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.storage.GraphHopperStorage, com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n    com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage;\n} "},"status":-2},{"failures":[],"tindex":"a09907bc-7931-11e5-a6a9-5bbd269e53fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:852","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-2},{"failures":[],"tindex":"a09907bd-7931-11e5-a6a9-456cae19cf90","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:354","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = new com.graphhopper.routing.VirtualEdgeIteratorState(int , int , int , int , double , com.graphhopper.util.EdgeIteratorState.getFlags() , com.graphhopper.util.EdgeIteratorState.getName() , com.graphhopper.util.PointList)"},"variableMap":{"closestEdge":"closestEdge","baseDistance":"baseDistance","prevNodeId":"nodeId","virtEdgeId":"nodeId","origTraversalKey":"prevNodeId","nodeId":"virtEdgeId","basePoints":"baseReversePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:356","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = new com.graphhopper.routing.VirtualEdgeIteratorState(int , int , int , int , double , long , com.graphhopper.util.EdgeIteratorState.getName() , com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"a0992ece-7931-11e5-a6a9-01ff16ac4312","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a0992ecf-7931-11e5-a6a9-1f40f69f45cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:126","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}