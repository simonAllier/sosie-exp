{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"23ffd911-7912-11e5-a3df-4376b07ae11c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"edgeOrientation","shortTripsSpeed":"edgeOrientation","durationInHours":"edgeOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:397","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)))"},"status":-2},{"failures":[],"tindex":"23ffd912-7912-11e5-a3df-6fd6fa1bbee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:181","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long <<= 1;\n    if ((java.lang.String.charAt(int)) != '0')\n        long |= 1;\n    \n}"},"status":-2},{"failures":[],"tindex":"24000023-7912-11e5-a3df-dbbdb37980a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"edgeKey1","id":"edgeKey1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"status":-2},{"failures":[],"tindex":"24000024-7912-11e5-a3df-cf76262f2f84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":-2},{"failures":[],"tindex":"24000025-7912-11e5-a3df-9127613447d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtLocalVariableImpl","sourcecode":"long long = (java.lang.System.nanoTime()) - long"},"variableMap":{"start":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:626","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[],"tindex":"24000026-7912-11e5-a3df-f9dc751714db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"24000027-7912-11e5-a3df-c5f45917552e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"count","nextTurnCostIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:206","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"24000028-7912-11e5-a3df-8d3f7b13114b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:88","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2},{"failures":[],"tindex":"24000029-7912-11e5-a3df-6d8b03291900","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"2400273a-7912-11e5-a3df-af33dd845552","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"dataAccessType","defaultType":"dataAccessType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:528","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.fromString(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2400273b-7912-11e5-a3df-3b8e0f90bdeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:95","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON())"},"status":-2},{"failures":[],"tindex":"2400273c-7912-11e5-a3df-5f01a9f14712","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:116","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n    int = -int;\n"},"status":-2},{"failures":[],"tindex":"2400273d-7912-11e5-a3df-e1f6e09a312d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:114","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.VLongStorage.getPosition()"},"status":-2},{"failures":[],"tindex":"2400273e-7912-11e5-a3df-2fe4f7616526","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:847","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"2400273f-7912-11e5-a3df-17ab8b16c1b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"status":-2},{"failures":[],"tindex":"24002740-7912-11e5-a3df-f7915cdbd1ae","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"24004e51-7912-11e5-a3df-832fd40b5210","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"java.lang.Double.NaN","r_lat":"java.lang.Double.NaN","a_lat":"java.lang.Double.NaN","delta_lon":"java.lang.Double.NaN","r_lon":"java.lang.Double.NaN","a_lon":"java.lang.Double.NaN","norm":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"24004e52-7912-11e5-a3df-cfe8aec93e15","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"edgeId","noOfStates":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"status":-2},{"failures":[],"tindex":"24004e53-7912-11e5-a3df-7787f10e3f6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"nodeIndex","newSize":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:50","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer();\n    for ( ; int < int ; int++) {\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        if ((double > 90) || (double < (-90)))\n            java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n        \n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if ((double > 180) || (double < (-180)))\n            java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n        \n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n                java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n            } \n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n                java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n            } \n        }\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"problem with node \" + int) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"24004e54-7912-11e5-a3df-77c711fcfeb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"width"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}