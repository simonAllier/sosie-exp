{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.reader.OSMReaderTest.testFerry":317,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":334,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.MMapDataAccessTest.testSegments":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":91,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":152,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":315,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":128,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":187,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":153,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":348,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":268,"com.graphhopper.GraphHopperTest.testPrepare":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":332,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":39,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":237,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":285,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":76,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":72,"com.graphhopper.GraphHopperTest.testLoadOSM":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":238,"com.graphhopper.reader.OSMReaderTest.testSort":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":93,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":327,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":141,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":23,"com.graphhopper.storage.RAMDataAccessTest.testHeader":295,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":316,"com.graphhopper.storage.MMapDataAccessTest.testHeader":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":75,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":166,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":175,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":147,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":274,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":226,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":184,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":47,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":384,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":36,"com.graphhopper.coll.OSMIDMapTest.testGetLong":100,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":382,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":265,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":280,"com.graphhopper.GraphHopperAPITest.testLoad":346,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":302,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":366,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":96,"com.graphhopper.reader.OSMReaderTest.testBarriers":321,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":112,"com.graphhopper.util.GHUtilityTest.testCopy":343,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":197,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":298,"com.graphhopper.routing.PathTest.testFindInstruction":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":378,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":194,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":289,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":380,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":113,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":177,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":307,"com.graphhopper.util.InstructionListTest.testWayList2":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":86,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":183,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":292,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":154,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":122,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":228,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":322,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":156,"com.graphhopper.reader.dem.CGIARProviderTest.testDown":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":53,"com.graphhopper.coll.OSMIDMapTest.testGet":97,"com.graphhopper.routing.PathBidirRefTest.testExtract":73,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":386,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":99,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":146,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":355,"com.graphhopper.storage.RAMDataAccessTest.testCopy":290,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":223,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":134,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":352,"com.graphhopper.storage.RAMDataAccessTest.testSegments":297,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":251,"com.graphhopper.util.GHUtilityTest.testSort2":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.reader.OSMReaderTest.testMain":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":377,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":88,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":374,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":301,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":266,"com.graphhopper.storage.StorablePropertiesTest.testStore":151,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":114,"com.graphhopper.routing.PathTest.testTime":78,"com.graphhopper.util.InstructionListTest.testCreateGPX":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":127,"com.graphhopper.util.GHUtilityTest.testSortDirected":345,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":164,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":20,"com.graphhopper.GraphHopperTest.testFootOnly":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":79,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":123,"com.graphhopper.search.NameIndexTest.testCreate":106,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":27,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":240,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":15,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":304,"com.graphhopper.routing.QueryGraphTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":376,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":209,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":236,"com.graphhopper.reader.OSMReaderTest.testWithBounds":328,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":299,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":145,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":287,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":186,"com.graphhopper.search.NameIndexTest.testFlush":104,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":33,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":150,"com.graphhopper.util.InstructionListTest.testWayList":339,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":168,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":11,"com.graphhopper.GraphHopperAPITest.testDisconnected179":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":115,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":362,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":110,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":310,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":143,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":358,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":383,"com.graphhopper.util.AngleCalcTest.testAzimuthCompassPoint":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":55,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":300,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":181,"com.graphhopper.routing.PathTest.testWayList":81,"com.graphhopper.storage.MMapDataAccessTest.testCopy":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":224,"com.graphhopper.coll.OSMIDMapTest.testGet2":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":56,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":161,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":311,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":257,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":291,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":83,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":170,"com.graphhopper.util.GHUtilityTest.testSort":344,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":271,"com.graphhopper.search.NameIndexTest.testPut":103,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":256,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":305,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":275,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":277,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":312,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":261,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":306,"com.graphhopper.routing.PathTest.testFound":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":133,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":207,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":30,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":379,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":105,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":118,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":286,"com.graphhopper.util.InstructionListTest.testEmptyList":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":46,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.reader.PrinctonReaderTest.testRead":309,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":180,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":190,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":107,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":14,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":167,"com.graphhopper.reader.OSMReaderTest.testFoot":318,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":131,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":272,"com.graphhopper.reader.OSMReaderTest.testOneWay":330,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":367,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":371,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":189,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":221,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":60,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":203,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":333,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":121,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":270,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":185,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":258,"com.graphhopper.routing.PathBidirRefTest.testExtract2":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":227,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":208,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":144,"com.graphhopper.util.SimpleIntDequeTest.testPush":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":52,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":239,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":188,"com.graphhopper.GraphHopperTest.testFootAndCar":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":111,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":44,"com.graphhopper.storage.NativeFSLockFactoryTest.testForceDelete":0,"com.graphhopper.GraphHopperTest.testPrepareOnly":349,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":198,"com.graphhopper.GraphHopperTest.testVia":356,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":43,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":326,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":259,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":13,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":124,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":267,"com.graphhopper.util.InstructionListTest.testFind":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":273},"transformations":[{"failures":[],"tindex":"80e6b65c-827b-11e5-9475-f364d5d2a35a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"fromNode","edgeTo":"fromNode","edgeFrom":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:173","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.util.EdgeIterator.int)) {\n    long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n    int int = com.graphhopper.storage.EdgeAccess.getOtherNode(int, long);\n    long long = com.graphhopper.storage.EdgeAccess._getLinkPosInEdgeArea(int, int, long);\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n} "},"status":-2},{"failures":[0],"tindex":"80e6dd6d-827b-11e5-9475-2dd7d9749dd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:278","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"variableMap":{"initialized":"writeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:65","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String, boolean).release();\n    java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String);\n    if ((java.io.File.exists()) && (!(java.io.File.delete())))\n        throw new java.lang.RuntimeException((\"Cannot delete \" + java.io.File));\n    \n} "},"status":-1},{"failures":[],"tindex":"80e6dd6e-827b-11e5-9475-bd46a64ed555","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTBitSet:68","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.size()"},"variableMap":{"tHash":"set"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:117","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.iterator().next()"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"80e6dd6f-827b-11e5-9475-292f8b65be4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[10,11,12,13],"tindex":"80e70480-827b-11e5-9475-41932ecd994a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:141","type":"CtIfImpl","sourcecode":"if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-1},{"failures":[],"tindex":"80e70481-827b-11e5-9475-5fd16c2f347a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"lastInBoundsPillarNode","entityType":"lastInBoundsPillarNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:704","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[],"tindex":"80e70482-827b-11e5-9475-7f057d4a4e42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"tmp","maxBit":"tmp","delta":"N_ELE","maxBits":"N_ELE","value":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHNodeAccess.is3D()) {\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double));\n    com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double);\n} else {\n    com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double);\n}"},"status":-2},{"failures":[],"tindex":"80e70483-827b-11e5-9475-2bc5aea8b0c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1106","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (boolean) && (boolean)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,13,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"tindex":"80e72b94-827b-11e5-9475-35ccad63d2e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[88,89,91,92,93,94],"tindex":"80e72b95-827b-11e5-9475-bb9de78fda9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:295","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n    if ((com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.util.EdgeIterator.getFlags())) || (com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.util.EdgeIterator.getFlags())))\n        return false;\n    \n}"},"variableMap":{"encoders":"encoders","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:292","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n        if ((com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.util.EdgeIterator.getFlags())) || (com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.util.EdgeIterator.getFlags())))\n            return false;\n        \n    }\n}"},"status":-1},{"failures":[88,89,91,93,94,109,120,122,126,127,134,135,366,367,368,369,370,189,371,372,373,374,375,376,269,377,378,379,380,381,382,282,383],"tindex":"80e752a6-827b-11e5-9475-2dbe0de7b3d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"80e752a7-827b-11e5-9475-d3d6c9b5308d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:207","type":"CtIfImpl","sourcecode":"if ((int) > (int)) {\n    com.graphhopper.coll.IntDoubleBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntDoubleBinHeap.double))));\n} "},"status":0},{"failures":[14,27,384,350,351,352,353,354],"tindex":"80e752a8-827b-11e5-9475-b79c3499505f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"unfavored"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:150","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIteratorState.int))\n    return boolean;\n"},"status":-1},{"failures":[],"tindex":"80e752a9-827b-11e5-9475-356c7b075eb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[314,385,315,323],"tindex":"80e752aa-827b-11e5-9475-457d0fb18e41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:147","type":"CtIfImpl","sourcecode":"if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"variableMap":{"slice":"lat","azimuth":"lat","cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"N\";\nelse\n    java.lang.String += \"S\";\n"},"status":-1},{"failures":[386],"tindex":"80e752ab-827b-11e5-9475-a16926f29851","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[387,388],"tindex":"80e779bc-827b-11e5-9475-1d8654c66d66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"arr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:83","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"status":-1},{"failures":[389],"tindex":"80e779bd-827b-11e5-9475-79196c4813a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:269","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((double / (int)))) * (int)"},"status":-1},{"failures":[],"tindex":"80e779be-827b-11e5-9475-ab93610cc30c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"currentBucket","size":"bucketSize","lonSize":"bucketSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"status":0},{"failures":[228,229,230,231,233],"tindex":"80e779bf-827b-11e5-9475-4987a7039582","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"indicesCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"80e779be-827b-11e5-9475-ab93610cc30c","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":["com.graphhopper.coll.OSMIDSegmentedMap_void_write(long).e2","com.graphhopper.coll.OSMIDSegmentedMap_void_write(long).t2"]},"type":"branch"}]}]}