{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":307,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":355,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":364,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":185,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":39,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":352,"com.graphhopper.routing.QueryGraphTest.testOneWay":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":239,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":181,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":342,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":358,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":343,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":317,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":162,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":265,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":323,"com.graphhopper.GraphHopperTest.testPrepare":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":306,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":55,"com.graphhopper.search.NameIndexTest.testFlush":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":313,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":289,"com.graphhopper.util.InstructionListTest.testWayList":28,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":88,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":298,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":151,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.GraphHopperAPITest.testDisconnected179":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":347,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":290,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":182,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":216,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":223,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":285,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":328,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":276,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":326,"com.graphhopper.GraphHopperTest.testLoadOSM":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":165,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":183,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":217,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":301,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":235,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":85,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":99,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":311,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":360,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":22,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":47,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":327,"com.graphhopper.routing.PathTest.testWayList":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":228,"com.graphhopper.coll.OSMIDMapTest.testGet2":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":249,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":62,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":288,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":296,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":232,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":207,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":177,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":256,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":303,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":280,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":335,"com.graphhopper.util.GHUtilityTest.testSort":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":187,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":253,"com.graphhopper.coll.OSMIDMapTest.testGetLong":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":292,"com.graphhopper.search.NameIndexTest.testPut":42,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":137,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":365,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":121,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":250,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":94,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":215,"com.graphhopper.storage.MMapDirectoryTest.testSynched":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":218,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":18,"com.graphhopper.GraphHopperAPITest.testLoad":23,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":310,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":211,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":57,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":102,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":236,"com.graphhopper.routing.PathTest.testFound":329,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":158,"com.graphhopper.util.GHUtilityTest.testCopy":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":294,"com.graphhopper.routing.PathTest.testFindInstruction":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":286,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":114,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":44,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":197,"com.graphhopper.util.InstructionListTest.testEmptyList":26,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":140,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":86,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":302,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":34,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":319,"com.graphhopper.reader.PrinctonReaderTest.testRead":20,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":109,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":210,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":222,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":244,"com.graphhopper.util.InstructionListTest.testWayList2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":168,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":191,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":188,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":91,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":220,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":135,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":49,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":338,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":224,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":131,"com.graphhopper.storage.RAMDirectoryTest.testSynched":199,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":152,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":309,"com.graphhopper.coll.OSMIDMapTest.testGet":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":316,"com.graphhopper.routing.PathBidirRefTest.testExtract":349,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":262,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":270,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":269,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":268,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":52,"com.graphhopper.util.GHUtilityTest.testSort2":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":304,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":251,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":252,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":15,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":208,"com.graphhopper.routing.PathBidirRefTest.testExtract2":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":246,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":178,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":41,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":237,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":125,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":321,"com.graphhopper.storage.StorablePropertiesTest.testStore":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":204,"com.graphhopper.storage.GraphHopperStorageTest.testClone":59,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":184,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":242,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":200,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":69,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":76,"com.graphhopper.GraphHopperTest.testFootAndCar":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":213,"com.graphhopper.routing.PathTest.testTime":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":163,"com.graphhopper.reader.OSMReaderTest.testRelation":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":300,"com.graphhopper.util.GHUtilityTest.testSortDirected":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":241,"com.graphhopper.storage.StorablePropertiesTest.testLoad":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":231,"com.graphhopper.GraphHopperTest.testPrepareOnly":266,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":143,"com.graphhopper.GraphHopperTest.testVia":274,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":299,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":11,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":209,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":357,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":30,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":80,"com.graphhopper.GraphHopperTest.testFootOnly":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":167,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":169,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":201,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":230,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":331,"com.graphhopper.util.InstructionListTest.testFind":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":221},"transformations":[{"failures":[],"tindex":"5cef9f65-7915-11e5-99a2-d7b1d8f3b427","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:214","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.init(int, int)"},"variableMap":{"edgeId":"com.graphhopper.util.EdgeIteratorState.K_UNFAVORED_EDGE","b":"com.graphhopper.util.EdgeIteratorState.K_UNFAVORED_EDGE","iter":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:73","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeIteratorState.getBoolean(com.graphhopper.util.EdgeIteratorState.int, boolean, false)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366],"tindex":"5cefc676-7915-11e5-99a2-83a288200056","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"5cefed87-7915-11e5-99a2-f518e1d4c6ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:590","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5cefed88-7915-11e5-99a2-17df93fffb2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:146","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.isEmpty())\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-2},{"failures":[],"tindex":"5cefed89-7915-11e5-99a2-d58d6571e3c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-2},{"failures":[],"tindex":"5cefed8a-7915-11e5-99a2-59a465d1e224","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:333","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"edge":"i","adjNode":"i","g":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:273","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.TIntList.get(int), int)"},"status":-2},{"failures":[],"tindex":"5cefed8b-7915-11e5-99a2-7d35d8b5e5a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge2","b":"skippedEdge2","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"5cefed8c-7915-11e5-99a2-e133c82d79c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"variableMap":{"index":"bufferIndex","bufferIndex":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:272","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    return ((short)(int[][][int][int]));\nelse\n    return ((short)((int[][][int][int]) >> 16));\n"},"status":-2},{"failures":[],"tindex":"5cefed8d-7915-11e5-99a2-67d09ed68704","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"nodes","da":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"5cf0149e-7915-11e5-99a2-cd63a0611f0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:293","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"5cf0149f-7915-11e5-99a2-e1ea8fc94d51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:98","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> != null)\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n    }\n"},"status":-2},{"failures":[],"tindex":"5cf014a0-7915-11e5-99a2-ab51a60178c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints())"},"status":-2},{"failures":[],"tindex":"5cf014a1-7915-11e5-99a2-abc4e9902fab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:273","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[],"tindex":"5cf014a2-7915-11e5-99a2-35bf98d35a17","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:897","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.FlagEncoder.toString()"},"status":-2},{"failures":[],"tindex":"5cf014a3-7915-11e5-99a2-4d6348ef13e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-2},{"failures":[],"tindex":"5cf014a4-7915-11e5-99a2-05bb41c97e6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"variableMap":{"tmp":"toLon","tmpNo":"toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:31","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"5cf014a5-7915-11e5-99a2-b3053deceda9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:190","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-2},{"failures":[],"tindex":"5cf03bb6-7915-11e5-99a2-6132a0c129d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"currTo","edgeEntry":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"5cf03bb7-7915-11e5-99a2-b35afc2bd9d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMNode.readTags(javax.xml.stream.XMLStreamReader)"},"variableMap":{"node":"this","parser":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:175","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isRegistered())\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"5cf03bb8-7915-11e5-99a2-2b2d143189a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"distance":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}