{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8d67d5d0-7938-11e5-b5b9-213f1625d3f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:111","type":"CtReturnImpl","sourcecode":"return double"},"variableMap":{"latDelta":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:94","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"8d6823f1-7938-11e5-b5b9-513353578590","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:84","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double * (com.graphhopper.storage.EdgeAccess.double)))"},"variableMap":{"distance":"lat","com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:193","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.geohash.KeyAlgo.encode(double, double)))"},"status":-2},{"failures":[],"tindex":"8d6823f2-7938-11e5-b5b9-5f0bf9b39344","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"8d6823f3-7938-11e5-b5b9-1ff5c32d58ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:87","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"variableMap":{"version":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:89","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"8d684b04-7938-11e5-b5b9-a5dca4e0ce56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:255","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"status":-2},{"failures":[],"tindex":"8d684b05-7938-11e5-b5b9-bbbb66f9982d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n    com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n"},"status":-2},{"failures":[],"tindex":"8d684b06-7938-11e5-b5b9-350f25c0a2f5","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:881","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareHighwayNode(long)"},"variableMap":{"this":"this","id":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:422","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    if (int < (int - 1)) {\n        long[] long[] = com.graphhopper.reader.TLongList.toArray(int, (int - int));\n        TLongList TLongList = new TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n    } \n} else {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.OSMWay.getNodes(), long, long));\n}"},"status":-2},{"failures":[],"tindex":"8d687217-7938-11e5-b5b9-af1442b519c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:290","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.getSeconds()"},"status":-2},{"failures":[],"tindex":"8d687218-7938-11e5-b5b9-8bf8edc54e06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:326","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)"},"status":-2},{"failures":[],"tindex":"8d687219-7938-11e5-b5b9-f9a6e018fd76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:123","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    int[][int] = java.io.RandomAccessFile.readInt();\n}"},"status":-2},{"failures":[],"tindex":"8d68721a-7938-11e5-b5b9-672f80815167","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:110","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[],"tindex":"8d68992b-7938-11e5-b5b9-6ffdf575fead","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"queryDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:81","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"8d68992c-7938-11e5-b5b9-31851346b49b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:582","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    double double = com.graphhopper.util.EdgeIterator.getDistance();\n    double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int);\n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode());\n    com.graphhopper.routing.DijkstraOneToMany.clear();\n    long++;\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n            continue;\n        \n        double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n        if (java.lang.Double.isNaN(double))\n            throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n        \n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n        com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n        com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n        com.graphhopper.util.StopWatch.start();\n        (long)++;\n        int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n            continue;\n        \n        com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"8d68c03d-7938-11e5-b5b9-a59ef0515fe0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:937","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type)"},"variableMap":{"viaNodeID":"toWayID","fromWayID":"toWayID","toWayID":"toWayID","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:935","type":"CtIfImpl","sourcecode":"if (((long >= 0) && (long >= 0)) && (long >= 0)) {\n    return new com.graphhopper.reader.OSMTurnRelation(long , long , long , com.graphhopper.reader.OSMTurnRelation.Type);\n} "},"status":-2},{"failures":[],"tindex":"8d68c03e-7938-11e5-b5b9-b5ac3a15403b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:353","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"8d68c03f-7938-11e5-b5b9-2df16b675ad9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"shift","size":"shift","lonSize":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"8d68c040-7938-11e5-b5b9-81419d21684a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:184","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"8d68e751-7938-11e5-b5b9-cfa842a782b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:182","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"intVal":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:577","type":"CtReturnImpl","sourcecode":"return double[].int"},"status":-2},{"failures":[],"tindex":"8d68e752-7938-11e5-b5b9-7db802df4c2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"variableMap":{"segmentSizeInBytes":"i","newBytes":"hash","segmentsToCreate":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"8d68e753-7938-11e5-b5b9-3719a2c5e7a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:85","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"variableMap":{"tagTxt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:279","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}