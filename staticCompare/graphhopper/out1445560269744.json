{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":70,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":80,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":227,"com.graphhopper.reader.OSMReaderTest.testFerry":104,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":371,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":372,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.routing.QueryGraphTest.testOneWay":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":299,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":210,"com.graphhopper.reader.OSMReaderTest.testWithBounds":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":334,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":248,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":247,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":191,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":300,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":259,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":33,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":146,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":161,"com.graphhopper.util.InstructionListTest.testWayList":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":173,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":364,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":234,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":211,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":32,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":359,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":262,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":351,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":194,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":212,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":278,"com.graphhopper.reader.OSMReaderTest.testSort":107,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":320,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":42,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":85,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":122,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":355,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":309,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":79,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":269,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":206,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":316,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":31,"com.graphhopper.util.GHUtilityTest.testSort":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":235,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":313,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":90,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":183,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":344,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":268,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":103,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":166,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":321,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":335,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":341,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":273,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":100,"com.graphhopper.reader.OSMReaderTest.testBarriers":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":325,"com.graphhopper.routing.PathTest.testFound":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":296,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":231,"com.graphhopper.util.GHUtilityTest.testCopy":375,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":184,"com.graphhopper.routing.PathTest.testFindInstruction":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":326,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":337,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":237,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":137,"com.graphhopper.util.InstructionListTest.testEmptyList":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":181,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":159,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":353,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":339,"com.graphhopper.reader.PrinctonReaderTest.testRead":119,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":44,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":76,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":304,"com.graphhopper.util.InstructionListTest.testWayList2":369,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":197,"com.graphhopper.reader.OSMReaderTest.testFoot":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":255,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":217,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":164,"com.graphhopper.reader.OSMReaderTest.testOneWay":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":102,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":124,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":336,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":244,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":109,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":305,"com.graphhopper.routing.PathBidirRefTest.testExtract":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":169,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":362,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":274,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":361,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":203,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":253,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":225,"com.graphhopper.util.GHUtilityTest.testSort2":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":240,"com.graphhopper.reader.OSMReaderTest.testMain":106,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":312,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":270,"com.graphhopper.routing.PathBidirRefTest.testExtract2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":306,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":195,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":92,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":207,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":297,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":348,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":266,"com.graphhopper.storage.GraphHopperStorageTest.testClone":132,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":213,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":302,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":142,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":233,"com.graphhopper.routing.PathTest.testTime":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":286,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":328,"com.graphhopper.util.GHUtilityTest.testSortDirected":377,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":291,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":185,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":114,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":190,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":271,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":153,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":196,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":198,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":243,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":290,"com.graphhopper.util.InstructionListTest.testFind":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":317},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"5b4fffca-791d-11e5-8e45-751e572e824c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:191","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.chWeightings\", com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString())"},"status":-1},{"failures":[],"tindex":"5b5026db-791d-11e5-8e45-797b9c15d611","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    long long = long[][int];\n    if (long < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5b5026dc-791d-11e5-8e45-175ec622fe0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.GHPoint"},"status":-2},{"failures":[],"tindex":"5b5026dd-791d-11e5-8e45-cdc8c5bfced6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"indexWithMaxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:149","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"5b504dee-791d-11e5-8e45-655ff98e4a78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:135","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[],"tindex":"5b504def-791d-11e5-8e45-5b61de2f9125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"status":-2},{"failures":[],"tindex":"5b504df0-791d-11e5-8e45-a737698f2a24","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:171","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(int)"},"variableMap":{"wayIndex":"i","fullPL":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:145","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"5b504df1-791d-11e5-8e45-eb05107edf84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:147","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.close()"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:136","type":"CtTryImpl","sourcecode":"try {\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n        java.io.BufferedWriter.append('=');\n        java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        java.io.BufferedWriter.append('\\n');\n    }\n} finally {\n    java.io.BufferedWriter.close();\n}"},"status":-2},{"failures":[],"tindex":"5b504df2-791d-11e5-8e45-5b789390fbf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:103","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"5b504df3-791d-11e5-8e45-5b913af2592b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"status":-2},{"failures":[],"tindex":"5b504df4-791d-11e5-8e45-91649d5e858e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"5b507505-791d-11e5-8e45-31f8faea856f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"flags","lastKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:103","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long))\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"5b507506-791d-11e5-8e45-618fd53204a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8)"},"status":-2},{"failures":[],"tindex":"5b507507-791d-11e5-8e45-ade35f2812d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-2},{"failures":[],"tindex":"5b507508-791d-11e5-8e45-c5e996b99ed4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.lookup(java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":-2},{"failures":[],"tindex":"5b507509-791d-11e5-8e45-8decc485d3a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:272","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.initStorage()"},"status":-2},{"failures":[],"tindex":"5b50750a-791d-11e5-8e45-b371da4870c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"sortGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:478","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"5b50750b-791d-11e5-8e45-15309498d21f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"java.lang.Double.MAX_VALUE","angle":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:379","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"5b509c1c-791d-11e5-8e45-f1e1070faa50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:403","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:447","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Configured dimension (\" + (com.graphhopper.storage.NodeAccess.getDimension())) + \") is not equal \") + \"to dimension of loaded graph (\") + java.lang.String) + \")\"))"},"status":-2},{"failures":[],"tindex":"5b509c1d-791d-11e5-8e45-e9bdd2b064fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}