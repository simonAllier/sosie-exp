{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":22,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":60,"com.graphhopper.reader.OSMReaderTest.testMain":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":3,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":73,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":40,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.reader.PrinctonReaderTest.testRead":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":5,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":39,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.GraphHopperTest.testPrepare":30,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":59,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":61,"com.graphhopper.GraphHopperTest.testFootAndCar":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":17,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":70,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":37,"com.graphhopper.GraphHopperTest.testPrepareOnly":63,"com.graphhopper.GraphHopperTest.testVia":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":18,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":58,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":45,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":43,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":56,"com.graphhopper.GraphHopperAPITest.testLoad":69,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":26,"com.graphhopper.GraphHopperTest.testFootOnly":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":71,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":42,"com.graphhopper.reader.OSMReaderTest.testBarriers":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":11,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":74,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":81},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"95a202e3-82a7-11e5-9ffc-7f9b9662b191","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:180","type":"CtIfImpl","sourcecode":"if (double < 1)\n    return ;\n"},"variableMap":{"fullDist2D":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.CHEdgeIteratorState.isShortcut())) {\n    double double = com.graphhopper.util.CHEdgeIteratorState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.CHEdgeIteratorState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.CHEdgeIteratorState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[0,1,2,3,4,5,34,6,7,8,9,10,11,12,13,14,15,35,17,18,19,20,21,22,23,24,25,26,27,28,29,33,36],"tindex":"95a25104-82a7-11e5-9ffc-71146355b1c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1015","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"variableMap":{"foundIndex":"maxNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"status":-1},{"failures":[37,38,39],"tindex":"95a27815-82a7-11e5-9ffc-67e80f1eee8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:314","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:189","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMElement.getTag(java.lang.String)"},"status":-1},{"failures":[40,41,42,43,44,45,46,47],"tindex":"95a27816-82a7-11e5-9ffc-a77dfa87c6ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:77","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"calcMean":"exited","eleCalcMean":"exited"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:69","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"95a27817-82a7-11e5-9ffc-e7190069c111","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:132","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DataAccess.setInt(((long + (int)) + 4), com.graphhopper.util.BitUtil.getIntHigh(long));\n"},"status":0},{"failures":[],"tindex":"95a29f28-82a7-11e5-9ffc-7553820c918c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:136","type":"CtTryImpl","sourcecode":"try {\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n        java.io.BufferedWriter.append('=');\n        java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        java.io.BufferedWriter.append('\\n');\n    }\n} finally {\n    java.io.BufferedWriter.close();\n}"},"status":-2},{"failures":[],"tindex":"95a29f29-82a7-11e5-9ffc-f57b509df42a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"index","length":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:270","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"95a29f2a-82a7-11e5-9ffc-6314a684c2a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:404","type":"CtReturnImpl","sourcecode":"return int / (com.graphhopper.util.Helper.float)"},"status":-2},{"failures":[],"tindex":"95a2c63b-82a7-11e5-9ffc-bd3d189be1ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":0},{"failures":[48],"tindex":"95a2c63c-82a7-11e5-9ffc-af855d865a75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"restDist2D","x1":"incDist2DSum","y2":"fwdDecline","x2":"fwdDecline"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[49,50],"tindex":"95a2c63d-82a7-11e5-9ffc-ed91d7408871","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"counter","entityType":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:85","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[14,16,20,21,24,28,51],"tindex":"95a2ed4e-82a7-11e5-9ffc-817ea8406966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:103","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult>.add(com.graphhopper.storage.index.QueryResult)"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,29,30,65,66,31,32,67,68,33,69],"tindex":"95a2ed4f-82a7-11e5-9ffc-abd592c47dcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[1,70,2,4,5,34,71,72,30],"tindex":"95a2ed50-82a7-11e5-9ffc-013bdcea771c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:64","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[1,2],"tindex":"95a2ed51-82a7-11e5-9ffc-2fd94f8ce511","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:129","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getSegmentSize()"},"variableMap":{"inner":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:808","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(long)"},"status":-1},{"failures":[],"tindex":"95a31462-82a7-11e5-9ffc-031f94cf7f7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:356","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"status":0},{"failures":[73,74,75],"tindex":"95a31463-82a7-11e5-9ffc-43ad74b6ce30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"95a31464-82a7-11e5-9ffc-3500cf7b4c46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:141","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double)) {\n    continue;\n} "},"variableMap":{"lat":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:260","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double double = com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(int, boolean);\n    double double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-2},{"failures":[32,68,76,77,78,79,80,81,82],"tindex":"95a33b75-82a7-11e5-9ffc-03fae0c31987","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:286","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"95a33b76-82a7-11e5-9ffc-2bef389b37e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:251","type":"CtReturnImpl","sourcecode":"return long"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"95a31462-82a7-11e5-9ffc-031f94cf7f7a","diffs":[{"branches":{"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.coll.GHBitSetImpl_void_add(int).b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSetImpl().b","com.graphhopper.coll.GHBitSetImpl_boolean_contains(int).b","com.graphhopper.coll.GHTBitSet_com.graphhopper.coll.GHTBitSet(int).b","com.graphhopper.coll.GHTBitSet_boolean_contains(int).b","com.graphhopper.coll.GHTBitSet_void_add(int).b"],"com.graphhopper.util.BreadthFirstSearchTest.testBFS":["com.graphhopper.coll.GHBitSetImpl_void_add(int).b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSetImpl().b","com.graphhopper.coll.GHBitSetImpl_boolean_contains(int).b","com.graphhopper.coll.GHTBitSet_com.graphhopper.coll.GHTBitSet(int).b","com.graphhopper.coll.GHTBitSet_boolean_contains(int).b","com.graphhopper.coll.GHTBitSet_void_add(int).b"]},"type":"branch"}]}]}