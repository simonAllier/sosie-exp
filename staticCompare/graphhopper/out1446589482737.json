{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":98,"com.graphhopper.reader.OSMReaderTest.testFerry":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":20,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":65,"com.graphhopper.storage.VLongStorageTest.testWrite":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":94,"com.graphhopper.reader.OSMReaderTest.testWithBounds":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":140,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":7,"com.graphhopper.coll.CompressedArrayTest.testCompress":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":111,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":134,"com.graphhopper.GraphHopperTest.testPrepare":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.util.InstructionListTest.testWayList":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":27,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":186,"com.graphhopper.GraphHopperAPITest.testDisconnected179":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":131,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":183,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":141,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":166,"com.graphhopper.GraphHopperTest.testLoadOSM":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":96,"com.graphhopper.reader.OSMReaderTest.testSort":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":173,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":78,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":176,"com.graphhopper.routing.PathTest.testWayList":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":35,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":93,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":11,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":192,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":199,"com.graphhopper.coll.CompressedArrayTest.testCompress2":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":72,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":46,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":4,"com.graphhopper.GraphHopperAPITest.testLoad":57,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":175,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":146,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":144,"com.graphhopper.reader.OSMReaderTest.testBarriers":59,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":73,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":55,"com.graphhopper.routing.PathTest.testFindInstruction":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":154,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":37,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":161,"com.graphhopper.util.shapes.CircleTest.testContainsCircle":38,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":88,"com.graphhopper.util.InstructionListTest.testWayList2":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":117,"com.graphhopper.reader.OSMReaderTest.testFoot":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":194,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":100,"com.graphhopper.reader.OSMReaderTest.testOneWay":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":201,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":147,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":150,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":14,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":159,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":143,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":174,"com.graphhopper.reader.OSMReaderTest.testMain":40,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":136,"com.graphhopper.routing.PathBidirRefTest.testExtract2":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":135,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":125,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":109,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":97,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":197,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":56,"com.graphhopper.GraphHopperTest.testFootAndCar":68,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":87,"com.graphhopper.util.InstructionListTest.testCreateGPX":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":193,"com.graphhopper.GraphHopperTest.testPrepareOnly":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":132,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":137,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":110,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":91,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":116,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":178,"com.graphhopper.util.InstructionListTest.testFind":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":130},"transformations":[{"failures":[0,1,2],"tindex":"ae10d3b2-8279-11e5-bbaf-0be40e5a38b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:757","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[3,4,5,6,7],"tindex":"ae10fac3-8279-11e5-bbaf-8b8fdecce02c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"variableMap":{"nextTowerId":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[8,9,10,11,12,13],"tindex":"ae10fac4-8279-11e5-bbaf-8ddc6c99ebac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:72","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[14,15,16,17,18],"tindex":"ae1121d5-8279-11e5-bbaf-f78c59d3a0bd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:657","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n    break;\n"},"variableMap":{"removedNodes":"filledIndices","toMoveNodes":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,16],"tindex":"ae1121d6-8279-11e5-bbaf-f10073bec881","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"variableMap":{"toLat":"sinDeltaLat","fromLat":"sinDeltaLon","this":"this","dLon":"sinDeltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:55","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (((double * double) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double)))) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double))))"},"status":-1},{"failures":[],"tindex":"ae1148e7-8279-11e5-bbaf-3d9e1cc2cc6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"status":0},{"failures":[],"tindex":"ae1148e8-8279-11e5-bbaf-df373e3081d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"ae1148e9-8279-11e5-bbaf-5f06bdfaee48","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:164","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"ae1148ea-8279-11e5-bbaf-3dbd163deb0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.get(0)"},"status":0},{"failures":[],"tindex":"ae1148eb-8279-11e5-bbaf-87d264729571","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:375","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:668","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>(5)"},"status":-2},{"failures":[54,55,56,57,40,58,59,60,61,41,62,63,64,65,44,66,67,68,69,70,71,72,45],"tindex":"ae116ffc-8279-11e5-bbaf-0995cb588968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:104","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"ae116ffd-8279-11e5-bbaf-7be8ac55b97e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.util.EdgeIterator.getAdjNode()) == int)\n        return com.graphhopper.util.EdgeIterator;\n    \n}"},"variableMap":{"adj":"adjNode","iter":"eis2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:576","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState.getAdjNode()) == int)\n    return com.graphhopper.util.EdgeIteratorState;\n"},"status":-2},{"failures":[73],"tindex":"ae116ffe-8279-11e5-bbaf-a9e046b68e89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:130","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"flags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:101","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[74,28,29,31,57,75,39,76,40,58,59,60,61,77,41,62,78,42,79,80,63,64,81,82,0,83,84,85,65,44,66,67,68,69,70,71,72,45,86,87,88,89,90,91,92,93,94,95,96,97,98,99,1,100,101,102,103,52,104,105,106,107,108,109,110,111,112,113,114,115,116,117,2,118,119,120,121,53,122,123,124,125,16,17,18,126,127],"tindex":"ae11970f-8279-11e5-bbaf-b985f881ae2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"maxLat","resultOrientation":"lat","baseOrientation":"maxLat","java.lang.Math.PI":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"ae119710-8279-11e5-bbaf-0f3c5f4cc6de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"variableMap":{"nodeCount":"oldI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:721","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-1},{"failures":[158,159,160,161,162,163,164,165,166,23,167,168,24,25,169,170,171,26,172,173,28,29,174,30,31,33,175,34,35,176,177,178,179,180,181,182,183,184,185,186,187,188,189,57,81,82,0,83,84,85,44,68,45,87,190,191,192,193,194,195,90,196,197,198,126,199,200,201],"tindex":"ae11be21-8279-11e5-bbaf-11f9f569ceff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"edgeId","bLen":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:533","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.EdgeAccess.isInBounds(int)))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"));\n"},"status":-1},{"failures":[],"tindex":"ae11be22-8279-11e5-bbaf-f76e486a6176","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"variableMap":{"mKeys":"elem","nkeys":"elem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:230","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], (int + 1))"},"status":0},{"failures":[202],"tindex":"ae11be23-8279-11e5-bbaf-6fee30a764d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1099","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot initialize locationIndex twice!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}