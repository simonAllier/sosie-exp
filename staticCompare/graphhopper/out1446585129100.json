{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":272,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":116,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":258,"com.graphhopper.reader.OSMReaderTest.testFerry":147,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":343,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":344,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":71,"com.graphhopper.routing.QueryGraphTest.testOneWay":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":320,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":53,"com.graphhopper.reader.OSMReaderTest.testWithBounds":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":279,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":277,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":198,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":321,"com.graphhopper.GraphHopperTest.testPrepare":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":287,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":85,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":181,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":102,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":349,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":194,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":110,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":341,"com.graphhopper.GraphHopperAPITest.testDisconnected179":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":265,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":213,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":6,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":152,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":289,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":138,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":248,"com.graphhopper.GraphHopperTest.testLoadOSM":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":54,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":187,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":300,"com.graphhopper.reader.OSMReaderTest.testSort":150,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":129,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":92,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":222,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":120,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":161,"com.graphhopper.routing.PathTest.testWayList":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":121,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":101,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":109,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":313,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":294,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":5,"com.graphhopper.util.GHUtilityTest.testSort":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":57,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":332,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":83,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":218,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":242,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":293,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":206,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":345,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":233,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":239,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":297,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":166,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":317,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":262,"com.graphhopper.util.GHUtilityTest.testCopy":337,"com.graphhopper.routing.PathTest.testFindInstruction":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":225,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":267,"com.graphhopper.util.InstructionListTest.testEmptyList":10,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":216,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":192,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":250,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":237,"com.graphhopper.reader.PrinctonReaderTest.testRead":159,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":296,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":94,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":324,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":200,"com.graphhopper.reader.OSMReaderTest.testFoot":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":61,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":58,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":59,"com.graphhopper.reader.OSMReaderTest.testOneWay":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":122,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":314,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":306,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":93,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":274,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":151,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":325,"com.graphhopper.routing.PathBidirRefTest.testExtract":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":209,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":31,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":342,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":298,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":256,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":348,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":65,"com.graphhopper.util.GHUtilityTest.testSort2":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":270,"com.graphhopper.reader.OSMReaderTest.testMain":149,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":16,"com.graphhopper.routing.PathBidirRefTest.testExtract2":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":51,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":318,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":346,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":117,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":168,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":197,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":323,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":177,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":322,"com.graphhopper.util.GHUtilityTest.testSortDirected":339,"com.graphhopper.GraphHopperTest.testPrepareOnly":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":312,"com.graphhopper.GraphHopperTest.testVia":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":219,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":111,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":38,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":295,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.GraphHopperTest.testFootOnly":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":42,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":43,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":273,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":311,"com.graphhopper.util.InstructionListTest.testFind":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":303},"transformations":[{"failures":[],"tindex":"8b17c676-826f-11e5-8e63-f7f700fdc159","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:658","type":"CtLocalVariableImpl","sourcecode":"double double = double - (com.graphhopper.util.shapes.GHPoint.double)"},"variableMap":{"maxLat":"deltaLon","query":"center","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:655","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) + ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"8b17ed87-826f-11e5-8e63-fdebbed10a70","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:354","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = new com.graphhopper.routing.VirtualEdgeIteratorState(int , int , int , int , double , com.graphhopper.util.EdgeIteratorState.getFlags() , com.graphhopper.util.EdgeIteratorState.getName() , com.graphhopper.util.PointList)"},"variableMap":{"closestEdge":"closestEdge","baseDistance":"baseDistance","prevNodeId":"origRevTraversalKey","virtEdgeId":"nodeId","origTraversalKey":"origRevTraversalKey","nodeId":"virtEdgeId","basePoints":"baseReversePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:356","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = new com.graphhopper.routing.VirtualEdgeIteratorState(int , int , int , int , double , long , com.graphhopper.util.EdgeIteratorState.getName() , com.graphhopper.util.PointList)"},"status":-2},{"failures":[0],"tindex":"8b181498-826f-11e5-8e63-059c0bd27e16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"prevLon","orientation":"prevLon","java.lang.Math.PI":"currLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:327","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8b181499-826f-11e5-8e63-df7c9438e86f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:368","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,0,10,11,12,13,14],"tindex":"8b18149a-826f-11e5-8e63-8dc189a7b394","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"from","edgeTo":"from","edgeFrom":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:65","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n} "},"status":-1},{"failures":[15],"tindex":"8b18149b-826f-11e5-8e63-4382a828343e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:666","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"))"},"status":-1},{"failures":[16],"tindex":"8b183bac-826f-11e5-8e63-97f36cd5c748","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"shortcutCount","maxEdgesCount":"shortcutCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:615","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":-1},{"failures":[17,18,19,20],"tindex":"8b183bad-826f-11e5-8e63-07ccd77e9db6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:116","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"variableMap":{"currentBucket":"viaNode","retBucket":"viaNode","currentIndex":"viaNode","bucketSize":"viaNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:134","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.NodeAccess.getAdditionalNodeField(int)"},"status":-1},{"failures":[21,22,16],"tindex":"8b183bae-826f-11e5-8e63-f1dc093c09f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:346","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.isFrozen()"},"status":-1},{"failures":[],"tindex":"8b183baf-826f-11e5-8e63-010a33598991","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:110","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:846","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage)"},"status":-2},{"failures":[23,24,25,26,27,9,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"8b1862c0-826f-11e5-8e63-db689771b70f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"names":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:602","type":"CtForImpl","sourcecode":"for (long long = long + 4 ; long < long ; long += 4) {\n    gnu.trove.set.hash.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-1},{"failures":[66,67,1,2,3,4,68,69,5,6,70,71,17,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,7,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,23,110,111,112,113,24,25,114,115,26,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,27,9,28,29,30,31,136,32,137,138,33,139,140,141,142,143,144,34,145,146,147,148,149,150,35,151,152,18,153,154,155,156,157,158,159,160,161,162,21,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,36,37,38,198,39,199,40,41,42,200,43,44,45,46,47,48,49,50,51,201,202,203,204,205,206,207,208,209,210,211,52,212,53,213,54,55,56,214,57,58,59,60,61,62,63,64,65,215,216,217,218,219,220,19,20,221,22,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,16,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,0,11,12,13,14,342,343,344],"tindex":"8b1862c1-826f-11e5-8e63-61706f5aedbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-1},{"failures":[345,346,347,348],"tindex":"8b1889d2-826f-11e5-8e63-bd1710bcbe8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:190","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"allRemoved":"speed","removedEdges":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:371","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[349],"tindex":"8b1889d3-826f-11e5-8e63-bde667245033","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"variableMap":{"byteCount":"bytes","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long)"},"status":-1},{"failures":[],"tindex":"8b1889d4-826f-11e5-8e63-a37dfbed2e28","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:78","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[82,29],"tindex":"8b18b0e5-826f-11e5-8e63-19a9af4088f2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[],"tindex":"8b18b0e6-826f-11e5-8e63-3d6a27071461","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"com.graphhopper.reader.OSMReader.TOWER_NODE","S_SKIP_EDGE2":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:642","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int)"},"status":-2},{"failures":[],"tindex":"8b18b0e7-826f-11e5-8e63-25a58259f010","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:150","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"variableMap":{"width":"segmentSizePower","i":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:359","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[90,117],"tindex":"8b18b0e8-826f-11e5-8e63-63a2621b39aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:64","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}