{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":112,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":4,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":33,"com.graphhopper.routing.PathTest.testFindInstruction":122,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":125,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":96,"com.graphhopper.routing.QueryGraphTest.testOneWay":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":39,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":29,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":160,"com.graphhopper.reader.OSMReaderTest.testWithBounds":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":111,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":13,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":95,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":152,"com.graphhopper.GraphHopperTest.testPrepare":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":23,"com.graphhopper.util.InstructionListTest.testWayList2":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":14,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":141,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":36,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":10,"com.graphhopper.util.InstructionListTest.testWayList":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":110,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":117,"com.graphhopper.GraphHopperAPITest.testDisconnected179":60,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":120,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":151,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":153,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":129,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":81,"com.graphhopper.GraphHopperTest.testLoadOSM":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":79,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":41,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":70,"com.graphhopper.util.GHUtilityTest.testSort2":161,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":154,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":115,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":5,"com.graphhopper.routing.PathTest.testWayList":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":47,"com.graphhopper.util.BitUtilBigTest.testFromBitString":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":56,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":165,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":45,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":22,"com.graphhopper.GraphHopperTest.testFootAndCar":86,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":57,"com.graphhopper.util.BitUtilBigTest.testToBitString":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":123,"com.graphhopper.util.GHUtilityTest.testSort":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":34,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":102,"com.graphhopper.util.InstructionListTest.testCreateGPX":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":44,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":126,"com.graphhopper.util.GHUtilityTest.testSortDirected":164,"com.graphhopper.GraphHopperTest.testPrepareOnly":75,"com.graphhopper.GraphHopperTest.testVia":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":118,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":90,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":132,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":17,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":51,"com.graphhopper.GraphHopperAPITest.testLoad":59,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":12,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":99,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":19,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":28,"com.graphhopper.GraphHopperTest.testFootOnly":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":48,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":119,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.util.InstructionListTest.testFind":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":136,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":109,"com.graphhopper.util.GHUtilityTest.testCopy":162,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":150},"transformations":[{"failures":[],"tindex":"e89bd526-8296-11e5-bfe3-998a19c39c75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:163","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n"},"variableMap":{"read":"shortcutCount","s":"shortcutCount","this":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((0 * 4), int)"},"status":-2},{"failures":[],"tindex":"e89bfc37-8296-11e5-bfe3-494ab375fc5c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.NaN","weight":"java.lang.Double.NaN","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:118","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.reader.PillarInfo.(is3D()))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[0,1,2],"tindex":"e89c2348-8296-11e5-bfe3-3de03c46f99f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"costs","dist":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:670","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || (java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"e89c2349-8296-11e5-bfe3-abdeaa33832d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"currLon","java.lang.Math.PI":"currLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:315","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"e89c234a-8296-11e5-bfe3-7b757ebd28a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList)"},"status":0},{"failures":[],"tindex":"e89c234b-8296-11e5-bfe3-c3c91da2a08c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:594","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"e89c4a5c-8296-11e5-bfe3-9d2653f0c017","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:334","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"noNumberValue":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"status":0},{"failures":[3,4],"tindex":"e89c4a5d-8296-11e5-bfe3-71afe66e5943","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:330","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[5,6],"tindex":"e89c4a5e-8296-11e5-bfe3-876c3db8551e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:108","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16],"tindex":"e89c4a5f-8296-11e5-bfe3-0df5d51e0a5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[17,18,19],"tindex":"e89c7170-8296-11e5-bfe3-9d2713fabde8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime()))))"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,7,8,29,30,31,32,33,9,34,10,11,35,36,37,38,39,40,41,42,43,12,13,44,45,46,47,48,14,49,15,16,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,6,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"e89c7171-8296-11e5-bfe3-49f9ae7aea4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"lat","resultOrientation":"lat","baseOrientation":"maxLat","java.lang.Math.PI":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"e89c7172-8296-11e5-bfe3-5bab258a62f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:621","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"i":"adjNode","mainNodes":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:99","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.AStar.AStarEdge.int"},"status":-2},{"failures":[],"tindex":"e89c9883-8296-11e5-bfe3-b9311e304980","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:187","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(int)"},"variableMap":{"size":"removeNodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"status":-2},{"failures":[],"tindex":"e89c9884-8296-11e5-bfe3-35836e5fa827","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"status":-2},{"failures":[75,92],"tindex":"e89c9885-8296-11e5-bfe3-430cfa3648f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n    throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n} "},"status":-1},{"failures":[],"tindex":"e89c9886-8296-11e5-bfe3-f907e1271703","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"variableMap":{"fromDist":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:79","type":"CtIfImpl","sourcecode":"if (boolean)\n    double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int);\nelse\n    double = com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int, com.graphhopper.util.EdgeIteratorState.getBaseNode(), int);\n"},"status":-2},{"failures":[93,94],"tindex":"e89c9887-8296-11e5-bfe3-4d7641cfa395","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:124","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,20,110,21,22,111,23,112,113,114,115,116,117,118,119,120,121,122,123,24,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,27,141,142,143,144,145,146,147,7,29,30,31,32,33,34,10,11,35,36,37,38,40,41,42,43,12,44,45,46,47,48,49,15,16,50,51,52,53,55,56,148,57,149,150,151,152,153,154,155,59,63,64,65,67,71,156,157,158,159,19,160,161,162,163,164,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91],"tindex":"e89cbf98-8296-11e5-bfe3-372ca4f06ba8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"E_GEO","indexDivisor":"E_GEO"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:251","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[165,166],"tindex":"e89cbf99-8296-11e5-bfe3-f188f6b6b568","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.insert(int, int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}