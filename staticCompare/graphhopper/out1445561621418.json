{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":38,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":62,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":208,"com.graphhopper.reader.OSMReaderTest.testFerry":300,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":360,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":361,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":144,"com.graphhopper.routing.QueryGraphTest.testOneWay":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":169,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":204,"com.graphhopper.reader.OSMReaderTest.testWithBounds":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":104,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":135,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":251,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":237,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":323,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":170,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":225,"com.graphhopper.GraphHopperTest.testPrepare":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":262,"com.graphhopper.search.NameIndexTest.testFlush":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":44,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":280,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":20,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":295,"com.graphhopper.util.InstructionListTest.testWayList":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":29,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":226,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":159,"com.graphhopper.GraphHopperAPITest.testDisconnected179":345,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":132,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":26,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":205,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":14,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":153,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":343,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":334,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":121,"com.graphhopper.GraphHopperTest.testLoadOSM":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":240,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":206,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":286,"com.graphhopper.reader.OSMReaderTest.testSort":303,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":79,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":165,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":53,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":42,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":67,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":261,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":322,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":254,"com.graphhopper.routing.PathTest.testWayList":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":158,"com.graphhopper.coll.OSMIDMapTest.testGet2":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":179,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":19,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":27,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":203,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":162,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":101,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":252,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":186,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":338,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":13,"com.graphhopper.util.GHUtilityTest.testSort":355,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":183,"com.graphhopper.coll.OSMIDMapTest.testGetLong":365,"com.graphhopper.search.NameIndexTest.testPut":1,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":130,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":265,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":136,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":87,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":145,"com.graphhopper.storage.MMapDirectoryTest.testSynched":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":148,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":318,"com.graphhopper.GraphHopperAPITest.testLoad":344,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":141,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testBarriers":304,"com.graphhopper.routing.PathTest.testFound":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":188,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":25,"com.graphhopper.util.GHUtilityTest.testCopy":354,"com.graphhopper.routing.PathTest.testFindInstruction":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":96,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":107,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":3,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":187,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":271,"com.graphhopper.util.InstructionListTest.testEmptyList":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":197,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":293,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":123,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":281,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":109,"com.graphhopper.reader.PrinctonReaderTest.testRead":320,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":102,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":140,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":152,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":174,"com.graphhopper.util.InstructionListTest.testWayList2":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":243,"com.graphhopper.reader.OSMReaderTest.testFoot":301,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":214,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":211,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":212,"com.graphhopper.reader.OSMReaderTest.testOneWay":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":150,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":163,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":256,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":124,"com.graphhopper.storage.RAMDirectoryTest.testSynched":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":106,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":284,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":227,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":263,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":270,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":305,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":247,"com.graphhopper.coll.OSMIDMapTest.testGet":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":175,"com.graphhopper.routing.PathBidirRefTest.testExtract":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":223,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":364,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":330,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":209,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":249,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":328,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":327,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":326,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":219,"com.graphhopper.util.GHUtilityTest.testSort2":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.reader.OSMReaderTest.testMain":302,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":182,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":258,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":138,"com.graphhopper.routing.PathBidirRefTest.testExtract2":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":253,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":0,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":234,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":118,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":52,"com.graphhopper.storage.StorablePropertiesTest.testStore":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":207,"com.graphhopper.storage.GraphHopperStorageTest.testClone":266,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":185,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":172,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":194,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":276,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":283,"com.graphhopper.GraphHopperTest.testFootAndCar":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":143,"com.graphhopper.routing.PathTest.testTime":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":31,"com.graphhopper.reader.OSMReaderTest.testRelation":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":171,"com.graphhopper.storage.StorablePropertiesTest.testLoad":191,"com.graphhopper.util.GHUtilityTest.testSortDirected":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":161,"com.graphhopper.GraphHopperTest.testPrepareOnly":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":200,"com.graphhopper.GraphHopperTest.testVia":332,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":30,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":311,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":236,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":139,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":287,"com.graphhopper.GraphHopperTest.testFootOnly":341,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":242,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":308,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":228,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":9,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":160,"com.graphhopper.util.InstructionListTest.testFind":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":218},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"80fa4d8f-7920-11e5-abd1-cdd5b93d3265","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"80fa9bb0-7920-11e5-abd1-cf2ffd850fa7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"variableMap":{"removeNodeCount":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:134","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = com.graphhopper.storage.index.Location2IDQuadtree.fillQuadtree(((int) * (int)))"},"status":-2},{"failures":[],"tindex":"80fac2c1-7920-11e5-abd1-718a2bd4d3c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"blockByDefault":"alreadyRun"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:90","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"80fac2c2-7920-11e5-abd1-d3301f3aa820","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:591","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.maxRegionSearch\", int)"},"status":-2},{"failures":[],"tindex":"80fac2c3-7920-11e5-abd1-6b0e0766541a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:278","type":"CtIfImpl","sourcecode":"if ((int[][int]) >= 0) {\n    if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n        continue;\n    } \n} "},"status":-2},{"failures":[],"tindex":"80fac2c4-7920-11e5-abd1-9f35b791ae10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"normedDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:57","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-2},{"failures":[],"tindex":"80fae9d5-7920-11e5-abd1-29fb90b24d27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:352","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(com.graphhopper.reader.OSMWay.getId())"},"status":-2},{"failures":[],"tindex":"80fae9d6-7920-11e5-abd1-c51d6b7cc543","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:95","type":"CtIfImpl","sourcecode":"if (int >= int)\n    boolean = true;\n"},"status":-2},{"failures":[],"tindex":"80fae9d7-7920-11e5-abd1-514c7f19e70a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:199","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += ((\",\" + (double)) + \",\") + (double)"},"status":-2},{"failures":[],"tindex":"80fae9d8-7920-11e5-abd1-9fef601975a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:739","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"80fb10e9-7920-11e5-abd1-af0f94526225","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"variableMap":{"weightApproximation":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:242","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-2},{"failures":[],"tindex":"80fb10ea-7920-11e5-abd1-350d29f3cc48","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:414","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"variableMap":{"segmentSizeInBytes":"bits","capacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:226","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((long & long) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    long <<= 1;\n}"},"status":-2},{"failures":[],"tindex":"80fb10eb-7920-11e5-abd1-13faa319f78e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"newSize","maxEdgesCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:134","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"80fb10ec-7920-11e5-abd1-d1bb1199e51f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:112","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"80fb37fd-7920-11e5-abd1-fba41634c47c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"nodeEntryBytes","maxGeoRef":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:310","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"80fb37fe-7920-11e5-abd1-7f8bc187e0cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long)"},"status":-2},{"failures":[],"tindex":"80fb37ff-7920-11e5-abd1-3b1c1dcdc703","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:244","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round(java.lang.Math.max(10, (((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100.0) * (int))))"},"variableMap":{"periodicUpdatesPercentage":"lastNodesLazyUpdatePercentage","sortedNodes":"sortedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:250","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100.0) * (int)))"},"status":-2},{"failures":[],"tindex":"80fb3800-7920-11e5-abd1-25920885dbcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"80fb5f11-7920-11e5-abd1-df027613ca95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"flags","highKey":"dir","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"80fb5f12-7920-11e5-abd1-078422e95ee2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"skippedEdge1","bytes":"tmpNewShortcuts","segmentSizeInBytes":"tmpNewShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:655","type":"CtForEachImpl","sourcecode":"NEXT_SC : for (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut : java.util.Map<com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut>.keySet()) {\n    boolean boolean = false;\n    com.graphhopper.util.CHEdgeIterator com.graphhopper.util.CHEdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    while (com.graphhopper.util.CHEdgeIterator.next()) {\n        if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n            if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n                continue NEXT_SC;\n            \n            if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n                throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n            } \n            com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n            com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            boolean = true;\n            break;\n        } \n    }\n    if (!boolean) {\n        com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n        com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        int++;\n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}