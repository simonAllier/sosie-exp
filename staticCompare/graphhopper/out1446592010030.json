{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":72,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":4,"com.graphhopper.reader.OSMReaderTest.testMain":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":22,"com.graphhopper.reader.OSMReaderTest.testFerry":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":68,"com.graphhopper.util.PointListTest.testReverse":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":76,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":79,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":21,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":75,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":40,"com.graphhopper.routing.PathTest.testWayList":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":30,"com.graphhopper.reader.OSMReaderTest.testWithBounds":59,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":55,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":71,"com.graphhopper.coll.CompressedArrayTest.testCompress":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":15,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":3,"com.graphhopper.util.BitUtilBigTest.testReverse":62,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":17,"com.graphhopper.GraphHopperTest.testPrepare":42,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":82,"com.graphhopper.reader.OSMReaderTest.testFoot":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":77,"com.graphhopper.util.InstructionListTest.testCreateGPX":0,"com.graphhopper.reader.OSMReaderTest.testOneWay":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":27,"com.graphhopper.util.BitUtilLittleTest.testReverse":63,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":13,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":64,"com.graphhopper.GraphHopperTest.testPrepareOnly":36,"com.graphhopper.coll.CompressedArrayTest.testCompress2":83,"com.graphhopper.GraphHopperTest.testVia":41,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":54,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":35,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":44,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":67,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1,"com.graphhopper.GraphHopperTest.testFootOnly":48,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":43,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":78,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":19,"com.graphhopper.reader.OSMReaderTest.testBarriers":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":10,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":7,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":81,"com.graphhopper.util.GHUtilityTest.testCopy":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":16,"com.graphhopper.reader.OSMReaderTest.testSort":52},"transformations":[{"failures":[],"tindex":"90719bf8-827f-11e5-bcc5-1718f83302e7","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"variableMap":{"directionBitMask":"nodeId","flags":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:382","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long)"},"status":-2},{"failures":[],"tindex":"9071c309-827f-11e5-bcc5-85b93fb84ddd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:118","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream = com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection, false)"},"variableMap":{"conn":"this","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:108","type":"CtLocalVariableImpl","sourcecode":"java.io.InputStream java.io.InputStream = java.lang.Object.getClass().getResourceAsStream((java.lang.String + \"_names.txt\"))"},"status":-2},{"failures":[],"tindex":"9071c30a-827f-11e5-bcc5-eb272d89c317","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:193","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-2},{"failures":[0,1],"tindex":"9071c30b-827f-11e5-bcc5-8b60e077f7c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1)).append(\"<\/gh:distance>\")"},"status":-1},{"failures":[2,3,4],"tindex":"9071ea1c-827f-11e5-bcc5-115f379c6d25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"status":-1},{"failures":[],"tindex":"9071ea1d-827f-11e5-bcc5-e1369ae9ec0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:164","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"9071ea1e-827f-11e5-bcc5-ab90724b0647","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"tmp","orientation":"tmp","java.lang.Math.PI":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:242","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[],"tindex":"9071ea1f-827f-11e5-bcc5-ef320e991e49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:51","type":"CtAssignmentImpl","sourcecode":"double = long"},"variableMap":{"min":"maxLat","time":"parts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / long"},"status":-2},{"failures":[],"tindex":"9071ea20-827f-11e5-bcc5-498d8e3666d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"variableMap":{"elem":"elem","keys":"keys","i":"child","key":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[36,37],"tindex":"9071ea21-827f-11e5-bcc5-751b495f8a06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:264","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())))"},"status":-1},{"failures":[],"tindex":"90721132-827f-11e5-bcc5-d1b88217de3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[38],"tindex":"90721133-827f-11e5-bcc5-217c4974f7a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[39,36,40,41,42,43,8,44,45,46,47,48,37,49,50,51,52,53,54,35,55,56,57,58,59,60,61],"tindex":"90721134-827f-11e5-bcc5-932830df37c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"variableMap":{"closed":"forceClean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:167","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess)).close(boolean);\nelse\n    com.graphhopper.storage.DataAccess.close();\n"},"status":-1},{"failures":[62,63,64,65,66,67,68,69],"tindex":"90721135-827f-11e5-bcc5-0d72c1372c0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"res","tmpValue":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:259","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[70,71,72],"tindex":"90721136-827f-11e5-bcc5-c9ae02da643f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.markNodesRemovedIfUnreachable()"},"status":-1},{"failures":[],"tindex":"90721137-827f-11e5-bcc5-5f94c12ca23f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"variableMap":{"this":"reader"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:672","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.DataReader.readGraph()"},"status":-2},{"failures":[],"tindex":"90723848-827f-11e5-bcc5-6185caaa5b71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"i","maxLeafEntries":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"90723849-827f-11e5-bcc5-3104fc02179a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"dMinLon","fullDist2D":"dMinLat","decDist2DSum":"dMinLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"status":0},{"failures":[73,74,75,76,77,78,79,80,64,81,65,66,67,82,68,69,83,84],"tindex":"9072384a-827f-11e5-bcc5-b5cfe3fb9456","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"hash","mask":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"90723849-827f-11e5-bcc5-3104fc02179a","diffs":[{"methodsDiff":{"delete":["java.lang.Math.min"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"]},"type":"branch"}]}]}