{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":42,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":179,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":88,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":98,"com.graphhopper.coll.CompressedArrayTest.testCompress":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":143,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":65,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":52,"com.graphhopper.GraphHopperTest.testPrepare":168,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":82,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":194,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":127,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":169,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":182,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":31,"com.graphhopper.GraphHopperTest.testLoadOSM":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":113,"com.graphhopper.reader.OSMReaderTest.testSort":21,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":93,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":138,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":156,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":77,"com.graphhopper.coll.CompressedArrayTest.testCompress2":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":69,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":159,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":96,"com.graphhopper.GHRequestTest.testGetHint":2,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":92,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":152,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":76,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":17,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":146,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":140,"com.graphhopper.routing.PathTest.testFindInstruction":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":89,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":118,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":132,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":120,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":122,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":166,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":191,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":114,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":164,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":123,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":109,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":73,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":54,"com.graphhopper.GraphHopperTest.testFootAndCar":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.PathTest.testTime":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":105,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":60,"com.graphhopper.reader.OSMReaderTest.testRelation":37,"com.graphhopper.GraphHopperTest.testPrepareOnly":14,"com.graphhopper.GraphHopperTest.testVia":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":129,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":197,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":44,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":51,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":160,"com.graphhopper.util.InstructionListTest.testFind":173,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":71},"transformations":[{"failures":[0,1,2],"tindex":"f474e0e1-82b5-11e5-a6e3-c548cbf81ece","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.WeightingMap:44","type":"CtInvocationImpl","sourcecode":"super.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13],"tindex":"f47507f2-82b5-11e5-a6e3-bb6c60c6f905","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"width":"paveType","lonSimilar":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:421","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"f4752f03-82b5-11e5-a6e3-95c12851230c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-1},{"failures":[],"tindex":"f4752f04-82b5-11e5-a6e3-1dd8969f0b78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:76","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"f4752f05-82b5-11e5-a6e3-09ab263e885a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:343","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[24],"tindex":"f4752f06-82b5-11e5-a6e3-1d44558c9a42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:926","type":"CtIfImpl","sourcecode":"if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-1},{"failures":[],"tindex":"f4755617-82b5-11e5-a6e3-01c8282517f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:125","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"variableMap":{"storedKey":"edgePointer","key":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:833","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[18,19,20,21,36,22,23,24,25,37,38,39,40,26,27,28,41,42,43,44,45,46,47,29,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,30,67,68,69,70,71,72,73,74,75,3,76,77,4,78,79,80,81,82,83,84,85,5,86,87,88,89,90,91,92,31,93,94,32,33,95,34,96,35,97,98,99,100,101,6,7,102,103,104,105,106,107,8,108,109,110,111,112,113,114,115,116,117,9,118,119,10,120,121,122,123,124,125,126,127,11,128,129,130,131,132,133,134,135,12,136,137,138,139,140,141,142,143,13,144,145,146,147,148,149,150,151],"tindex":"f4755618-82b5-11e5-a6e3-f7957a1dd39e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"shift","tmp":"shift","segmentSizeInBytes":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[152],"tindex":"f4757d29-82b5-11e5-a6e3-4fae31c2c0a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[153,154,155,156,157,158,159,160,161,162],"tindex":"f4757d2a-82b5-11e5-a6e3-654351c3b86d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.flush()"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:307","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.close()"},"status":-1},{"failures":[],"tindex":"f4757d2b-82b5-11e5-a6e3-c7daa5a253c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[163,164,165,0,1,166,167,168,169,15,170,171,172,16,20,21,36],"tindex":"f4757d2c-82b5-11e5-a6e3-41f1754f34ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:852","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-1},{"failures":[],"tindex":"f4757d2d-82b5-11e5-a6e3-65237c9bf1ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:680","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double)"},"status":0},{"failures":[],"tindex":"f475a43e-82b5-11e5-a6e3-8fcf63be9686","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:202","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[173,174],"tindex":"f475a43f-82b5-11e5-a6e3-fb0ee7a5a655","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:63","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.Instruction>.size()"},"status":-1},{"failures":[65,12],"tindex":"f475a440-82b5-11e5-a6e3-03380ae829a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:201","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f475a441-82b5-11e5-a6e3-7901ddf1c2c8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:175","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.InstructionList.(getSize()) > 0 ? com.graphhopper.util.InstructionList.get(0).getPoints().is3D() : false"},"status":-2},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"f475a442-82b5-11e5-a6e3-292b3ad3379d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"maxLonTmp","x1":"midLon","y2":"minLonTmp","x2":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[171,194,195,196,197,198,63],"tindex":"f475cb53-82b5-11e5-a6e3-ef48c8bfca78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"status":-1},{"failures":[],"tindex":"f475cb54-82b5-11e5-a6e3-b90c36febad7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f4752f04-82b5-11e5-a6e3-1dd8969f0b78","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testDisconnected179":["com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t1","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e3","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e4"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":["com.graphhopper.routing.Dijkstra_void_runAlgo().t2"],"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":["com.graphhopper.routing.Dijkstra_void_runAlgo().t2"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t1"],"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":["com.graphhopper.routing.Dijkstra_void_runAlgo().e4","com.graphhopper.routing.Dijkstra_void_runAlgo().t2","com.graphhopper.routing.Dijkstra_void_runAlgo().e5"]},"type":"branch"}]},{"transformation":"f4757d2d-82b5-11e5-a6e3-65237c9bf1ee","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.CHEdgeIteratorState.setWeight"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.DijkstraOneToMany_int_findEndNode(int,int).e5","com.graphhopper.routing.DijkstraOneToMany_int_findEndNode(int,int).t4","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).t1","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e2","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e3","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).b","com.graphhopper.routing.DijkstraOneToMany_int_findEndNode(int,int).t10","com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).l6"]},"type":"branch"}]}]}