{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":67,"com.graphhopper.reader.OSMReaderTest.testFerry":56,"com.graphhopper.routing.QueryGraphTest.testOneWay":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":71,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":84,"com.graphhopper.coll.CompressedArrayTest.testCompress":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":59,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":94,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":50,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":48,"com.graphhopper.GraphHopperAPITest.testDisconnected179":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":43,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":34,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":14,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":88,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":36,"com.graphhopper.reader.OSMReaderTest.testSort":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":54,"com.graphhopper.reader.OSMReaderTest.testMain":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":30,"com.graphhopper.util.BitUtilBigTest.testFromBitString":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":24,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":2,"com.graphhopper.GraphHopperTest.testFootAndCar":18,"com.graphhopper.util.BitUtilBigTest.testToBitString":95,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":27,"com.graphhopper.coll.CompressedArrayTest.testCompress2":69,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":21,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":35,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":25,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":83,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":32,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":53},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"d68f989b-828e-11e5-8884-6d30479e5eef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"min"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"d68fbfac-828e-11e5-8884-fd5e1a041aa1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:1002","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return ((\"totalMB:\" + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getTotalMB())) + \", usedMB:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getUsedMB())"},"status":0},{"failures":[],"tindex":"d68fbfad-828e-11e5-8884-ad8f91670cbb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:779","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Lock.release()"},"status":0},{"failures":[],"tindex":"d68fe6be-828e-11e5-8884-1b13684d3b2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.isFrozen())\n    throw new java.lang.IllegalStateException(\"do not optimize after graph was frozen\");\n"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-2},{"failures":[55,56],"tindex":"d68fe6bf-828e-11e5-8884-bbf39826503c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"motorcarTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[57,16],"tindex":"d68fe6c0-828e-11e5-8884-1bfeb6e68d15","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:58","type":"CtReturnImpl","sourcecode":"return \"SHORTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67],"tindex":"d68fe6c1-828e-11e5-8884-4dbed889e5fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[68],"tindex":"d6900dd2-828e-11e5-8884-79fcc32503c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:451","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.set(int, null)"},"variableMap":{"segNumber":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:368","type":"CtAssignmentImpl","sourcecode":"java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1))"},"status":-1},{"failures":[69,70,71,72,73,74,75,76,77,78],"tindex":"d6900dd3-828e-11e5-8884-633db11dece3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"initialBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"d6900dd4-828e-11e5-8884-5318e72bc2b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.CHEdgeIteratorState.getDistance()"},"status":-2},{"failures":[8],"tindex":"d6900dd5-828e-11e5-8884-632246b423fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:876","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-1},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,31,46,93,94],"tindex":"d6900dd6-828e-11e5-8884-5dcd63abe65a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1142","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.AllEdgeIterator"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:511","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.getAdjNode()) == int)\n    return com.graphhopper.util.EdgeIterator;\n"},"status":-1},{"failures":[],"tindex":"d69034e7-828e-11e5-8884-3f1a8654aa03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"d69034e8-828e-11e5-8884-5549dd65a24d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1066","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:215","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"d69034e9-828e-11e5-8884-49388a0d45e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:337","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIterator.getAdjNode()"},"status":-2},{"failures":[81],"tindex":"d69034ea-828e-11e5-8884-c75e0c2594e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:114","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[95,96],"tindex":"d69034eb-828e-11e5-8884-c73f5162f251","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:117","type":"CtForEachImpl","sourcecode":"for (byte byte : byte[]) {\n    for (int int = 0 ; int < 8 ; int++) {\n        if ((byte & byte) == 0)\n            java.lang.StringBuilder.append('0');\n        else\n            java.lang.StringBuilder.append('1');\n        \n        byte <<= 1;\n    }\n}"},"status":-1},{"failures":[90,97],"tindex":"d6905bfc-828e-11e5-8884-d54864ccacda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:467","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"d6905bfd-828e-11e5-8884-abaca5ddbc06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:87","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.Arrays.asList(\"OsmSchema-V0.6\", \"DenseNodes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:46","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"status":-2},{"failures":[],"tindex":"d6905bfe-828e-11e5-8884-c33334d5a583","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage[][int].writeVLong(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d68fbfac-828e-11e5-8884-fd5e1a041aa1","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.getTotalMB","com.graphhopper.util.Helper.getUsedMB"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.Helper_long_getUsedMB().b","com.graphhopper.util.Helper_long_getTotalMB().b"]},"type":"branch"}]}]}