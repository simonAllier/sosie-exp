{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":33,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.BitUtilLittleTest.testToBitString":34,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.GHRequestTest.testCorrectInit":28,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":35,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":36,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":27,"com.graphhopper.GraphHopperAPITest.testLoad":38,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":37,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":32,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"e7bc60c2-828d-11e5-92c3-fda7c003b386","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"event","S_SKIP_EDGE2":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-1},{"failures":[],"tindex":"e7bc87d3-828d-11e5-92c3-e9b3fa2b9a5e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"pointsIndex","green":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:76","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>();\n    java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>);\n    com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation();\n    java.lang.String java.lang.String = com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation);\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = com.graphhopper.util.InstructionAnnotation.getMessage();\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"text\", com.graphhopper.util.Helper.firstBig(java.lang.String));\n    if (!(com.graphhopper.util.InstructionAnnotation.isEmpty())) {\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_text\", com.graphhopper.util.InstructionAnnotation.getMessage());\n        java.util.Map<java.lang.String, java.lang.Object>.put(\"annotation_importance\", com.graphhopper.util.InstructionAnnotation.getImportance());\n    } \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime());\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"distance\", com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 3));\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign());\n    java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON());\n    int int = int + (com.graphhopper.util.Instruction.getPoints().size());\n    if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n        int--;\n    \n    java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int));\n    int = int;\n    int++;\n}"},"status":0},{"failures":[27],"tindex":"e7bc87d4-828d-11e5-92c3-b312cd9c06c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"daPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:109","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n"},"status":-1},{"failures":[],"tindex":"e7bcaee5-828d-11e5-92c3-0186efeec8a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 4))), com.graphhopper.util.PMap.getDouble(\"speedFactor\", 1))"},"status":0},{"failures":[],"tindex":"e7bcaee6-828d-11e5-92c3-c98060a61983","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1149","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"e7bcaee7-828d-11e5-92c3-31de61c04083","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"variableMap":{"store":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[28,29,30,31,32,17],"tindex":"e7bcaee8-828d-11e5-92c3-2fee3af3d567","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:168","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.addPoint(com.graphhopper.util.shapes.GHPoint, java.lang.Double.double)"},"status":-1},{"failures":[],"tindex":"e7bcaee9-828d-11e5-92c3-19b923e2b8b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":0},{"failures":[33],"tindex":"e7bcaeea-828d-11e5-92c3-c33f3ff992bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-1},{"failures":[],"tindex":"e7bcaeeb-828d-11e5-92c3-2b68ee18e304","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:200","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n    com.graphhopper.storage.DataAccess.setHeader((8 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double));\n} "},"status":0},{"failures":[34,35],"tindex":"e7bcd5fc-828d-11e5-92c3-e76ee039aec1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:122","type":"CtIfImpl","sourcecode":"if ((byte & byte) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":-1},{"failures":[],"tindex":"e7bcd5fd-828d-11e5-92c3-dfb76e7a7ac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:53","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    if ((double > 90) || (double < (-90)))\n        java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n    \n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if ((double > 180) || (double < (-180)))\n        java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n            java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n        } \n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n            java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"e7bcd5fe-828d-11e5-92c3-fb549e373f3d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:809","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:721","type":"CtReturnImpl","sourcecode":"return \"CHGraph|\" + (com.graphhopper.storage.CHGraphImpl.getWeighting().toString())"},"status":-2},{"failures":[],"tindex":"e7bcd5ff-828d-11e5-92c3-6baf7009f153","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:179","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"variableMap":{"a":"len","this":"prepareGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n}"},"status":-2},{"failures":[],"tindex":"e7bcfd10-828d-11e5-92c3-67457bfbf5d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"location","name":"newName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:207","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    try {\n        if (!(java.io.File.renameTo(new java.io.File(((java.lang.String) + java.lang.String))))) {\n            throw new java.lang.IllegalStateException((((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object to \") + java.lang.String));\n        } \n        java.lang.String = java.lang.String;\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.IllegalStateException(((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object!\") , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"));\n}"},"status":-2},{"failures":[],"tindex":"e7bcfd11-828d-11e5-92c3-a7c8da523559","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[1,15,20,25],"tindex":"e7bcfd12-828d-11e5-92c3-95a007491fdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:300","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[36,37],"tindex":"e7bcfd13-828d-11e5-92c3-3b70e5393b72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"e7bcfd14-828d-11e5-92c3-017d6381cf38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.flagEncoders\", com.graphhopper.routing.util.EncodingManager.toDetailsString())"},"variableMap":{"encodingManager":"encodingManager","properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.bytesForFlags\", com.graphhopper.routing.util.EncodingManager.getBytesForFlags())"},"status":0},{"failures":[38,17,18,19,20,21,22,24,25],"tindex":"e7bcfd15-828d-11e5-92c3-636543458e60","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"pathIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:80","type":"CtIfImpl","sourcecode":"if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n    com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n    com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n    com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e7bcaeeb-828d-11e5-92c3-2b68ee18e304","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader","com.graphhopper.util.Helper.eleToInt"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":["com.graphhopper.util.Helper_int_eleToInt(double).b","com.graphhopper.util.Helper_double_intToEle(int).t1","com.graphhopper.util.Helper_int_eleToInt(double).e1","com.graphhopper.util.Helper_int_eleToInt(double).t1"],"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"],"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"],"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.shapes.BBox_boolean_hasElevation().b"]},"type":"branch"}]},{"transformation":"e7bcd5fd-828d-11e5-92c3-dfb76e7a7ac7","diffs":[{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).b","com.graphhopper.storage.GHNodeAccess_double_getLatitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).e1","com.graphhopper.util.Helper_double_intToDegree(int).e2"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b"],"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).b","com.graphhopper.storage.GHNodeAccess_double_getLatitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).e1","com.graphhopper.util.Helper_double_intToDegree(int).e2"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.getAdjNode","com.graphhopper.util.PointAccess.getLatitude","com.graphhopper.util.PointAccess.getLongitude","com.graphhopper.util.EdgeIterator.next","java.util.List<java.lang.String>.add","com.graphhopper.util.EdgeExplorer.setBaseNode"]},"branchesDiff":{"delete":["l4","l5","t0","t1","t2","t3"]},"type":"staticDiff"}]},{"transformation":"e7bcfd14-828d-11e5-92c3-017d6381cf38","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodingManager.getBytesForFlags","com.graphhopper.storage.StorableProperties.put"]},"type":"staticDiff"}]},{"transformation":"e7bcaee7-828d-11e5-92c3-31de61c04083","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}